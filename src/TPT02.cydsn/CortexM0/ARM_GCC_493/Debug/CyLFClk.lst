ARM GAS  C:\Users\akita\AppData\Local\Temp\ccTFmJyh.s 			page 1


   1              		.cpu cortex-m0
   2              		.fpu softvfp
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 6
  10              		.eabi_attribute 34, 0
  11              		.eabi_attribute 18, 4
  12              		.code	16
  13              		.file	"CyLFClk.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.CySysClkWcoSetHighPowerMode,"ax",%progbits
  18              		.align	2
  19              		.code	16
  20              		.thumb_func
  21              		.type	CySysClkWcoSetHighPowerMode, %function
  22              	CySysClkWcoSetHighPowerMode:
  23              	.LFB0:
  24              		.file 1 "Generated_Source\\PSoC4\\CyLFClk.h"
   1:Generated_Source\PSoC4/CyLFClk.h **** /***************************************************************************//**
   2:Generated_Source\PSoC4/CyLFClk.h **** * \file .h
   3:Generated_Source\PSoC4/CyLFClk.h **** * \version 1.10
   4:Generated_Source\PSoC4/CyLFClk.h **** *
   5:Generated_Source\PSoC4/CyLFClk.h **** * \brief
   6:Generated_Source\PSoC4/CyLFClk.h **** *  This file provides the source code to API for the lfclk and wdt.
   7:Generated_Source\PSoC4/CyLFClk.h **** *
   8:Generated_Source\PSoC4/CyLFClk.h **** ********************************************************************************
   9:Generated_Source\PSoC4/CyLFClk.h **** * \copyright
  10:Generated_Source\PSoC4/CyLFClk.h **** * Copyright 2008-2016, Cypress Semiconductor Corporation.  All rights reserved.
  11:Generated_Source\PSoC4/CyLFClk.h **** * You may use this file only in accordance with the license, terms, conditions,
  12:Generated_Source\PSoC4/CyLFClk.h **** * disclaimers, and limitations in the end user license agreement accompanying
  13:Generated_Source\PSoC4/CyLFClk.h **** * the software package with which this file was provided.
  14:Generated_Source\PSoC4/CyLFClk.h **** *******************************************************************************/
  15:Generated_Source\PSoC4/CyLFClk.h **** 
  16:Generated_Source\PSoC4/CyLFClk.h **** 
  17:Generated_Source\PSoC4/CyLFClk.h **** #if !defined(CY_LFCLK_CYLIB_H)
  18:Generated_Source\PSoC4/CyLFClk.h **** #define CY_LFCLK_CYLIB_H
  19:Generated_Source\PSoC4/CyLFClk.h **** 
  20:Generated_Source\PSoC4/CyLFClk.h **** #include "cytypes.h"
  21:Generated_Source\PSoC4/CyLFClk.h **** #include "cydevice_trm.h"
  22:Generated_Source\PSoC4/CyLFClk.h **** 
  23:Generated_Source\PSoC4/CyLFClk.h **** #define CY_IP_WCO_WDT_EN           (-1 == 1)
  24:Generated_Source\PSoC4/CyLFClk.h **** 
  25:Generated_Source\PSoC4/CyLFClk.h **** 
  26:Generated_Source\PSoC4/CyLFClk.h **** typedef enum
  27:Generated_Source\PSoC4/CyLFClk.h **** {
  28:Generated_Source\PSoC4/CyLFClk.h ****     CY_SYS_TIMER_WAIT = 0u,
  29:Generated_Source\PSoC4/CyLFClk.h ****     CY_SYS_TIMER_INTERRUPT = 1u
  30:Generated_Source\PSoC4/CyLFClk.h **** } cy_sys_timer_delaytype_enum;
  31:Generated_Source\PSoC4/CyLFClk.h **** 
  32:Generated_Source\PSoC4/CyLFClk.h **** 
  33:Generated_Source\PSoC4/CyLFClk.h **** /***************************************
ARM GAS  C:\Users\akita\AppData\Local\Temp\ccTFmJyh.s 			page 2


  34:Generated_Source\PSoC4/CyLFClk.h **** *    Function Prototypes
  35:Generated_Source\PSoC4/CyLFClk.h **** ***************************************/
  36:Generated_Source\PSoC4/CyLFClk.h **** /**
  37:Generated_Source\PSoC4/CyLFClk.h **** * \addtogroup group_general
  38:Generated_Source\PSoC4/CyLFClk.h **** * @{
  39:Generated_Source\PSoC4/CyLFClk.h **** */
  40:Generated_Source\PSoC4/CyLFClk.h **** /* Clocks API */
  41:Generated_Source\PSoC4/CyLFClk.h **** void CySysClkIloStart(void);
  42:Generated_Source\PSoC4/CyLFClk.h **** void CySysClkIloStop(void);
  43:Generated_Source\PSoC4/CyLFClk.h **** /** @} general */
  44:Generated_Source\PSoC4/CyLFClk.h **** 
  45:Generated_Source\PSoC4/CyLFClk.h **** /**
  46:Generated_Source\PSoC4/CyLFClk.h **** * \addtogroup group_compensate
  47:Generated_Source\PSoC4/CyLFClk.h **** * @{
  48:Generated_Source\PSoC4/CyLFClk.h **** */
  49:Generated_Source\PSoC4/CyLFClk.h **** cystatus CySysClkIloCompensate(uint32 desiredDelay, uint32 *compensatedCycles);
  50:Generated_Source\PSoC4/CyLFClk.h **** void CySysClkIloStartMeasurement(void);
  51:Generated_Source\PSoC4/CyLFClk.h **** void CySysClkIloStopMeasurement(void);
  52:Generated_Source\PSoC4/CyLFClk.h **** /** @} compensate */
  53:Generated_Source\PSoC4/CyLFClk.h **** 
  54:Generated_Source\PSoC4/CyLFClk.h **** #if(CY_IP_SRSSV2 && (!(CY_PSOC4_4100 || CY_PSOC4_4200)))
  55:Generated_Source\PSoC4/CyLFClk.h **** /**
  56:Generated_Source\PSoC4/CyLFClk.h **** * \addtogroup group_compensate
  57:Generated_Source\PSoC4/CyLFClk.h **** * @{
  58:Generated_Source\PSoC4/CyLFClk.h **** */
  59:Generated_Source\PSoC4/CyLFClk.h ****     cystatus CySysClkIloTrim(uint32 mode, int32 *iloAccuracyInPPT);
  60:Generated_Source\PSoC4/CyLFClk.h ****     cystatus CySysClkIloRestoreFactoryTrim(void);
  61:Generated_Source\PSoC4/CyLFClk.h **** /** @} compensate */
  62:Generated_Source\PSoC4/CyLFClk.h ****     cystatus CySysClkIloUpdateTrimReg(int32* iloAccuracyInPPT);
  63:Generated_Source\PSoC4/CyLFClk.h **** #endif /* (CY_IP_SRSSV2 && (!(CY_PSOC4_4100 || CY_PSOC4_4200))) */
  64:Generated_Source\PSoC4/CyLFClk.h **** 
  65:Generated_Source\PSoC4/CyLFClk.h **** #if(CY_IP_SRSSV2 && CY_IP_WCO)
  66:Generated_Source\PSoC4/CyLFClk.h **** /**
  67:Generated_Source\PSoC4/CyLFClk.h **** * \addtogroup group_general
  68:Generated_Source\PSoC4/CyLFClk.h **** * @{
  69:Generated_Source\PSoC4/CyLFClk.h **** */
  70:Generated_Source\PSoC4/CyLFClk.h ****     void CySysClkSetLfclkSource(uint32 source);
  71:Generated_Source\PSoC4/CyLFClk.h **** /** @} group_general */
  72:Generated_Source\PSoC4/CyLFClk.h **** #endif /* (CY_IP_SRSSV2 && CY_IP_WCO) */
  73:Generated_Source\PSoC4/CyLFClk.h **** 
  74:Generated_Source\PSoC4/CyLFClk.h **** #if (CY_IP_WCO)
  75:Generated_Source\PSoC4/CyLFClk.h **** /**
  76:Generated_Source\PSoC4/CyLFClk.h **** * \addtogroup group_wco
  77:Generated_Source\PSoC4/CyLFClk.h **** * @{
  78:Generated_Source\PSoC4/CyLFClk.h **** */
  79:Generated_Source\PSoC4/CyLFClk.h ****     void   CySysClkWcoStart(void);
  80:Generated_Source\PSoC4/CyLFClk.h ****     void   CySysClkWcoStop(void);
  81:Generated_Source\PSoC4/CyLFClk.h ****     uint32 CySysClkWcoSetPowerMode(uint32 mode);
  82:Generated_Source\PSoC4/CyLFClk.h ****     void CySysClkWcoClockOutSelect(uint32 clockSel);
  83:Generated_Source\PSoC4/CyLFClk.h **** /** @} wco */
  84:Generated_Source\PSoC4/CyLFClk.h ****     uint32 CySysClkWcoEnabled(void);
  85:Generated_Source\PSoC4/CyLFClk.h **** 
  86:Generated_Source\PSoC4/CyLFClk.h **** #endif /* (CY_IP_WCO) */
  87:Generated_Source\PSoC4/CyLFClk.h **** 
  88:Generated_Source\PSoC4/CyLFClk.h **** typedef void (*cyWdtCallback)(void);
  89:Generated_Source\PSoC4/CyLFClk.h **** 
  90:Generated_Source\PSoC4/CyLFClk.h **** #if (CY_IP_SRSSLT && CY_IP_WCO && CY_IP_WCO_WDT_EN)
ARM GAS  C:\Users\akita\AppData\Local\Temp\ccTFmJyh.s 			page 3


  91:Generated_Source\PSoC4/CyLFClk.h **** 
  92:Generated_Source\PSoC4/CyLFClk.h ****     typedef void (*cyTimerCallback)(void);
  93:Generated_Source\PSoC4/CyLFClk.h **** #endif /* (CY_IP_SRSSLT && CY_IP_WCO && CY_IP_WCO_WDT_EN) */
  94:Generated_Source\PSoC4/CyLFClk.h **** 
  95:Generated_Source\PSoC4/CyLFClk.h **** #if(CY_IP_SRSSV2)
  96:Generated_Source\PSoC4/CyLFClk.h **** /**
  97:Generated_Source\PSoC4/CyLFClk.h **** * \addtogroup group_wdtsrssv2
  98:Generated_Source\PSoC4/CyLFClk.h **** * @{
  99:Generated_Source\PSoC4/CyLFClk.h **** */
 100:Generated_Source\PSoC4/CyLFClk.h ****     /* WDT API */
 101:Generated_Source\PSoC4/CyLFClk.h ****     void   CySysWdtLock(void);
 102:Generated_Source\PSoC4/CyLFClk.h ****     void   CySysWdtUnlock(void);
 103:Generated_Source\PSoC4/CyLFClk.h ****     void   CySysWdtSetMode(uint32 counterNum, uint32 mode);
 104:Generated_Source\PSoC4/CyLFClk.h ****     uint32 CySysWdtGetMode(uint32 counterNum);
 105:Generated_Source\PSoC4/CyLFClk.h ****     uint32 CySysWdtGetEnabledStatus(uint32 counterNum);
 106:Generated_Source\PSoC4/CyLFClk.h ****     void   CySysWdtSetClearOnMatch(uint32 counterNum, uint32 enable);
 107:Generated_Source\PSoC4/CyLFClk.h ****     uint32 CySysWdtGetClearOnMatch(uint32 counterNum);
 108:Generated_Source\PSoC4/CyLFClk.h ****     void   CySysWdtEnable(uint32 counterMask);
 109:Generated_Source\PSoC4/CyLFClk.h ****     void   CySysWdtDisable(uint32 counterMask);
 110:Generated_Source\PSoC4/CyLFClk.h ****     void   CySysWdtSetCascade(uint32 cascadeMask);
 111:Generated_Source\PSoC4/CyLFClk.h ****     uint32 CySysWdtGetCascade(void);
 112:Generated_Source\PSoC4/CyLFClk.h ****     void   CySysWdtSetMatch(uint32 counterNum, uint32 match);
 113:Generated_Source\PSoC4/CyLFClk.h ****     void   CySysWdtSetToggleBit(uint32 bits);
 114:Generated_Source\PSoC4/CyLFClk.h ****     uint32 CySysWdtGetToggleBit(void);
 115:Generated_Source\PSoC4/CyLFClk.h ****     uint32 CySysWdtGetMatch(uint32 counterNum);
 116:Generated_Source\PSoC4/CyLFClk.h ****     uint32 CySysWdtGetCount(uint32 counterNum);
 117:Generated_Source\PSoC4/CyLFClk.h ****     uint32 CySysWdtGetInterruptSource(void);
 118:Generated_Source\PSoC4/CyLFClk.h ****     void   CySysWdtClearInterrupt(uint32 counterMask);
 119:Generated_Source\PSoC4/CyLFClk.h ****     void   CySysWdtResetCounters(uint32 countersMask);
 120:Generated_Source\PSoC4/CyLFClk.h ****     cyWdtCallback  CySysWdtSetInterruptCallback(uint32 counterNum, cyWdtCallback function);
 121:Generated_Source\PSoC4/CyLFClk.h ****     cyWdtCallback  CySysWdtGetInterruptCallback(uint32 counterNum);
 122:Generated_Source\PSoC4/CyLFClk.h ****     void   CySysTimerDelay(uint32 counterNum, cy_sys_timer_delaytype_enum delayType, uint32 delay);
 123:Generated_Source\PSoC4/CyLFClk.h ****     void   CySysTimerDelayUntilMatch(uint32 counterNum, cy_sys_timer_delaytype_enum delayType, uint
 124:Generated_Source\PSoC4/CyLFClk.h ****     void   CySysWatchdogFeed(uint32 counterNum);
 125:Generated_Source\PSoC4/CyLFClk.h ****     void   CySysWdtEnableCounterIsr(uint32 counterNum);
 126:Generated_Source\PSoC4/CyLFClk.h ****     void   CySysWdtDisableCounterIsr(uint32 counterNum);
 127:Generated_Source\PSoC4/CyLFClk.h ****     void   CySysWdtIsr(void);
 128:Generated_Source\PSoC4/CyLFClk.h **** /** @} wdtsrssv2 */
 129:Generated_Source\PSoC4/CyLFClk.h **** #else
 130:Generated_Source\PSoC4/CyLFClk.h **** /**
 131:Generated_Source\PSoC4/CyLFClk.h **** * \addtogroup group_wdtsrsslite
 132:Generated_Source\PSoC4/CyLFClk.h **** * @{
 133:Generated_Source\PSoC4/CyLFClk.h **** */
 134:Generated_Source\PSoC4/CyLFClk.h ****     /* WDT API */
 135:Generated_Source\PSoC4/CyLFClk.h ****     uint32 CySysWdtGetEnabledStatus(void);
 136:Generated_Source\PSoC4/CyLFClk.h ****     void   CySysWdtEnable(void);
 137:Generated_Source\PSoC4/CyLFClk.h ****     void   CySysWdtDisable(void);
 138:Generated_Source\PSoC4/CyLFClk.h ****     void   CySysWdtSetMatch(uint32 match);
 139:Generated_Source\PSoC4/CyLFClk.h ****     uint32 CySysWdtGetMatch(void);
 140:Generated_Source\PSoC4/CyLFClk.h ****     uint32 CySysWdtGetCount(void);
 141:Generated_Source\PSoC4/CyLFClk.h ****     void   CySysWdtSetIgnoreBits(uint32 bitsNum);
 142:Generated_Source\PSoC4/CyLFClk.h ****     uint32 CySysWdtGetIgnoreBits(void);
 143:Generated_Source\PSoC4/CyLFClk.h ****     void   CySysWdtClearInterrupt(void);
 144:Generated_Source\PSoC4/CyLFClk.h ****     void   CySysWdtMaskInterrupt(void);
 145:Generated_Source\PSoC4/CyLFClk.h ****     void   CySysWdtUnmaskInterrupt(void);
 146:Generated_Source\PSoC4/CyLFClk.h ****     cyWdtCallback CySysWdtSetInterruptCallback(cyWdtCallback function);
 147:Generated_Source\PSoC4/CyLFClk.h ****     cyWdtCallback CySysWdtGetInterruptCallback(void);
ARM GAS  C:\Users\akita\AppData\Local\Temp\ccTFmJyh.s 			page 4


 148:Generated_Source\PSoC4/CyLFClk.h ****     void   CySysWdtIsr(void);
 149:Generated_Source\PSoC4/CyLFClk.h **** /** @} wdtsrsslite*/
 150:Generated_Source\PSoC4/CyLFClk.h **** #endif  /* (CY_IP_SRSSV2) */
 151:Generated_Source\PSoC4/CyLFClk.h **** 
 152:Generated_Source\PSoC4/CyLFClk.h **** 
 153:Generated_Source\PSoC4/CyLFClk.h **** #if(CY_IP_SRSSLT && CY_IP_WCO && CY_IP_WCO_WDT_EN)
 154:Generated_Source\PSoC4/CyLFClk.h **** /**
 155:Generated_Source\PSoC4/CyLFClk.h **** * \addtogroup group_deepsleepwdt
 156:Generated_Source\PSoC4/CyLFClk.h **** * @{
 157:Generated_Source\PSoC4/CyLFClk.h **** */
 158:Generated_Source\PSoC4/CyLFClk.h ****     /* WCO WDT APIs */
 159:Generated_Source\PSoC4/CyLFClk.h ****     void   CySysClkSetTimerSource(uint32 source);
 160:Generated_Source\PSoC4/CyLFClk.h ****     void   CySysTimerSetMode(uint32 counterNum, uint32 mode);
 161:Generated_Source\PSoC4/CyLFClk.h ****     uint32 CySysTimerGetMode(uint32 counterNum);
 162:Generated_Source\PSoC4/CyLFClk.h ****     uint32 CySysTimerGetEnabledStatus(uint32 counterNum);
 163:Generated_Source\PSoC4/CyLFClk.h ****     void   CySysTimerSetClearOnMatch(uint32 counterNum, uint32 enable);
 164:Generated_Source\PSoC4/CyLFClk.h ****     uint32 CySysTimerGetClearOnMatch(uint32 counterNum);
 165:Generated_Source\PSoC4/CyLFClk.h ****     void   CySysTimerEnable(uint32 counterMask);
 166:Generated_Source\PSoC4/CyLFClk.h ****     void   CySysTimerDisable(uint32 counterMask);
 167:Generated_Source\PSoC4/CyLFClk.h ****     void   CySysTimerSetCascade(uint32 cascadeMask);
 168:Generated_Source\PSoC4/CyLFClk.h ****     uint32 CySysTimerGetCascade(void);
 169:Generated_Source\PSoC4/CyLFClk.h ****     void   CySysTimerSetMatch(uint32 counterNum, uint32 match);
 170:Generated_Source\PSoC4/CyLFClk.h ****     void   CySysTimerSetToggleBit(uint32 bits);
 171:Generated_Source\PSoC4/CyLFClk.h ****     uint32 CySysTimerGetToggleBit(void);
 172:Generated_Source\PSoC4/CyLFClk.h ****     uint32 CySysTimerGetMatch(uint32 counterNum);
 173:Generated_Source\PSoC4/CyLFClk.h ****     uint32 CySysTimerGetCount(uint32 counterNum);
 174:Generated_Source\PSoC4/CyLFClk.h ****     uint32 CySysTimerGetInterruptSource(void);
 175:Generated_Source\PSoC4/CyLFClk.h ****     void   CySysTimerClearInterrupt(uint32 counterMask);
 176:Generated_Source\PSoC4/CyLFClk.h ****     cyTimerCallback CySysTimerSetInterruptCallback(uint32 counterNum, cyTimerCallback function);
 177:Generated_Source\PSoC4/CyLFClk.h ****     cyTimerCallback CySysTimerGetInterruptCallback(uint32 counterNum);
 178:Generated_Source\PSoC4/CyLFClk.h ****     void   CySysTimerDelay(uint32 counterNum, cy_sys_timer_delaytype_enum delayType, uint32 delay);
 179:Generated_Source\PSoC4/CyLFClk.h ****     void   CySysTimerDelayUntilMatch(uint32 counterNum, cy_sys_timer_delaytype_enum delayType, uint
 180:Generated_Source\PSoC4/CyLFClk.h ****     void   CySysTimerResetCounters(uint32 countersMask);
 181:Generated_Source\PSoC4/CyLFClk.h ****     void   CySysTimerEnableIsr(uint32 counterNum);
 182:Generated_Source\PSoC4/CyLFClk.h ****     void   CySysTimerDisableIsr(uint32 counterNum);
 183:Generated_Source\PSoC4/CyLFClk.h ****     void   CySysTimerIsr(void);
 184:Generated_Source\PSoC4/CyLFClk.h **** /** @} deepsleepwdt */
 185:Generated_Source\PSoC4/CyLFClk.h **** #endif /* (CY_IP_SRSSLT && CY_IP_WCO && CY_IP_WCO_WDT_EN) */
 186:Generated_Source\PSoC4/CyLFClk.h **** 
 187:Generated_Source\PSoC4/CyLFClk.h **** 
 188:Generated_Source\PSoC4/CyLFClk.h **** /*******************************************************************************
 189:Generated_Source\PSoC4/CyLFClk.h **** * API Constants
 190:Generated_Source\PSoC4/CyLFClk.h **** *******************************************************************************/
 191:Generated_Source\PSoC4/CyLFClk.h **** #define CY_SYS_UINT16_MAX_VAL    (0xFFFFu)
 192:Generated_Source\PSoC4/CyLFClk.h **** 
 193:Generated_Source\PSoC4/CyLFClk.h **** 
 194:Generated_Source\PSoC4/CyLFClk.h **** /*******************************************************************************
 195:Generated_Source\PSoC4/CyLFClk.h **** * Clock API Constants
 196:Generated_Source\PSoC4/CyLFClk.h **** *******************************************************************************/
 197:Generated_Source\PSoC4/CyLFClk.h **** 
 198:Generated_Source\PSoC4/CyLFClk.h **** /* CySysClkIloStart()/CySysClkIloStop() - implementation definitions */
 199:Generated_Source\PSoC4/CyLFClk.h **** #define CY_SYS_CLK_ILO_CONFIG_ENABLE                    ((uint32)(( uint32 )0x01u << 31u))
 200:Generated_Source\PSoC4/CyLFClk.h **** #define CY_SYS_CLK_DFT_SELECT_DEFAULT_MASK              ((uint32)(( uint32 )0x0fu << 8u ))
 201:Generated_Source\PSoC4/CyLFClk.h **** 
 202:Generated_Source\PSoC4/CyLFClk.h **** /* CySysClkIloCompensate() - one ILO clock in uS multiplied on thousand */
 203:Generated_Source\PSoC4/CyLFClk.h **** #if (CY_IP_SRSSV2)
 204:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_CLK_ILO_PERIOD_PPH                   ((uint32) (0x0C35u))
ARM GAS  C:\Users\akita\AppData\Local\Temp\ccTFmJyh.s 			page 5


 205:Generated_Source\PSoC4/CyLFClk.h **** #else
 206:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_CLK_ILO_PERIOD_PPH                   ((uint32) (0x09C4u))
 207:Generated_Source\PSoC4/CyLFClk.h **** #endif /* (CY_IP_SRSSV2) */
 208:Generated_Source\PSoC4/CyLFClk.h **** 
 209:Generated_Source\PSoC4/CyLFClk.h **** /* CySysClkIloCompensate() - implementation definitions */
 210:Generated_Source\PSoC4/CyLFClk.h **** #define CY_SYS_CLK_ILO_CALIBR_COMPLETE_MASK             ((uint32)(( uint32 )0x01u << 31u))
 211:Generated_Source\PSoC4/CyLFClk.h **** #define CY_SYS_CLK_ILO_DFT_LSB_MASK                     ((uint32)(0x00000FFFu))
 212:Generated_Source\PSoC4/CyLFClk.h **** #define CY_SYS_CLK_TRIM_OR_COMP_STARTED                 (1u)
 213:Generated_Source\PSoC4/CyLFClk.h **** #define CY_SYS_CLK_TRIM_OR_COMP_FINISHED                (0u)
 214:Generated_Source\PSoC4/CyLFClk.h **** #define CY_SYS_CLK_COEF_PHUNDRED                        ((uint32) (0x64u))
 215:Generated_Source\PSoC4/CyLFClk.h **** #define CY_SYS_CLK_HALF_OF_CLOCK                        ((uint32) ((uint32) CY_SYS_CLK_ILO_PERIOD_P
 216:Generated_Source\PSoC4/CyLFClk.h **** 
 217:Generated_Source\PSoC4/CyLFClk.h **** /* CySysClkIloCompensate() - maximum value of desiredDelay argument */
 218:Generated_Source\PSoC4/CyLFClk.h **** #if (CY_IP_SRSSV2)
 219:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_CLK_MAX_DELAY_US                     ((uint32) (0xEE6B2800u))
 220:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_CLK_ILO_PERIOD                       ((uint32) (0x1Fu))
 221:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_CLK_ILO_FREQ_2MSB                    ((uint32) 5u)
 222:Generated_Source\PSoC4/CyLFClk.h **** #else
 223:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_CLK_MAX_DELAY_US                     ((uint32) (0x1E8480u))
 224:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_CLK_ILO_FREQ_2MSB                    ((uint32) (0x28u ))
 225:Generated_Source\PSoC4/CyLFClk.h **** 
 226:Generated_Source\PSoC4/CyLFClk.h **** 
 227:Generated_Source\PSoC4/CyLFClk.h **** /**********************************************************************************
 228:Generated_Source\PSoC4/CyLFClk.h **** * CySysClkIloCompensate() - value to walk over oversamling in calculations with srsslite.
 229:Generated_Source\PSoC4/CyLFClk.h **** * The oversample can be obtained when ilo frequency in equal 80 KHz and desired clocks 
 230:Generated_Source\PSoC4/CyLFClk.h **** * are 80 000 clocks.
 231:Generated_Source\PSoC4/CyLFClk.h **** **********************************************************************************/
 232:Generated_Source\PSoC4/CyLFClk.h **** #define CY_SYS_CLK_MAX_LITE_NUMBER                     ((uint32) 53600u)
 233:Generated_Source\PSoC4/CyLFClk.h **** #endif /* (CY_IP_SRSSV2) */
 234:Generated_Source\PSoC4/CyLFClk.h **** 
 235:Generated_Source\PSoC4/CyLFClk.h **** #define CY_SYS_CLK_ILO_FREQ_3LSB                       ((uint32) (0x3E8u))
 236:Generated_Source\PSoC4/CyLFClk.h **** #define CY_SYS_CLK_DELAY_COUNTS_LIMIT                  ((uint32) (0xD160u))
 237:Generated_Source\PSoC4/CyLFClk.h **** #define CY_SYS_CLK_MIN_DELAY_US                        ((uint32) (0x64u))
 238:Generated_Source\PSoC4/CyLFClk.h **** 
 239:Generated_Source\PSoC4/CyLFClk.h **** /* CySysClkSetLfclkSource() - parameter definitions */
 240:Generated_Source\PSoC4/CyLFClk.h **** #if (CY_IP_SRSSV2 && CY_IP_WCO)
 241:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_CLK_LFCLK_SRC_ILO                    (0u)                                  /**< 
 242:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_CLK_LFCLK_SRC_WCO                    ((uint32)(( uint32 )0x01u << 30u))    /**< 
 243:Generated_Source\PSoC4/CyLFClk.h **** #endif /* (CY_IP_SRSSV2 && CY_IP_WCO) */
 244:Generated_Source\PSoC4/CyLFClk.h **** 
 245:Generated_Source\PSoC4/CyLFClk.h **** /* CySysClkSetLfclkSource() - implementation definitions */
 246:Generated_Source\PSoC4/CyLFClk.h **** #if (CY_IP_WCO)
 247:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_CLK_LFCLK_SEL_MASK                   ((uint32)(( uint32 )0x03u << 30u))
 248:Generated_Source\PSoC4/CyLFClk.h **** #endif /* (CY_IP_WCO) */
 249:Generated_Source\PSoC4/CyLFClk.h **** 
 250:Generated_Source\PSoC4/CyLFClk.h **** /* CySysClkSetTimerSource() - implementation definitions */
 251:Generated_Source\PSoC4/CyLFClk.h **** #if (CY_IP_SRSSLT && CY_IP_WCO && CY_IP_WCO_WDT_EN)
 252:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_CLK_TIMER_SEL_MASK                   ((uint32)(( uint32 )0x03u << 30u))
 253:Generated_Source\PSoC4/CyLFClk.h **** #endif /* (CY_IP_SRSSLT && CY_IP_WCO && CY_IP_WCO_WDT_EN) */
 254:Generated_Source\PSoC4/CyLFClk.h **** 
 255:Generated_Source\PSoC4/CyLFClk.h **** /* CySysClkSetTimerSource() - parameter definitions */
 256:Generated_Source\PSoC4/CyLFClk.h **** #if (CY_IP_SRSSLT && CY_IP_WCO && CY_IP_WCO_WDT_EN)
 257:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_CLK_TIMER_SRC_ILO                (0u)                                  /**< Inte
 258:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_CLK_TIMER_SRC_WCO                ((uint32)(( uint32 )0x01u << 30u))    /**< Low 
 259:Generated_Source\PSoC4/CyLFClk.h **** #endif /* (CY_IP_SRSSLT && CY_IP_WCO && CY_IP_WCO_WDT_EN) */
 260:Generated_Source\PSoC4/CyLFClk.h **** 
 261:Generated_Source\PSoC4/CyLFClk.h **** /* CySysClkWcoClockOutSelect() - parameter definitions */
ARM GAS  C:\Users\akita\AppData\Local\Temp\ccTFmJyh.s 			page 6


 262:Generated_Source\PSoC4/CyLFClk.h **** #if (CY_IP_WCO)
 263:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_CLK_WCO_SEL_CRYSTAL                  (1u)    /**< Selects External crystal as WC
 264:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_CLK_WCO_SEL_PIN                      (0u)    /**<Selects External clock input on
 265:Generated_Source\PSoC4/CyLFClk.h **** #endif /* (CY_IP_WCO) */
 266:Generated_Source\PSoC4/CyLFClk.h **** 
 267:Generated_Source\PSoC4/CyLFClk.h **** /* CySysClkWcoClockOutSelect() - implementation definitions */
 268:Generated_Source\PSoC4/CyLFClk.h **** #if (CY_IP_WCO)
 269:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_CLK_WCO_SELECT_PIN_MASK              ((uint32)(( uint32 )0x01u << 2u))
 270:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_CLK_WCO_SELECT_PIN_OFFSET            ((uint32) 0x02u)
 271:Generated_Source\PSoC4/CyLFClk.h **** #endif /* (CY_IP_WCO) */
 272:Generated_Source\PSoC4/CyLFClk.h **** 
 273:Generated_Source\PSoC4/CyLFClk.h **** /* CySysClkIloRestoreFactoryTrim() - implementation definitions */
 274:Generated_Source\PSoC4/CyLFClk.h **** #if (CY_IP_SRSSV2 && CY_IP_WCO && (!(CY_PSOC4_4100 || CY_PSOC4_4200)))
 275:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_CLK_ILO_TRIM_DEFAULT_VALUE           ((uint8 )(0xF0u))
 276:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_CLK_ILO_TRIM_DEFAULT_MASK            ((uint32)((uint32)0x01u << 3u))
 277:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_CLK_ILO_TRIM_MASK                    ((uint32)(0x0Fu))
 278:Generated_Source\PSoC4/CyLFClk.h **** #endif /* (CY_IP_SRSSV2 && CY_IP_WCO && (!(CY_PSOC4_4100 || CY_PSOC4_4200))) */
 279:Generated_Source\PSoC4/CyLFClk.h **** 
 280:Generated_Source\PSoC4/CyLFClk.h **** /* CySysIloTrim() - parameter definitions and macros*/
 281:Generated_Source\PSoC4/CyLFClk.h **** #if (CY_IP_SRSSV2 && CY_IP_WCO && (!(CY_PSOC4_4100 || CY_PSOC4_4200)))
 282:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_CLK_BLOCKING                         (0u)
 283:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_CLK_NON_BLOCKING                     (1u)
 284:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_CLK_PERTHOUSAND                      ((uint32) 0x000003E8u )
 285:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_CLK_ABS_MACRO(x)                     ((0 > (x)) ? (-(x)) : (x))
 286:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_CLK_ERROR_RANGE                      ((uint32) 0x38u)
 287:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_CLK_TIMEOUT                          ((uint8 ) 0x05u)
 288:Generated_Source\PSoC4/CyLFClk.h **** 
 289:Generated_Source\PSoC4/CyLFClk.h ****     /* ILO error step is 7,37 % error range */
 290:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_CLK_ERROR_STEP                       (( int32) 0x02E1u)
 291:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_CLK_ERROR_COEF                       ((uint32) 0x0Au)
 292:Generated_Source\PSoC4/CyLFClk.h **** #endif /* (CY_IP_SRSSV2 && CY_IP_WCO && (!(CY_PSOC4_4100 || CY_PSOC4_4200))) */
 293:Generated_Source\PSoC4/CyLFClk.h **** 
 294:Generated_Source\PSoC4/CyLFClk.h **** #if (CY_IP_WCO)
 295:Generated_Source\PSoC4/CyLFClk.h ****     /* WCO Configuration Register */
 296:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_CLK_WCO_CONFIG_LPM_EN                (( uint32 )(( uint32 )0x01u <<  0u))
 297:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_CLK_WCO_CONFIG_LPM_AUTO              (( uint32 )(( uint32 )0x01u <<  1u))
 298:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_CLK_WCO_CONFIG_LPM_ENABLE            (( uint32 )(( uint32 )0x01u << 31u))
 299:Generated_Source\PSoC4/CyLFClk.h **** 
 300:Generated_Source\PSoC4/CyLFClk.h ****     /* WCO Status Register */
 301:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_CLK_WCO_STATUS_OUT_BLNK_A            (( uint32 )(( uint32 )0x01u <<  0u))
 302:Generated_Source\PSoC4/CyLFClk.h **** 
 303:Generated_Source\PSoC4/CyLFClk.h ****     /* WCO Trim Register */
 304:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_CLK_WCO_TRIM_XGM_MASK                (( uint32 ) 0x07u)
 305:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_CLK_WCO_TRIM_XGM_SHIFT               (( uint32 ) 0x00u)
 306:Generated_Source\PSoC4/CyLFClk.h **** 
 307:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_CLK_WCO_TRIM_XGM_3370NA              (( uint32 ) 0x00u)
 308:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_CLK_WCO_TRIM_XGM_2620NA              (( uint32 ) 0x01u)
 309:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_CLK_WCO_TRIM_XGM_2250NA              (( uint32 ) 0x02u)
 310:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_CLK_WCO_TRIM_XGM_1500NA              (( uint32 ) 0x03u)
 311:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_CLK_WCO_TRIM_XGM_1870NA              (( uint32 ) 0x04u)
 312:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_CLK_WCO_TRIM_XGM_1120NA              (( uint32 ) 0x05u)
 313:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_CLK_WCO_TRIM_XGM_750NA               (( uint32 ) 0x06u)
 314:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_CLK_WCO_TRIM_XGM_0NA                 (( uint32 ) 0x07u)
 315:Generated_Source\PSoC4/CyLFClk.h **** 
 316:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_CLK_WCO_TRIM_GM_MASK                 (( uint32 )(( uint32 )0x03u << 4u))
 317:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_CLK_WCO_TRIM_GM_SHIFT                (( uint32 ) 0x04u)
 318:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_CLK_WCO_TRIM_GM_HPM                  (( uint32 ) 0x01u)
ARM GAS  C:\Users\akita\AppData\Local\Temp\ccTFmJyh.s 			page 7


 319:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_CLK_WCO_TRIM_GM_LPM                  (( uint32 ) 0x02u)
 320:Generated_Source\PSoC4/CyLFClk.h **** #endif  /* (CY_IP_WCO) */
 321:Generated_Source\PSoC4/CyLFClk.h **** 
 322:Generated_Source\PSoC4/CyLFClk.h **** 
 323:Generated_Source\PSoC4/CyLFClk.h **** /*******************************************************************************
 324:Generated_Source\PSoC4/CyLFClk.h **** * WDT API Constants
 325:Generated_Source\PSoC4/CyLFClk.h **** *******************************************************************************/
 326:Generated_Source\PSoC4/CyLFClk.h **** #if(CY_IP_SRSSV2)
 327:Generated_Source\PSoC4/CyLFClk.h **** 
 328:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_WDT_MODE_NONE                (0u)
 329:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_WDT_MODE_INT                 (1u)
 330:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_WDT_MODE_RESET               (2u)
 331:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_WDT_MODE_INT_RESET           (3u)
 332:Generated_Source\PSoC4/CyLFClk.h **** 
 333:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_WDT_COUNTER0_MASK            ((uint32)((uint32)0x01u))           /**< Counter 0 
 334:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_WDT_COUNTER1_MASK            ((uint32)((uint32)0x01u << 8u))     /**< Counter 1 
 335:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_WDT_COUNTER2_MASK            ((uint32)((uint32)0x01u << 16u))    /**< Counter 2 
 336:Generated_Source\PSoC4/CyLFClk.h **** 
 337:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_WDT_CASCADE_NONE             ((uint32)0x00u)             /**< Neither */
 338:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_WDT_CASCADE_01               ((uint32)0x01u << 3u)       /**< Cascade 01 */
 339:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_WDT_CASCADE_12               ((uint32)0x01u << 11u)      /**< Cascade 12 */
 340:Generated_Source\PSoC4/CyLFClk.h **** 
 341:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_WDT_COUNTER0_INT             ((uint32)0x01u << 2u)
 342:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_WDT_COUNTER1_INT             ((uint32)0x01u << 10u)
 343:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_WDT_COUNTER2_INT             ((uint32)0x01u << 18u)
 344:Generated_Source\PSoC4/CyLFClk.h **** 
 345:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_WDT_COUNTER0_RESET           ((uint32)0x01u << 3u)       /**< Counter 0 */
 346:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_WDT_COUNTER1_RESET           ((uint32)0x01u << 11u)      /**< Counter 1 */
 347:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_WDT_COUNTER2_RESET           ((uint32)0x01u << 19u)      /**< Counter 2 */
 348:Generated_Source\PSoC4/CyLFClk.h **** 
 349:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_WDT_COUNTERS_RESET           (CY_SYS_WDT_COUNTER0_RESET |\
 350:Generated_Source\PSoC4/CyLFClk.h ****                                                  CY_SYS_WDT_COUNTER1_RESET |\
 351:Generated_Source\PSoC4/CyLFClk.h ****                                                  CY_SYS_WDT_COUNTER2_RESET)
 352:Generated_Source\PSoC4/CyLFClk.h **** 
 353:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_WDT_COUNTER0                 (0x00u)
 354:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_WDT_COUNTER1                 (0x01u)
 355:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_WDT_COUNTER2                 (0x02u)
 356:Generated_Source\PSoC4/CyLFClk.h **** 
 357:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_WDT_COUNTER0_OFFSET          (0x00u)
 358:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_WDT_COUNTER1_OFFSET          (0x02u)
 359:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_WDT_COUNTER2_OFFSET          (0x04u)
 360:Generated_Source\PSoC4/CyLFClk.h **** 
 361:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_WDT_MODE_MASK                ((uint32)(0x03u))
 362:Generated_Source\PSoC4/CyLFClk.h **** 
 363:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_WDT_CONFIG_BITS2_MASK        (uint32)(0x1Fu)
 364:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_WDT_CONFIG_BITS2_POS         (uint32)(24u)
 365:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_WDT_LOWER_16BITS_MASK        (uint32)(0x0000FFFFu)
 366:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_WDT_HIGHER_16BITS_MASK       (uint32)(0xFFFF0000u)
 367:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_WDT_COUNTERS_MAX             (0x03u)
 368:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_WDT_CNT_SHIFT                (0x08u)
 369:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_WDT_CNT_MATCH_CLR_SHIFT      (0x02u)
 370:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_WDT_CNT_STTS_SHIFT           (0x01u)
 371:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_WDT_CNT_MATCH_SHIFT          (0x10u)
 372:Generated_Source\PSoC4/CyLFClk.h **** 
 373:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_WDT_CLK_LOCK_BITS_MASK       ((uint32)0x03u << 14u)
 374:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_WDT_CLK_LOCK_BIT0            ((uint32)0x01u << 14u)
 375:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_WDT_CLK_LOCK_BIT1            ((uint32)0x01u << 15u)
ARM GAS  C:\Users\akita\AppData\Local\Temp\ccTFmJyh.s 			page 8


 376:Generated_Source\PSoC4/CyLFClk.h **** 
 377:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_WDT_NUM_OF_WDT                   (3u)
 378:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_WDT_NUM_OF_CALLBACKS             (3u)
 379:Generated_Source\PSoC4/CyLFClk.h **** 
 380:Generated_Source\PSoC4/CyLFClk.h ****     #else
 381:Generated_Source\PSoC4/CyLFClk.h ****         #define CY_WDT_NUM_OF_WDT               (1u)
 382:Generated_Source\PSoC4/CyLFClk.h ****         #define CY_WDT_NUM_OF_CALLBACKS         (3u)
 383:Generated_Source\PSoC4/CyLFClk.h ****         #define CY_SYS_WDT_KEY                  ((uint32)(0xACED8865u))
 384:Generated_Source\PSoC4/CyLFClk.h ****         #define CY_SYS_WDT_MATCH_MASK           ((uint32)(0x0000FFFFu))
 385:Generated_Source\PSoC4/CyLFClk.h ****         #define CY_SYS_WDT_IGNORE_BITS_MASK     ((uint32)(0x000F0000u))
 386:Generated_Source\PSoC4/CyLFClk.h ****         #define CY_SYS_WDT_IGNORE_BITS_SHIFT    ((uint32)(16u))
 387:Generated_Source\PSoC4/CyLFClk.h ****         #define CY_SYS_WDT_LOWER_BIT_MASK       ((uint32)(0x00000001u))
 388:Generated_Source\PSoC4/CyLFClk.h **** 
 389:Generated_Source\PSoC4/CyLFClk.h ****         #define CY_SYS_WDT_COUNTER0             (0x00u)
 390:Generated_Source\PSoC4/CyLFClk.h **** 
 391:Generated_Source\PSoC4/CyLFClk.h **** #endif /* (CY_IP_SRSSV2) */
 392:Generated_Source\PSoC4/CyLFClk.h **** 
 393:Generated_Source\PSoC4/CyLFClk.h **** #if (CY_IP_SRSSV2 && CY_IP_WCO)
 394:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_WDT_1LFCLK_ILO_DELAY_US    ((uint16)( 67u))
 395:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_WDT_3LFCLK_ILO_DELAY_US    ((uint16)(201u))
 396:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_WDT_1LFCLK_WCO_DELAY_US    ((uint16)( 31u))
 397:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_WDT_3LFCLK_WCO_DELAY_US    ((uint16)( 93u))
 398:Generated_Source\PSoC4/CyLFClk.h **** 
 399:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_WDT_1LFCLK_DELAY_US      \
 400:Generated_Source\PSoC4/CyLFClk.h ****         ((CY_SYS_CLK_LFCLK_SRC_ILO == (CY_SYS_WDT_CONFIG_REG & CY_SYS_CLK_LFCLK_SEL_MASK)) ? \
 401:Generated_Source\PSoC4/CyLFClk.h ****                                             (CY_SYS_WDT_1LFCLK_ILO_DELAY_US) : \
 402:Generated_Source\PSoC4/CyLFClk.h ****                                             (CY_SYS_WDT_1LFCLK_WCO_DELAY_US))
 403:Generated_Source\PSoC4/CyLFClk.h **** 
 404:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_WDT_3LFCLK_DELAY_US      \
 405:Generated_Source\PSoC4/CyLFClk.h ****         ((CY_SYS_CLK_LFCLK_SRC_ILO == (CY_SYS_WDT_CONFIG_REG & CY_SYS_CLK_LFCLK_SEL_MASK)) ? \
 406:Generated_Source\PSoC4/CyLFClk.h ****                                             (CY_SYS_WDT_3LFCLK_ILO_DELAY_US) : \
 407:Generated_Source\PSoC4/CyLFClk.h ****                                             (CY_SYS_WDT_3LFCLK_WCO_DELAY_US))
 408:Generated_Source\PSoC4/CyLFClk.h ****     #else
 409:Generated_Source\PSoC4/CyLFClk.h ****         #define CY_SYS_WDT_1LFCLK_DELAY_US      ((uint16)  (67u))
 410:Generated_Source\PSoC4/CyLFClk.h ****         #define CY_SYS_WDT_3LFCLK_DELAY_US      ((uint16) (201u))
 411:Generated_Source\PSoC4/CyLFClk.h **** #endif /* (CY_IP_SRSSV2 && !CY_IP_WCO) */
 412:Generated_Source\PSoC4/CyLFClk.h **** 
 413:Generated_Source\PSoC4/CyLFClk.h **** #if (CY_IP_SRSSLT && CY_IP_WCO && CY_IP_WCO_WDT_EN)
 414:Generated_Source\PSoC4/CyLFClk.h **** 
 415:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_TIMER_MODE_NONE              (0u)
 416:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_TIMER_MODE_INT               (1u)
 417:Generated_Source\PSoC4/CyLFClk.h **** 
 418:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_TIMER0_MASK                  ((uint32)((uint32)0x01u))           /**< Counter 0 
 419:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_TIMER1_MASK                  ((uint32)((uint32)0x01u << 8u))     /**< Counter 1 
 420:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_TIMER2_MASK                  ((uint32)((uint32)0x01u << 16u))    /**< Counter 2 
 421:Generated_Source\PSoC4/CyLFClk.h **** 
 422:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_TIMER0_RESET                 ((uint32)0x01u << 3u)       /**< Counter 0 */
 423:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_TIMER1_RESET                 ((uint32)0x01u << 11u)      /**< Counter 1 */
 424:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_TIMER2_RESET                 ((uint32)0x01u << 19u)      /**< Counter 2 */
 425:Generated_Source\PSoC4/CyLFClk.h **** 
 426:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_TIMER_RESET                  (CY_SYS_TIMER0_RESET |\
 427:Generated_Source\PSoC4/CyLFClk.h ****                                                  CY_SYS_TIMER1_RESET |\
 428:Generated_Source\PSoC4/CyLFClk.h ****                                                  CY_SYS_TIMER2_RESET)
 429:Generated_Source\PSoC4/CyLFClk.h **** 
 430:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_TIMER_CASCADE_NONE           ((uint32)0x00u)             /**< Neither */
 431:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_TIMER_CASCADE_01             ((uint32)0x01u << 3u)       /**< Cascade 01 */
 432:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_TIMER_CASCADE_12             ((uint32)0x01u << 11u)      /**< Cascade 12 */
ARM GAS  C:\Users\akita\AppData\Local\Temp\ccTFmJyh.s 			page 9


 433:Generated_Source\PSoC4/CyLFClk.h **** 
 434:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_TIMER0_INT                   ((uint32)0x01u << 2u)
 435:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_TIMER1_INT                   ((uint32)0x01u << 10u)
 436:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_TIMER2_INT                   ((uint32)0x01u << 18u)
 437:Generated_Source\PSoC4/CyLFClk.h **** 
 438:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_TIMER0                       (0x00u)
 439:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_TIMER1                       (0x01u)
 440:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_TIMER2                       (0x02u)
 441:Generated_Source\PSoC4/CyLFClk.h **** 
 442:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_TIMER_MODE_MASK              ((uint32)(0x01u))
 443:Generated_Source\PSoC4/CyLFClk.h **** 
 444:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_TIMER_CONFIG_BITS2_MASK      (uint32)(0x1Fu)
 445:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_TIMER_CONFIG_BITS2_POS       (uint32)(24u)
 446:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_TIMER_LOWER_16BITS_MASK      (uint32)(0x0000FFFFu)
 447:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_TIMER_HIGHER_16BITS_MASK     (uint32)(0xFFFF0000u)
 448:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_TIMER_COUNTERS_MAX           (0x03u)
 449:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_TIMER_CNT_SHIFT              (0x08u)
 450:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_TIMER_CNT_MATCH_CLR_SHIFT    (0x02u)
 451:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_TIMER_CNT_STTS_SHIFT         (0x01u)
 452:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_TIMER_CNT_MATCH_SHIFT        (0x10u)
 453:Generated_Source\PSoC4/CyLFClk.h **** 
 454:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_NUM_OF_TIMERS                (3u)
 455:Generated_Source\PSoC4/CyLFClk.h **** 
 456:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_SET_NEW_TIMER_SOURCE_ILO     ((uint16)(0x02u))
 457:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_SET_NEW_TIMER_SOURCE_WCO     ((uint16)(0x01u))
 458:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_WCO_WDT_CLKEN_RESET_MASK     ((uint32)(0x03u))
 459:Generated_Source\PSoC4/CyLFClk.h **** 
 460:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_TIMER_1ILO_DELAY_US          ((uint16)( 67u))
 461:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_TIMER_4ILO_DELAY_US          ((uint16)(268u))
 462:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_TIMER_3ILO_DELAY_US          ((uint16)(201u))
 463:Generated_Source\PSoC4/CyLFClk.h **** 
 464:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_TIMER_1WCO_DELAY_US          ((uint16)( 31u))
 465:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_TIMER_4WCO_DELAY_US          ((uint16)(124u))
 466:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_TIMER_3WCO_DELAY_US          ((uint16)( 93u))
 467:Generated_Source\PSoC4/CyLFClk.h **** 
 468:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_1TIMER_DELAY_US      \
 469:Generated_Source\PSoC4/CyLFClk.h ****         ((CY_SYS_CLK_TIMER_SRC_ILO == (CY_SYS_WCO_WDT_CONFIG_REG & CY_SYS_CLK_TIMER_SEL_MASK)) ? \
 470:Generated_Source\PSoC4/CyLFClk.h ****                                             (CY_SYS_TIMER_1ILO_DELAY_US) : \
 471:Generated_Source\PSoC4/CyLFClk.h ****                                             (CY_SYS_TIMER_1WCO_DELAY_US))
 472:Generated_Source\PSoC4/CyLFClk.h **** 
 473:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_4TIMER_DELAY_US      \
 474:Generated_Source\PSoC4/CyLFClk.h ****         ((CY_SYS_CLK_TIMER_SRC_ILO == (CY_SYS_WCO_WDT_CONFIG_REG & CY_SYS_CLK_TIMER_SEL_MASK)) ? \
 475:Generated_Source\PSoC4/CyLFClk.h ****                                             (CY_SYS_TIMER_4WCO_DELAY_US) : \
 476:Generated_Source\PSoC4/CyLFClk.h ****                                             (CY_SYS_TIMER_4ILO_DELAY_US))
 477:Generated_Source\PSoC4/CyLFClk.h **** 
 478:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_3TIMER_DELAY_US      \
 479:Generated_Source\PSoC4/CyLFClk.h ****         ((CY_SYS_CLK_TIMER_SRC_ILO == (CY_SYS_WCO_WDT_CONFIG_REG & CY_SYS_CLK_TIMER_SEL_MASK)) ? \
 480:Generated_Source\PSoC4/CyLFClk.h ****                                             (CY_SYS_TIMER_3ILO_DELAY_US) : \
 481:Generated_Source\PSoC4/CyLFClk.h ****                                             (CY_SYS_TIMER_3WCO_DELAY_US))
 482:Generated_Source\PSoC4/CyLFClk.h **** 
 483:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_SET_CURRENT_TIMER_SOURCE_BIT      \
 484:Generated_Source\PSoC4/CyLFClk.h ****         ((CY_SYS_CLK_TIMER_SRC_ILO == (CY_SYS_WCO_WDT_CONFIG_REG & CY_SYS_CLK_TIMER_SEL_MASK)) ? \
 485:Generated_Source\PSoC4/CyLFClk.h ****                                             (CY_SYS_SET_NEW_TIMER_SOURCE_ILO) : \
 486:Generated_Source\PSoC4/CyLFClk.h ****                                             (CY_SYS_SET_NEW_TIMER_SOURCE_WCO))
 487:Generated_Source\PSoC4/CyLFClk.h **** 
 488:Generated_Source\PSoC4/CyLFClk.h **** #endif /* (CY_IP_SRSSLT && CY_IP_WCO && CY_IP_WCO_WDT_EN) */
 489:Generated_Source\PSoC4/CyLFClk.h **** 
ARM GAS  C:\Users\akita\AppData\Local\Temp\ccTFmJyh.s 			page 10


 490:Generated_Source\PSoC4/CyLFClk.h **** /* CySysClkWcoSetPowerMode() */
 491:Generated_Source\PSoC4/CyLFClk.h **** #define CY_SYS_CLK_WCO_HPM                              (0x0u)     /**< High power mode */
 492:Generated_Source\PSoC4/CyLFClk.h **** #if(CY_PSOC4_4100BL || CY_PSOC4_4200BL)
 493:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_CLK_WCO_LPM                          (0x1u)     /**< Low power mode */
 494:Generated_Source\PSoC4/CyLFClk.h **** #endif /* (CY_PSOC4_4100BL || CY_PSOC4_4200BL) */
 495:Generated_Source\PSoC4/CyLFClk.h **** 
 496:Generated_Source\PSoC4/CyLFClk.h **** 
 497:Generated_Source\PSoC4/CyLFClk.h **** /*******************************************************************************
 498:Generated_Source\PSoC4/CyLFClk.h **** *       Trim Registers Constants 
 499:Generated_Source\PSoC4/CyLFClk.h **** ********************************************************************************/
 500:Generated_Source\PSoC4/CyLFClk.h **** #define CY_SYS_CLK_SYS_CLK_DEVIDER                      ((uint32)0x0Au)
 501:Generated_Source\PSoC4/CyLFClk.h **** #define CY_SYS_CLK_SEL_ILO_DFT_SOURCE                   ((uint32)0x00000100u)
 502:Generated_Source\PSoC4/CyLFClk.h **** #define CY_SYS_CLK_FOURBITS_MAX                         (( int32)0x0f)
 503:Generated_Source\PSoC4/CyLFClk.h **** #define CY_SYS_CLK_HALF_OF_STEP                         (( int32)((uint32) CY_SYS_CLK_ERROR_STEP >>
 504:Generated_Source\PSoC4/CyLFClk.h **** 
 505:Generated_Source\PSoC4/CyLFClk.h **** #if(CY_IP_SRSSV2)
 506:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_CLK_ILO_DESIRED_FREQ_HZ              (32000u)
 507:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_CLK_DFT_SELSIZE                      ((uint32) 0x3F)
 508:Generated_Source\PSoC4/CyLFClk.h ****     #else
 509:Generated_Source\PSoC4/CyLFClk.h ****         #define CY_SYS_CLK_ILO_DESIRED_FREQ_HZ          (40000u)
 510:Generated_Source\PSoC4/CyLFClk.h ****         #define CY_SYS_TST_DDFT_CTRL_REG_SEL2_CLK1      ((uint32)0x00000908u)
 511:Generated_Source\PSoC4/CyLFClk.h ****         #define CY_SYS_CLK_DFT_SELSIZE                  ((uint32) 0x0F)
 512:Generated_Source\PSoC4/CyLFClk.h **** #endif /* (CY_IP_SRSSV2) */
 513:Generated_Source\PSoC4/CyLFClk.h **** 
 514:Generated_Source\PSoC4/CyLFClk.h **** #define CY_SYS_TST_DDFT_CTRL_REG_DEFAULT_MASK    ((uint32)((CY_SYS_CLK_DFT_SELSIZE << 8u) | (CY_SYS
 515:Generated_Source\PSoC4/CyLFClk.h **** 
 516:Generated_Source\PSoC4/CyLFClk.h **** #if (0u != (CY_PSOC4_4100 || CY_PSOC4_4200))
 517:Generated_Source\PSoC4/CyLFClk.h ****     #define  CY_SYS_TST_DDFT_CTRL_REG_SEL2_CLK1              ((uint32)0x00000201u)
 518:Generated_Source\PSoC4/CyLFClk.h **** #endif /* (0u != (CY_PSOC4_4100 || CY_PSOC4_4200)) */
 519:Generated_Source\PSoC4/CyLFClk.h **** 
 520:Generated_Source\PSoC4/CyLFClk.h **** #if (0u != (CY_PSOC4_4200L))
 521:Generated_Source\PSoC4/CyLFClk.h ****     #define  CY_SYS_TST_DDFT_CTRL_REG_SEL2_CLK1              ((uint32)0x00000908u)
 522:Generated_Source\PSoC4/CyLFClk.h **** #endif /* (0u != (CY_PSOC4_4200L)) */
 523:Generated_Source\PSoC4/CyLFClk.h **** 
 524:Generated_Source\PSoC4/CyLFClk.h **** #if (CY_IP_SRSSV2 && (!CY_PSOC4_4200L) && (!(CY_PSOC4_4100 || CY_PSOC4_4200)))
 525:Generated_Source\PSoC4/CyLFClk.h ****     #define  CY_SYS_TST_DDFT_CTRL_REG_SEL2_CLK1               ((uint32)0x00000B0Au)
 526:Generated_Source\PSoC4/CyLFClk.h **** #endif /* (CY_IP_SRSSV2 && (!CY_PSOC4_4200L) && (!(CY_PSOC4_4100 || CY_PSOC4_4200))) */
 527:Generated_Source\PSoC4/CyLFClk.h **** 
 528:Generated_Source\PSoC4/CyLFClk.h **** 
 529:Generated_Source\PSoC4/CyLFClk.h **** /*******************************************************************************
 530:Generated_Source\PSoC4/CyLFClk.h **** *       Trim Registers 
 531:Generated_Source\PSoC4/CyLFClk.h **** ********************************************************************************/
 532:Generated_Source\PSoC4/CyLFClk.h ****     /* DFT TST Control Register*/
 533:Generated_Source\PSoC4/CyLFClk.h **** #define CY_SYS_TST_DDFT_CTRL_REG                         (*(reg32*) CYREG_TST_DDFT_CTRL)
 534:Generated_Source\PSoC4/CyLFClk.h **** #define CY_SYS_CNT_CTRL_PTR                              ( (reg32*) CYREG_TST_DDFT_CTRL)
 535:Generated_Source\PSoC4/CyLFClk.h **** 
 536:Generated_Source\PSoC4/CyLFClk.h ****     /* DFT TST Counter 1 Register*/
 537:Generated_Source\PSoC4/CyLFClk.h **** #define CY_SYS_CNT_REG1_REG                              (*(reg32*) CYREG_TST_TRIM_CNTR1)
 538:Generated_Source\PSoC4/CyLFClk.h **** #define CY_SYS_CNT_REG1_PTR                              ( (reg32*) CYREG_TST_TRIM_CNTR1)
 539:Generated_Source\PSoC4/CyLFClk.h **** 
 540:Generated_Source\PSoC4/CyLFClk.h ****     /* DFT TST Counter 2 Register*/
 541:Generated_Source\PSoC4/CyLFClk.h **** #define CY_SYS_CNT_REG2_REG                              (*(reg32*) CYREG_TST_TRIM_CNTR2)
 542:Generated_Source\PSoC4/CyLFClk.h **** #define CY_SYS_CNT_REG2_PTR                              ( (reg32*) CYREG_TST_TRIM_CNTR2)
 543:Generated_Source\PSoC4/CyLFClk.h **** 
 544:Generated_Source\PSoC4/CyLFClk.h ****     /* DFT Muxes Configuration Register*/
 545:Generated_Source\PSoC4/CyLFClk.h **** #define CY_SYS_CLK_DFT_REG                               (*(reg32*) CYREG_CLK_DFT_SELECT)
 546:Generated_Source\PSoC4/CyLFClk.h **** #define CY_SYS_CLK_DFT_PTR                               ( (reg32*) CYREG_CLK_DFT_SELECT)
ARM GAS  C:\Users\akita\AppData\Local\Temp\ccTFmJyh.s 			page 11


 547:Generated_Source\PSoC4/CyLFClk.h **** 
 548:Generated_Source\PSoC4/CyLFClk.h ****     /* ILO Configuration Register*/
 549:Generated_Source\PSoC4/CyLFClk.h **** #define CY_SYS_CLK_ILO_CONFIG_REG                        (*(reg32 *) CYREG_CLK_ILO_CONFIG)
 550:Generated_Source\PSoC4/CyLFClk.h **** #define CY_SYS_CLK_ILO_CONFIG_PTR                        ( (reg32 *) CYREG_CLK_ILO_CONFIG)
 551:Generated_Source\PSoC4/CyLFClk.h **** 
 552:Generated_Source\PSoC4/CyLFClk.h ****     /* ILO Trim Register*/
 553:Generated_Source\PSoC4/CyLFClk.h **** #if(CY_IP_SRSSV2 && CY_IP_WCO)
 554:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_CLK_ILO_TRIM_REG                      (*(reg32 *) CYREG_CLK_ILO_TRIM)
 555:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_CLK_ILO_TRIM_PTR                      ( (reg32 *) CYREG_CLK_ILO_TRIM)
 556:Generated_Source\PSoC4/CyLFClk.h **** #endif  /* (CY_IP_SRSSV2) && CY_IP_WCO*/
 557:Generated_Source\PSoC4/CyLFClk.h **** 
 558:Generated_Source\PSoC4/CyLFClk.h **** #if (CY_IP_WCO)
 559:Generated_Source\PSoC4/CyLFClk.h ****     #if (CY_PSOC4_4100BL || CY_PSOC4_4200BL)
 560:Generated_Source\PSoC4/CyLFClk.h **** 
 561:Generated_Source\PSoC4/CyLFClk.h ****         /* WCO Status Register */
 562:Generated_Source\PSoC4/CyLFClk.h ****         #define CY_SYS_CLK_WCO_STATUS_REG               (*(reg32 *) CYREG_BLE_BLESS_WCO_STATUS)
 563:Generated_Source\PSoC4/CyLFClk.h ****         #define CY_SYS_CLK_WCO_STATUS_PTR               ( (reg32 *) CYREG_BLE_BLESS_WCO_STATUS)
 564:Generated_Source\PSoC4/CyLFClk.h **** 
 565:Generated_Source\PSoC4/CyLFClk.h ****         /* WCO Configuration Register */
 566:Generated_Source\PSoC4/CyLFClk.h ****         #define CY_SYS_CLK_WCO_CONFIG_REG               (*(reg32 *) CYREG_BLE_BLESS_WCO_CONFIG)
 567:Generated_Source\PSoC4/CyLFClk.h ****         #define CY_SYS_CLK_WCO_CONFIG_PTR               ( (reg32 *) CYREG_BLE_BLESS_WCO_CONFIG)
 568:Generated_Source\PSoC4/CyLFClk.h **** 
 569:Generated_Source\PSoC4/CyLFClk.h ****         /* WCO Trim Register */
 570:Generated_Source\PSoC4/CyLFClk.h ****         #define CY_SYS_CLK_WCO_TRIM_REG                 (*(reg32 *) CYREG_BLE_BLESS_WCO_TRIM)
 571:Generated_Source\PSoC4/CyLFClk.h ****         #define CY_SYS_CLK_WCO_TRIM_PTR                 ( (reg32 *) CYREG_BLE_BLESS_WCO_TRIM)
 572:Generated_Source\PSoC4/CyLFClk.h ****     #else   /* (CY_PSOC4_4100M || CY_PSOC4_4200M) && (CY_PSOC4_4100L || CY_PSOC4_4200L) */
 573:Generated_Source\PSoC4/CyLFClk.h **** 
 574:Generated_Source\PSoC4/CyLFClk.h ****         /* WCO Status Register */
 575:Generated_Source\PSoC4/CyLFClk.h ****         #define CY_SYS_CLK_WCO_STATUS_REG               (*(reg32 *) CYREG_WCO_STATUS)
 576:Generated_Source\PSoC4/CyLFClk.h ****         #define CY_SYS_CLK_WCO_STATUS_PTR               ( (reg32 *) CYREG_WCO_STATUS)
 577:Generated_Source\PSoC4/CyLFClk.h **** 
 578:Generated_Source\PSoC4/CyLFClk.h ****         /* WCO Configuration Register */
 579:Generated_Source\PSoC4/CyLFClk.h ****         #define CY_SYS_CLK_WCO_CONFIG_REG               (*(reg32 *) CYREG_WCO_CONFIG)
 580:Generated_Source\PSoC4/CyLFClk.h ****         #define CY_SYS_CLK_WCO_CONFIG_PTR               ( (reg32 *) CYREG_WCO_CONFIG)
 581:Generated_Source\PSoC4/CyLFClk.h **** 
 582:Generated_Source\PSoC4/CyLFClk.h ****         /* WCO Trim Register */
 583:Generated_Source\PSoC4/CyLFClk.h ****         #define CY_SYS_CLK_WCO_TRIM_REG                 (*(reg32 *) CYREG_WCO_TRIM)
 584:Generated_Source\PSoC4/CyLFClk.h ****         #define CY_SYS_CLK_WCO_TRIM_PTR                 ( (reg32 *) CYREG_WCO_TRIM)
 585:Generated_Source\PSoC4/CyLFClk.h ****     #endif /* (CY_PSOC4_4100BL || CY_PSOC4_4200BL) */
 586:Generated_Source\PSoC4/CyLFClk.h **** 
 587:Generated_Source\PSoC4/CyLFClk.h **** #endif  /* (CY_IP_WCO) */
 588:Generated_Source\PSoC4/CyLFClk.h **** 
 589:Generated_Source\PSoC4/CyLFClk.h **** 
 590:Generated_Source\PSoC4/CyLFClk.h **** /*******************************************************************************
 591:Generated_Source\PSoC4/CyLFClk.h **** * WDT API Registers
 592:Generated_Source\PSoC4/CyLFClk.h **** *******************************************************************************/
 593:Generated_Source\PSoC4/CyLFClk.h **** #if(CY_IP_SRSSV2)
 594:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_WDT_CTRLOW_REG               (*(reg32 *) CYREG_WDT_CTRLOW)
 595:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_WDT_CTRLOW_PTR               ( (reg32 *) CYREG_WDT_CTRLOW)
 596:Generated_Source\PSoC4/CyLFClk.h **** 
 597:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_WDT_CTRHIGH_REG              (*(reg32 *) CYREG_WDT_CTRHIGH)
 598:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_WDT_CTRHIGH_PTR              ( (reg32 *) CYREG_WDT_CTRHIGH)
 599:Generated_Source\PSoC4/CyLFClk.h **** 
 600:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_WDT_MATCH_REG                (*(reg32 *) CYREG_WDT_MATCH)
 601:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_WDT_MATCH_PTR                ( (reg32 *) CYREG_WDT_MATCH)
 602:Generated_Source\PSoC4/CyLFClk.h **** 
 603:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_WDT_CONFIG_REG               (*(reg32 *) CYREG_WDT_CONFIG)
ARM GAS  C:\Users\akita\AppData\Local\Temp\ccTFmJyh.s 			page 12


 604:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_WDT_CONFIG_PTR               ( (reg32 *) CYREG_WDT_CONFIG)
 605:Generated_Source\PSoC4/CyLFClk.h **** 
 606:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_WDT_CONTROL_REG              (*(reg32 *) CYREG_WDT_CONTROL)
 607:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_WDT_CONTROL_PTR              ( (reg32 *) CYREG_WDT_CONTROL)
 608:Generated_Source\PSoC4/CyLFClk.h **** #else
 609:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_WDT_DISABLE_KEY_REG          (*(reg32 *) CYREG_WDT_DISABLE_KEY)
 610:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_WDT_DISABLE_KEY_PTR          ( (reg32 *) CYREG_WDT_DISABLE_KEY)
 611:Generated_Source\PSoC4/CyLFClk.h **** 
 612:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_WDT_MATCH_REG                (*(reg32 *) CYREG_WDT_MATCH)
 613:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_WDT_MATCH_PTR                ( (reg32 *) CYREG_WDT_MATCH)
 614:Generated_Source\PSoC4/CyLFClk.h **** 
 615:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_WDT_COUNTER_REG              (*(reg32 *) CYREG_WDT_COUNTER)
 616:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_WDT_COUNTER_PTR              ( (reg32 *) CYREG_WDT_COUNTER)
 617:Generated_Source\PSoC4/CyLFClk.h **** 
 618:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_SRSS_INTR_REG                (*(reg32 *) CYREG_SRSS_INTR)
 619:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_SRSS_INTR_PTR                ( (reg32 *) CYREG_SRSS_INTR)
 620:Generated_Source\PSoC4/CyLFClk.h **** 
 621:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_SRSS_INTR_MASK_REG           (*(reg32 *) CYREG_SRSS_INTR_MASK)
 622:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_SRSS_INTR_MASK_PTR           ( (reg32 *) CYREG_SRSS_INTR_MASK)
 623:Generated_Source\PSoC4/CyLFClk.h **** #endif  /* (CY_IP_SRSSV2) */
 624:Generated_Source\PSoC4/CyLFClk.h **** 
 625:Generated_Source\PSoC4/CyLFClk.h **** #if (CY_IP_SRSSLT && CY_IP_WCO && CY_IP_WCO_WDT_EN)
 626:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_WCO_WDT_CTRLOW_REG           (*(reg32 *) CYREG_WCO_WDT_CTRLOW)
 627:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_WCO_WDT_CTRLOW_PTR           ( (reg32 *) CYREG_WCO_WDT_CTRLOW)
 628:Generated_Source\PSoC4/CyLFClk.h **** 
 629:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_WCO_WDT_CTRHIGH_REG          (*(reg32 *) CYREG_WCO_WDT_CTRHIGH)
 630:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_WCO_WDT_CTRHIGH_PTR          ( (reg32 *) CYREG_WCO_WDT_CTRHIGH)
 631:Generated_Source\PSoC4/CyLFClk.h **** 
 632:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_WCO_WDT_MATCH_REG            (*(reg32 *) CYREG_WCO_WDT_MATCH)
 633:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_WCO_WDT_MATCH_PTR            ( (reg32 *) CYREG_WCO_WDT_MATCH)
 634:Generated_Source\PSoC4/CyLFClk.h **** 
 635:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_WCO_WDT_CONFIG_REG           (*(reg32 *) CYREG_WCO_WDT_CONFIG)
 636:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_WCO_WDT_CONFIG_PTR           ( (reg32 *) CYREG_WCO_WDT_CONFIG)
 637:Generated_Source\PSoC4/CyLFClk.h **** 
 638:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_WCO_WDT_CONTROL_REG          (*(reg32 *) CYREG_WCO_WDT_CONTROL)
 639:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_WCO_WDT_CONTROL_PTR          ( (reg32 *) CYREG_WCO_WDT_CONTROL)
 640:Generated_Source\PSoC4/CyLFClk.h **** 
 641:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_WCO_WDT_CLKEN_REG            (*(reg32 *) CYREG_WCO_WDT_CLKEN)
 642:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_WCO_WDT_CLKEN_PTR            ( (reg32 *) CYREG_WCO_WDT_CLKEN)
 643:Generated_Source\PSoC4/CyLFClk.h **** #endif /* (CY_IP_SRSSLT && CY_IP_WCO && CY_IP_WCO_WDT_EN) */
 644:Generated_Source\PSoC4/CyLFClk.h **** 
 645:Generated_Source\PSoC4/CyLFClk.h **** #if (CY_IP_WCO)
 646:Generated_Source\PSoC4/CyLFClk.h **** 
 647:Generated_Source\PSoC4/CyLFClk.h **** 
 648:Generated_Source\PSoC4/CyLFClk.h ****     /*******************************************************************************
 649:Generated_Source\PSoC4/CyLFClk.h ****     * Function Name: CySysClkWcoSetHighPowerMode
 650:Generated_Source\PSoC4/CyLFClk.h ****     ********************************************************************************
 651:Generated_Source\PSoC4/CyLFClk.h ****     *
 652:Generated_Source\PSoC4/CyLFClk.h ****     * Summary:
 653:Generated_Source\PSoC4/CyLFClk.h ****     *  Sets the high power mode for the 32 KHz WCO.
 654:Generated_Source\PSoC4/CyLFClk.h ****     *
 655:Generated_Source\PSoC4/CyLFClk.h ****     *******************************************************************************/
 656:Generated_Source\PSoC4/CyLFClk.h ****     static CY_INLINE void CySysClkWcoSetHighPowerMode(void)
 657:Generated_Source\PSoC4/CyLFClk.h ****     {
  25              		.loc 1 657 0
  26              		.cfi_startproc
  27 0000 80B5     		push	{r7, lr}
ARM GAS  C:\Users\akita\AppData\Local\Temp\ccTFmJyh.s 			page 13


  28              		.cfi_def_cfa_offset 8
  29              		.cfi_offset 7, -8
  30              		.cfi_offset 14, -4
  31 0002 00AF     		add	r7, sp, #0
  32              		.cfi_def_cfa_register 7
 658:Generated_Source\PSoC4/CyLFClk.h ****         /* Switch off low power mode for WCO */
 659:Generated_Source\PSoC4/CyLFClk.h ****         CY_SYS_CLK_WCO_CONFIG_REG &= (uint32) ~CY_SYS_CLK_WCO_CONFIG_LPM_EN;
  33              		.loc 1 659 0
  34 0004 0E4B     		ldr	r3, .L2
  35 0006 0E4A     		ldr	r2, .L2
  36 0008 1268     		ldr	r2, [r2]
  37 000a 0121     		mov	r1, #1
  38 000c 8A43     		bic	r2, r1
  39 000e 1A60     		str	r2, [r3]
 660:Generated_Source\PSoC4/CyLFClk.h **** 
 661:Generated_Source\PSoC4/CyLFClk.h ****         /* Switch off auto low power mode in WCO */
 662:Generated_Source\PSoC4/CyLFClk.h ****         CY_SYS_CLK_WCO_CONFIG_REG &= ((uint32)~CY_SYS_CLK_WCO_CONFIG_LPM_AUTO);
  40              		.loc 1 662 0
  41 0010 0B4B     		ldr	r3, .L2
  42 0012 0B4A     		ldr	r2, .L2
  43 0014 1268     		ldr	r2, [r2]
  44 0016 0221     		mov	r1, #2
  45 0018 8A43     		bic	r2, r1
  46 001a 1A60     		str	r2, [r3]
 663:Generated_Source\PSoC4/CyLFClk.h **** 
 664:Generated_Source\PSoC4/CyLFClk.h ****         /* Restore WCO trim register HPM settings */
 665:Generated_Source\PSoC4/CyLFClk.h ****         CY_SYS_CLK_WCO_TRIM_REG = (CY_SYS_CLK_WCO_TRIM_REG & (uint32)(~CY_SYS_CLK_WCO_TRIM_GM_MASK)
  47              		.loc 1 665 0
  48 001c 094B     		ldr	r3, .L2+4
  49 001e 094A     		ldr	r2, .L2+4
  50 0020 1268     		ldr	r2, [r2]
  51 0022 3021     		mov	r1, #48
  52 0024 8A43     		bic	r2, r1
 666:Generated_Source\PSoC4/CyLFClk.h ****                     | (uint32)(CY_SYS_CLK_WCO_TRIM_GM_HPM << CY_SYS_CLK_WCO_TRIM_GM_SHIFT);
  53              		.loc 1 666 0
  54 0026 1021     		mov	r1, #16
  55 0028 0A43     		orr	r2, r1
 665:Generated_Source\PSoC4/CyLFClk.h ****                     | (uint32)(CY_SYS_CLK_WCO_TRIM_GM_HPM << CY_SYS_CLK_WCO_TRIM_GM_SHIFT);
  56              		.loc 1 665 0
  57 002a 1A60     		str	r2, [r3]
 667:Generated_Source\PSoC4/CyLFClk.h ****         CY_SYS_CLK_WCO_TRIM_REG = (CY_SYS_CLK_WCO_TRIM_REG & (uint32)(~CY_SYS_CLK_WCO_TRIM_XGM_MASK
  58              		.loc 1 667 0
  59 002c 054B     		ldr	r3, .L2+4
  60 002e 054A     		ldr	r2, .L2+4
  61 0030 1268     		ldr	r2, [r2]
  62 0032 0721     		mov	r1, #7
  63 0034 8A43     		bic	r2, r1
 668:Generated_Source\PSoC4/CyLFClk.h ****                     | (uint32)(CY_SYS_CLK_WCO_TRIM_XGM_2620NA << CY_SYS_CLK_WCO_TRIM_XGM_SHIFT);
  64              		.loc 1 668 0
  65 0036 0121     		mov	r1, #1
  66 0038 0A43     		orr	r2, r1
 667:Generated_Source\PSoC4/CyLFClk.h ****         CY_SYS_CLK_WCO_TRIM_REG = (CY_SYS_CLK_WCO_TRIM_REG & (uint32)(~CY_SYS_CLK_WCO_TRIM_XGM_MASK
  67              		.loc 1 667 0
  68 003a 1A60     		str	r2, [r3]
 669:Generated_Source\PSoC4/CyLFClk.h ****     }
  69              		.loc 1 669 0
  70 003c BD46     		mov	sp, r7
ARM GAS  C:\Users\akita\AppData\Local\Temp\ccTFmJyh.s 			page 14


  71              		@ sp needed
  72 003e 80BD     		pop	{r7, pc}
  73              	.L3:
  74              		.align	2
  75              	.L2:
  76 0040 00F02E40 		.word	1076817920
  77 0044 00FF2E40 		.word	1076821760
  78              		.cfi_endproc
  79              	.LFE0:
  80              		.size	CySysClkWcoSetHighPowerMode, .-CySysClkWcoSetHighPowerMode
  81              		.section	.text.CySysClkWcoSetLowPowerMode,"ax",%progbits
  82              		.align	2
  83              		.code	16
  84              		.thumb_func
  85              		.type	CySysClkWcoSetLowPowerMode, %function
  86              	CySysClkWcoSetLowPowerMode:
  87              	.LFB1:
 670:Generated_Source\PSoC4/CyLFClk.h **** 
 671:Generated_Source\PSoC4/CyLFClk.h ****     #if(CY_PSOC4_4100BL || CY_PSOC4_4200BL)
 672:Generated_Source\PSoC4/CyLFClk.h ****         /*******************************************************************************
 673:Generated_Source\PSoC4/CyLFClk.h ****         * Function Name: CySysClkWcoSetLowPowerMode
 674:Generated_Source\PSoC4/CyLFClk.h ****         ********************************************************************************
 675:Generated_Source\PSoC4/CyLFClk.h ****         *
 676:Generated_Source\PSoC4/CyLFClk.h ****         * Summary:
 677:Generated_Source\PSoC4/CyLFClk.h ****         *  Sets the low power mode for the 32 KHz WCO.
 678:Generated_Source\PSoC4/CyLFClk.h ****         *
 679:Generated_Source\PSoC4/CyLFClk.h ****         *  Note LPM available only for PSoC 4100 BLE / PSoC4 4200 BLE
 680:Generated_Source\PSoC4/CyLFClk.h ****         *******************************************************************************/
 681:Generated_Source\PSoC4/CyLFClk.h ****         static CY_INLINE void CySysClkWcoSetLowPowerMode(void)
 682:Generated_Source\PSoC4/CyLFClk.h ****         {
  88              		.loc 1 682 0
  89              		.cfi_startproc
  90 0000 80B5     		push	{r7, lr}
  91              		.cfi_def_cfa_offset 8
  92              		.cfi_offset 7, -8
  93              		.cfi_offset 14, -4
  94 0002 00AF     		add	r7, sp, #0
  95              		.cfi_def_cfa_register 7
 683:Generated_Source\PSoC4/CyLFClk.h ****             /* Switch off auto low power mode in WCO */
 684:Generated_Source\PSoC4/CyLFClk.h ****             CY_SYS_CLK_WCO_CONFIG_REG &= ((uint32)~CY_SYS_CLK_WCO_CONFIG_LPM_AUTO);
  96              		.loc 1 684 0
  97 0004 0E4B     		ldr	r3, .L5
  98 0006 0E4A     		ldr	r2, .L5
  99 0008 1268     		ldr	r2, [r2]
 100 000a 0221     		mov	r1, #2
 101 000c 8A43     		bic	r2, r1
 102 000e 1A60     		str	r2, [r3]
 685:Generated_Source\PSoC4/CyLFClk.h **** 
 686:Generated_Source\PSoC4/CyLFClk.h ****             /* Change WCO trim register settings to LPM */
 687:Generated_Source\PSoC4/CyLFClk.h ****             CY_SYS_CLK_WCO_TRIM_REG = (CY_SYS_CLK_WCO_TRIM_REG & (uint32)(~CY_SYS_CLK_WCO_TRIM_XGM_
 103              		.loc 1 687 0
 104 0010 0C4B     		ldr	r3, .L5+4
 105 0012 0C4A     		ldr	r2, .L5+4
 106 0014 1268     		ldr	r2, [r2]
 107 0016 0721     		mov	r1, #7
 108 0018 8A43     		bic	r2, r1
 688:Generated_Source\PSoC4/CyLFClk.h ****                         | (uint32)(CY_SYS_CLK_WCO_TRIM_XGM_2250NA << CY_SYS_CLK_WCO_TRIM_XGM_SHIFT)
ARM GAS  C:\Users\akita\AppData\Local\Temp\ccTFmJyh.s 			page 15


 109              		.loc 1 688 0
 110 001a 0221     		mov	r1, #2
 111 001c 0A43     		orr	r2, r1
 687:Generated_Source\PSoC4/CyLFClk.h ****                         | (uint32)(CY_SYS_CLK_WCO_TRIM_XGM_2250NA << CY_SYS_CLK_WCO_TRIM_XGM_SHIFT)
 112              		.loc 1 687 0
 113 001e 1A60     		str	r2, [r3]
 689:Generated_Source\PSoC4/CyLFClk.h ****             CY_SYS_CLK_WCO_TRIM_REG = (CY_SYS_CLK_WCO_TRIM_REG & (uint32)(~CY_SYS_CLK_WCO_TRIM_GM_M
 114              		.loc 1 689 0
 115 0020 084B     		ldr	r3, .L5+4
 116 0022 084A     		ldr	r2, .L5+4
 117 0024 1268     		ldr	r2, [r2]
 118 0026 3021     		mov	r1, #48
 119 0028 8A43     		bic	r2, r1
 690:Generated_Source\PSoC4/CyLFClk.h ****                         | (uint32)(CY_SYS_CLK_WCO_TRIM_GM_LPM << CY_SYS_CLK_WCO_TRIM_GM_SHIFT);
 120              		.loc 1 690 0
 121 002a 2021     		mov	r1, #32
 122 002c 0A43     		orr	r2, r1
 689:Generated_Source\PSoC4/CyLFClk.h ****             CY_SYS_CLK_WCO_TRIM_REG = (CY_SYS_CLK_WCO_TRIM_REG & (uint32)(~CY_SYS_CLK_WCO_TRIM_GM_M
 123              		.loc 1 689 0
 124 002e 1A60     		str	r2, [r3]
 691:Generated_Source\PSoC4/CyLFClk.h **** 
 692:Generated_Source\PSoC4/CyLFClk.h ****             /* Switch on low power mode for WCO */
 693:Generated_Source\PSoC4/CyLFClk.h ****             CY_SYS_CLK_WCO_CONFIG_REG |= CY_SYS_CLK_WCO_CONFIG_LPM_EN;
 125              		.loc 1 693 0
 126 0030 034B     		ldr	r3, .L5
 127 0032 034A     		ldr	r2, .L5
 128 0034 1268     		ldr	r2, [r2]
 129 0036 0121     		mov	r1, #1
 130 0038 0A43     		orr	r2, r1
 131 003a 1A60     		str	r2, [r3]
 694:Generated_Source\PSoC4/CyLFClk.h ****         }
 132              		.loc 1 694 0
 133 003c BD46     		mov	sp, r7
 134              		@ sp needed
 135 003e 80BD     		pop	{r7, pc}
 136              	.L6:
 137              		.align	2
 138              	.L5:
 139 0040 00F02E40 		.word	1076817920
 140 0044 00FF2E40 		.word	1076821760
 141              		.cfi_endproc
 142              	.LFE1:
 143              		.size	CySysClkWcoSetLowPowerMode, .-CySysClkWcoSetLowPowerMode
 144              		.data
 145              		.align	1
 146              		.type	defaultIloTrimRegValue, %object
 147              		.size	defaultIloTrimRegValue, 2
 148              	defaultIloTrimRegValue:
 149 0000 F000     		.short	240
 150              		.bss
 151              		.align	2
 152              	lfclkPosedgeWdtCounter0Enabled:
 153 0000 00000000 		.space	4
 154              		.align	2
 155              	lfclkPosedgeWdtCounter0Mode:
 156 0004 00000000 		.space	4
 157              		.align	2
ARM GAS  C:\Users\akita\AppData\Local\Temp\ccTFmJyh.s 			page 16


 158              	disableServicedIsr:
 159 0008 00000000 		.space	4
 160              		.data
 161 0002 0000     		.align	2
 162              		.type	wdtIsrMask, %object
 163              		.size	wdtIsrMask, 4
 164              	wdtIsrMask:
 165 0004 04040400 		.word	263172
 166              		.section	.rodata
 167              		.align	2
 168              		.type	counterIntMaskTbl, %object
 169              		.size	counterIntMaskTbl, 12
 170              	counterIntMaskTbl:
 171 0000 04000000 		.word	4
 172 0004 00040000 		.word	1024
 173 0008 00000400 		.word	262144
 174              		.bss
 175              		.align	2
 176              	cySysWdtCallback:
 177 000c 00000000 		.space	12
 177      00000000 
 177      00000000 
 178              		.section	.text.CySysClkIloStart,"ax",%progbits
 179              		.align	2
 180              		.global	CySysClkIloStart
 181              		.code	16
 182              		.thumb_func
 183              		.type	CySysClkIloStart, %function
 184              	CySysClkIloStart:
 185              	.LFB2:
 186              		.file 2 "Generated_Source\\PSoC4\\CyLFClk.c"
   1:Generated_Source\PSoC4/CyLFClk.c **** /***************************************************************************//**
   2:Generated_Source\PSoC4/CyLFClk.c **** * \file .c
   3:Generated_Source\PSoC4/CyLFClk.c **** * \version 1.10
   4:Generated_Source\PSoC4/CyLFClk.c **** *
   5:Generated_Source\PSoC4/CyLFClk.c **** * \brief
   6:Generated_Source\PSoC4/CyLFClk.c **** *  This file provides the source code for configuring watchdog timers WDTs, 
   7:Generated_Source\PSoC4/CyLFClk.c **** *  low frequency clocks (LFCLK) and the Real-time Clock (RTC) component in
   8:Generated_Source\PSoC4/CyLFClk.c **** *  PSoC Creator for the PSoC 4 families.
   9:Generated_Source\PSoC4/CyLFClk.c **** *
  10:Generated_Source\PSoC4/CyLFClk.c **** ********************************************************************************
  11:Generated_Source\PSoC4/CyLFClk.c **** * \copyright
  12:Generated_Source\PSoC4/CyLFClk.c **** * Copyright 2008-2016, Cypress Semiconductor Corporation.  All rights reserved.
  13:Generated_Source\PSoC4/CyLFClk.c **** * You may use this file only in accordance with the license, terms, conditions,
  14:Generated_Source\PSoC4/CyLFClk.c **** * disclaimers, and limitations in the end user license agreement accompanying
  15:Generated_Source\PSoC4/CyLFClk.c **** * the software package with which this file was provided.
  16:Generated_Source\PSoC4/CyLFClk.c **** *******************************************************************************/
  17:Generated_Source\PSoC4/CyLFClk.c **** 
  18:Generated_Source\PSoC4/CyLFClk.c **** 
  19:Generated_Source\PSoC4/CyLFClk.c **** #include "CyLFClk.h"
  20:Generated_Source\PSoC4/CyLFClk.c **** #include "CyLib.h"
  21:Generated_Source\PSoC4/CyLFClk.c **** 
  22:Generated_Source\PSoC4/CyLFClk.c **** #if (CY_IP_WCO && CY_IP_SRSSV2)
  23:Generated_Source\PSoC4/CyLFClk.c ****     static uint32 CySysClkGetLfclkSource(void);
  24:Generated_Source\PSoC4/CyLFClk.c **** #endif /* (CY_IP_WCO && CY_IP_SRSSV2) */
  25:Generated_Source\PSoC4/CyLFClk.c **** 
  26:Generated_Source\PSoC4/CyLFClk.c **** 
ARM GAS  C:\Users\akita\AppData\Local\Temp\ccTFmJyh.s 			page 17


  27:Generated_Source\PSoC4/CyLFClk.c **** #if(CY_IP_SRSSV2 && (!(CY_PSOC4_4100 || CY_PSOC4_4200)))
  28:Generated_Source\PSoC4/CyLFClk.c ****     /* Default Ilo Trim Register value for ILO trimming*/
  29:Generated_Source\PSoC4/CyLFClk.c ****     static volatile uint16 defaultIloTrimRegValue = CY_SYS_CLK_ILO_TRIM_DEFAULT_VALUE;
  30:Generated_Source\PSoC4/CyLFClk.c **** #endif /* (CY_IP_SRSSV2 && (!(CY_PSOC4_4100 || CY_PSOC4_4200))) */
  31:Generated_Source\PSoC4/CyLFClk.c **** 
  32:Generated_Source\PSoC4/CyLFClk.c **** #if(CY_IP_SRSSV2)
  33:Generated_Source\PSoC4/CyLFClk.c ****     /* CySysClkLfclkPosedgeCatch() / CySysClkLfclkPosedgeRestore() */
  34:Generated_Source\PSoC4/CyLFClk.c ****     static uint32 lfclkPosedgeWdtCounter0Enabled = 0u;
  35:Generated_Source\PSoC4/CyLFClk.c ****     static uint32 lfclkPosedgeWdtCounter0Mode    = CY_SYS_WDT_MODE_NONE;
  36:Generated_Source\PSoC4/CyLFClk.c **** 
  37:Generated_Source\PSoC4/CyLFClk.c ****     static volatile uint32 disableServicedIsr = 0uL;
  38:Generated_Source\PSoC4/CyLFClk.c ****     static volatile uint32 wdtIsrMask = CY_SYS_WDT_COUNTER0_INT |\
  39:Generated_Source\PSoC4/CyLFClk.c ****                                         CY_SYS_WDT_COUNTER1_INT |\
  40:Generated_Source\PSoC4/CyLFClk.c ****                                         CY_SYS_WDT_COUNTER2_INT;
  41:Generated_Source\PSoC4/CyLFClk.c **** 
  42:Generated_Source\PSoC4/CyLFClk.c ****     static const uint32 counterIntMaskTbl[CY_WDT_NUM_OF_WDT] = {CY_SYS_WDT_COUNTER0_INT,
  43:Generated_Source\PSoC4/CyLFClk.c ****                                                                 CY_SYS_WDT_COUNTER1_INT,
  44:Generated_Source\PSoC4/CyLFClk.c ****                                                                 CY_SYS_WDT_COUNTER2_INT};
  45:Generated_Source\PSoC4/CyLFClk.c **** 
  46:Generated_Source\PSoC4/CyLFClk.c ****     static void CySysClkLfclkPosedgeCatch(void);
  47:Generated_Source\PSoC4/CyLFClk.c ****     static void CySysClkLfclkPosedgeRestore(void);
  48:Generated_Source\PSoC4/CyLFClk.c **** 
  49:Generated_Source\PSoC4/CyLFClk.c ****     static uint32 CySysWdtLocked(void);
  50:Generated_Source\PSoC4/CyLFClk.c ****     static uint32 CySysClkIloEnabled(void);
  51:Generated_Source\PSoC4/CyLFClk.c **** #endif /* (CY_IP_SRSSV2) */
  52:Generated_Source\PSoC4/CyLFClk.c **** 
  53:Generated_Source\PSoC4/CyLFClk.c **** #if (CY_IP_SRSSLT && CY_IP_WCO && CY_IP_WCO_WDT_EN)
  54:Generated_Source\PSoC4/CyLFClk.c ****     static uint32 CySysClkGetTimerSource(void);
  55:Generated_Source\PSoC4/CyLFClk.c ****     static volatile uint32 disableTimerServicedIsr = 0uL;
  56:Generated_Source\PSoC4/CyLFClk.c ****     static volatile uint32 timerIsrMask = CY_SYS_TIMER0_INT |\
  57:Generated_Source\PSoC4/CyLFClk.c ****                                           CY_SYS_TIMER1_INT |\
  58:Generated_Source\PSoC4/CyLFClk.c ****                                           CY_SYS_TIMER2_INT;
  59:Generated_Source\PSoC4/CyLFClk.c **** 
  60:Generated_Source\PSoC4/CyLFClk.c ****     static const uint32 counterTimerIntMaskTbl[CY_SYS_NUM_OF_TIMERS] = {CY_SYS_TIMER0_INT,
  61:Generated_Source\PSoC4/CyLFClk.c ****                                                                         CY_SYS_TIMER1_INT,
  62:Generated_Source\PSoC4/CyLFClk.c ****                                                                         CY_SYS_TIMER2_INT};
  63:Generated_Source\PSoC4/CyLFClk.c **** 
  64:Generated_Source\PSoC4/CyLFClk.c ****     static cyTimerCallback cySysTimerCallback[CY_SYS_NUM_OF_TIMERS] = {(void *)0, (void *)0, (void 
  65:Generated_Source\PSoC4/CyLFClk.c **** #endif /* (CY_IP_SRSSLT && CY_IP_WCO && CY_IP_WCO_DWT_EN) */
  66:Generated_Source\PSoC4/CyLFClk.c **** 
  67:Generated_Source\PSoC4/CyLFClk.c **** #if(CY_IP_SRSSV2)
  68:Generated_Source\PSoC4/CyLFClk.c ****     static cyWdtCallback cySysWdtCallback[CY_WDT_NUM_OF_WDT] = {(void *)0, (void *)0, (void *)0};
  69:Generated_Source\PSoC4/CyLFClk.c **** #else
  70:Generated_Source\PSoC4/CyLFClk.c ****     static cyWdtCallback cySysWdtCallback = (void *)0;
  71:Generated_Source\PSoC4/CyLFClk.c **** #endif /* (CY_IP_SRSSV2) */
  72:Generated_Source\PSoC4/CyLFClk.c **** 
  73:Generated_Source\PSoC4/CyLFClk.c **** 
  74:Generated_Source\PSoC4/CyLFClk.c **** /*******************************************************************************
  75:Generated_Source\PSoC4/CyLFClk.c **** * Function Name: CySysClkIloStart
  76:Generated_Source\PSoC4/CyLFClk.c **** ****************************************************************************//**
  77:Generated_Source\PSoC4/CyLFClk.c **** * \brief
  78:Generated_Source\PSoC4/CyLFClk.c **** *  Enables ILO.
  79:Generated_Source\PSoC4/CyLFClk.c **** *
  80:Generated_Source\PSoC4/CyLFClk.c **** *  Refer to the device datasheet for the ILO startup time.
  81:Generated_Source\PSoC4/CyLFClk.c **** *
  82:Generated_Source\PSoC4/CyLFClk.c **** *******************************************************************************/
  83:Generated_Source\PSoC4/CyLFClk.c **** void CySysClkIloStart(void)
ARM GAS  C:\Users\akita\AppData\Local\Temp\ccTFmJyh.s 			page 18


  84:Generated_Source\PSoC4/CyLFClk.c **** {
 187              		.loc 2 84 0
 188              		.cfi_startproc
 189 0000 80B5     		push	{r7, lr}
 190              		.cfi_def_cfa_offset 8
 191              		.cfi_offset 7, -8
 192              		.cfi_offset 14, -4
 193 0002 00AF     		add	r7, sp, #0
 194              		.cfi_def_cfa_register 7
  85:Generated_Source\PSoC4/CyLFClk.c ****     CY_SYS_CLK_ILO_CONFIG_REG |= CY_SYS_CLK_ILO_CONFIG_ENABLE;
 195              		.loc 2 85 0
 196 0004 044B     		ldr	r3, .L8
 197 0006 044A     		ldr	r2, .L8
 198 0008 1268     		ldr	r2, [r2]
 199 000a 8021     		mov	r1, #128
 200 000c 0906     		lsl	r1, r1, #24
 201 000e 0A43     		orr	r2, r1
 202 0010 1A60     		str	r2, [r3]
  86:Generated_Source\PSoC4/CyLFClk.c **** }
 203              		.loc 2 86 0
 204 0012 BD46     		mov	sp, r7
 205              		@ sp needed
 206 0014 80BD     		pop	{r7, pc}
 207              	.L9:
 208 0016 C046     		.align	2
 209              	.L8:
 210 0018 04010B40 		.word	1074462980
 211              		.cfi_endproc
 212              	.LFE2:
 213              		.size	CySysClkIloStart, .-CySysClkIloStart
 214              		.section	.text.CySysClkIloStop,"ax",%progbits
 215              		.align	2
 216              		.global	CySysClkIloStop
 217              		.code	16
 218              		.thumb_func
 219              		.type	CySysClkIloStop, %function
 220              	CySysClkIloStop:
 221              	.LFB3:
  87:Generated_Source\PSoC4/CyLFClk.c **** 
  88:Generated_Source\PSoC4/CyLFClk.c **** 
  89:Generated_Source\PSoC4/CyLFClk.c **** /*******************************************************************************
  90:Generated_Source\PSoC4/CyLFClk.c **** * Function Name: CySysClkIloStop
  91:Generated_Source\PSoC4/CyLFClk.c **** ****************************************************************************//**
  92:Generated_Source\PSoC4/CyLFClk.c **** * \brief
  93:Generated_Source\PSoC4/CyLFClk.c **** *  Disables the ILO.
  94:Generated_Source\PSoC4/CyLFClk.c **** *
  95:Generated_Source\PSoC4/CyLFClk.c **** *  This function has no effect if WDT is locked (CySysWdtLock() is
  96:Generated_Source\PSoC4/CyLFClk.c **** *  called). Call CySysWdtUnlock() to unlock WDT and stop ILO.
  97:Generated_Source\PSoC4/CyLFClk.c **** *
  98:Generated_Source\PSoC4/CyLFClk.c **** *  PSoC 4100 / PSoC 4200: Note that ILO is required for WDT's operation.
  99:Generated_Source\PSoC4/CyLFClk.c **** *
 100:Generated_Source\PSoC4/CyLFClk.c **** *  PSoC 4100 BLE / PSoC 4200 BLE / PSoC 4200L / PSoC 4100M / 
 101:Generated_Source\PSoC4/CyLFClk.c **** *  PSoC 4200M:
 102:Generated_Source\PSoC4/CyLFClk.c **** *  Stopping ILO affects the peripheral clocked by LFCLK, if
 103:Generated_Source\PSoC4/CyLFClk.c **** *  LFCLK is configured to be sourced by ILO.
 104:Generated_Source\PSoC4/CyLFClk.c **** *
 105:Generated_Source\PSoC4/CyLFClk.c **** *  If the ILO is disabled, all blocks run by ILO will stop functioning.
ARM GAS  C:\Users\akita\AppData\Local\Temp\ccTFmJyh.s 			page 19


 106:Generated_Source\PSoC4/CyLFClk.c **** *
 107:Generated_Source\PSoC4/CyLFClk.c **** *******************************************************************************/
 108:Generated_Source\PSoC4/CyLFClk.c **** void CySysClkIloStop(void)
 109:Generated_Source\PSoC4/CyLFClk.c **** {
 222              		.loc 2 109 0
 223              		.cfi_startproc
 224 0000 90B5     		push	{r4, r7, lr}
 225              		.cfi_def_cfa_offset 12
 226              		.cfi_offset 4, -12
 227              		.cfi_offset 7, -8
 228              		.cfi_offset 14, -4
 229 0002 83B0     		sub	sp, sp, #12
 230              		.cfi_def_cfa_offset 24
 231 0004 00AF     		add	r7, sp, #0
 232              		.cfi_def_cfa_register 7
 110:Generated_Source\PSoC4/CyLFClk.c ****     #if(CY_IP_SRSSV2)
 111:Generated_Source\PSoC4/CyLFClk.c ****         uint8  interruptState;
 112:Generated_Source\PSoC4/CyLFClk.c **** 
 113:Generated_Source\PSoC4/CyLFClk.c ****         /* Do nothing if WDT is locked or ILO is disabled */
 114:Generated_Source\PSoC4/CyLFClk.c ****         if (0u == CySysWdtLocked())
 233              		.loc 2 114 0
 234 0006 FFF7FEFF 		bl	CySysWdtLocked
 235 000a 031E     		sub	r3, r0, #0
 236 000c 22D1     		bne	.L10
 115:Generated_Source\PSoC4/CyLFClk.c ****         {
 116:Generated_Source\PSoC4/CyLFClk.c ****             if (0u != CySysClkIloEnabled())
 237              		.loc 2 116 0
 238 000e FFF7FEFF 		bl	CySysClkIloEnabled
 239 0012 031E     		sub	r3, r0, #0
 240 0014 1ED0     		beq	.L10
 117:Generated_Source\PSoC4/CyLFClk.c ****             {
 118:Generated_Source\PSoC4/CyLFClk.c **** 
 119:Generated_Source\PSoC4/CyLFClk.c ****             #if (CY_IP_WCO)
 120:Generated_Source\PSoC4/CyLFClk.c ****                 if (CY_SYS_CLK_LFCLK_SRC_ILO == CySysClkGetLfclkSource())
 241              		.loc 2 120 0
 242 0016 FFF7FEFF 		bl	CySysClkGetLfclkSource
 243 001a 031E     		sub	r3, r0, #0
 244 001c 14D1     		bne	.L12
 121:Generated_Source\PSoC4/CyLFClk.c ****                 {
 122:Generated_Source\PSoC4/CyLFClk.c ****             #endif /* (CY_IP_WCO) */
 123:Generated_Source\PSoC4/CyLFClk.c **** 
 124:Generated_Source\PSoC4/CyLFClk.c ****                 interruptState = CyEnterCriticalSection();
 245              		.loc 2 124 0
 246 001e FC1D     		add	r4, r7, #7
 247 0020 FFF7FEFF 		bl	CyEnterCriticalSection
 248 0024 031C     		mov	r3, r0
 249 0026 2370     		strb	r3, [r4]
 125:Generated_Source\PSoC4/CyLFClk.c ****                 CySysClkLfclkPosedgeCatch();
 250              		.loc 2 125 0
 251 0028 FFF7FEFF 		bl	CySysClkLfclkPosedgeCatch
 126:Generated_Source\PSoC4/CyLFClk.c ****                 CY_SYS_CLK_ILO_CONFIG_REG &= (uint32) ( ~(uint32)CY_SYS_CLK_ILO_CONFIG_ENABLE);
 252              		.loc 2 126 0
 253 002c 0B4B     		ldr	r3, .L13
 254 002e 0B4A     		ldr	r2, .L13
 255 0030 1268     		ldr	r2, [r2]
 256 0032 5200     		lsl	r2, r2, #1
 257 0034 5208     		lsr	r2, r2, #1
ARM GAS  C:\Users\akita\AppData\Local\Temp\ccTFmJyh.s 			page 20


 258 0036 1A60     		str	r2, [r3]
 127:Generated_Source\PSoC4/CyLFClk.c ****                 CySysClkLfclkPosedgeRestore();
 259              		.loc 2 127 0
 260 0038 FFF7FEFF 		bl	CySysClkLfclkPosedgeRestore
 128:Generated_Source\PSoC4/CyLFClk.c ****                 CyExitCriticalSection(interruptState);
 261              		.loc 2 128 0
 262 003c FB1D     		add	r3, r7, #7
 263 003e 1B78     		ldrb	r3, [r3]
 264 0040 181C     		mov	r0, r3
 265 0042 FFF7FEFF 		bl	CyExitCriticalSection
 266 0046 05E0     		b	.L10
 267              	.L12:
 129:Generated_Source\PSoC4/CyLFClk.c **** 
 130:Generated_Source\PSoC4/CyLFClk.c ****             #if (CY_IP_WCO)
 131:Generated_Source\PSoC4/CyLFClk.c ****                 }
 132:Generated_Source\PSoC4/CyLFClk.c ****                 else /* Safe to disable - shortened pulse does not impact peripheral */
 133:Generated_Source\PSoC4/CyLFClk.c ****                 {
 134:Generated_Source\PSoC4/CyLFClk.c ****                     CY_SYS_CLK_ILO_CONFIG_REG &= (uint32) ( ~(uint32)CY_SYS_CLK_ILO_CONFIG_ENABLE);
 268              		.loc 2 134 0
 269 0048 044B     		ldr	r3, .L13
 270 004a 044A     		ldr	r2, .L13
 271 004c 1268     		ldr	r2, [r2]
 272 004e 5200     		lsl	r2, r2, #1
 273 0050 5208     		lsr	r2, r2, #1
 274 0052 1A60     		str	r2, [r3]
 275              	.L10:
 135:Generated_Source\PSoC4/CyLFClk.c ****                 }
 136:Generated_Source\PSoC4/CyLFClk.c ****             #endif /* (CY_IP_WCO) */
 137:Generated_Source\PSoC4/CyLFClk.c **** 
 138:Generated_Source\PSoC4/CyLFClk.c ****             }
 139:Generated_Source\PSoC4/CyLFClk.c ****         }
 140:Generated_Source\PSoC4/CyLFClk.c ****     #else
 141:Generated_Source\PSoC4/CyLFClk.c ****         CY_SYS_CLK_ILO_CONFIG_REG &= ( uint32 ) ( ~( uint32 )CY_SYS_CLK_ILO_CONFIG_ENABLE);
 142:Generated_Source\PSoC4/CyLFClk.c ****     #endif /* (CY_IP_SRSSV2) */
 143:Generated_Source\PSoC4/CyLFClk.c **** }
 276              		.loc 2 143 0
 277 0054 BD46     		mov	sp, r7
 278 0056 03B0     		add	sp, sp, #12
 279              		@ sp needed
 280 0058 90BD     		pop	{r4, r7, pc}
 281              	.L14:
 282 005a C046     		.align	2
 283              	.L13:
 284 005c 04010B40 		.word	1074462980
 285              		.cfi_endproc
 286              	.LFE3:
 287              		.size	CySysClkIloStop, .-CySysClkIloStop
 288              		.section	.text.CySysClkIloStartMeasurement,"ax",%progbits
 289              		.align	2
 290              		.global	CySysClkIloStartMeasurement
 291              		.code	16
 292              		.thumb_func
 293              		.type	CySysClkIloStartMeasurement, %function
 294              	CySysClkIloStartMeasurement:
 295              	.LFB4:
 144:Generated_Source\PSoC4/CyLFClk.c **** 
 145:Generated_Source\PSoC4/CyLFClk.c **** 
ARM GAS  C:\Users\akita\AppData\Local\Temp\ccTFmJyh.s 			page 21


 146:Generated_Source\PSoC4/CyLFClk.c **** /******************************************************************************
 147:Generated_Source\PSoC4/CyLFClk.c **** * Function Name: CySysClkIloStartMeasurement
 148:Generated_Source\PSoC4/CyLFClk.c **** ***************************************************************************//**
 149:Generated_Source\PSoC4/CyLFClk.c **** * \brief
 150:Generated_Source\PSoC4/CyLFClk.c **** * Starts the ILO accuracy measurement.
 151:Generated_Source\PSoC4/CyLFClk.c **** *
 152:Generated_Source\PSoC4/CyLFClk.c **** * This function is non-blocking and needs to be called before using the 
 153:Generated_Source\PSoC4/CyLFClk.c **** * CySysClkIloTrim() and CySysClkIloCompensate() API.
 154:Generated_Source\PSoC4/CyLFClk.c **** *
 155:Generated_Source\PSoC4/CyLFClk.c **** * This API configures measurement counters to be sourced by SysClk (Counter 1)
 156:Generated_Source\PSoC4/CyLFClk.c **** * and ILO (Counter 2). 
 157:Generated_Source\PSoC4/CyLFClk.c **** *
 158:Generated_Source\PSoC4/CyLFClk.c **** * \note SysClk should be sourced by IMO. Otherwise CySysClkIloTrim() and 
 159:Generated_Source\PSoC4/CyLFClk.c **** * CySysClkIloCompensate() API can give incorrect results.
 160:Generated_Source\PSoC4/CyLFClk.c **** *
 161:Generated_Source\PSoC4/CyLFClk.c **** * In addition, this API stores the factory ILO trim settings on the first call 
 162:Generated_Source\PSoC4/CyLFClk.c **** * after reset. This stored factory setting is used by the 
 163:Generated_Source\PSoC4/CyLFClk.c **** * CySysClkIloRestoreFactoryTrim() API to restore the ILO factory trim. 
 164:Generated_Source\PSoC4/CyLFClk.c **** * Hence, it is important to call this API before restoring the ILO 
 165:Generated_Source\PSoC4/CyLFClk.c **** * factory trim settings.
 166:Generated_Source\PSoC4/CyLFClk.c **** *
 167:Generated_Source\PSoC4/CyLFClk.c **** ******************************************************************************/
 168:Generated_Source\PSoC4/CyLFClk.c **** void CySysClkIloStartMeasurement(void)
 169:Generated_Source\PSoC4/CyLFClk.c **** {
 296              		.loc 2 169 0
 297              		.cfi_startproc
 298 0000 80B5     		push	{r7, lr}
 299              		.cfi_def_cfa_offset 8
 300              		.cfi_offset 7, -8
 301              		.cfi_offset 14, -4
 302 0002 00AF     		add	r7, sp, #0
 303              		.cfi_def_cfa_register 7
 170:Generated_Source\PSoC4/CyLFClk.c **** #if(CY_IP_SRSSV2 && (!(CY_PSOC4_4100 || CY_PSOC4_4200)))
 171:Generated_Source\PSoC4/CyLFClk.c ****     static uint8 iloTrimTrig = 0u;
 172:Generated_Source\PSoC4/CyLFClk.c **** 
 173:Generated_Source\PSoC4/CyLFClk.c ****     /* Write default ILO trim value while ILO starting ( Cypress ID 225244 )*/
 174:Generated_Source\PSoC4/CyLFClk.c ****     if (0u == iloTrimTrig)
 304              		.loc 2 174 0
 305 0004 114B     		ldr	r3, .L17
 306 0006 1B78     		ldrb	r3, [r3]
 307 0008 002B     		cmp	r3, #0
 308 000a 0BD1     		bne	.L16
 175:Generated_Source\PSoC4/CyLFClk.c ****     {
 176:Generated_Source\PSoC4/CyLFClk.c ****         defaultIloTrimRegValue = ((uint8)(CY_SYS_CLK_ILO_TRIM_REG & CY_SYS_CLK_ILO_TRIM_MASK));
 309              		.loc 2 176 0
 310 000c 104B     		ldr	r3, .L17+4
 311 000e 1B68     		ldr	r3, [r3]
 312 0010 DBB2     		uxtb	r3, r3
 313 0012 9BB2     		uxth	r3, r3
 314 0014 0F22     		mov	r2, #15
 315 0016 1340     		and	r3, r2
 316 0018 9AB2     		uxth	r2, r3
 317 001a 0E4B     		ldr	r3, .L17+8
 318 001c 1A80     		strh	r2, [r3]
 177:Generated_Source\PSoC4/CyLFClk.c ****         iloTrimTrig = 1u;
 319              		.loc 2 177 0
 320 001e 0B4B     		ldr	r3, .L17
ARM GAS  C:\Users\akita\AppData\Local\Temp\ccTFmJyh.s 			page 22


 321 0020 0122     		mov	r2, #1
 322 0022 1A70     		strb	r2, [r3]
 323              	.L16:
 178:Generated_Source\PSoC4/CyLFClk.c ****     }
 179:Generated_Source\PSoC4/CyLFClk.c **** #endif /* (CY_IP_SRSSV2 && (!(CY_PSOC4_4100 || CY_PSOC4_4200))) */
 180:Generated_Source\PSoC4/CyLFClk.c **** 
 181:Generated_Source\PSoC4/CyLFClk.c ****     /* Configure measurement counters to source by SysClk (Counter 1) and ILO (Counter 2)*/
 182:Generated_Source\PSoC4/CyLFClk.c ****     CY_SYS_CLK_DFT_REG = (CY_SYS_CLK_DFT_REG & (uint32) ~CY_SYS_CLK_DFT_SELECT_DEFAULT_MASK) |
 324              		.loc 2 182 0
 325 0024 0C4B     		ldr	r3, .L17+12
 326 0026 0C4A     		ldr	r2, .L17+12
 327 0028 1268     		ldr	r2, [r2]
 328 002a 0C49     		ldr	r1, .L17+16
 329 002c 0A40     		and	r2, r1
 330 002e 8021     		mov	r1, #128
 331 0030 4900     		lsl	r1, r1, #1
 332 0032 0A43     		orr	r2, r1
 333 0034 1A60     		str	r2, [r3]
 183:Generated_Source\PSoC4/CyLFClk.c ****                             CY_SYS_CLK_SEL_ILO_DFT_SOURCE; 
 184:Generated_Source\PSoC4/CyLFClk.c **** 
 185:Generated_Source\PSoC4/CyLFClk.c ****     CY_SYS_TST_DDFT_CTRL_REG = (CY_SYS_TST_DDFT_CTRL_REG & (uint32) ~ CY_SYS_TST_DDFT_CTRL_REG_DEFA
 334              		.loc 2 185 0
 335 0036 0A4B     		ldr	r3, .L17+20
 336 0038 094A     		ldr	r2, .L17+20
 337 003a 1268     		ldr	r2, [r2]
 338 003c 0949     		ldr	r1, .L17+24
 339 003e 0A40     		and	r2, r1
 340 0040 0949     		ldr	r1, .L17+28
 341 0042 0A43     		orr	r2, r1
 342 0044 1A60     		str	r2, [r3]
 186:Generated_Source\PSoC4/CyLFClk.c ****                             CY_SYS_TST_DDFT_CTRL_REG_SEL2_CLK1;
 187:Generated_Source\PSoC4/CyLFClk.c **** }
 343              		.loc 2 187 0
 344 0046 BD46     		mov	sp, r7
 345              		@ sp needed
 346 0048 80BD     		pop	{r7, pc}
 347              	.L18:
 348 004a C046     		.align	2
 349              	.L17:
 350 004c 18000000 		.word	iloTrimTrig.4745
 351 0050 24FF0B40 		.word	1074528036
 352 0054 00000000 		.word	defaultIloTrimRegValue
 353 0058 10010B40 		.word	1074462992
 354 005c FFF0FFFF 		.word	-3841
 355 0060 08000340 		.word	1073938440
 356 0064 C0C0FFFF 		.word	-16192
 357 0068 0A0B0000 		.word	2826
 358              		.cfi_endproc
 359              	.LFE4:
 360              		.size	CySysClkIloStartMeasurement, .-CySysClkIloStartMeasurement
 361              		.section	.text.CySysClkIloStopMeasurement,"ax",%progbits
 362              		.align	2
 363              		.global	CySysClkIloStopMeasurement
 364              		.code	16
 365              		.thumb_func
 366              		.type	CySysClkIloStopMeasurement, %function
 367              	CySysClkIloStopMeasurement:
ARM GAS  C:\Users\akita\AppData\Local\Temp\ccTFmJyh.s 			page 23


 368              	.LFB5:
 188:Generated_Source\PSoC4/CyLFClk.c **** 
 189:Generated_Source\PSoC4/CyLFClk.c **** 
 190:Generated_Source\PSoC4/CyLFClk.c **** /******************************************************************************
 191:Generated_Source\PSoC4/CyLFClk.c **** * Function Name: CySysClkIloStopMeasurement
 192:Generated_Source\PSoC4/CyLFClk.c **** ***************************************************************************//**
 193:Generated_Source\PSoC4/CyLFClk.c **** * \brief
 194:Generated_Source\PSoC4/CyLFClk.c **** * Stops the ILO accuracy measurement.
 195:Generated_Source\PSoC4/CyLFClk.c **** *
 196:Generated_Source\PSoC4/CyLFClk.c **** * Calling this function immediately stops the the ILO frequency measurement.
 197:Generated_Source\PSoC4/CyLFClk.c **** * This function should be called before placing the device to deepsleep, if 
 198:Generated_Source\PSoC4/CyLFClk.c **** * CySysClkIloStartMeasurement() API was called before. 
 199:Generated_Source\PSoC4/CyLFClk.c **** *
 200:Generated_Source\PSoC4/CyLFClk.c **** ******************************************************************************/
 201:Generated_Source\PSoC4/CyLFClk.c **** void CySysClkIloStopMeasurement(void)
 202:Generated_Source\PSoC4/CyLFClk.c **** {
 369              		.loc 2 202 0
 370              		.cfi_startproc
 371 0000 80B5     		push	{r7, lr}
 372              		.cfi_def_cfa_offset 8
 373              		.cfi_offset 7, -8
 374              		.cfi_offset 14, -4
 375 0002 00AF     		add	r7, sp, #0
 376              		.cfi_def_cfa_register 7
 203:Generated_Source\PSoC4/CyLFClk.c ****     /* Set default configurations in 11...8 DFT register bits to zero */
 204:Generated_Source\PSoC4/CyLFClk.c ****     CY_SYS_CLK_DFT_REG &= ~CY_SYS_CLK_DFT_SELECT_DEFAULT_MASK;
 377              		.loc 2 204 0
 378 0004 034B     		ldr	r3, .L20
 379 0006 034A     		ldr	r2, .L20
 380 0008 1268     		ldr	r2, [r2]
 381 000a 0349     		ldr	r1, .L20+4
 382 000c 0A40     		and	r2, r1
 383 000e 1A60     		str	r2, [r3]
 205:Generated_Source\PSoC4/CyLFClk.c ****     #if(CY_IP_SRSSLT)
 206:Generated_Source\PSoC4/CyLFClk.c ****         CY_SYS_TST_DDFT_CTRL_REG &= ((uint32) CY_SYS_TST_DDFT_CTRL_REG_DEFAULT_MASK);
 207:Generated_Source\PSoC4/CyLFClk.c ****     #endif /* (CY_IP_SRSSLT) */
 208:Generated_Source\PSoC4/CyLFClk.c **** }
 384              		.loc 2 208 0
 385 0010 BD46     		mov	sp, r7
 386              		@ sp needed
 387 0012 80BD     		pop	{r7, pc}
 388              	.L21:
 389              		.align	2
 390              	.L20:
 391 0014 10010B40 		.word	1074462992
 392 0018 FFF0FFFF 		.word	-3841
 393              		.cfi_endproc
 394              	.LFE5:
 395              		.size	CySysClkIloStopMeasurement, .-CySysClkIloStopMeasurement
 396              		.global	__aeabi_uidiv
 397              		.section	.text.CySysClkIloCompensate,"ax",%progbits
 398              		.align	2
 399              		.global	CySysClkIloCompensate
 400              		.code	16
 401              		.thumb_func
 402              		.type	CySysClkIloCompensate, %function
 403              	CySysClkIloCompensate:
ARM GAS  C:\Users\akita\AppData\Local\Temp\ccTFmJyh.s 			page 24


 404              	.LFB6:
 209:Generated_Source\PSoC4/CyLFClk.c **** 
 210:Generated_Source\PSoC4/CyLFClk.c **** 
 211:Generated_Source\PSoC4/CyLFClk.c **** /******************************************************************************
 212:Generated_Source\PSoC4/CyLFClk.c **** * Function Name: CySysClkIloCompensate
 213:Generated_Source\PSoC4/CyLFClk.c **** ***************************************************************************//**
 214:Generated_Source\PSoC4/CyLFClk.c **** * \brief
 215:Generated_Source\PSoC4/CyLFClk.c **** * This API measures the current ILO accuracy.
 216:Generated_Source\PSoC4/CyLFClk.c **** *
 217:Generated_Source\PSoC4/CyLFClk.c **** * Basing on the measured frequency the required number of ILO cycles for a 
 218:Generated_Source\PSoC4/CyLFClk.c **** * given delay (in microseconds) is obtained. The desired delay that needs to 
 219:Generated_Source\PSoC4/CyLFClk.c **** * be compensated is passed through the desiredDelay parameter. The compensated 
 220:Generated_Source\PSoC4/CyLFClk.c **** * cycle count is returned through the compesatedCycles pointer.
 221:Generated_Source\PSoC4/CyLFClk.c **** * The compensated ILO cycles can then be used to define the WDT period value, 
 222:Generated_Source\PSoC4/CyLFClk.c **** * effectively compensating for the ILO inaccuracy and allowing a more 
 223:Generated_Source\PSoC4/CyLFClk.c **** * accurate WDT interrupt generation.
 224:Generated_Source\PSoC4/CyLFClk.c **** *
 225:Generated_Source\PSoC4/CyLFClk.c **** * CySysClkIloStartMeasurement() API should be called prior to calling this API. 
 226:Generated_Source\PSoC4/CyLFClk.c **** *
 227:Generated_Source\PSoC4/CyLFClk.c **** * \note SysClk should be sourced by IMO. Otherwise CySysClkIloTrim() and 
 228:Generated_Source\PSoC4/CyLFClk.c **** * CySysClkIloCompensate() API can give incorrect results.
 229:Generated_Source\PSoC4/CyLFClk.c **** *
 230:Generated_Source\PSoC4/CyLFClk.c **** * \note If the System clock frequency is changed in runtime, the CyDelayFreq() 
 231:Generated_Source\PSoC4/CyLFClk.c **** * with the appropriate parameter (Frequency of bus clock in Hertz) should be 
 232:Generated_Source\PSoC4/CyLFClk.c **** * called before calling a next CySysClkIloCompensate().
 233:Generated_Source\PSoC4/CyLFClk.c **** *
 234:Generated_Source\PSoC4/CyLFClk.c **** * \warning Do not enter deep sleep mode until the function returns CYRET_SUCCESS.
 235:Generated_Source\PSoC4/CyLFClk.c **** *
 236:Generated_Source\PSoC4/CyLFClk.c **** * \param desiredDelay Required delay in microseconds.
 237:Generated_Source\PSoC4/CyLFClk.c **** *
 238:Generated_Source\PSoC4/CyLFClk.c **** * \param *compensatedCycles The pointer to the variable in which the required
 239:Generated_Source\PSoC4/CyLFClk.c **** * number of ILO cycles for the given delay will be returned.
 240:Generated_Source\PSoC4/CyLFClk.c **** *
 241:Generated_Source\PSoC4/CyLFClk.c **** * \details
 242:Generated_Source\PSoC4/CyLFClk.c **** * The value returned in *compensatedCycles pointer is not valid until the 
 243:Generated_Source\PSoC4/CyLFClk.c **** * function returns CYRET_SUCCESS.
 244:Generated_Source\PSoC4/CyLFClk.c **** *
 245:Generated_Source\PSoC4/CyLFClk.c **** * The desiredDelay parameter value should be in next range: <br>From 100 to 
 246:Generated_Source\PSoC4/CyLFClk.c **** * 2 000 000 microseconds for PSoC 4000 / PSoC 4000S / PSoC 4100S / PSoC Analog 
 247:Generated_Source\PSoC4/CyLFClk.c **** * Coprocessor devices.<br>From 100 to 4 000 000 000 microseconds for 
 248:Generated_Source\PSoC4/CyLFClk.c **** * PSoC 4100 / PSoC 4200 / PSoC 4100 BLE / PSoC 4200 BLE / PRoC BLE /
 249:Generated_Source\PSoC4/CyLFClk.c **** * PSoC 4200L / PSoC 4100M /PSoC 4200M devices.
 250:Generated_Source\PSoC4/CyLFClk.c **** *
 251:Generated_Source\PSoC4/CyLFClk.c **** * \return CYRET_SUCCESS - The compensation process is complete and the 
 252:Generated_Source\PSoC4/CyLFClk.c **** * compensated cycles value is returned in the compensatedCycles pointer.
 253:Generated_Source\PSoC4/CyLFClk.c **** *
 254:Generated_Source\PSoC4/CyLFClk.c **** * \return CYRET_STARTED - Indicates measurement is in progress. It is 
 255:Generated_Source\PSoC4/CyLFClk.c **** * strongly recommended to do not make pauses between API calling. The 
 256:Generated_Source\PSoC4/CyLFClk.c **** * function should be called repeatedly until the API returns CYRET_SUCCESS.
 257:Generated_Source\PSoC4/CyLFClk.c **** *
 258:Generated_Source\PSoC4/CyLFClk.c **** * \return CYRET_INVALID_STATE - Indicates that measurement not started. 
 259:Generated_Source\PSoC4/CyLFClk.c **** * The user should call CySysClkIloStartMeasurement() API before calling 
 260:Generated_Source\PSoC4/CyLFClk.c **** * this API.
 261:Generated_Source\PSoC4/CyLFClk.c **** *
 262:Generated_Source\PSoC4/CyLFClk.c **** * \note For a correct WDT or DeepSleep Timers functioning with ILO compensating 
 263:Generated_Source\PSoC4/CyLFClk.c **** * the CySysClkIloCompensate() should be called before WDT or DeepSleep Timers 
 264:Generated_Source\PSoC4/CyLFClk.c **** * enabling.
ARM GAS  C:\Users\akita\AppData\Local\Temp\ccTFmJyh.s 			page 25


 265:Generated_Source\PSoC4/CyLFClk.c **** *
 266:Generated_Source\PSoC4/CyLFClk.c **** *******************************************************************************/
 267:Generated_Source\PSoC4/CyLFClk.c **** cystatus CySysClkIloCompensate(uint32 desiredDelay , uint32* compensatedCycles)
 268:Generated_Source\PSoC4/CyLFClk.c **** {
 405              		.loc 2 268 0
 406              		.cfi_startproc
 407 0000 90B5     		push	{r4, r7, lr}
 408              		.cfi_def_cfa_offset 12
 409              		.cfi_offset 4, -12
 410              		.cfi_offset 7, -8
 411              		.cfi_offset 14, -4
 412 0002 87B0     		sub	sp, sp, #28
 413              		.cfi_def_cfa_offset 40
 414 0004 00AF     		add	r7, sp, #0
 415              		.cfi_def_cfa_register 7
 416 0006 7860     		str	r0, [r7, #4]
 417 0008 3960     		str	r1, [r7]
 269:Generated_Source\PSoC4/CyLFClk.c ****     uint32 iloCompensatedCycles;
 270:Generated_Source\PSoC4/CyLFClk.c ****     uint32 desiredDelayInCounts;
 271:Generated_Source\PSoC4/CyLFClk.c ****     static uint32 compensateRunningStatus = CY_SYS_CLK_TRIM_OR_COMP_FINISHED;
 272:Generated_Source\PSoC4/CyLFClk.c ****     uint32 checkStatus;
 273:Generated_Source\PSoC4/CyLFClk.c ****     cystatus returnStatus;
 274:Generated_Source\PSoC4/CyLFClk.c **** 
 275:Generated_Source\PSoC4/CyLFClk.c ****     checkStatus = (uint32) (CY_SYS_CLK_DFT_REG & (uint32) CY_SYS_TST_DDFT_CTRL_REG_DEFAULT_MASK);
 418              		.loc 2 275 0
 419 000a 484B     		ldr	r3, .L34
 420 000c 1B68     		ldr	r3, [r3]
 421 000e 484A     		ldr	r2, .L34+4
 422 0010 1340     		and	r3, r2
 423 0012 FB60     		str	r3, [r7, #12]
 276:Generated_Source\PSoC4/CyLFClk.c **** 
 277:Generated_Source\PSoC4/CyLFClk.c ****     /* Check if CySysStartMeasurement was called before */
 278:Generated_Source\PSoC4/CyLFClk.c ****     if((checkStatus == CY_SYS_CLK_SEL_ILO_DFT_SOURCE) && 
 424              		.loc 2 278 0
 425 0014 FA68     		ldr	r2, [r7, #12]
 426 0016 8023     		mov	r3, #128
 427 0018 5B00     		lsl	r3, r3, #1
 428 001a 9A42     		cmp	r2, r3
 429 001c 00D0     		beq	.LCB327
 430 001e 7DE0     		b	.L23	@long jump
 431              	.LCB327:
 279:Generated_Source\PSoC4/CyLFClk.c ****        (CY_SYS_TST_DDFT_CTRL_REG == CY_SYS_TST_DDFT_CTRL_REG_SEL2_CLK1) &&
 432              		.loc 2 279 0 discriminator 1
 433 0020 444B     		ldr	r3, .L34+8
 434 0022 1B68     		ldr	r3, [r3]
 278:Generated_Source\PSoC4/CyLFClk.c ****        (CY_SYS_TST_DDFT_CTRL_REG == CY_SYS_TST_DDFT_CTRL_REG_SEL2_CLK1) &&
 435              		.loc 2 278 0 discriminator 1
 436 0024 444A     		ldr	r2, .L34+12
 437 0026 9342     		cmp	r3, r2
 438 0028 00D0     		beq	.LCB332
 439 002a 77E0     		b	.L23	@long jump
 440              	.LCB332:
 441              		.loc 2 279 0
 442 002c 7B68     		ldr	r3, [r7, #4]
 443 002e 434A     		ldr	r2, .L34+16
 444 0030 9342     		cmp	r3, r2
 445 0032 00D9     		bls	.LCB336
ARM GAS  C:\Users\akita\AppData\Local\Temp\ccTFmJyh.s 			page 26


 446 0034 72E0     		b	.L23	@long jump
 447              	.LCB336:
 280:Generated_Source\PSoC4/CyLFClk.c ****        (CY_SYS_CLK_MAX_DELAY_US >= desiredDelay) &&
 448              		.loc 2 280 0
 449 0036 7B68     		ldr	r3, [r7, #4]
 450 0038 632B     		cmp	r3, #99
 451 003a 6FD9     		bls	.L23
 281:Generated_Source\PSoC4/CyLFClk.c ****        (CY_SYS_CLK_MIN_DELAY_US <= desiredDelay) &&
 452              		.loc 2 281 0
 453 003c 3B68     		ldr	r3, [r7]
 454 003e 002B     		cmp	r3, #0
 455 0040 6CD0     		beq	.L23
 282:Generated_Source\PSoC4/CyLFClk.c ****        (compensatedCycles !=  NULL))
 283:Generated_Source\PSoC4/CyLFClk.c ****     {
 284:Generated_Source\PSoC4/CyLFClk.c ****         if(CY_SYS_CLK_TRIM_OR_COMP_FINISHED != compensateRunningStatus)
 456              		.loc 2 284 0
 457 0042 3F4B     		ldr	r3, .L34+20
 458 0044 1B68     		ldr	r3, [r3]
 459 0046 002B     		cmp	r3, #0
 460 0048 5CD0     		beq	.L24
 285:Generated_Source\PSoC4/CyLFClk.c ****         {
 286:Generated_Source\PSoC4/CyLFClk.c ****             /* Wait until counter 1 stopped counting and after it calculate compensated cycles */
 287:Generated_Source\PSoC4/CyLFClk.c ****             if(0u != (CY_SYS_CNT_REG1_REG & CY_SYS_CLK_ILO_CALIBR_COMPLETE_MASK))
 461              		.loc 2 287 0
 462 004a 3E4B     		ldr	r3, .L34+24
 463 004c 1B68     		ldr	r3, [r3]
 464 004e 002B     		cmp	r3, #0
 465 0050 55DA     		bge	.L25
 288:Generated_Source\PSoC4/CyLFClk.c ****             {
 289:Generated_Source\PSoC4/CyLFClk.c ****                 if (0u != CY_SYS_CNT_REG2_REG)
 466              		.loc 2 289 0
 467 0052 3D4B     		ldr	r3, .L34+28
 468 0054 1B68     		ldr	r3, [r3]
 469 0056 002B     		cmp	r3, #0
 470 0058 4ED0     		beq	.L26
 290:Generated_Source\PSoC4/CyLFClk.c ****                 {
 291:Generated_Source\PSoC4/CyLFClk.c ****                     /* Calculate required number of ILO cycles for given delay */
 292:Generated_Source\PSoC4/CyLFClk.c ****                     #if(CY_IP_SRSSV2)
 293:Generated_Source\PSoC4/CyLFClk.c ****                         if (CY_SYS_CLK_DELAY_COUNTS_LIMIT < desiredDelay)
 471              		.loc 2 293 0
 472 005a 7B68     		ldr	r3, [r7, #4]
 473 005c 3B4A     		ldr	r2, .L34+32
 474 005e 9342     		cmp	r3, r2
 475 0060 1ED9     		bls	.L27
 294:Generated_Source\PSoC4/CyLFClk.c ****                         {
 295:Generated_Source\PSoC4/CyLFClk.c ****                             desiredDelayInCounts = (desiredDelay / CY_SYS_CLK_ILO_PERIOD);
 476              		.loc 2 295 0
 477 0062 7B68     		ldr	r3, [r7, #4]
 478 0064 181C     		mov	r0, r3
 479 0066 1F21     		mov	r1, #31
 480 0068 FFF7FEFF 		bl	__aeabi_uidiv
 481 006c 031C     		mov	r3, r0
 482 006e BB60     		str	r3, [r7, #8]
 296:Generated_Source\PSoC4/CyLFClk.c ****                             iloCompensatedCycles = 
 297:Generated_Source\PSoC4/CyLFClk.c ****                             (((CY_SYS_CNT_REG2_REG * cydelayFreqHz) / (cydelayFreqHz >> CY_SYS_CLK_
 483              		.loc 2 297 0
 484 0070 354B     		ldr	r3, .L34+28
ARM GAS  C:\Users\akita\AppData\Local\Temp\ccTFmJyh.s 			page 27


 485 0072 1A68     		ldr	r2, [r3]
 486 0074 364B     		ldr	r3, .L34+36
 487 0076 1B68     		ldr	r3, [r3]
 488 0078 5A43     		mul	r2, r3
 489 007a 354B     		ldr	r3, .L34+36
 490 007c 1B68     		ldr	r3, [r3]
 491 007e 9B0A     		lsr	r3, r3, #10
 492 0080 101C     		mov	r0, r2
 493 0082 191C     		mov	r1, r3
 494 0084 FFF7FEFF 		bl	__aeabi_uidiv
 495 0088 031C     		mov	r3, r0
 496 008a 5C09     		lsr	r4, r3, #5
 298:Generated_Source\PSoC4/CyLFClk.c ****                                 CY_SYS_CLK_ILO_FREQ_2MSB) * (desiredDelayInCounts / CY_SYS_CLK_ILO_
 497              		.loc 2 298 0
 498 008c BB68     		ldr	r3, [r7, #8]
 499 008e 181C     		mov	r0, r3
 500 0090 FA23     		mov	r3, #250
 501 0092 9900     		lsl	r1, r3, #2
 502 0094 FFF7FEFF 		bl	__aeabi_uidiv
 503 0098 031C     		mov	r3, r0
 296:Generated_Source\PSoC4/CyLFClk.c ****                             iloCompensatedCycles = 
 504              		.loc 2 296 0
 505 009a 6343     		mul	r3, r4
 506 009c 7B61     		str	r3, [r7, #20]
 507 009e 22E0     		b	.L28
 508              	.L27:
 299:Generated_Source\PSoC4/CyLFClk.c ****                         }
 300:Generated_Source\PSoC4/CyLFClk.c ****                         else
 301:Generated_Source\PSoC4/CyLFClk.c ****                         {
 302:Generated_Source\PSoC4/CyLFClk.c ****                             desiredDelayInCounts = ((desiredDelay * CY_SYS_CLK_COEF_PHUNDRED) + 
 509              		.loc 2 302 0
 510 00a0 7B68     		ldr	r3, [r7, #4]
 511 00a2 6422     		mov	r2, #100
 512 00a4 5343     		mul	r3, r2
 513 00a6 2B4A     		ldr	r2, .L34+40
 514 00a8 9446     		mov	ip, r2
 515 00aa 6344     		add	r3, r3, ip
 516 00ac 181C     		mov	r0, r3
 517 00ae 2A49     		ldr	r1, .L34+44
 518 00b0 FFF7FEFF 		bl	__aeabi_uidiv
 519 00b4 031C     		mov	r3, r0
 520 00b6 BB60     		str	r3, [r7, #8]
 303:Generated_Source\PSoC4/CyLFClk.c ****                                                      CY_SYS_CLK_HALF_OF_CLOCK) / CY_SYS_CLK_ILO_PER
 304:Generated_Source\PSoC4/CyLFClk.c **** 
 305:Generated_Source\PSoC4/CyLFClk.c ****                             iloCompensatedCycles = (((CY_SYS_CNT_REG2_REG * cydelayFreqHz) / 
 521              		.loc 2 305 0
 522 00b8 234B     		ldr	r3, .L34+28
 523 00ba 1A68     		ldr	r2, [r3]
 524 00bc 244B     		ldr	r3, .L34+36
 525 00be 1B68     		ldr	r3, [r3]
 526 00c0 5A43     		mul	r2, r3
 306:Generated_Source\PSoC4/CyLFClk.c ****                                                      (cydelayFreqHz >> CY_SYS_CLK_SYS_CLK_DEVIDER))
 527              		.loc 2 306 0
 528 00c2 234B     		ldr	r3, .L34+36
 529 00c4 1B68     		ldr	r3, [r3]
 530 00c6 9B0A     		lsr	r3, r3, #10
 305:Generated_Source\PSoC4/CyLFClk.c ****                                                      (cydelayFreqHz >> CY_SYS_CLK_SYS_CLK_DEVIDER))
ARM GAS  C:\Users\akita\AppData\Local\Temp\ccTFmJyh.s 			page 28


 531              		.loc 2 305 0
 532 00c8 101C     		mov	r0, r2
 533 00ca 191C     		mov	r1, r3
 534 00cc FFF7FEFF 		bl	__aeabi_uidiv
 535 00d0 031C     		mov	r3, r0
 536 00d2 1A1C     		mov	r2, r3
 537              		.loc 2 306 0
 538 00d4 BB68     		ldr	r3, [r7, #8]
 539 00d6 5343     		mul	r3, r2
 305:Generated_Source\PSoC4/CyLFClk.c ****                                                      (cydelayFreqHz >> CY_SYS_CLK_SYS_CLK_DEVIDER))
 540              		.loc 2 305 0
 541 00d8 181C     		mov	r0, r3
 542 00da FA23     		mov	r3, #250
 543 00dc D901     		lsl	r1, r3, #7
 544 00de FFF7FEFF 		bl	__aeabi_uidiv
 545 00e2 031C     		mov	r3, r0
 546 00e4 7B61     		str	r3, [r7, #20]
 547              	.L28:
 307:Generated_Source\PSoC4/CyLFClk.c ****                                                      desiredDelayInCounts) / CY_SYS_CLK_ILO_DESIRED
 308:Generated_Source\PSoC4/CyLFClk.c ****                         }
 309:Generated_Source\PSoC4/CyLFClk.c ****                     #else /* (CY_IP_SRSSLT) */
 310:Generated_Source\PSoC4/CyLFClk.c ****                         desiredDelayInCounts = ((desiredDelay * CY_SYS_CLK_COEF_PHUNDRED) + CY_SYS_
 311:Generated_Source\PSoC4/CyLFClk.c ****                                                                                            CY_SYS_C
 312:Generated_Source\PSoC4/CyLFClk.c ****                         if(CY_SYS_CLK_MAX_LITE_NUMBER < desiredDelayInCounts)
 313:Generated_Source\PSoC4/CyLFClk.c ****                         {
 314:Generated_Source\PSoC4/CyLFClk.c ****                             iloCompensatedCycles = (((CY_SYS_CNT_REG2_REG * cydelayFreqHz) / (cydel
 315:Generated_Source\PSoC4/CyLFClk.c ****                                                    CY_SYS_CLK_SYS_CLK_DEVIDER)) / CY_SYS_CLK_ILO_FR
 316:Generated_Source\PSoC4/CyLFClk.c ****                                                    (desiredDelayInCounts / CY_SYS_CLK_ILO_FREQ_3LSB
 317:Generated_Source\PSoC4/CyLFClk.c ****                         }
 318:Generated_Source\PSoC4/CyLFClk.c ****                         else
 319:Generated_Source\PSoC4/CyLFClk.c ****                         {
 320:Generated_Source\PSoC4/CyLFClk.c ****                             iloCompensatedCycles = (((CY_SYS_CNT_REG2_REG * cydelayFreqHz) / 
 321:Generated_Source\PSoC4/CyLFClk.c ****                                                      (cydelayFreqHz >> CY_SYS_CLK_SYS_CLK_DEVIDER))
 322:Generated_Source\PSoC4/CyLFClk.c ****                                                      desiredDelayInCounts) / CY_SYS_CLK_ILO_DESIRED
 323:Generated_Source\PSoC4/CyLFClk.c ****                         }
 324:Generated_Source\PSoC4/CyLFClk.c ****                     #endif /* (CY_IP_SRSSV2) */
 325:Generated_Source\PSoC4/CyLFClk.c **** 
 326:Generated_Source\PSoC4/CyLFClk.c ****                     *compensatedCycles = iloCompensatedCycles;
 548              		.loc 2 326 0
 549 00e6 3B68     		ldr	r3, [r7]
 550 00e8 7A69     		ldr	r2, [r7, #20]
 551 00ea 1A60     		str	r2, [r3]
 327:Generated_Source\PSoC4/CyLFClk.c ****                     compensateRunningStatus = CY_SYS_CLK_TRIM_OR_COMP_FINISHED;
 552              		.loc 2 327 0
 553 00ec 144B     		ldr	r3, .L34+20
 554 00ee 0022     		mov	r2, #0
 555 00f0 1A60     		str	r2, [r3]
 328:Generated_Source\PSoC4/CyLFClk.c ****                     returnStatus = CYRET_SUCCESS;
 556              		.loc 2 328 0
 557 00f2 0023     		mov	r3, #0
 558 00f4 3B61     		str	r3, [r7, #16]
 559 00f6 10E0     		b	.L31
 560              	.L26:
 329:Generated_Source\PSoC4/CyLFClk.c ****                 }
 330:Generated_Source\PSoC4/CyLFClk.c ****                 else
 331:Generated_Source\PSoC4/CyLFClk.c ****                 {
 332:Generated_Source\PSoC4/CyLFClk.c ****                     returnStatus  = CYRET_INVALID_STATE;
ARM GAS  C:\Users\akita\AppData\Local\Temp\ccTFmJyh.s 			page 29


 561              		.loc 2 332 0
 562 00f8 1123     		mov	r3, #17
 563 00fa 3B61     		str	r3, [r7, #16]
 564 00fc 0DE0     		b	.L31
 565              	.L25:
 333:Generated_Source\PSoC4/CyLFClk.c ****                 }
 334:Generated_Source\PSoC4/CyLFClk.c ****             }
 335:Generated_Source\PSoC4/CyLFClk.c ****             else
 336:Generated_Source\PSoC4/CyLFClk.c ****             {
 337:Generated_Source\PSoC4/CyLFClk.c ****                 returnStatus = CYRET_STARTED;
 566              		.loc 2 337 0
 567 00fe 0723     		mov	r3, #7
 568 0100 3B61     		str	r3, [r7, #16]
 284:Generated_Source\PSoC4/CyLFClk.c ****         {
 569              		.loc 2 284 0
 570 0102 0DE0     		b	.L32
 571              	.L24:
 338:Generated_Source\PSoC4/CyLFClk.c ****             }
 339:Generated_Source\PSoC4/CyLFClk.c ****         }
 340:Generated_Source\PSoC4/CyLFClk.c ****         else
 341:Generated_Source\PSoC4/CyLFClk.c ****         {
 342:Generated_Source\PSoC4/CyLFClk.c ****             /* Reload CNTR 1 count value for next measurement cycle*/
 343:Generated_Source\PSoC4/CyLFClk.c ****             CY_SYS_CNT_REG1_REG = (cydelayFreqHz >> CY_SYS_CLK_SYS_CLK_DEVIDER);
 572              		.loc 2 343 0
 573 0104 0F4A     		ldr	r2, .L34+24
 574 0106 124B     		ldr	r3, .L34+36
 575 0108 1B68     		ldr	r3, [r3]
 576 010a 9B0A     		lsr	r3, r3, #10
 577 010c 1360     		str	r3, [r2]
 344:Generated_Source\PSoC4/CyLFClk.c ****             compensateRunningStatus = CY_SYS_CLK_TRIM_OR_COMP_STARTED;
 578              		.loc 2 344 0
 579 010e 0C4B     		ldr	r3, .L34+20
 580 0110 0122     		mov	r2, #1
 581 0112 1A60     		str	r2, [r3]
 345:Generated_Source\PSoC4/CyLFClk.c ****             returnStatus = CYRET_STARTED;
 582              		.loc 2 345 0
 583 0114 0723     		mov	r3, #7
 584 0116 3B61     		str	r3, [r7, #16]
 284:Generated_Source\PSoC4/CyLFClk.c ****         {
 585              		.loc 2 284 0
 586 0118 02E0     		b	.L32
 587              	.L31:
 284:Generated_Source\PSoC4/CyLFClk.c ****         {
 588              		.loc 2 284 0 is_stmt 0 discriminator 2
 589 011a 01E0     		b	.L32
 590              	.L23:
 346:Generated_Source\PSoC4/CyLFClk.c ****         }
 347:Generated_Source\PSoC4/CyLFClk.c ****     }
 348:Generated_Source\PSoC4/CyLFClk.c ****     else
 349:Generated_Source\PSoC4/CyLFClk.c ****     {
 350:Generated_Source\PSoC4/CyLFClk.c ****         returnStatus = CYRET_INVALID_STATE;
 591              		.loc 2 350 0 is_stmt 1
 592 011c 1123     		mov	r3, #17
 593 011e 3B61     		str	r3, [r7, #16]
 594              	.L32:
 351:Generated_Source\PSoC4/CyLFClk.c ****     }
 352:Generated_Source\PSoC4/CyLFClk.c **** 
ARM GAS  C:\Users\akita\AppData\Local\Temp\ccTFmJyh.s 			page 30


 353:Generated_Source\PSoC4/CyLFClk.c ****     return (returnStatus);
 595              		.loc 2 353 0
 596 0120 3B69     		ldr	r3, [r7, #16]
 354:Generated_Source\PSoC4/CyLFClk.c **** }
 597              		.loc 2 354 0
 598 0122 181C     		mov	r0, r3
 599 0124 BD46     		mov	sp, r7
 600 0126 07B0     		add	sp, sp, #28
 601              		@ sp needed
 602 0128 90BD     		pop	{r4, r7, pc}
 603              	.L35:
 604 012a C046     		.align	2
 605              	.L34:
 606 012c 10010B40 		.word	1074462992
 607 0130 3F3F0000 		.word	16191
 608 0134 08000340 		.word	1073938440
 609 0138 0A0B0000 		.word	2826
 610 013c 00286BEE 		.word	-294967296
 611 0140 1C000000 		.word	compensateRunningStatus.4755
 612 0144 18000340 		.word	1073938456
 613 0148 1C000340 		.word	1073938460
 614 014c 60D10000 		.word	53600
 615 0150 00000000 		.word	cydelayFreqHz
 616 0154 0D030000 		.word	781
 617 0158 350C0000 		.word	3125
 618              		.cfi_endproc
 619              	.LFE6:
 620              		.size	CySysClkIloCompensate, .-CySysClkIloCompensate
 621              		.section	.text.CySysClkIloEnabled,"ax",%progbits
 622              		.align	2
 623              		.code	16
 624              		.thumb_func
 625              		.type	CySysClkIloEnabled, %function
 626              	CySysClkIloEnabled:
 627              	.LFB7:
 355:Generated_Source\PSoC4/CyLFClk.c **** 
 356:Generated_Source\PSoC4/CyLFClk.c **** 
 357:Generated_Source\PSoC4/CyLFClk.c **** #if(CY_IP_SRSSV2)
 358:Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
 359:Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysClkIloEnabled
 360:Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
 361:Generated_Source\PSoC4/CyLFClk.c ****     *
 362:Generated_Source\PSoC4/CyLFClk.c ****     * \internal
 363:Generated_Source\PSoC4/CyLFClk.c ****     * Reports the ILO enable state.
 364:Generated_Source\PSoC4/CyLFClk.c ****     *
 365:Generated_Source\PSoC4/CyLFClk.c ****     * \return
 366:Generated_Source\PSoC4/CyLFClk.c ****     * 1 if ILO is enabled, and 0 if ILO is disabled.
 367:Generated_Source\PSoC4/CyLFClk.c ****     *
 368:Generated_Source\PSoC4/CyLFClk.c ****     * \endinternal
 369:Generated_Source\PSoC4/CyLFClk.c ****     ********************************************************************************/
 370:Generated_Source\PSoC4/CyLFClk.c ****     static uint32 CySysClkIloEnabled(void)
 371:Generated_Source\PSoC4/CyLFClk.c ****     {
 628              		.loc 2 371 0
 629              		.cfi_startproc
 630 0000 80B5     		push	{r7, lr}
 631              		.cfi_def_cfa_offset 8
 632              		.cfi_offset 7, -8
ARM GAS  C:\Users\akita\AppData\Local\Temp\ccTFmJyh.s 			page 31


 633              		.cfi_offset 14, -4
 634 0002 00AF     		add	r7, sp, #0
 635              		.cfi_def_cfa_register 7
 372:Generated_Source\PSoC4/CyLFClk.c ****         /* Prohibits writing to WDT registers and ILO/WCO registers when not equal to 0 */
 373:Generated_Source\PSoC4/CyLFClk.c ****         return ((0u != (CY_SYS_CLK_ILO_CONFIG_REG & (uint32)(CY_SYS_CLK_ILO_CONFIG_ENABLE))) ?
 636              		.loc 2 373 0
 637 0004 044B     		ldr	r3, .L40
 638 0006 1B68     		ldr	r3, [r3]
 374:Generated_Source\PSoC4/CyLFClk.c ****             (uint32) 1u :
 639              		.loc 2 374 0
 640 0008 002B     		cmp	r3, #0
 641 000a 01DA     		bge	.L37
 642              		.loc 2 374 0 is_stmt 0 discriminator 1
 643 000c 0123     		mov	r3, #1
 644 000e 00E0     		b	.L38
 645              	.L37:
 646              		.loc 2 374 0 discriminator 2
 647 0010 0023     		mov	r3, #0
 648              	.L38:
 375:Generated_Source\PSoC4/CyLFClk.c ****             (uint32) 0u);
 376:Generated_Source\PSoC4/CyLFClk.c ****     }
 649              		.loc 2 376 0 is_stmt 1
 650 0012 181C     		mov	r0, r3
 651 0014 BD46     		mov	sp, r7
 652              		@ sp needed
 653 0016 80BD     		pop	{r7, pc}
 654              	.L41:
 655              		.align	2
 656              	.L40:
 657 0018 04010B40 		.word	1074462980
 658              		.cfi_endproc
 659              	.LFE7:
 660              		.size	CySysClkIloEnabled, .-CySysClkIloEnabled
 661              		.section	.text.CySysClkIloTrim,"ax",%progbits
 662              		.align	2
 663              		.global	CySysClkIloTrim
 664              		.code	16
 665              		.thumb_func
 666              		.type	CySysClkIloTrim, %function
 667              	CySysClkIloTrim:
 668              	.LFB8:
 377:Generated_Source\PSoC4/CyLFClk.c **** #endif /* (CY_IP_SRSSV2) */
 378:Generated_Source\PSoC4/CyLFClk.c **** 
 379:Generated_Source\PSoC4/CyLFClk.c **** 
 380:Generated_Source\PSoC4/CyLFClk.c **** #if(CY_IP_SRSSV2 && (!(CY_PSOC4_4100 || CY_PSOC4_4200)))
 381:Generated_Source\PSoC4/CyLFClk.c **** /********************************************************************************
 382:Generated_Source\PSoC4/CyLFClk.c **** * Function Name: CySysClkIloTrim
 383:Generated_Source\PSoC4/CyLFClk.c **** *****************************************************************************//**
 384:Generated_Source\PSoC4/CyLFClk.c **** * \brief
 385:Generated_Source\PSoC4/CyLFClk.c **** * The API trims the ILO frequency to +/- 10% accuracy range using accurate 
 386:Generated_Source\PSoC4/CyLFClk.c **** * SysClk.
 387:Generated_Source\PSoC4/CyLFClk.c **** *
 388:Generated_Source\PSoC4/CyLFClk.c **** * The API can be blocking or non-blocking depending on the value of the mode 
 389:Generated_Source\PSoC4/CyLFClk.c **** * parameter passed. The accuracy of ILO after trimming in parts per thousand 
 390:Generated_Source\PSoC4/CyLFClk.c **** * is returned through the iloAccuracyInPPT pointer. A positive number indicates 
 391:Generated_Source\PSoC4/CyLFClk.c **** * that the ILO is running fast and a negative number indicates that the ILO is 
 392:Generated_Source\PSoC4/CyLFClk.c **** * running slowly. This error is relative to the error in the reference clock 
ARM GAS  C:\Users\akita\AppData\Local\Temp\ccTFmJyh.s 			page 32


 393:Generated_Source\PSoC4/CyLFClk.c **** * (SysClk), so the absolute error will be higher and depends on the accuracy 
 394:Generated_Source\PSoC4/CyLFClk.c **** * of the reference.
 395:Generated_Source\PSoC4/CyLFClk.c **** *
 396:Generated_Source\PSoC4/CyLFClk.c **** * The CySysClkIloStartMeasurement() API should be called prior to calling this 
 397:Generated_Source\PSoC4/CyLFClk.c **** * API. Otherwise it will return CYRET_INVALID_STATE as the measurement was not 
 398:Generated_Source\PSoC4/CyLFClk.c **** * started.
 399:Generated_Source\PSoC4/CyLFClk.c **** *
 400:Generated_Source\PSoC4/CyLFClk.c **** * \note SysClk should be sourced by IMO. Otherwise CySysClkIloTrim() and 
 401:Generated_Source\PSoC4/CyLFClk.c **** * CySysClkIloCompensate() API can give incorrect results.
 402:Generated_Source\PSoC4/CyLFClk.c **** *
 403:Generated_Source\PSoC4/CyLFClk.c **** * \note If System clock frequency is changed in runtime, the CyDelayFreq() 
 404:Generated_Source\PSoC4/CyLFClk.c **** * with the appropriate parameter (Frequency of bus clock in Hertz) should be 
 405:Generated_Source\PSoC4/CyLFClk.c **** * called before next CySysClkIloCompensate() usage.
 406:Generated_Source\PSoC4/CyLFClk.c **** *
 407:Generated_Source\PSoC4/CyLFClk.c **** * \warning Do not enter deep sleep mode until the function returns CYRET_SUCCESS
 408:Generated_Source\PSoC4/CyLFClk.c **** * or CYRET_TIMEOUT.
 409:Generated_Source\PSoC4/CyLFClk.c **** *
 410:Generated_Source\PSoC4/CyLFClk.c **** * Available for all PSoC 4 devices with ILO trim capability. This excludes 
 411:Generated_Source\PSoC4/CyLFClk.c **** * PSoC 4000 / PSoC 4100 / PSoC 4200 / PSoC 4000S / PSoC 4100S / PSoC
 412:Generated_Source\PSoC4/CyLFClk.c **** * Analog Coprocessor devices.
 413:Generated_Source\PSoC4/CyLFClk.c **** *
 414:Generated_Source\PSoC4/CyLFClk.c **** * \param mode
 415:Generated_Source\PSoC4/CyLFClk.c **** *  CY_SYS_CLK_BLOCKING -  The function does not return until the ILO is 
 416:Generated_Source\PSoC4/CyLFClk.c **** * within +/-10% accuracy range or time out has occurred.<br>
 417:Generated_Source\PSoC4/CyLFClk.c **** * CY_SYS_CLK_NON_BLOCKING - The function returns immediately after 
 418:Generated_Source\PSoC4/CyLFClk.c **** * performing a single iteration of the trim process. The function should be 
 419:Generated_Source\PSoC4/CyLFClk.c **** * called repeatedly until the trimming is completed successfully.
 420:Generated_Source\PSoC4/CyLFClk.c **** *
 421:Generated_Source\PSoC4/CyLFClk.c **** * \param *iloAccuracyInPPT Pointer to an integer in which the trimmed ILO 
 422:Generated_Source\PSoC4/CyLFClk.c **** * accuracy will be returned.
 423:Generated_Source\PSoC4/CyLFClk.c **** *
 424:Generated_Source\PSoC4/CyLFClk.c **** * \details The value returned in *iloAccuracyInPPT pointer is not valid 
 425:Generated_Source\PSoC4/CyLFClk.c **** * until the function returns CYRET_SUCCESS. ILO accuracy in PPT is given by:
 426:Generated_Source\PSoC4/CyLFClk.c **** *
 427:Generated_Source\PSoC4/CyLFClk.c **** * IloAccuracyInPPT = ((MeasuredIloFreq - DesiredIloFreq) * 
 428:Generated_Source\PSoC4/CyLFClk.c **** * CY_SYS_CLK_PERTHOUSAND) / DesiredIloFreq);
 429:Generated_Source\PSoC4/CyLFClk.c **** *
 430:Generated_Source\PSoC4/CyLFClk.c **** * DesiredIloFreq  = 32000, CY_SYS_CLK_PERTHOUSAND = 1000;
 431:Generated_Source\PSoC4/CyLFClk.c **** *
 432:Generated_Source\PSoC4/CyLFClk.c **** * \return CYRET_SUCCESS - Indicates trimming is complete. This value indicates 
 433:Generated_Source\PSoC4/CyLFClk.c **** * trimming is successful and iloAccuracyInPPT is within +/- 10%.
 434:Generated_Source\PSoC4/CyLFClk.c **** *
 435:Generated_Source\PSoC4/CyLFClk.c **** * \return CYRET_STARTED - Indicates measurement is in progress. This is applicable 
 436:Generated_Source\PSoC4/CyLFClk.c **** * only for non-blocking mode.
 437:Generated_Source\PSoC4/CyLFClk.c **** *
 438:Generated_Source\PSoC4/CyLFClk.c **** * \return CYRET_INVALID_STATE - Indicates trimming was unsuccessful. You should 
 439:Generated_Source\PSoC4/CyLFClk.c **** * call CySysClkIloStartMeasurement() before calling this API.
 440:Generated_Source\PSoC4/CyLFClk.c **** *
 441:Generated_Source\PSoC4/CyLFClk.c **** * \return CYRET_TIMEOUT - Indicates trimming was unsuccessful. This is applicable 
 442:Generated_Source\PSoC4/CyLFClk.c **** * only for blocking mode. Timeout means the trimming was tried 5 times without 
 443:Generated_Source\PSoC4/CyLFClk.c **** * success (i.e. ILO accuracy > +/- 10%). The user can call the API again for 
 444:Generated_Source\PSoC4/CyLFClk.c **** * another try or wait for some time before calling it again (to let the system 
 445:Generated_Source\PSoC4/CyLFClk.c **** * to settle to another operating point change in temperature etc.) and continue 
 446:Generated_Source\PSoC4/CyLFClk.c **** * using the previous trim value till the next call.
 447:Generated_Source\PSoC4/CyLFClk.c **** *
 448:Generated_Source\PSoC4/CyLFClk.c **** **********************************************************************************/
 449:Generated_Source\PSoC4/CyLFClk.c **** cystatus CySysClkIloTrim(uint32 mode, int32* iloAccuracyInPPT)
ARM GAS  C:\Users\akita\AppData\Local\Temp\ccTFmJyh.s 			page 33


 450:Generated_Source\PSoC4/CyLFClk.c **** {
 669              		.loc 2 450 0
 670              		.cfi_startproc
 671 0000 80B5     		push	{r7, lr}
 672              		.cfi_def_cfa_offset 8
 673              		.cfi_offset 7, -8
 674              		.cfi_offset 14, -4
 675 0002 86B0     		sub	sp, sp, #24
 676              		.cfi_def_cfa_offset 32
 677 0004 00AF     		add	r7, sp, #0
 678              		.cfi_def_cfa_register 7
 679 0006 7860     		str	r0, [r7, #4]
 680 0008 3960     		str	r1, [r7]
 451:Generated_Source\PSoC4/CyLFClk.c ****     uint32 timeOutClocks = CY_SYS_CLK_TIMEOUT;
 681              		.loc 2 451 0
 682 000a 0523     		mov	r3, #5
 683 000c 7B61     		str	r3, [r7, #20]
 452:Generated_Source\PSoC4/CyLFClk.c ****     uint32 waitUntilCntr1Stops;
 453:Generated_Source\PSoC4/CyLFClk.c ****     static uint32 trimRunningStatus = CY_SYS_CLK_TRIM_OR_COMP_FINISHED;
 454:Generated_Source\PSoC4/CyLFClk.c ****     uint32 checkStatus;
 455:Generated_Source\PSoC4/CyLFClk.c ****     cystatus returnStatus;
 456:Generated_Source\PSoC4/CyLFClk.c **** 
 457:Generated_Source\PSoC4/CyLFClk.c ****     checkStatus = (uint32) (CY_SYS_CLK_DFT_REG & (uint32) CY_SYS_TST_DDFT_CTRL_REG_DEFAULT_MASK);
 684              		.loc 2 457 0
 685 000e 3E4B     		ldr	r3, .L59
 686 0010 1B68     		ldr	r3, [r3]
 687 0012 3E4A     		ldr	r2, .L59+4
 688 0014 1340     		and	r3, r2
 689 0016 BB60     		str	r3, [r7, #8]
 458:Generated_Source\PSoC4/CyLFClk.c **** 
 459:Generated_Source\PSoC4/CyLFClk.c ****     /* Check if DFT and CTRL registers were configures in CySysStartMeasurement*/
 460:Generated_Source\PSoC4/CyLFClk.c ****     if((checkStatus == CY_SYS_CLK_SEL_ILO_DFT_SOURCE) &&
 690              		.loc 2 460 0
 691 0018 BA68     		ldr	r2, [r7, #8]
 692 001a 8023     		mov	r3, #128
 693 001c 5B00     		lsl	r3, r3, #1
 694 001e 9A42     		cmp	r2, r3
 695 0020 00D0     		beq	.LCB563
 696 0022 69E0     		b	.L43	@long jump
 697              	.LCB563:
 461:Generated_Source\PSoC4/CyLFClk.c ****        (CY_SYS_TST_DDFT_CTRL_REG == CY_SYS_TST_DDFT_CTRL_REG_SEL2_CLK1) &&
 698              		.loc 2 461 0 discriminator 1
 699 0024 3A4B     		ldr	r3, .L59+8
 700 0026 1B68     		ldr	r3, [r3]
 460:Generated_Source\PSoC4/CyLFClk.c ****        (CY_SYS_TST_DDFT_CTRL_REG == CY_SYS_TST_DDFT_CTRL_REG_SEL2_CLK1) &&
 701              		.loc 2 460 0 discriminator 1
 702 0028 3A4A     		ldr	r2, .L59+12
 703 002a 9342     		cmp	r3, r2
 704 002c 00D0     		beq	.LCB568
 705 002e 63E0     		b	.L43	@long jump
 706              	.LCB568:
 707              		.loc 2 461 0
 708 0030 3B68     		ldr	r3, [r7]
 709 0032 002B     		cmp	r3, #0
 710 0034 60D0     		beq	.L43
 462:Generated_Source\PSoC4/CyLFClk.c ****        (iloAccuracyInPPT != NULL))
 463:Generated_Source\PSoC4/CyLFClk.c ****     {
ARM GAS  C:\Users\akita\AppData\Local\Temp\ccTFmJyh.s 			page 34


 464:Generated_Source\PSoC4/CyLFClk.c ****         if(CY_SYS_CLK_BLOCKING == mode)
 711              		.loc 2 464 0
 712 0036 7B68     		ldr	r3, [r7, #4]
 713 0038 002B     		cmp	r3, #0
 714 003a 3CD1     		bne	.L44
 465:Generated_Source\PSoC4/CyLFClk.c ****         {
 466:Generated_Source\PSoC4/CyLFClk.c ****             waitUntilCntr1Stops = cydelayFreqHz >> CY_SYS_CLK_SYS_CLK_DEVIDER;
 715              		.loc 2 466 0
 716 003c 364B     		ldr	r3, .L59+16
 717 003e 1B68     		ldr	r3, [r3]
 718 0040 9B0A     		lsr	r3, r3, #10
 719 0042 3B61     		str	r3, [r7, #16]
 720              	.L49:
 467:Generated_Source\PSoC4/CyLFClk.c ****             do
 468:Generated_Source\PSoC4/CyLFClk.c ****             {
 469:Generated_Source\PSoC4/CyLFClk.c ****                 /* Reload CNTR 1 count value for measuring cycle*/
 470:Generated_Source\PSoC4/CyLFClk.c ****                 CY_SYS_CNT_REG1_REG = cydelayFreqHz >> CY_SYS_CLK_SYS_CLK_DEVIDER; 
 721              		.loc 2 470 0
 722 0044 354A     		ldr	r2, .L59+20
 723 0046 344B     		ldr	r3, .L59+16
 724 0048 1B68     		ldr	r3, [r3]
 725 004a 9B0A     		lsr	r3, r3, #10
 726 004c 1360     		str	r3, [r2]
 471:Generated_Source\PSoC4/CyLFClk.c **** 
 472:Generated_Source\PSoC4/CyLFClk.c ****                 /* Wait until counter CNTR 1 will finish down-counting */
 473:Generated_Source\PSoC4/CyLFClk.c ****                 while (0u == (CY_SYS_CNT_REG1_REG & CY_SYS_CLK_ILO_CALIBR_COMPLETE_MASK))
 727              		.loc 2 473 0
 728 004e 06E0     		b	.L45
 729              	.L47:
 474:Generated_Source\PSoC4/CyLFClk.c ****                 {
 475:Generated_Source\PSoC4/CyLFClk.c ****                     waitUntilCntr1Stops--;
 730              		.loc 2 475 0
 731 0050 3B69     		ldr	r3, [r7, #16]
 732 0052 013B     		sub	r3, r3, #1
 733 0054 3B61     		str	r3, [r7, #16]
 476:Generated_Source\PSoC4/CyLFClk.c ****                     if (0u == waitUntilCntr1Stops)
 734              		.loc 2 476 0
 735 0056 3B69     		ldr	r3, [r7, #16]
 736 0058 002B     		cmp	r3, #0
 737 005a 00D1     		bne	.L45
 477:Generated_Source\PSoC4/CyLFClk.c ****                     {
 478:Generated_Source\PSoC4/CyLFClk.c ****                         break;
 738              		.loc 2 478 0
 739 005c 03E0     		b	.L46
 740              	.L45:
 473:Generated_Source\PSoC4/CyLFClk.c ****                 {
 741              		.loc 2 473 0
 742 005e 2F4B     		ldr	r3, .L59+20
 743 0060 1B68     		ldr	r3, [r3]
 744 0062 002B     		cmp	r3, #0
 745 0064 F4DA     		bge	.L47
 746              	.L46:
 479:Generated_Source\PSoC4/CyLFClk.c ****                     }
 480:Generated_Source\PSoC4/CyLFClk.c ****                 }
 481:Generated_Source\PSoC4/CyLFClk.c ****                 trimRunningStatus = CySysClkIloUpdateTrimReg(iloAccuracyInPPT);
 747              		.loc 2 481 0
 748 0066 3B68     		ldr	r3, [r7]
ARM GAS  C:\Users\akita\AppData\Local\Temp\ccTFmJyh.s 			page 35


 749 0068 181C     		mov	r0, r3
 750 006a FFF7FEFF 		bl	CySysClkIloUpdateTrimReg
 751 006e 021C     		mov	r2, r0
 752 0070 2B4B     		ldr	r3, .L59+24
 753 0072 1A60     		str	r2, [r3]
 482:Generated_Source\PSoC4/CyLFClk.c ****                 timeOutClocks--;
 754              		.loc 2 482 0
 755 0074 7B69     		ldr	r3, [r7, #20]
 756 0076 013B     		sub	r3, r3, #1
 757 0078 7B61     		str	r3, [r7, #20]
 483:Generated_Source\PSoC4/CyLFClk.c **** 
 484:Generated_Source\PSoC4/CyLFClk.c ****             /* Untill ILO accuracy will be in range less than +/- 10% or timeout occurs*/
 485:Generated_Source\PSoC4/CyLFClk.c ****             } while((CYRET_SUCCESS != trimRunningStatus) && 
 758              		.loc 2 485 0
 759 007a 294B     		ldr	r3, .L59+24
 760 007c 1B68     		ldr	r3, [r3]
 486:Generated_Source\PSoC4/CyLFClk.c ****               (CYRET_INVALID_STATE != trimRunningStatus) && 
 487:Generated_Source\PSoC4/CyLFClk.c ****                                (0u != timeOutClocks));
 761              		.loc 2 487 0
 762 007e 002B     		cmp	r3, #0
 763 0080 06D0     		beq	.L48
 486:Generated_Source\PSoC4/CyLFClk.c ****               (CYRET_INVALID_STATE != trimRunningStatus) && 
 764              		.loc 2 486 0
 765 0082 274B     		ldr	r3, .L59+24
 766 0084 1B68     		ldr	r3, [r3]
 485:Generated_Source\PSoC4/CyLFClk.c ****               (CYRET_INVALID_STATE != trimRunningStatus) && 
 767              		.loc 2 485 0
 768 0086 112B     		cmp	r3, #17
 769 0088 02D0     		beq	.L48
 486:Generated_Source\PSoC4/CyLFClk.c ****               (CYRET_INVALID_STATE != trimRunningStatus) && 
 770              		.loc 2 486 0
 771 008a 7B69     		ldr	r3, [r7, #20]
 772 008c 002B     		cmp	r3, #0
 773 008e D9D1     		bne	.L49
 774              	.L48:
 488:Generated_Source\PSoC4/CyLFClk.c **** 
 489:Generated_Source\PSoC4/CyLFClk.c ****             if (CYRET_SUCCESS == trimRunningStatus)
 775              		.loc 2 489 0
 776 0090 234B     		ldr	r3, .L59+24
 777 0092 1B68     		ldr	r3, [r3]
 778 0094 002B     		cmp	r3, #0
 779 0096 02D1     		bne	.L50
 490:Generated_Source\PSoC4/CyLFClk.c ****             {
 491:Generated_Source\PSoC4/CyLFClk.c ****                 returnStatus = CYRET_SUCCESS;
 780              		.loc 2 491 0
 781 0098 0023     		mov	r3, #0
 782 009a FB60     		str	r3, [r7, #12]
 783 009c 2BE0     		b	.L53
 784              	.L50:
 492:Generated_Source\PSoC4/CyLFClk.c ****             }
 493:Generated_Source\PSoC4/CyLFClk.c ****             else
 494:Generated_Source\PSoC4/CyLFClk.c ****             {
 495:Generated_Source\PSoC4/CyLFClk.c ****                 if(0u == timeOutClocks)
 785              		.loc 2 495 0
 786 009e 7B69     		ldr	r3, [r7, #20]
 787 00a0 002B     		cmp	r3, #0
 788 00a2 05D1     		bne	.L52
ARM GAS  C:\Users\akita\AppData\Local\Temp\ccTFmJyh.s 			page 36


 496:Generated_Source\PSoC4/CyLFClk.c ****                 {
 497:Generated_Source\PSoC4/CyLFClk.c ****                     trimRunningStatus = CY_SYS_CLK_TRIM_OR_COMP_FINISHED;
 789              		.loc 2 497 0
 790 00a4 1E4B     		ldr	r3, .L59+24
 791 00a6 0022     		mov	r2, #0
 792 00a8 1A60     		str	r2, [r3]
 498:Generated_Source\PSoC4/CyLFClk.c ****                     returnStatus = CYRET_TIMEOUT;
 793              		.loc 2 498 0
 794 00aa 1023     		mov	r3, #16
 795 00ac FB60     		str	r3, [r7, #12]
 796 00ae 22E0     		b	.L53
 797              	.L52:
 499:Generated_Source\PSoC4/CyLFClk.c ****                 }
 500:Generated_Source\PSoC4/CyLFClk.c ****                 else
 501:Generated_Source\PSoC4/CyLFClk.c ****                 {
 502:Generated_Source\PSoC4/CyLFClk.c ****                     returnStatus = CYRET_INVALID_STATE;
 798              		.loc 2 502 0
 799 00b0 1123     		mov	r3, #17
 800 00b2 FB60     		str	r3, [r7, #12]
 464:Generated_Source\PSoC4/CyLFClk.c ****         {
 801              		.loc 2 464 0
 802 00b4 22E0     		b	.L57
 803              	.L44:
 503:Generated_Source\PSoC4/CyLFClk.c ****                 }
 504:Generated_Source\PSoC4/CyLFClk.c ****             }
 505:Generated_Source\PSoC4/CyLFClk.c ****         }
 506:Generated_Source\PSoC4/CyLFClk.c ****         /* Non - blocking mode */
 507:Generated_Source\PSoC4/CyLFClk.c ****         else
 508:Generated_Source\PSoC4/CyLFClk.c ****         {
 509:Generated_Source\PSoC4/CyLFClk.c ****             if (CY_SYS_CLK_TRIM_OR_COMP_FINISHED != trimRunningStatus)
 804              		.loc 2 509 0
 805 00b6 1A4B     		ldr	r3, .L59+24
 806 00b8 1B68     		ldr	r3, [r3]
 807 00ba 002B     		cmp	r3, #0
 808 00bc 10D0     		beq	.L54
 510:Generated_Source\PSoC4/CyLFClk.c ****             {
 511:Generated_Source\PSoC4/CyLFClk.c ****                 /* Checking if the counter CNTR 1 finished down-counting */
 512:Generated_Source\PSoC4/CyLFClk.c ****                 if(0u != (CY_SYS_CNT_REG1_REG & CY_SYS_CLK_ILO_CALIBR_COMPLETE_MASK))
 809              		.loc 2 512 0
 810 00be 174B     		ldr	r3, .L59+20
 811 00c0 1B68     		ldr	r3, [r3]
 812 00c2 002B     		cmp	r3, #0
 813 00c4 09DA     		bge	.L55
 513:Generated_Source\PSoC4/CyLFClk.c ****                 {
 514:Generated_Source\PSoC4/CyLFClk.c ****                     returnStatus = CySysClkIloUpdateTrimReg(iloAccuracyInPPT);
 814              		.loc 2 514 0
 815 00c6 3B68     		ldr	r3, [r7]
 816 00c8 181C     		mov	r0, r3
 817 00ca FFF7FEFF 		bl	CySysClkIloUpdateTrimReg
 818 00ce 031C     		mov	r3, r0
 819 00d0 FB60     		str	r3, [r7, #12]
 515:Generated_Source\PSoC4/CyLFClk.c ****                     trimRunningStatus = CY_SYS_CLK_TRIM_OR_COMP_FINISHED;
 820              		.loc 2 515 0
 821 00d2 134B     		ldr	r3, .L59+24
 822 00d4 0022     		mov	r2, #0
 823 00d6 1A60     		str	r2, [r3]
 824 00d8 0DE0     		b	.L53
ARM GAS  C:\Users\akita\AppData\Local\Temp\ccTFmJyh.s 			page 37


 825              	.L55:
 516:Generated_Source\PSoC4/CyLFClk.c ****                 }
 517:Generated_Source\PSoC4/CyLFClk.c ****                 else
 518:Generated_Source\PSoC4/CyLFClk.c ****                 {
 519:Generated_Source\PSoC4/CyLFClk.c ****                     returnStatus = CYRET_STARTED;
 826              		.loc 2 519 0
 827 00da 0723     		mov	r3, #7
 828 00dc FB60     		str	r3, [r7, #12]
 464:Generated_Source\PSoC4/CyLFClk.c ****         {
 829              		.loc 2 464 0
 830 00de 0DE0     		b	.L57
 831              	.L54:
 520:Generated_Source\PSoC4/CyLFClk.c ****                 }
 521:Generated_Source\PSoC4/CyLFClk.c ****             }
 522:Generated_Source\PSoC4/CyLFClk.c ****             else
 523:Generated_Source\PSoC4/CyLFClk.c ****             {
 524:Generated_Source\PSoC4/CyLFClk.c ****                 /* Reload CNTR 1 count value for next measuring */
 525:Generated_Source\PSoC4/CyLFClk.c ****                 CY_SYS_CNT_REG1_REG = cydelayFreqHz >> CY_SYS_CLK_SYS_CLK_DEVIDER;
 832              		.loc 2 525 0
 833 00e0 0E4A     		ldr	r2, .L59+20
 834 00e2 0D4B     		ldr	r3, .L59+16
 835 00e4 1B68     		ldr	r3, [r3]
 836 00e6 9B0A     		lsr	r3, r3, #10
 837 00e8 1360     		str	r3, [r2]
 526:Generated_Source\PSoC4/CyLFClk.c ****                 trimRunningStatus = CY_SYS_CLK_TRIM_OR_COMP_STARTED;
 838              		.loc 2 526 0
 839 00ea 0D4B     		ldr	r3, .L59+24
 840 00ec 0122     		mov	r2, #1
 841 00ee 1A60     		str	r2, [r3]
 527:Generated_Source\PSoC4/CyLFClk.c ****                 returnStatus = CYRET_STARTED;
 842              		.loc 2 527 0
 843 00f0 0723     		mov	r3, #7
 844 00f2 FB60     		str	r3, [r7, #12]
 464:Generated_Source\PSoC4/CyLFClk.c ****         {
 845              		.loc 2 464 0
 846 00f4 02E0     		b	.L57
 847              	.L53:
 464:Generated_Source\PSoC4/CyLFClk.c ****         {
 848              		.loc 2 464 0 is_stmt 0 discriminator 1
 849 00f6 01E0     		b	.L57
 850              	.L43:
 528:Generated_Source\PSoC4/CyLFClk.c ****             }
 529:Generated_Source\PSoC4/CyLFClk.c ****         }
 530:Generated_Source\PSoC4/CyLFClk.c ****     }
 531:Generated_Source\PSoC4/CyLFClk.c ****     else
 532:Generated_Source\PSoC4/CyLFClk.c ****     {
 533:Generated_Source\PSoC4/CyLFClk.c ****         returnStatus = CYRET_INVALID_STATE;
 851              		.loc 2 533 0 is_stmt 1
 852 00f8 1123     		mov	r3, #17
 853 00fa FB60     		str	r3, [r7, #12]
 854              	.L57:
 534:Generated_Source\PSoC4/CyLFClk.c ****     }
 535:Generated_Source\PSoC4/CyLFClk.c **** 
 536:Generated_Source\PSoC4/CyLFClk.c ****     return (returnStatus);
 855              		.loc 2 536 0
 856 00fc FB68     		ldr	r3, [r7, #12]
 537:Generated_Source\PSoC4/CyLFClk.c **** }
ARM GAS  C:\Users\akita\AppData\Local\Temp\ccTFmJyh.s 			page 38


 857              		.loc 2 537 0
 858 00fe 181C     		mov	r0, r3
 859 0100 BD46     		mov	sp, r7
 860 0102 06B0     		add	sp, sp, #24
 861              		@ sp needed
 862 0104 80BD     		pop	{r7, pc}
 863              	.L60:
 864 0106 C046     		.align	2
 865              	.L59:
 866 0108 10010B40 		.word	1074462992
 867 010c 3F3F0000 		.word	16191
 868 0110 08000340 		.word	1073938440
 869 0114 0A0B0000 		.word	2826
 870 0118 00000000 		.word	cydelayFreqHz
 871 011c 18000340 		.word	1073938456
 872 0120 20000000 		.word	trimRunningStatus.4767
 873              		.cfi_endproc
 874              	.LFE8:
 875              		.size	CySysClkIloTrim, .-CySysClkIloTrim
 876              		.global	__aeabi_idiv
 877              		.section	.text.CySysClkIloUpdateTrimReg,"ax",%progbits
 878              		.align	2
 879              		.global	CySysClkIloUpdateTrimReg
 880              		.code	16
 881              		.thumb_func
 882              		.type	CySysClkIloUpdateTrimReg, %function
 883              	CySysClkIloUpdateTrimReg:
 884              	.LFB9:
 538:Generated_Source\PSoC4/CyLFClk.c **** 
 539:Generated_Source\PSoC4/CyLFClk.c **** 
 540:Generated_Source\PSoC4/CyLFClk.c **** /********************************************************************************
 541:Generated_Source\PSoC4/CyLFClk.c **** * Function Name: CySysClkIloUpdateTrimReg
 542:Generated_Source\PSoC4/CyLFClk.c **** *********************************************************************************
 543:Generated_Source\PSoC4/CyLFClk.c **** *
 544:Generated_Source\PSoC4/CyLFClk.c **** * \internal
 545:Generated_Source\PSoC4/CyLFClk.c **** * Function calculates ILO accuracy and check is error range is higher than 
 546:Generated_Source\PSoC4/CyLFClk.c **** * +/- 10%. If Measured frequency is higher than +/- 10% function updates 
 547:Generated_Source\PSoC4/CyLFClk.c **** * ILO Trim register.
 548:Generated_Source\PSoC4/CyLFClk.c **** *
 549:Generated_Source\PSoC4/CyLFClk.c **** * \param
 550:Generated_Source\PSoC4/CyLFClk.c **** * iloAccuracyInPPT Pointer to an integer in which the trimmed ILO 
 551:Generated_Source\PSoC4/CyLFClk.c **** * accuracy will be returned. The value returned in this pointer is not valid 
 552:Generated_Source\PSoC4/CyLFClk.c **** * until the function returns CYRET_SUCCESS. If ILO frequency error is lower 
 553:Generated_Source\PSoC4/CyLFClk.c **** * than +/- 10% then the value returned in this pointer will be updated.
 554:Generated_Source\PSoC4/CyLFClk.c **** *
 555:Generated_Source\PSoC4/CyLFClk.c **** * \return CYRET_SUCCESS - Indicates that ILO frequency error is lower than 
 556:Generated_Source\PSoC4/CyLFClk.c **** * +/- 10% and no actions are required.
 557:Generated_Source\PSoC4/CyLFClk.c **** *
 558:Generated_Source\PSoC4/CyLFClk.c **** * \return  CYRET_STARTED - Indicates that ILO frequency error is higher than 
 559:Generated_Source\PSoC4/CyLFClk.c **** * +/- 10% and ILO Trim register was updated.
 560:Generated_Source\PSoC4/CyLFClk.c **** *
 561:Generated_Source\PSoC4/CyLFClk.c **** * \return CYRET_INVALID_STATE - Indicates trimming was unsuccessful.
 562:Generated_Source\PSoC4/CyLFClk.c **** *
 563:Generated_Source\PSoC4/CyLFClk.c **** * Post #1 - To obtain 10% ILO accuracy the calculated accuracy should be equal 
 564:Generated_Source\PSoC4/CyLFClk.c **** * CY_SYS_CLK_ERROR_RANGE = 5.6%. Error value should take to account IMO error of 
 565:Generated_Source\PSoC4/CyLFClk.c **** * +/-2% (+/-0.64kHz), trim step of 2.36kHz (+/-1.18kHz) and error while ILO 
 566:Generated_Source\PSoC4/CyLFClk.c **** * frequency measuring.
ARM GAS  C:\Users\akita\AppData\Local\Temp\ccTFmJyh.s 			page 39


 567:Generated_Source\PSoC4/CyLFClk.c **** *
 568:Generated_Source\PSoC4/CyLFClk.c **** * \endinternal
 569:Generated_Source\PSoC4/CyLFClk.c **** *
 570:Generated_Source\PSoC4/CyLFClk.c **** **********************************************************************************/
 571:Generated_Source\PSoC4/CyLFClk.c **** cystatus CySysClkIloUpdateTrimReg(int32* iloAccuracyInPPT)
 572:Generated_Source\PSoC4/CyLFClk.c **** {
 885              		.loc 2 572 0
 886              		.cfi_startproc
 887 0000 80B5     		push	{r7, lr}
 888              		.cfi_def_cfa_offset 8
 889              		.cfi_offset 7, -8
 890              		.cfi_offset 14, -4
 891 0002 88B0     		sub	sp, sp, #32
 892              		.cfi_def_cfa_offset 40
 893 0004 00AF     		add	r7, sp, #0
 894              		.cfi_def_cfa_register 7
 895 0006 7860     		str	r0, [r7, #4]
 573:Generated_Source\PSoC4/CyLFClk.c ****     uint32 measuredIloFreq;
 574:Generated_Source\PSoC4/CyLFClk.c ****     uint32 currentIloTrimValue;
 575:Generated_Source\PSoC4/CyLFClk.c ****     int32 iloAccuracyValue;
 576:Generated_Source\PSoC4/CyLFClk.c ****     int32 trimStep;
 577:Generated_Source\PSoC4/CyLFClk.c ****     cystatus errorRangeStatus;
 578:Generated_Source\PSoC4/CyLFClk.c **** 
 579:Generated_Source\PSoC4/CyLFClk.c ****     if(0u != CY_SYS_CNT_REG2_REG)
 896              		.loc 2 579 0
 897 0008 374B     		ldr	r3, .L71
 898 000a 1B68     		ldr	r3, [r3]
 899 000c 002B     		cmp	r3, #0
 900 000e 64D0     		beq	.L62
 580:Generated_Source\PSoC4/CyLFClk.c ****     {
 581:Generated_Source\PSoC4/CyLFClk.c ****         measuredIloFreq = (CY_SYS_CNT_REG2_REG * cydelayFreqHz) / (cydelayFreqHz >> CY_SYS_CLK_SYS_
 901              		.loc 2 581 0
 902 0010 354B     		ldr	r3, .L71
 903 0012 1A68     		ldr	r2, [r3]
 904 0014 354B     		ldr	r3, .L71+4
 905 0016 1B68     		ldr	r3, [r3]
 906 0018 5A43     		mul	r2, r3
 907 001a 344B     		ldr	r3, .L71+4
 908 001c 1B68     		ldr	r3, [r3]
 909 001e 9B0A     		lsr	r3, r3, #10
 910 0020 101C     		mov	r0, r2
 911 0022 191C     		mov	r1, r3
 912 0024 FFF7FEFF 		bl	__aeabi_uidiv
 913 0028 031C     		mov	r3, r0
 914 002a 7B61     		str	r3, [r7, #20]
 582:Generated_Source\PSoC4/CyLFClk.c **** 
 583:Generated_Source\PSoC4/CyLFClk.c ****         /* Calculate value of error in PPT according to formula - 
 584:Generated_Source\PSoC4/CyLFClk.c ****         *       ((measuredIlofrequency - iloDesired freaquency) * 1000 / iloDesired freaquency) */
 585:Generated_Source\PSoC4/CyLFClk.c ****         iloAccuracyValue = (((int32) measuredIloFreq - (int32) CY_SYS_CLK_ILO_DESIRED_FREQ_HZ) * \
 915              		.loc 2 585 0
 916 002c 7B69     		ldr	r3, [r7, #20]
 917 002e 304A     		ldr	r2, .L71+8
 918 0030 9446     		mov	ip, r2
 919 0032 6344     		add	r3, r3, ip
 920 0034 FA22     		mov	r2, #250
 921 0036 9200     		lsl	r2, r2, #2
 922 0038 5343     		mul	r3, r2
ARM GAS  C:\Users\akita\AppData\Local\Temp\ccTFmJyh.s 			page 40


 923 003a 181C     		mov	r0, r3
 924 003c FA23     		mov	r3, #250
 925 003e D901     		lsl	r1, r3, #7
 926 0040 FFF7FEFF 		bl	__aeabi_idiv
 927 0044 031C     		mov	r3, r0
 928 0046 3B61     		str	r3, [r7, #16]
 586:Generated_Source\PSoC4/CyLFClk.c ****                             ((int32) CY_SYS_CLK_PERTHOUSAND)) / ((int32) CY_SYS_CLK_ILO_DESIRED_FRE
 587:Generated_Source\PSoC4/CyLFClk.c **** 
 588:Generated_Source\PSoC4/CyLFClk.c ****         /* Check if ILO accuracy is more than +/- CY_SYS_CLK_ERROR_RANGE. See post #1 of API descri
 589:Generated_Source\PSoC4/CyLFClk.c ****         if(CY_SYS_CLK_ERROR_RANGE < (uint32) (CY_SYS_CLK_ABS_MACRO(iloAccuracyValue)))
 929              		.loc 2 589 0
 930 0048 3B69     		ldr	r3, [r7, #16]
 931 004a DA17     		asr	r2, r3, #31
 932 004c 9B18     		add	r3, r3, r2
 933 004e 5340     		eor	r3, r2
 934 0050 382B     		cmp	r3, #56
 935 0052 3CD9     		bls	.L63
 590:Generated_Source\PSoC4/CyLFClk.c ****         {
 591:Generated_Source\PSoC4/CyLFClk.c ****             if (0 < iloAccuracyValue)
 936              		.loc 2 591 0
 937 0054 3B69     		ldr	r3, [r7, #16]
 938 0056 002B     		cmp	r3, #0
 939 0058 0DDD     		ble	.L64
 592:Generated_Source\PSoC4/CyLFClk.c ****             {
 593:Generated_Source\PSoC4/CyLFClk.c ****                 trimStep = (int32) (((iloAccuracyValue * (int32) CY_SYS_CLK_ERROR_COEF) + 
 940              		.loc 2 593 0
 941 005a 3A69     		ldr	r2, [r7, #16]
 942 005c 131C     		mov	r3, r2
 943 005e 9B00     		lsl	r3, r3, #2
 944 0060 9B18     		add	r3, r3, r2
 945 0062 5B00     		lsl	r3, r3, #1
 946 0064 7133     		add	r3, r3, #113
 947 0066 FF33     		add	r3, r3, #255
 948 0068 181C     		mov	r0, r3
 949 006a 2249     		ldr	r1, .L71+12
 950 006c FFF7FEFF 		bl	__aeabi_idiv
 951 0070 031C     		mov	r3, r0
 952 0072 FB61     		str	r3, [r7, #28]
 953 0074 0CE0     		b	.L65
 954              	.L64:
 594:Generated_Source\PSoC4/CyLFClk.c ****                 CY_SYS_CLK_HALF_OF_STEP) / CY_SYS_CLK_ERROR_STEP);
 595:Generated_Source\PSoC4/CyLFClk.c ****             }
 596:Generated_Source\PSoC4/CyLFClk.c ****             else
 597:Generated_Source\PSoC4/CyLFClk.c ****             {
 598:Generated_Source\PSoC4/CyLFClk.c ****                 trimStep = (int32) (((iloAccuracyValue * (int32) CY_SYS_CLK_ERROR_COEF) - 
 955              		.loc 2 598 0
 956 0076 3A69     		ldr	r2, [r7, #16]
 957 0078 131C     		mov	r3, r2
 958 007a 9B00     		lsl	r3, r3, #2
 959 007c 9B18     		add	r3, r3, r2
 960 007e 5B00     		lsl	r3, r3, #1
 961 0080 713B     		sub	r3, r3, #113
 962 0082 FF3B     		sub	r3, r3, #255
 963 0084 181C     		mov	r0, r3
 964 0086 1B49     		ldr	r1, .L71+12
 965 0088 FFF7FEFF 		bl	__aeabi_idiv
 966 008c 031C     		mov	r3, r0
ARM GAS  C:\Users\akita\AppData\Local\Temp\ccTFmJyh.s 			page 41


 967 008e FB61     		str	r3, [r7, #28]
 968              	.L65:
 599:Generated_Source\PSoC4/CyLFClk.c ****                 CY_SYS_CLK_HALF_OF_STEP) / CY_SYS_CLK_ERROR_STEP);
 600:Generated_Source\PSoC4/CyLFClk.c ****             }
 601:Generated_Source\PSoC4/CyLFClk.c ****             currentIloTrimValue = (CY_SYS_CLK_ILO_TRIM_REG & CY_SYS_CLK_ILO_TRIM_MASK);
 969              		.loc 2 601 0
 970 0090 194B     		ldr	r3, .L71+16
 971 0092 1B68     		ldr	r3, [r3]
 972 0094 0F22     		mov	r2, #15
 973 0096 1340     		and	r3, r2
 974 0098 FB60     		str	r3, [r7, #12]
 602:Generated_Source\PSoC4/CyLFClk.c ****             trimStep = (int32) currentIloTrimValue - trimStep;
 975              		.loc 2 602 0
 976 009a FA68     		ldr	r2, [r7, #12]
 977 009c FB69     		ldr	r3, [r7, #28]
 978 009e D31A     		sub	r3, r2, r3
 979 00a0 FB61     		str	r3, [r7, #28]
 603:Generated_Source\PSoC4/CyLFClk.c **** 
 604:Generated_Source\PSoC4/CyLFClk.c ****             if(trimStep > CY_SYS_CLK_FOURBITS_MAX)
 980              		.loc 2 604 0
 981 00a2 FB69     		ldr	r3, [r7, #28]
 982 00a4 0F2B     		cmp	r3, #15
 983 00a6 01DD     		ble	.L66
 605:Generated_Source\PSoC4/CyLFClk.c ****             {
 606:Generated_Source\PSoC4/CyLFClk.c ****                 trimStep = CY_SYS_CLK_FOURBITS_MAX;
 984              		.loc 2 606 0
 985 00a8 0F23     		mov	r3, #15
 986 00aa FB61     		str	r3, [r7, #28]
 987              	.L66:
 607:Generated_Source\PSoC4/CyLFClk.c ****             }
 608:Generated_Source\PSoC4/CyLFClk.c ****             if(trimStep < 0)
 988              		.loc 2 608 0
 989 00ac FB69     		ldr	r3, [r7, #28]
 990 00ae 002B     		cmp	r3, #0
 991 00b0 01DA     		bge	.L67
 609:Generated_Source\PSoC4/CyLFClk.c ****             {
 610:Generated_Source\PSoC4/CyLFClk.c ****                 trimStep = 0;
 992              		.loc 2 610 0
 993 00b2 0023     		mov	r3, #0
 994 00b4 FB61     		str	r3, [r7, #28]
 995              	.L67:
 611:Generated_Source\PSoC4/CyLFClk.c ****             }
 612:Generated_Source\PSoC4/CyLFClk.c ****             CY_SYS_CLK_ILO_TRIM_REG = (CY_SYS_CLK_ILO_TRIM_REG & (uint32)(~CY_SYS_CLK_ILO_TRIM_MASK
 996              		.loc 2 612 0
 997 00b6 104B     		ldr	r3, .L71+16
 998 00b8 0F4A     		ldr	r2, .L71+16
 999 00ba 1268     		ldr	r2, [r2]
 1000 00bc 0F21     		mov	r1, #15
 1001 00be 8A43     		bic	r2, r1
 1002 00c0 111C     		mov	r1, r2
 613:Generated_Source\PSoC4/CyLFClk.c ****                                                                  ((uint32) trimStep);
 1003              		.loc 2 613 0
 1004 00c2 FA69     		ldr	r2, [r7, #28]
 612:Generated_Source\PSoC4/CyLFClk.c ****                                                                  ((uint32) trimStep);
 1005              		.loc 2 612 0
 1006 00c4 0A43     		orr	r2, r1
 1007 00c6 1A60     		str	r2, [r3]
ARM GAS  C:\Users\akita\AppData\Local\Temp\ccTFmJyh.s 			page 42


 614:Generated_Source\PSoC4/CyLFClk.c ****             errorRangeStatus = CYRET_STARTED;
 1008              		.loc 2 614 0
 1009 00c8 0723     		mov	r3, #7
 1010 00ca BB61     		str	r3, [r7, #24]
 1011 00cc 07E0     		b	.L69
 1012              	.L63:
 615:Generated_Source\PSoC4/CyLFClk.c ****         } /* Else return success because error is in +/- 10% range*/
 616:Generated_Source\PSoC4/CyLFClk.c ****         else
 617:Generated_Source\PSoC4/CyLFClk.c ****         {
 618:Generated_Source\PSoC4/CyLFClk.c ****             /* Write trimmed ILO accuracy through pointer. */
 619:Generated_Source\PSoC4/CyLFClk.c ****             *iloAccuracyInPPT = iloAccuracyValue;
 1013              		.loc 2 619 0
 1014 00ce 7B68     		ldr	r3, [r7, #4]
 1015 00d0 3A69     		ldr	r2, [r7, #16]
 1016 00d2 1A60     		str	r2, [r3]
 620:Generated_Source\PSoC4/CyLFClk.c ****             errorRangeStatus = CYRET_SUCCESS;
 1017              		.loc 2 620 0
 1018 00d4 0023     		mov	r3, #0
 1019 00d6 BB61     		str	r3, [r7, #24]
 1020 00d8 01E0     		b	.L69
 1021              	.L62:
 621:Generated_Source\PSoC4/CyLFClk.c ****         }
 622:Generated_Source\PSoC4/CyLFClk.c ****     }
 623:Generated_Source\PSoC4/CyLFClk.c ****     else
 624:Generated_Source\PSoC4/CyLFClk.c ****     {
 625:Generated_Source\PSoC4/CyLFClk.c ****         errorRangeStatus = CYRET_INVALID_STATE;
 1022              		.loc 2 625 0
 1023 00da 1123     		mov	r3, #17
 1024 00dc BB61     		str	r3, [r7, #24]
 1025              	.L69:
 626:Generated_Source\PSoC4/CyLFClk.c ****     }
 627:Generated_Source\PSoC4/CyLFClk.c **** return (errorRangeStatus);
 1026              		.loc 2 627 0
 1027 00de BB69     		ldr	r3, [r7, #24]
 628:Generated_Source\PSoC4/CyLFClk.c **** }
 1028              		.loc 2 628 0
 1029 00e0 181C     		mov	r0, r3
 1030 00e2 BD46     		mov	sp, r7
 1031 00e4 08B0     		add	sp, sp, #32
 1032              		@ sp needed
 1033 00e6 80BD     		pop	{r7, pc}
 1034              	.L72:
 1035              		.align	2
 1036              	.L71:
 1037 00e8 1C000340 		.word	1073938460
 1038 00ec 00000000 		.word	cydelayFreqHz
 1039 00f0 0083FFFF 		.word	-32000
 1040 00f4 E1020000 		.word	737
 1041 00f8 24FF0B40 		.word	1074528036
 1042              		.cfi_endproc
 1043              	.LFE9:
 1044              		.size	CySysClkIloUpdateTrimReg, .-CySysClkIloUpdateTrimReg
 1045              		.section	.text.CySysClkIloRestoreFactoryTrim,"ax",%progbits
 1046              		.align	2
 1047              		.global	CySysClkIloRestoreFactoryTrim
 1048              		.code	16
 1049              		.thumb_func
ARM GAS  C:\Users\akita\AppData\Local\Temp\ccTFmJyh.s 			page 43


 1050              		.type	CySysClkIloRestoreFactoryTrim, %function
 1051              	CySysClkIloRestoreFactoryTrim:
 1052              	.LFB10:
 629:Generated_Source\PSoC4/CyLFClk.c **** 
 630:Generated_Source\PSoC4/CyLFClk.c **** 
 631:Generated_Source\PSoC4/CyLFClk.c **** /*******************************************************************************
 632:Generated_Source\PSoC4/CyLFClk.c **** * Function Name: CySysClkIloRestoreFactoryTrim
 633:Generated_Source\PSoC4/CyLFClk.c **** ****************************************************************************//**
 634:Generated_Source\PSoC4/CyLFClk.c **** * \brief
 635:Generated_Source\PSoC4/CyLFClk.c **** * Restores the ILO Trim Register to factory value.
 636:Generated_Source\PSoC4/CyLFClk.c **** *
 637:Generated_Source\PSoC4/CyLFClk.c **** * The CySysClkIloStartMeasurement() API should be called prior to 
 638:Generated_Source\PSoC4/CyLFClk.c **** * calling this API. Otherwise CYRET_UNKNOWN will be returned.
 639:Generated_Source\PSoC4/CyLFClk.c **** *
 640:Generated_Source\PSoC4/CyLFClk.c **** * Available for all PSoC 4 devices except for PSoC 4000 / PSoC 4100 / PSoC 4200 
 641:Generated_Source\PSoC4/CyLFClk.c **** * / PSoC 4000S / PSoC 4100S / PSoC Analog Coprocessor devices.
 642:Generated_Source\PSoC4/CyLFClk.c **** *
 643:Generated_Source\PSoC4/CyLFClk.c **** * \return CYRET_SUCCESS - Operation was successful. 
 644:Generated_Source\PSoC4/CyLFClk.c **** * \return CYRET_UNKNOWN - CySysClkIloStartMeasurement() was not called 
 645:Generated_Source\PSoC4/CyLFClk.c **** * before this API. Hence the trim value cannot be updated.
 646:Generated_Source\PSoC4/CyLFClk.c **** *
 647:Generated_Source\PSoC4/CyLFClk.c **** ******************************************************************************/
 648:Generated_Source\PSoC4/CyLFClk.c **** cystatus CySysClkIloRestoreFactoryTrim(void)
 649:Generated_Source\PSoC4/CyLFClk.c **** {
 1053              		.loc 2 649 0
 1054              		.cfi_startproc
 1055 0000 80B5     		push	{r7, lr}
 1056              		.cfi_def_cfa_offset 8
 1057              		.cfi_offset 7, -8
 1058              		.cfi_offset 14, -4
 1059 0002 82B0     		sub	sp, sp, #8
 1060              		.cfi_def_cfa_offset 16
 1061 0004 00AF     		add	r7, sp, #0
 1062              		.cfi_def_cfa_register 7
 650:Generated_Source\PSoC4/CyLFClk.c ****     cystatus returnStatus = CYRET_SUCCESS;
 1063              		.loc 2 650 0
 1064 0006 0023     		mov	r3, #0
 1065 0008 7B60     		str	r3, [r7, #4]
 651:Generated_Source\PSoC4/CyLFClk.c **** 
 652:Generated_Source\PSoC4/CyLFClk.c ****     /* Check was defaultIloTrimRegValue modified in CySysClkIloStartMeasurement */
 653:Generated_Source\PSoC4/CyLFClk.c ****     if(CY_SYS_CLK_ILO_TRIM_DEFAULT_VALUE != defaultIloTrimRegValue)
 1066              		.loc 2 653 0
 1067 000a 0E4B     		ldr	r3, .L77
 1068 000c 1B88     		ldrh	r3, [r3]
 1069 000e 9BB2     		uxth	r3, r3
 1070 0010 F02B     		cmp	r3, #240
 1071 0012 0ED0     		beq	.L74
 654:Generated_Source\PSoC4/CyLFClk.c ****         {
 655:Generated_Source\PSoC4/CyLFClk.c ****             CY_SYS_CLK_ILO_TRIM_REG = ((CY_SYS_CLK_ILO_TRIM_REG & (uint32)(~CY_SYS_CLK_ILO_TRIM_MAS
 1072              		.loc 2 655 0
 1073 0014 0C4B     		ldr	r3, .L77+4
 1074 0016 0C4A     		ldr	r2, .L77+4
 1075 0018 1268     		ldr	r2, [r2]
 1076 001a 0F21     		mov	r1, #15
 1077 001c 8A43     		bic	r2, r1
 1078 001e 111C     		mov	r1, r2
 656:Generated_Source\PSoC4/CyLFClk.c ****                                        (defaultIloTrimRegValue & CY_SYS_CLK_ILO_TRIM_MASK));
ARM GAS  C:\Users\akita\AppData\Local\Temp\ccTFmJyh.s 			page 44


 1079              		.loc 2 656 0
 1080 0020 084A     		ldr	r2, .L77
 1081 0022 1288     		ldrh	r2, [r2]
 1082 0024 92B2     		uxth	r2, r2
 1083 0026 101C     		mov	r0, r2
 1084 0028 0F22     		mov	r2, #15
 1085 002a 0240     		and	r2, r0
 655:Generated_Source\PSoC4/CyLFClk.c ****                                        (defaultIloTrimRegValue & CY_SYS_CLK_ILO_TRIM_MASK));
 1086              		.loc 2 655 0
 1087 002c 0A43     		orr	r2, r1
 1088 002e 1A60     		str	r2, [r3]
 1089 0030 02E0     		b	.L75
 1090              	.L74:
 657:Generated_Source\PSoC4/CyLFClk.c ****         }
 658:Generated_Source\PSoC4/CyLFClk.c ****         else
 659:Generated_Source\PSoC4/CyLFClk.c ****         {
 660:Generated_Source\PSoC4/CyLFClk.c ****             returnStatus = CYRET_UNKNOWN;
 1091              		.loc 2 660 0
 1092 0032 0123     		mov	r3, #1
 1093 0034 5B42     		neg	r3, r3
 1094 0036 7B60     		str	r3, [r7, #4]
 1095              	.L75:
 661:Generated_Source\PSoC4/CyLFClk.c ****         }
 662:Generated_Source\PSoC4/CyLFClk.c **** 
 663:Generated_Source\PSoC4/CyLFClk.c ****         return (returnStatus);
 1096              		.loc 2 663 0
 1097 0038 7B68     		ldr	r3, [r7, #4]
 664:Generated_Source\PSoC4/CyLFClk.c **** }
 1098              		.loc 2 664 0
 1099 003a 181C     		mov	r0, r3
 1100 003c BD46     		mov	sp, r7
 1101 003e 02B0     		add	sp, sp, #8
 1102              		@ sp needed
 1103 0040 80BD     		pop	{r7, pc}
 1104              	.L78:
 1105 0042 C046     		.align	2
 1106              	.L77:
 1107 0044 00000000 		.word	defaultIloTrimRegValue
 1108 0048 24FF0B40 		.word	1074528036
 1109              		.cfi_endproc
 1110              	.LFE10:
 1111              		.size	CySysClkIloRestoreFactoryTrim, .-CySysClkIloRestoreFactoryTrim
 1112              		.section	.text.CySysClkGetLfclkSource,"ax",%progbits
 1113              		.align	2
 1114              		.code	16
 1115              		.thumb_func
 1116              		.type	CySysClkGetLfclkSource, %function
 1117              	CySysClkGetLfclkSource:
 1118              	.LFB11:
 665:Generated_Source\PSoC4/CyLFClk.c **** #endif /* (CY_IP_SRSSV2 && (!(CY_PSOC4_4100 || CY_PSOC4_4200))) */
 666:Generated_Source\PSoC4/CyLFClk.c **** 
 667:Generated_Source\PSoC4/CyLFClk.c **** 
 668:Generated_Source\PSoC4/CyLFClk.c **** #if (CY_IP_WCO && CY_IP_SRSSV2)
 669:Generated_Source\PSoC4/CyLFClk.c **** /*******************************************************************************
 670:Generated_Source\PSoC4/CyLFClk.c **** * Function Name: CySysClkGetLfclkSource
 671:Generated_Source\PSoC4/CyLFClk.c **** ********************************************************************************
 672:Generated_Source\PSoC4/CyLFClk.c **** *
ARM GAS  C:\Users\akita\AppData\Local\Temp\ccTFmJyh.s 			page 45


 673:Generated_Source\PSoC4/CyLFClk.c **** * \internal
 674:Generated_Source\PSoC4/CyLFClk.c **** *  Gets the clock source for the LFCLK clock.
 675:Generated_Source\PSoC4/CyLFClk.c **** *  The function is applicable only for PSoC 4100 BLE / PSoC 4200 BLE / PSoC 4100M /
 676:Generated_Source\PSoC4/CyLFClk.c **** *  PSoC 4200M / PSoC 4200L.
 677:Generated_Source\PSoC4/CyLFClk.c **** *
 678:Generated_Source\PSoC4/CyLFClk.c **** * \return The LFCLK source:
 679:Generated_Source\PSoC4/CyLFClk.c **** * CY_SYS_CLK_LFCLK_SRC_ILO Internal Low Frequency (32 kHz) Oscillator (ILO)
 680:Generated_Source\PSoC4/CyLFClk.c **** * CY_SYS_CLK_LFCLK_SRC_WCO Low Frequency Watch Crystal Oscillator (WCO)
 681:Generated_Source\PSoC4/CyLFClk.c **** *
 682:Generated_Source\PSoC4/CyLFClk.c **** * \endinternal
 683:Generated_Source\PSoC4/CyLFClk.c **** *
 684:Generated_Source\PSoC4/CyLFClk.c **** *******************************************************************************/
 685:Generated_Source\PSoC4/CyLFClk.c ****     static uint32 CySysClkGetLfclkSource(void)
 686:Generated_Source\PSoC4/CyLFClk.c ****     {
 1119              		.loc 2 686 0
 1120              		.cfi_startproc
 1121 0000 80B5     		push	{r7, lr}
 1122              		.cfi_def_cfa_offset 8
 1123              		.cfi_offset 7, -8
 1124              		.cfi_offset 14, -4
 1125 0002 82B0     		sub	sp, sp, #8
 1126              		.cfi_def_cfa_offset 16
 1127 0004 00AF     		add	r7, sp, #0
 1128              		.cfi_def_cfa_register 7
 687:Generated_Source\PSoC4/CyLFClk.c ****         uint32 lfclkSource;
 688:Generated_Source\PSoC4/CyLFClk.c ****         lfclkSource = CY_SYS_WDT_CONFIG_REG & CY_SYS_CLK_LFCLK_SEL_MASK;
 1129              		.loc 2 688 0
 1130 0006 054B     		ldr	r3, .L81
 1131 0008 1B68     		ldr	r3, [r3]
 1132 000a 9B0F     		lsr	r3, r3, #30
 1133 000c 9B07     		lsl	r3, r3, #30
 1134 000e 7B60     		str	r3, [r7, #4]
 689:Generated_Source\PSoC4/CyLFClk.c ****         return (lfclkSource);
 1135              		.loc 2 689 0
 1136 0010 7B68     		ldr	r3, [r7, #4]
 690:Generated_Source\PSoC4/CyLFClk.c ****     }
 1137              		.loc 2 690 0
 1138 0012 181C     		mov	r0, r3
 1139 0014 BD46     		mov	sp, r7
 1140 0016 02B0     		add	sp, sp, #8
 1141              		@ sp needed
 1142 0018 80BD     		pop	{r7, pc}
 1143              	.L82:
 1144 001a C046     		.align	2
 1145              	.L81:
 1146 001c 0C020B40 		.word	1074463244
 1147              		.cfi_endproc
 1148              	.LFE11:
 1149              		.size	CySysClkGetLfclkSource, .-CySysClkGetLfclkSource
 1150              		.section	.text.CySysClkSetLfclkSource,"ax",%progbits
 1151              		.align	2
 1152              		.global	CySysClkSetLfclkSource
 1153              		.code	16
 1154              		.thumb_func
 1155              		.type	CySysClkSetLfclkSource, %function
 1156              	CySysClkSetLfclkSource:
 1157              	.LFB12:
ARM GAS  C:\Users\akita\AppData\Local\Temp\ccTFmJyh.s 			page 46


 691:Generated_Source\PSoC4/CyLFClk.c **** 
 692:Generated_Source\PSoC4/CyLFClk.c ****     
 693:Generated_Source\PSoC4/CyLFClk.c **** /*******************************************************************************
 694:Generated_Source\PSoC4/CyLFClk.c **** * Function Name: CySysClkSetLfclkSource
 695:Generated_Source\PSoC4/CyLFClk.c **** ****************************************************************************//**
 696:Generated_Source\PSoC4/CyLFClk.c **** * \brief
 697:Generated_Source\PSoC4/CyLFClk.c **** *  Sets the clock source for the LFCLK clock.
 698:Generated_Source\PSoC4/CyLFClk.c **** *
 699:Generated_Source\PSoC4/CyLFClk.c **** * The switch between LFCLK sources must be done between the positive edges of
 700:Generated_Source\PSoC4/CyLFClk.c **** * LFCLK, because the glitch risk is around the LFCLK positive edge. To ensure
 701:Generated_Source\PSoC4/CyLFClk.c **** * that the switch can be done safely, the WDT counter value is read until it
 702:Generated_Source\PSoC4/CyLFClk.c **** * changes.
 703:Generated_Source\PSoC4/CyLFClk.c **** *
 704:Generated_Source\PSoC4/CyLFClk.c **** * That means that the positive edge just finished and the switch is performed.
 705:Generated_Source\PSoC4/CyLFClk.c **** * The enabled WDT counter is used for that purpose. If no counters are enabled,
 706:Generated_Source\PSoC4/CyLFClk.c **** * counter 0 is enabled. And after the LFCLK source is switched, counter 0
 707:Generated_Source\PSoC4/CyLFClk.c **** * configuration is restored.
 708:Generated_Source\PSoC4/CyLFClk.c **** *
 709:Generated_Source\PSoC4/CyLFClk.c **** *  The function is applicable only for devices with more than one source for 
 710:Generated_Source\PSoC4/CyLFClk.c **** * LFCLK - PSoC 4100 BLE / PSoC 4200 BLE / PRoC BLE / PSoC 4100M / PSoC 4200M / 
 711:Generated_Source\PSoC4/CyLFClk.c **** * PSoC 4200L.
 712:Generated_Source\PSoC4/CyLFClk.c **** *
 713:Generated_Source\PSoC4/CyLFClk.c **** * \note For PSoC 4000S / PSoC 4100S / PSoC Analog Coprocessor devices LFCLK can
 714:Generated_Source\PSoC4/CyLFClk.c **** * only be sourced from ILO even though WCO is available.
 715:Generated_Source\PSoC4/CyLFClk.c **** *
 716:Generated_Source\PSoC4/CyLFClk.c **** * \param
 717:Generated_Source\PSoC4/CyLFClk.c **** * source
 718:Generated_Source\PSoC4/CyLFClk.c **** * CY_SYS_CLK_LFCLK_SRC_ILO - Internal Low Frequency (32 kHz) 
 719:Generated_Source\PSoC4/CyLFClk.c **** * Oscillator (ILO).<br>
 720:Generated_Source\PSoC4/CyLFClk.c **** * CY_SYS_CLK_LFCLK_SRC_WCO - Low Frequency Watch Crystal Oscillator (WCO).
 721:Generated_Source\PSoC4/CyLFClk.c **** *
 722:Generated_Source\PSoC4/CyLFClk.c **** * \details
 723:Generated_Source\PSoC4/CyLFClk.c **** * This function has no effect if WDT is locked (CySysWdtLock() is called). 
 724:Generated_Source\PSoC4/CyLFClk.c **** * Call CySysWdtUnlock() to unlock WDT.
 725:Generated_Source\PSoC4/CyLFClk.c **** *
 726:Generated_Source\PSoC4/CyLFClk.c **** * Both the current source and the new source must be running and stable before
 727:Generated_Source\PSoC4/CyLFClk.c **** * calling this function.
 728:Generated_Source\PSoC4/CyLFClk.c **** *
 729:Generated_Source\PSoC4/CyLFClk.c **** * Changing the LFCLK clock source may change the LFCLK clock frequency and
 730:Generated_Source\PSoC4/CyLFClk.c **** * affect the functionality that uses this clock. For example, watchdog timer
 731:Generated_Source\PSoC4/CyLFClk.c **** * "uses this clock" or "this clock uses" (WDT) is clocked by LFCLK.
 732:Generated_Source\PSoC4/CyLFClk.c **** *
 733:Generated_Source\PSoC4/CyLFClk.c **** *******************************************************************************/
 734:Generated_Source\PSoC4/CyLFClk.c ****     void CySysClkSetLfclkSource(uint32 source)
 735:Generated_Source\PSoC4/CyLFClk.c ****     {
 1158              		.loc 2 735 0
 1159              		.cfi_startproc
 1160 0000 90B5     		push	{r4, r7, lr}
 1161              		.cfi_def_cfa_offset 12
 1162              		.cfi_offset 4, -12
 1163              		.cfi_offset 7, -8
 1164              		.cfi_offset 14, -4
 1165 0002 85B0     		sub	sp, sp, #20
 1166              		.cfi_def_cfa_offset 32
 1167 0004 00AF     		add	r7, sp, #0
 1168              		.cfi_def_cfa_register 7
 1169 0006 7860     		str	r0, [r7, #4]
ARM GAS  C:\Users\akita\AppData\Local\Temp\ccTFmJyh.s 			page 47


 736:Generated_Source\PSoC4/CyLFClk.c ****         uint8  interruptState;
 737:Generated_Source\PSoC4/CyLFClk.c **** 
 738:Generated_Source\PSoC4/CyLFClk.c ****         if (CySysClkGetLfclkSource() != source)
 1170              		.loc 2 738 0
 1171 0008 FFF7FEFF 		bl	CySysClkGetLfclkSource
 1172 000c 021E     		sub	r2, r0, #0
 1173 000e 7B68     		ldr	r3, [r7, #4]
 1174 0010 9A42     		cmp	r2, r3
 1175 0012 19D0     		beq	.L83
 739:Generated_Source\PSoC4/CyLFClk.c ****         {
 740:Generated_Source\PSoC4/CyLFClk.c ****             interruptState = CyEnterCriticalSection();
 1176              		.loc 2 740 0
 1177 0014 0F23     		mov	r3, #15
 1178 0016 FC18     		add	r4, r7, r3
 1179 0018 FFF7FEFF 		bl	CyEnterCriticalSection
 1180 001c 031C     		mov	r3, r0
 1181 001e 2370     		strb	r3, [r4]
 741:Generated_Source\PSoC4/CyLFClk.c ****             CySysClkLfclkPosedgeCatch();
 1182              		.loc 2 741 0
 1183 0020 FFF7FEFF 		bl	CySysClkLfclkPosedgeCatch
 742:Generated_Source\PSoC4/CyLFClk.c ****             CY_SYS_WDT_CONFIG_REG = (CY_SYS_WDT_CONFIG_REG & (uint32)(~CY_SYS_CLK_LFCLK_SEL_MASK)) 
 1184              		.loc 2 742 0
 1185 0024 0A4B     		ldr	r3, .L85
 1186 0026 0A4A     		ldr	r2, .L85
 1187 0028 1268     		ldr	r2, [r2]
 1188 002a 9200     		lsl	r2, r2, #2
 1189 002c 9108     		lsr	r1, r2, #2
 743:Generated_Source\PSoC4/CyLFClk.c ****                                     (source & CY_SYS_CLK_LFCLK_SEL_MASK);
 1190              		.loc 2 743 0
 1191 002e 7A68     		ldr	r2, [r7, #4]
 1192 0030 920F     		lsr	r2, r2, #30
 1193 0032 9207     		lsl	r2, r2, #30
 742:Generated_Source\PSoC4/CyLFClk.c ****             CY_SYS_WDT_CONFIG_REG = (CY_SYS_WDT_CONFIG_REG & (uint32)(~CY_SYS_CLK_LFCLK_SEL_MASK)) 
 1194              		.loc 2 742 0
 1195 0034 0A43     		orr	r2, r1
 1196 0036 1A60     		str	r2, [r3]
 744:Generated_Source\PSoC4/CyLFClk.c ****             CySysClkLfclkPosedgeRestore();
 1197              		.loc 2 744 0
 1198 0038 FFF7FEFF 		bl	CySysClkLfclkPosedgeRestore
 745:Generated_Source\PSoC4/CyLFClk.c ****             CyExitCriticalSection(interruptState);
 1199              		.loc 2 745 0
 1200 003c 0F23     		mov	r3, #15
 1201 003e FB18     		add	r3, r7, r3
 1202 0040 1B78     		ldrb	r3, [r3]
 1203 0042 181C     		mov	r0, r3
 1204 0044 FFF7FEFF 		bl	CyExitCriticalSection
 1205              	.L83:
 746:Generated_Source\PSoC4/CyLFClk.c ****         }
 747:Generated_Source\PSoC4/CyLFClk.c ****     }
 1206              		.loc 2 747 0
 1207 0048 BD46     		mov	sp, r7
 1208 004a 05B0     		add	sp, sp, #20
 1209              		@ sp needed
 1210 004c 90BD     		pop	{r4, r7, pc}
 1211              	.L86:
 1212 004e C046     		.align	2
 1213              	.L85:
ARM GAS  C:\Users\akita\AppData\Local\Temp\ccTFmJyh.s 			page 48


 1214 0050 0C020B40 		.word	1074463244
 1215              		.cfi_endproc
 1216              	.LFE12:
 1217              		.size	CySysClkSetLfclkSource, .-CySysClkSetLfclkSource
 1218              		.section	.text.CySysClkWcoStart,"ax",%progbits
 1219              		.align	2
 1220              		.global	CySysClkWcoStart
 1221              		.code	16
 1222              		.thumb_func
 1223              		.type	CySysClkWcoStart, %function
 1224              	CySysClkWcoStart:
 1225              	.LFB13:
 748:Generated_Source\PSoC4/CyLFClk.c **** #endif /* (CY_IP_WCO && CY_IP_SRSSV2) */
 749:Generated_Source\PSoC4/CyLFClk.c **** 
 750:Generated_Source\PSoC4/CyLFClk.c **** 
 751:Generated_Source\PSoC4/CyLFClk.c **** #if (CY_IP_WCO)
 752:Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
 753:Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysClkWcoStart
 754:Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
 755:Generated_Source\PSoC4/CyLFClk.c ****     * \brief
 756:Generated_Source\PSoC4/CyLFClk.c ****     *  Enables Watch Crystal Oscillator (WCO).
 757:Generated_Source\PSoC4/CyLFClk.c ****     * 
 758:Generated_Source\PSoC4/CyLFClk.c ****     * This API enables WCO which is used as a source for LFCLK. Similar to ILO, 
 759:Generated_Source\PSoC4/CyLFClk.c ****     * WCO is also available in all modes except Hibernate and Stop modes.
 760:Generated_Source\PSoC4/CyLFClk.c ****     * \note In PSoC 4000S / PSoC 4100S / PSoC Analog Coprocessor devices
 761:Generated_Source\PSoC4/CyLFClk.c ****     * WCO cannot be a source for the LFCLK. 
 762:Generated_Source\PSoC4/CyLFClk.c ****     *
 763:Generated_Source\PSoC4/CyLFClk.c ****     *  WCO is always enabled in High Power Mode (HPM). Refer to the device
 764:Generated_Source\PSoC4/CyLFClk.c ****     *  datasheet for the  WCO startup time. Once WCO becomes stable it can be
 765:Generated_Source\PSoC4/CyLFClk.c ****     *  switched to Low Power Mode (LPM). Note that oscillator can be unstable
 766:Generated_Source\PSoC4/CyLFClk.c ****     *  during a switch and hence its output should not be used at that moment.
 767:Generated_Source\PSoC4/CyLFClk.c ****     *
 768:Generated_Source\PSoC4/CyLFClk.c ****     *  The CySysClkWcoSetPowerMode() function configures the WCO power mode.
 769:Generated_Source\PSoC4/CyLFClk.c ****     *
 770:Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
 771:Generated_Source\PSoC4/CyLFClk.c ****     void CySysClkWcoStart(void)
 772:Generated_Source\PSoC4/CyLFClk.c ****     {
 1226              		.loc 2 772 0
 1227              		.cfi_startproc
 1228 0000 80B5     		push	{r7, lr}
 1229              		.cfi_def_cfa_offset 8
 1230              		.cfi_offset 7, -8
 1231              		.cfi_offset 14, -4
 1232 0002 00AF     		add	r7, sp, #0
 1233              		.cfi_def_cfa_register 7
 773:Generated_Source\PSoC4/CyLFClk.c ****         CySysClkWcoSetHighPowerMode();
 1234              		.loc 2 773 0
 1235 0004 FFF7FEFF 		bl	CySysClkWcoSetHighPowerMode
 774:Generated_Source\PSoC4/CyLFClk.c ****         CY_SYS_CLK_WCO_CONFIG_REG |= CY_SYS_CLK_WCO_CONFIG_LPM_ENABLE;
 1236              		.loc 2 774 0
 1237 0008 044B     		ldr	r3, .L88
 1238 000a 044A     		ldr	r2, .L88
 1239 000c 1268     		ldr	r2, [r2]
 1240 000e 8021     		mov	r1, #128
 1241 0010 0906     		lsl	r1, r1, #24
 1242 0012 0A43     		orr	r2, r1
 1243 0014 1A60     		str	r2, [r3]
ARM GAS  C:\Users\akita\AppData\Local\Temp\ccTFmJyh.s 			page 49


 775:Generated_Source\PSoC4/CyLFClk.c ****     }
 1244              		.loc 2 775 0
 1245 0016 BD46     		mov	sp, r7
 1246              		@ sp needed
 1247 0018 80BD     		pop	{r7, pc}
 1248              	.L89:
 1249 001a C046     		.align	2
 1250              	.L88:
 1251 001c 00F02E40 		.word	1076817920
 1252              		.cfi_endproc
 1253              	.LFE13:
 1254              		.size	CySysClkWcoStart, .-CySysClkWcoStart
 1255              		.section	.text.CySysClkWcoStop,"ax",%progbits
 1256              		.align	2
 1257              		.global	CySysClkWcoStop
 1258              		.code	16
 1259              		.thumb_func
 1260              		.type	CySysClkWcoStop, %function
 1261              	CySysClkWcoStop:
 1262              	.LFB14:
 776:Generated_Source\PSoC4/CyLFClk.c **** 
 777:Generated_Source\PSoC4/CyLFClk.c **** 
 778:Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
 779:Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysClkWcoStop
 780:Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
 781:Generated_Source\PSoC4/CyLFClk.c ****     * \brief
 782:Generated_Source\PSoC4/CyLFClk.c ****     * Disables the 32 KHz Crystal Oscillator.
 783:Generated_Source\PSoC4/CyLFClk.c ****     *
 784:Generated_Source\PSoC4/CyLFClk.c ****     * API switch of WCO.
 785:Generated_Source\PSoC4/CyLFClk.c ****     * \note PSoC 4100S / PSoC Analog Coprocessor: WCO is required for DeepSleep 
 786:Generated_Source\PSoC4/CyLFClk.c ****     * Timer's operation.
 787:Generated_Source\PSoC4/CyLFClk.c ****     *
 788:Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
 789:Generated_Source\PSoC4/CyLFClk.c ****     void  CySysClkWcoStop(void)
 790:Generated_Source\PSoC4/CyLFClk.c ****     {
 1263              		.loc 2 790 0
 1264              		.cfi_startproc
 1265 0000 90B5     		push	{r4, r7, lr}
 1266              		.cfi_def_cfa_offset 12
 1267              		.cfi_offset 4, -12
 1268              		.cfi_offset 7, -8
 1269              		.cfi_offset 14, -4
 1270 0002 83B0     		sub	sp, sp, #12
 1271              		.cfi_def_cfa_offset 24
 1272 0004 00AF     		add	r7, sp, #0
 1273              		.cfi_def_cfa_register 7
 791:Generated_Source\PSoC4/CyLFClk.c ****         #if (CY_IP_SRSSV2)
 792:Generated_Source\PSoC4/CyLFClk.c ****             uint8  interruptState;
 793:Generated_Source\PSoC4/CyLFClk.c ****         #endif /* (CY_IP_SRSSV2) */
 794:Generated_Source\PSoC4/CyLFClk.c **** 
 795:Generated_Source\PSoC4/CyLFClk.c ****         if (0u != CySysClkWcoEnabled())
 1274              		.loc 2 795 0
 1275 0006 FFF7FEFF 		bl	CySysClkWcoEnabled
 1276 000a 031E     		sub	r3, r0, #0
 1277 000c 21D0     		beq	.L90
 796:Generated_Source\PSoC4/CyLFClk.c ****         {
 797:Generated_Source\PSoC4/CyLFClk.c ****             #if (CY_IP_SRSSV2)
ARM GAS  C:\Users\akita\AppData\Local\Temp\ccTFmJyh.s 			page 50


 798:Generated_Source\PSoC4/CyLFClk.c ****                 if (CY_SYS_CLK_LFCLK_SRC_WCO == CySysClkGetLfclkSource())
 1278              		.loc 2 798 0
 1279 000e FFF7FEFF 		bl	CySysClkGetLfclkSource
 1280 0012 021C     		mov	r2, r0
 1281 0014 8023     		mov	r3, #128
 1282 0016 DB05     		lsl	r3, r3, #23
 1283 0018 9A42     		cmp	r2, r3
 1284 001a 14D1     		bne	.L92
 799:Generated_Source\PSoC4/CyLFClk.c ****                 {
 800:Generated_Source\PSoC4/CyLFClk.c ****                     interruptState = CyEnterCriticalSection();
 1285              		.loc 2 800 0
 1286 001c FC1D     		add	r4, r7, #7
 1287 001e FFF7FEFF 		bl	CyEnterCriticalSection
 1288 0022 031C     		mov	r3, r0
 1289 0024 2370     		strb	r3, [r4]
 801:Generated_Source\PSoC4/CyLFClk.c ****                     CySysClkLfclkPosedgeCatch();
 1290              		.loc 2 801 0
 1291 0026 FFF7FEFF 		bl	CySysClkLfclkPosedgeCatch
 802:Generated_Source\PSoC4/CyLFClk.c ****                     CY_SYS_CLK_WCO_CONFIG_REG &= (uint32) ~CY_SYS_CLK_WCO_CONFIG_LPM_ENABLE;
 1292              		.loc 2 802 0
 1293 002a 0B4B     		ldr	r3, .L93
 1294 002c 0A4A     		ldr	r2, .L93
 1295 002e 1268     		ldr	r2, [r2]
 1296 0030 5200     		lsl	r2, r2, #1
 1297 0032 5208     		lsr	r2, r2, #1
 1298 0034 1A60     		str	r2, [r3]
 803:Generated_Source\PSoC4/CyLFClk.c ****                     CySysClkLfclkPosedgeRestore();
 1299              		.loc 2 803 0
 1300 0036 FFF7FEFF 		bl	CySysClkLfclkPosedgeRestore
 804:Generated_Source\PSoC4/CyLFClk.c ****                     CyExitCriticalSection(interruptState);
 1301              		.loc 2 804 0
 1302 003a FB1D     		add	r3, r7, #7
 1303 003c 1B78     		ldrb	r3, [r3]
 1304 003e 181C     		mov	r0, r3
 1305 0040 FFF7FEFF 		bl	CyExitCriticalSection
 1306 0044 05E0     		b	.L90
 1307              	.L92:
 805:Generated_Source\PSoC4/CyLFClk.c ****                 }
 806:Generated_Source\PSoC4/CyLFClk.c ****                 else /* Safe to disable - shortened pulse does not impact peripheral */
 807:Generated_Source\PSoC4/CyLFClk.c ****             #endif /* (CY_IP_SRSSV2) */
 808:Generated_Source\PSoC4/CyLFClk.c ****             {
 809:Generated_Source\PSoC4/CyLFClk.c ****                 CY_SYS_CLK_WCO_CONFIG_REG &= (uint32) ~CY_SYS_CLK_WCO_CONFIG_LPM_ENABLE;
 1308              		.loc 2 809 0
 1309 0046 044B     		ldr	r3, .L93
 1310 0048 034A     		ldr	r2, .L93
 1311 004a 1268     		ldr	r2, [r2]
 1312 004c 5200     		lsl	r2, r2, #1
 1313 004e 5208     		lsr	r2, r2, #1
 1314 0050 1A60     		str	r2, [r3]
 1315              	.L90:
 810:Generated_Source\PSoC4/CyLFClk.c ****             }
 811:Generated_Source\PSoC4/CyLFClk.c ****         } /* Otherwise do nothing. WCO configuration cannot be changed. */
 812:Generated_Source\PSoC4/CyLFClk.c ****     }
 1316              		.loc 2 812 0
 1317 0052 BD46     		mov	sp, r7
 1318 0054 03B0     		add	sp, sp, #12
 1319              		@ sp needed
ARM GAS  C:\Users\akita\AppData\Local\Temp\ccTFmJyh.s 			page 51


 1320 0056 90BD     		pop	{r4, r7, pc}
 1321              	.L94:
 1322              		.align	2
 1323              	.L93:
 1324 0058 00F02E40 		.word	1076817920
 1325              		.cfi_endproc
 1326              	.LFE14:
 1327              		.size	CySysClkWcoStop, .-CySysClkWcoStop
 1328              		.section	.text.CySysClkWcoEnabled,"ax",%progbits
 1329              		.align	2
 1330              		.global	CySysClkWcoEnabled
 1331              		.code	16
 1332              		.thumb_func
 1333              		.type	CySysClkWcoEnabled, %function
 1334              	CySysClkWcoEnabled:
 1335              	.LFB15:
 813:Generated_Source\PSoC4/CyLFClk.c **** 
 814:Generated_Source\PSoC4/CyLFClk.c **** 
 815:Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
 816:Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysClkWcoEnabled
 817:Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
 818:Generated_Source\PSoC4/CyLFClk.c ****     * \internal Reports the WCO enable state.
 819:Generated_Source\PSoC4/CyLFClk.c ****     *
 820:Generated_Source\PSoC4/CyLFClk.c ****     * \return 1 if WCO is enabled
 821:Generated_Source\PSoC4/CyLFClk.c ****     * \return 0 if WCO is disabled.
 822:Generated_Source\PSoC4/CyLFClk.c ****     * \endinternal
 823:Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
 824:Generated_Source\PSoC4/CyLFClk.c ****     uint32 CySysClkWcoEnabled(void)
 825:Generated_Source\PSoC4/CyLFClk.c ****     {
 1336              		.loc 2 825 0
 1337              		.cfi_startproc
 1338 0000 80B5     		push	{r7, lr}
 1339              		.cfi_def_cfa_offset 8
 1340              		.cfi_offset 7, -8
 1341              		.cfi_offset 14, -4
 1342 0002 00AF     		add	r7, sp, #0
 1343              		.cfi_def_cfa_register 7
 826:Generated_Source\PSoC4/CyLFClk.c ****         return ((0u != (CY_SYS_CLK_WCO_CONFIG_REG & (uint32)(CY_SYS_CLK_WCO_CONFIG_LPM_ENABLE))) ?
 1344              		.loc 2 826 0
 1345 0004 044B     		ldr	r3, .L99
 1346 0006 1B68     		ldr	r3, [r3]
 827:Generated_Source\PSoC4/CyLFClk.c ****                 (uint32) 1u :
 1347              		.loc 2 827 0
 1348 0008 002B     		cmp	r3, #0
 1349 000a 01DA     		bge	.L96
 1350              		.loc 2 827 0 is_stmt 0 discriminator 1
 1351 000c 0123     		mov	r3, #1
 1352 000e 00E0     		b	.L97
 1353              	.L96:
 1354              		.loc 2 827 0 discriminator 2
 1355 0010 0023     		mov	r3, #0
 1356              	.L97:
 828:Generated_Source\PSoC4/CyLFClk.c ****                 (uint32) 0u);
 829:Generated_Source\PSoC4/CyLFClk.c ****     }
 1357              		.loc 2 829 0 is_stmt 1
 1358 0012 181C     		mov	r0, r3
 1359 0014 BD46     		mov	sp, r7
ARM GAS  C:\Users\akita\AppData\Local\Temp\ccTFmJyh.s 			page 52


 1360              		@ sp needed
 1361 0016 80BD     		pop	{r7, pc}
 1362              	.L100:
 1363              		.align	2
 1364              	.L99:
 1365 0018 00F02E40 		.word	1076817920
 1366              		.cfi_endproc
 1367              	.LFE15:
 1368              		.size	CySysClkWcoEnabled, .-CySysClkWcoEnabled
 1369              		.section	.text.CySysClkWcoSetPowerMode,"ax",%progbits
 1370              		.align	2
 1371              		.global	CySysClkWcoSetPowerMode
 1372              		.code	16
 1373              		.thumb_func
 1374              		.type	CySysClkWcoSetPowerMode, %function
 1375              	CySysClkWcoSetPowerMode:
 1376              	.LFB16:
 830:Generated_Source\PSoC4/CyLFClk.c **** 
 831:Generated_Source\PSoC4/CyLFClk.c **** 
 832:Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
 833:Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysClkWcoSetPowerMode
 834:Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
 835:Generated_Source\PSoC4/CyLFClk.c ****     * \brief
 836:Generated_Source\PSoC4/CyLFClk.c ****     * Sets the power mode for the 32 KHz WCO.
 837:Generated_Source\PSoC4/CyLFClk.c ****     *
 838:Generated_Source\PSoC4/CyLFClk.c ****     * By default (if this function is not called), the WCO is in High power mode 
 839:Generated_Source\PSoC4/CyLFClk.c ****     * during Active and device's low power modes
 840:Generated_Source\PSoC4/CyLFClk.c ****     *
 841:Generated_Source\PSoC4/CyLFClk.c ****     * \param mode
 842:Generated_Source\PSoC4/CyLFClk.c ****     * CY_SYS_CLK_WCO_HPM - The High Power mode.<br>
 843:Generated_Source\PSoC4/CyLFClk.c ****     * CY_SYS_CLK_WCO_LPM - The Low Power mode.
 844:Generated_Source\PSoC4/CyLFClk.c ****     *
 845:Generated_Source\PSoC4/CyLFClk.c ****     * \return A previous power mode. The same as the parameters.
 846:Generated_Source\PSoC4/CyLFClk.c ****     *
 847:Generated_Source\PSoC4/CyLFClk.c ****     * \note
 848:Generated_Source\PSoC4/CyLFClk.c ****     * The WCO Low Power mode is applicable for PSoC 4100 BLE / PSoC 4200 BLE devices.
 849:Generated_Source\PSoC4/CyLFClk.c ****     *
 850:Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
 851:Generated_Source\PSoC4/CyLFClk.c ****     uint32 CySysClkWcoSetPowerMode(uint32 mode)
 852:Generated_Source\PSoC4/CyLFClk.c ****     {
 1377              		.loc 2 852 0
 1378              		.cfi_startproc
 1379 0000 80B5     		push	{r7, lr}
 1380              		.cfi_def_cfa_offset 8
 1381              		.cfi_offset 7, -8
 1382              		.cfi_offset 14, -4
 1383 0002 84B0     		sub	sp, sp, #16
 1384              		.cfi_def_cfa_offset 24
 1385 0004 00AF     		add	r7, sp, #0
 1386              		.cfi_def_cfa_register 7
 1387 0006 7860     		str	r0, [r7, #4]
 853:Generated_Source\PSoC4/CyLFClk.c ****         uint32 powerModeStatus;
 854:Generated_Source\PSoC4/CyLFClk.c **** 
 855:Generated_Source\PSoC4/CyLFClk.c ****         powerModeStatus = CY_SYS_CLK_WCO_CONFIG_REG & CY_SYS_CLK_WCO_CONFIG_LPM_EN;
 1388              		.loc 2 855 0
 1389 0008 0C4B     		ldr	r3, .L108
 1390 000a 1B68     		ldr	r3, [r3]
ARM GAS  C:\Users\akita\AppData\Local\Temp\ccTFmJyh.s 			page 53


 1391 000c 0122     		mov	r2, #1
 1392 000e 1340     		and	r3, r2
 1393 0010 FB60     		str	r3, [r7, #12]
 856:Generated_Source\PSoC4/CyLFClk.c **** 
 857:Generated_Source\PSoC4/CyLFClk.c ****         switch(mode)
 1394              		.loc 2 857 0
 1395 0012 7B68     		ldr	r3, [r7, #4]
 1396 0014 002B     		cmp	r3, #0
 1397 0016 02D0     		beq	.L103
 1398 0018 012B     		cmp	r3, #1
 1399 001a 03D0     		beq	.L104
 1400 001c 05E0     		b	.L107
 1401              	.L103:
 858:Generated_Source\PSoC4/CyLFClk.c ****         {
 859:Generated_Source\PSoC4/CyLFClk.c ****         case CY_SYS_CLK_WCO_HPM:
 860:Generated_Source\PSoC4/CyLFClk.c ****                 CySysClkWcoSetHighPowerMode();
 1402              		.loc 2 860 0
 1403 001e FFF7FEFF 		bl	CySysClkWcoSetHighPowerMode
 861:Generated_Source\PSoC4/CyLFClk.c ****             break;
 1404              		.loc 2 861 0
 1405 0022 06E0     		b	.L105
 1406              	.L104:
 862:Generated_Source\PSoC4/CyLFClk.c **** 
 863:Generated_Source\PSoC4/CyLFClk.c ****         #if(CY_PSOC4_4100BL || CY_PSOC4_4200BL)
 864:Generated_Source\PSoC4/CyLFClk.c ****             case CY_SYS_CLK_WCO_LPM:
 865:Generated_Source\PSoC4/CyLFClk.c ****                     CySysClkWcoSetLowPowerMode();
 1407              		.loc 2 865 0
 1408 0024 FFF7FEFF 		bl	CySysClkWcoSetLowPowerMode
 866:Generated_Source\PSoC4/CyLFClk.c ****                 break;
 1409              		.loc 2 866 0
 1410 0028 03E0     		b	.L105
 1411              	.L107:
 867:Generated_Source\PSoC4/CyLFClk.c ****         #endif /* (CY_PSOC4_4100BL || CY_PSOC4_4200BL) */
 868:Generated_Source\PSoC4/CyLFClk.c **** 
 869:Generated_Source\PSoC4/CyLFClk.c ****         default:
 870:Generated_Source\PSoC4/CyLFClk.c ****             CYASSERT(0u != 0u);
 1412              		.loc 2 870 0
 1413 002a 0020     		mov	r0, #0
 1414 002c FFF7FEFF 		bl	CyHalt
 871:Generated_Source\PSoC4/CyLFClk.c ****             break;
 1415              		.loc 2 871 0
 1416 0030 C046     		mov	r8, r8
 1417              	.L105:
 872:Generated_Source\PSoC4/CyLFClk.c ****         }
 873:Generated_Source\PSoC4/CyLFClk.c **** 
 874:Generated_Source\PSoC4/CyLFClk.c ****         return (powerModeStatus);
 1418              		.loc 2 874 0
 1419 0032 FB68     		ldr	r3, [r7, #12]
 875:Generated_Source\PSoC4/CyLFClk.c ****     }
 1420              		.loc 2 875 0
 1421 0034 181C     		mov	r0, r3
 1422 0036 BD46     		mov	sp, r7
 1423 0038 04B0     		add	sp, sp, #16
 1424              		@ sp needed
 1425 003a 80BD     		pop	{r7, pc}
 1426              	.L109:
 1427              		.align	2
ARM GAS  C:\Users\akita\AppData\Local\Temp\ccTFmJyh.s 			page 54


 1428              	.L108:
 1429 003c 00F02E40 		.word	1076817920
 1430              		.cfi_endproc
 1431              	.LFE16:
 1432              		.size	CySysClkWcoSetPowerMode, .-CySysClkWcoSetPowerMode
 1433              		.section	.text.CySysClkWcoClockOutSelect,"ax",%progbits
 1434              		.align	2
 1435              		.global	CySysClkWcoClockOutSelect
 1436              		.code	16
 1437              		.thumb_func
 1438              		.type	CySysClkWcoClockOutSelect, %function
 1439              	CySysClkWcoClockOutSelect:
 1440              	.LFB17:
 876:Generated_Source\PSoC4/CyLFClk.c **** 
 877:Generated_Source\PSoC4/CyLFClk.c **** 
 878:Generated_Source\PSoC4/CyLFClk.c **** /*******************************************************************************
 879:Generated_Source\PSoC4/CyLFClk.c **** * Function Name: CySysClkWcoClockOutSelect
 880:Generated_Source\PSoC4/CyLFClk.c **** ****************************************************************************//**
 881:Generated_Source\PSoC4/CyLFClk.c **** * \brief
 882:Generated_Source\PSoC4/CyLFClk.c **** * Selects the WCO block output source.
 883:Generated_Source\PSoC4/CyLFClk.c **** *
 884:Generated_Source\PSoC4/CyLFClk.c **** * In addition to generating 32.768 kHz clock from external crystals, WCO 
 885:Generated_Source\PSoC4/CyLFClk.c **** * can be sourced by external clock source using wco_out pin. The API help to
 886:Generated_Source\PSoC4/CyLFClk.c **** * lets you select between the sources: External crystal or external pin.
 887:Generated_Source\PSoC4/CyLFClk.c **** *
 888:Generated_Source\PSoC4/CyLFClk.c **** * If you want to use external pin to drive WCO the next procedure is required:
 889:Generated_Source\PSoC4/CyLFClk.c **** * <br> 1) Disable the WCO.
 890:Generated_Source\PSoC4/CyLFClk.c **** * <br> 2) Drive the wco_out pin to an external signal source.
 891:Generated_Source\PSoC4/CyLFClk.c **** * <br> 3) Call CySysClkWcoClockOutSelect(CY_SYS_CLK_WCO_SEL_PIN).
 892:Generated_Source\PSoC4/CyLFClk.c **** * <br> 4) Enable the WCO and wait for 15 us before clocking the XO pad at the high 
 893:Generated_Source\PSoC4/CyLFClk.c **** * potential. Let's assume you are using the 1.6v clock amplitude, then the
 894:Generated_Source\PSoC4/CyLFClk.c **** * sequence would start at 1.6v, then 0v, then 1.6v etc at a chosen frequency.
 895:Generated_Source\PSoC4/CyLFClk.c **** *
 896:Generated_Source\PSoC4/CyLFClk.c **** * If you want to use WCO after using an external pin source:
 897:Generated_Source\PSoC4/CyLFClk.c **** * <br> 1) Disable the WCO.
 898:Generated_Source\PSoC4/CyLFClk.c **** * <br> 2) Drive off wco_out pin with external signal source.
 899:Generated_Source\PSoC4/CyLFClk.c **** * <br> 3) Call CySysClkWcoClockOutSelect(CY_SYS_CLK_WCO_SEL_CRYSTAL).
 900:Generated_Source\PSoC4/CyLFClk.c **** * <br> 4) Enable the WCO.
 901:Generated_Source\PSoC4/CyLFClk.c **** *
 902:Generated_Source\PSoC4/CyLFClk.c **** * \warning 
 903:Generated_Source\PSoC4/CyLFClk.c **** * Do not use the oscillator output clock prior to a 15uS delay in your system.
 904:Generated_Source\PSoC4/CyLFClk.c **** * There are no limitations on the external clock frequency.
 905:Generated_Source\PSoC4/CyLFClk.c **** * \warning 
 906:Generated_Source\PSoC4/CyLFClk.c **** * When external clock source was selected to drive WCO block the IMO can be 
 907:Generated_Source\PSoC4/CyLFClk.c **** * trimmed only when external clock source period is equal to WCO external
 908:Generated_Source\PSoC4/CyLFClk.c **** * crystal period. Also external clock source accuracy should be higher 
 909:Generated_Source\PSoC4/CyLFClk.c **** * or equal to WCO external crystal accuracy.
 910:Generated_Source\PSoC4/CyLFClk.c **** *
 911:Generated_Source\PSoC4/CyLFClk.c **** * \param clockSel
 912:Generated_Source\PSoC4/CyLFClk.c **** * CY_SYS_CLK_WCO_SEL_CRYSTAL - Selects External crystal as clock 
 913:Generated_Source\PSoC4/CyLFClk.c **** * source of WCO.<br>
 914:Generated_Source\PSoC4/CyLFClk.c **** * CY_SYS_CLK_WCO_SEL_PIN - Selects External clock input on wco_in pin as 
 915:Generated_Source\PSoC4/CyLFClk.c **** * clock source of WCO.
 916:Generated_Source\PSoC4/CyLFClk.c **** *
 917:Generated_Source\PSoC4/CyLFClk.c **** *******************************************************************************/
 918:Generated_Source\PSoC4/CyLFClk.c **** void CySysClkWcoClockOutSelect(uint32 clockSel)
 919:Generated_Source\PSoC4/CyLFClk.c ****     {
ARM GAS  C:\Users\akita\AppData\Local\Temp\ccTFmJyh.s 			page 55


 1441              		.loc 2 919 0
 1442              		.cfi_startproc
 1443 0000 80B5     		push	{r7, lr}
 1444              		.cfi_def_cfa_offset 8
 1445              		.cfi_offset 7, -8
 1446              		.cfi_offset 14, -4
 1447 0002 82B0     		sub	sp, sp, #8
 1448              		.cfi_def_cfa_offset 16
 1449 0004 00AF     		add	r7, sp, #0
 1450              		.cfi_def_cfa_register 7
 1451 0006 7860     		str	r0, [r7, #4]
 920:Generated_Source\PSoC4/CyLFClk.c ****         if (0u != CySysClkWcoEnabled())
 1452              		.loc 2 920 0
 1453 0008 FFF7FEFF 		bl	CySysClkWcoEnabled
 1454 000c 031E     		sub	r3, r0, #0
 1455 000e 10D0     		beq	.L110
 921:Generated_Source\PSoC4/CyLFClk.c ****         {
 922:Generated_Source\PSoC4/CyLFClk.c ****             if (1u >= clockSel)
 1456              		.loc 2 922 0
 1457 0010 7B68     		ldr	r3, [r7, #4]
 1458 0012 012B     		cmp	r3, #1
 1459 0014 0AD8     		bhi	.L112
 923:Generated_Source\PSoC4/CyLFClk.c ****             {
 924:Generated_Source\PSoC4/CyLFClk.c ****                 CY_SYS_CLK_WCO_CONFIG_REG = (CY_SYS_CLK_WCO_CONFIG_REG & (uint32)(~CY_SYS_CLK_WCO_S
 1460              		.loc 2 924 0
 1461 0016 084B     		ldr	r3, .L113
 1462 0018 074A     		ldr	r2, .L113
 1463 001a 1268     		ldr	r2, [r2]
 1464 001c 0421     		mov	r1, #4
 1465 001e 8A43     		bic	r2, r1
 1466 0020 111C     		mov	r1, r2
 925:Generated_Source\PSoC4/CyLFClk.c ****                                         (clockSel << CY_SYS_CLK_WCO_SELECT_PIN_OFFSET);
 1467              		.loc 2 925 0
 1468 0022 7A68     		ldr	r2, [r7, #4]
 1469 0024 9200     		lsl	r2, r2, #2
 924:Generated_Source\PSoC4/CyLFClk.c ****                                         (clockSel << CY_SYS_CLK_WCO_SELECT_PIN_OFFSET);
 1470              		.loc 2 924 0
 1471 0026 0A43     		orr	r2, r1
 1472 0028 1A60     		str	r2, [r3]
 1473 002a 02E0     		b	.L110
 1474              	.L112:
 926:Generated_Source\PSoC4/CyLFClk.c ****             }
 927:Generated_Source\PSoC4/CyLFClk.c ****             else
 928:Generated_Source\PSoC4/CyLFClk.c ****             {
 929:Generated_Source\PSoC4/CyLFClk.c ****                 CYASSERT(0u != 0u);
 1475              		.loc 2 929 0 discriminator 1
 1476 002c 0020     		mov	r0, #0
 1477 002e FFF7FEFF 		bl	CyHalt
 1478              	.L110:
 930:Generated_Source\PSoC4/CyLFClk.c ****             }
 931:Generated_Source\PSoC4/CyLFClk.c ****         }
 932:Generated_Source\PSoC4/CyLFClk.c ****     }
 1479              		.loc 2 932 0
 1480 0032 BD46     		mov	sp, r7
 1481 0034 02B0     		add	sp, sp, #8
 1482              		@ sp needed
 1483 0036 80BD     		pop	{r7, pc}
ARM GAS  C:\Users\akita\AppData\Local\Temp\ccTFmJyh.s 			page 56


 1484              	.L114:
 1485              		.align	2
 1486              	.L113:
 1487 0038 00F02E40 		.word	1076817920
 1488              		.cfi_endproc
 1489              	.LFE17:
 1490              		.size	CySysClkWcoClockOutSelect, .-CySysClkWcoClockOutSelect
 1491              		.section	.text.CySysWdtLock,"ax",%progbits
 1492              		.align	2
 1493              		.global	CySysWdtLock
 1494              		.code	16
 1495              		.thumb_func
 1496              		.type	CySysWdtLock, %function
 1497              	CySysWdtLock:
 1498              	.LFB18:
 933:Generated_Source\PSoC4/CyLFClk.c **** #endif  /* (CY_IP_WCO) */
 934:Generated_Source\PSoC4/CyLFClk.c **** 
 935:Generated_Source\PSoC4/CyLFClk.c **** 
 936:Generated_Source\PSoC4/CyLFClk.c **** #if(CY_IP_SRSSV2)
 937:Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
 938:Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysWdtLock
 939:Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
 940:Generated_Source\PSoC4/CyLFClk.c ****     * \brief
 941:Generated_Source\PSoC4/CyLFClk.c ****     * Locks out configuration changes to the Watchdog timer registers and ILO
 942:Generated_Source\PSoC4/CyLFClk.c ****     * configuration register.
 943:Generated_Source\PSoC4/CyLFClk.c ****     *
 944:Generated_Source\PSoC4/CyLFClk.c ****     * After this function is called, ILO clock can't be disabled until
 945:Generated_Source\PSoC4/CyLFClk.c ****     * CySysWdtUnlock() is called.
 946:Generated_Source\PSoC4/CyLFClk.c ****     *
 947:Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
 948:Generated_Source\PSoC4/CyLFClk.c ****     void CySysWdtLock(void)
 949:Generated_Source\PSoC4/CyLFClk.c ****     {
 1499              		.loc 2 949 0
 1500              		.cfi_startproc
 1501 0000 90B5     		push	{r4, r7, lr}
 1502              		.cfi_def_cfa_offset 12
 1503              		.cfi_offset 4, -12
 1504              		.cfi_offset 7, -8
 1505              		.cfi_offset 14, -4
 1506 0002 83B0     		sub	sp, sp, #12
 1507              		.cfi_def_cfa_offset 24
 1508 0004 00AF     		add	r7, sp, #0
 1509              		.cfi_def_cfa_register 7
 950:Generated_Source\PSoC4/CyLFClk.c ****         uint8 interruptState;
 951:Generated_Source\PSoC4/CyLFClk.c ****         interruptState = CyEnterCriticalSection();
 1510              		.loc 2 951 0
 1511 0006 FC1D     		add	r4, r7, #7
 1512 0008 FFF7FEFF 		bl	CyEnterCriticalSection
 1513 000c 031C     		mov	r3, r0
 1514 000e 2370     		strb	r3, [r4]
 952:Generated_Source\PSoC4/CyLFClk.c **** 
 953:Generated_Source\PSoC4/CyLFClk.c ****         CY_SYS_CLK_SELECT_REG = (CY_SYS_CLK_SELECT_REG & (uint32)(~CY_SYS_WDT_CLK_LOCK_BITS_MASK)) 
 1515              		.loc 2 953 0
 1516 0010 074B     		ldr	r3, .L116
 1517 0012 074A     		ldr	r2, .L116
 1518 0014 1268     		ldr	r2, [r2]
 1519 0016 C021     		mov	r1, #192
ARM GAS  C:\Users\akita\AppData\Local\Temp\ccTFmJyh.s 			page 57


 1520 0018 0902     		lsl	r1, r1, #8
 1521 001a 0A43     		orr	r2, r1
 1522 001c 1A60     		str	r2, [r3]
 954:Generated_Source\PSoC4/CyLFClk.c ****                  CY_SYS_WDT_CLK_LOCK_BITS_MASK;
 955:Generated_Source\PSoC4/CyLFClk.c **** 
 956:Generated_Source\PSoC4/CyLFClk.c ****         CyExitCriticalSection(interruptState);
 1523              		.loc 2 956 0
 1524 001e FB1D     		add	r3, r7, #7
 1525 0020 1B78     		ldrb	r3, [r3]
 1526 0022 181C     		mov	r0, r3
 1527 0024 FFF7FEFF 		bl	CyExitCriticalSection
 957:Generated_Source\PSoC4/CyLFClk.c ****     }
 1528              		.loc 2 957 0
 1529 0028 BD46     		mov	sp, r7
 1530 002a 03B0     		add	sp, sp, #12
 1531              		@ sp needed
 1532 002c 90BD     		pop	{r4, r7, pc}
 1533              	.L117:
 1534 002e C046     		.align	2
 1535              	.L116:
 1536 0030 00010B40 		.word	1074462976
 1537              		.cfi_endproc
 1538              	.LFE18:
 1539              		.size	CySysWdtLock, .-CySysWdtLock
 1540              		.section	.text.CySysWdtLocked,"ax",%progbits
 1541              		.align	2
 1542              		.code	16
 1543              		.thumb_func
 1544              		.type	CySysWdtLocked, %function
 1545              	CySysWdtLocked:
 1546              	.LFB19:
 958:Generated_Source\PSoC4/CyLFClk.c **** 
 959:Generated_Source\PSoC4/CyLFClk.c **** 
 960:Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
 961:Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysWdtLocked
 962:Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
 963:Generated_Source\PSoC4/CyLFClk.c ****     * \internal
 964:Generated_Source\PSoC4/CyLFClk.c ****     * Reports the WDT lock state.
 965:Generated_Source\PSoC4/CyLFClk.c ****     *
 966:Generated_Source\PSoC4/CyLFClk.c ****     * \return 1 - WDT is locked, and 0 - WDT is unlocked.
 967:Generated_Source\PSoC4/CyLFClk.c ****     * \endinternal
 968:Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
 969:Generated_Source\PSoC4/CyLFClk.c ****     static uint32 CySysWdtLocked(void)
 970:Generated_Source\PSoC4/CyLFClk.c ****     {
 1547              		.loc 2 970 0
 1548              		.cfi_startproc
 1549 0000 80B5     		push	{r7, lr}
 1550              		.cfi_def_cfa_offset 8
 1551              		.cfi_offset 7, -8
 1552              		.cfi_offset 14, -4
 1553 0002 00AF     		add	r7, sp, #0
 1554              		.cfi_def_cfa_register 7
 971:Generated_Source\PSoC4/CyLFClk.c ****         /* Prohibits writing to WDT registers and ILO/WCO registers when not equal 0 */
 972:Generated_Source\PSoC4/CyLFClk.c ****         return ((0u != (CY_SYS_CLK_SELECT_REG & (uint32)(CY_SYS_WDT_CLK_LOCK_BITS_MASK))) ? (uint32
 1555              		.loc 2 972 0
 1556 0004 054B     		ldr	r3, .L122
 1557 0006 1A68     		ldr	r2, [r3]
ARM GAS  C:\Users\akita\AppData\Local\Temp\ccTFmJyh.s 			page 58


 1558 0008 C023     		mov	r3, #192
 1559 000a 1B02     		lsl	r3, r3, #8
 1560 000c 1340     		and	r3, r2
 1561 000e 01D0     		beq	.L119
 1562              		.loc 2 972 0 is_stmt 0 discriminator 1
 1563 0010 0123     		mov	r3, #1
 1564 0012 00E0     		b	.L120
 1565              	.L119:
 1566              		.loc 2 972 0 discriminator 2
 1567 0014 0023     		mov	r3, #0
 1568              	.L120:
 973:Generated_Source\PSoC4/CyLFClk.c ****     }
 1569              		.loc 2 973 0 is_stmt 1 discriminator 4
 1570 0016 181C     		mov	r0, r3
 1571 0018 BD46     		mov	sp, r7
 1572              		@ sp needed
 1573 001a 80BD     		pop	{r7, pc}
 1574              	.L123:
 1575              		.align	2
 1576              	.L122:
 1577 001c 00010B40 		.word	1074462976
 1578              		.cfi_endproc
 1579              	.LFE19:
 1580              		.size	CySysWdtLocked, .-CySysWdtLocked
 1581              		.section	.text.CySysWdtUnlock,"ax",%progbits
 1582              		.align	2
 1583              		.global	CySysWdtUnlock
 1584              		.code	16
 1585              		.thumb_func
 1586              		.type	CySysWdtUnlock, %function
 1587              	CySysWdtUnlock:
 1588              	.LFB20:
 974:Generated_Source\PSoC4/CyLFClk.c **** 
 975:Generated_Source\PSoC4/CyLFClk.c **** 
 976:Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
 977:Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysWdtUnlock
 978:Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
 979:Generated_Source\PSoC4/CyLFClk.c ****     * \brief
 980:Generated_Source\PSoC4/CyLFClk.c ****     *  Unlocks the Watchdog Timer configuration register.
 981:Generated_Source\PSoC4/CyLFClk.c ****     *
 982:Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
 983:Generated_Source\PSoC4/CyLFClk.c ****     void CySysWdtUnlock(void)
 984:Generated_Source\PSoC4/CyLFClk.c ****     {
 1589              		.loc 2 984 0
 1590              		.cfi_startproc
 1591 0000 90B5     		push	{r4, r7, lr}
 1592              		.cfi_def_cfa_offset 12
 1593              		.cfi_offset 4, -12
 1594              		.cfi_offset 7, -8
 1595              		.cfi_offset 14, -4
 1596 0002 83B0     		sub	sp, sp, #12
 1597              		.cfi_def_cfa_offset 24
 1598 0004 00AF     		add	r7, sp, #0
 1599              		.cfi_def_cfa_register 7
 985:Generated_Source\PSoC4/CyLFClk.c ****         uint8 interruptState;
 986:Generated_Source\PSoC4/CyLFClk.c ****         interruptState = CyEnterCriticalSection();
 1600              		.loc 2 986 0
ARM GAS  C:\Users\akita\AppData\Local\Temp\ccTFmJyh.s 			page 59


 1601 0006 FC1D     		add	r4, r7, #7
 1602 0008 FFF7FEFF 		bl	CyEnterCriticalSection
 1603 000c 031C     		mov	r3, r0
 1604 000e 2370     		strb	r3, [r4]
 987:Generated_Source\PSoC4/CyLFClk.c **** 
 988:Generated_Source\PSoC4/CyLFClk.c ****         /* Removing WDT lock requires two writes */
 989:Generated_Source\PSoC4/CyLFClk.c ****         CY_SYS_CLK_SELECT_REG = ((CY_SYS_CLK_SELECT_REG & (uint32)(~CY_SYS_WDT_CLK_LOCK_BITS_MASK))
 1605              		.loc 2 989 0
 1606 0010 0C4B     		ldr	r3, .L125
 1607 0012 0C4A     		ldr	r2, .L125
 1608 0014 1268     		ldr	r2, [r2]
 1609 0016 0C49     		ldr	r1, .L125+4
 1610 0018 0A40     		and	r2, r1
 1611 001a 8021     		mov	r1, #128
 1612 001c C901     		lsl	r1, r1, #7
 1613 001e 0A43     		orr	r2, r1
 1614 0020 1A60     		str	r2, [r3]
 990:Generated_Source\PSoC4/CyLFClk.c ****                 CY_SYS_WDT_CLK_LOCK_BIT0);
 991:Generated_Source\PSoC4/CyLFClk.c **** 
 992:Generated_Source\PSoC4/CyLFClk.c ****         CY_SYS_CLK_SELECT_REG = ((CY_SYS_CLK_SELECT_REG & (uint32)(~CY_SYS_WDT_CLK_LOCK_BITS_MASK))
 1615              		.loc 2 992 0
 1616 0022 084B     		ldr	r3, .L125
 1617 0024 074A     		ldr	r2, .L125
 1618 0026 1268     		ldr	r2, [r2]
 1619 0028 0749     		ldr	r1, .L125+4
 1620 002a 0A40     		and	r2, r1
 1621 002c 8021     		mov	r1, #128
 1622 002e 0902     		lsl	r1, r1, #8
 1623 0030 0A43     		orr	r2, r1
 1624 0032 1A60     		str	r2, [r3]
 993:Generated_Source\PSoC4/CyLFClk.c ****                 CY_SYS_WDT_CLK_LOCK_BIT1);
 994:Generated_Source\PSoC4/CyLFClk.c **** 
 995:Generated_Source\PSoC4/CyLFClk.c ****         CyExitCriticalSection(interruptState);
 1625              		.loc 2 995 0
 1626 0034 FB1D     		add	r3, r7, #7
 1627 0036 1B78     		ldrb	r3, [r3]
 1628 0038 181C     		mov	r0, r3
 1629 003a FFF7FEFF 		bl	CyExitCriticalSection
 996:Generated_Source\PSoC4/CyLFClk.c ****     }
 1630              		.loc 2 996 0
 1631 003e BD46     		mov	sp, r7
 1632 0040 03B0     		add	sp, sp, #12
 1633              		@ sp needed
 1634 0042 90BD     		pop	{r4, r7, pc}
 1635              	.L126:
 1636              		.align	2
 1637              	.L125:
 1638 0044 00010B40 		.word	1074462976
 1639 0048 FF3FFFFF 		.word	-49153
 1640              		.cfi_endproc
 1641              	.LFE20:
 1642              		.size	CySysWdtUnlock, .-CySysWdtUnlock
 1643              		.section	.text.CySysWdtGetEnabledStatus,"ax",%progbits
 1644              		.align	2
 1645              		.global	CySysWdtGetEnabledStatus
 1646              		.code	16
 1647              		.thumb_func
ARM GAS  C:\Users\akita\AppData\Local\Temp\ccTFmJyh.s 			page 60


 1648              		.type	CySysWdtGetEnabledStatus, %function
 1649              	CySysWdtGetEnabledStatus:
 1650              	.LFB21:
 997:Generated_Source\PSoC4/CyLFClk.c **** 
 998:Generated_Source\PSoC4/CyLFClk.c **** 
 999:Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
1000:Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysWdtGetEnabledStatus
1001:Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
1002:Generated_Source\PSoC4/CyLFClk.c ****     * \brief
1003:Generated_Source\PSoC4/CyLFClk.c ****     *  Reads the enabled status of one of the three WDT counters.
1004:Generated_Source\PSoC4/CyLFClk.c ****     *
1005:Generated_Source\PSoC4/CyLFClk.c ****     * \param counterNum: Valid range [0-2].  The number of the WDT counter.
1006:Generated_Source\PSoC4/CyLFClk.c ****     *
1007:Generated_Source\PSoC4/CyLFClk.c ****     * \return The status of the WDT counter:
1008:Generated_Source\PSoC4/CyLFClk.c ****     * \return 0 - If the counter is disabled.
1009:Generated_Source\PSoC4/CyLFClk.c ****     * \return 1 - If the counter is enabled.
1010:Generated_Source\PSoC4/CyLFClk.c ****     *
1011:Generated_Source\PSoC4/CyLFClk.c ****     * \details
1012:Generated_Source\PSoC4/CyLFClk.c ****     * This function returns an actual WDT counter status from the status register. It may
1013:Generated_Source\PSoC4/CyLFClk.c ****     * take up to 3 LFCLK cycles for the WDT status register to contain actual data
1014:Generated_Source\PSoC4/CyLFClk.c ****     * after the WDT counter is enabled.
1015:Generated_Source\PSoC4/CyLFClk.c ****     *
1016:Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
1017:Generated_Source\PSoC4/CyLFClk.c ****     uint32 CySysWdtGetEnabledStatus(uint32 counterNum)
1018:Generated_Source\PSoC4/CyLFClk.c ****     {
 1651              		.loc 2 1018 0
 1652              		.cfi_startproc
 1653 0000 80B5     		push	{r7, lr}
 1654              		.cfi_def_cfa_offset 8
 1655              		.cfi_offset 7, -8
 1656              		.cfi_offset 14, -4
 1657 0002 82B0     		sub	sp, sp, #8
 1658              		.cfi_def_cfa_offset 16
 1659 0004 00AF     		add	r7, sp, #0
 1660              		.cfi_def_cfa_register 7
 1661 0006 7860     		str	r0, [r7, #4]
1019:Generated_Source\PSoC4/CyLFClk.c ****         CYASSERT(counterNum < CY_SYS_WDT_COUNTERS_MAX);
 1662              		.loc 2 1019 0
 1663 0008 7B68     		ldr	r3, [r7, #4]
 1664 000a 022B     		cmp	r3, #2
 1665 000c 02D9     		bls	.L128
 1666              		.loc 2 1019 0 is_stmt 0 discriminator 1
 1667 000e 0020     		mov	r0, #0
 1668 0010 FFF7FEFF 		bl	CyHalt
 1669              	.L128:
1020:Generated_Source\PSoC4/CyLFClk.c ****         return ((CY_SYS_WDT_CONTROL_REG >> ((CY_SYS_WDT_CNT_SHIFT * counterNum) + CY_SYS_WDT_CNT_ST
 1670              		.loc 2 1020 0 is_stmt 1
 1671 0014 054B     		ldr	r3, .L130
 1672 0016 1B68     		ldr	r3, [r3]
 1673 0018 7A68     		ldr	r2, [r7, #4]
 1674 001a D200     		lsl	r2, r2, #3
 1675 001c 0132     		add	r2, r2, #1
 1676 001e D340     		lsr	r3, r3, r2
 1677 0020 0122     		mov	r2, #1
 1678 0022 1340     		and	r3, r2
1021:Generated_Source\PSoC4/CyLFClk.c ****     }
 1679              		.loc 2 1021 0
ARM GAS  C:\Users\akita\AppData\Local\Temp\ccTFmJyh.s 			page 61


 1680 0024 181C     		mov	r0, r3
 1681 0026 BD46     		mov	sp, r7
 1682 0028 02B0     		add	sp, sp, #8
 1683              		@ sp needed
 1684 002a 80BD     		pop	{r7, pc}
 1685              	.L131:
 1686              		.align	2
 1687              	.L130:
 1688 002c 10020B40 		.word	1074463248
 1689              		.cfi_endproc
 1690              	.LFE21:
 1691              		.size	CySysWdtGetEnabledStatus, .-CySysWdtGetEnabledStatus
 1692              		.section	.text.CySysWdtSetMode,"ax",%progbits
 1693              		.align	2
 1694              		.global	CySysWdtSetMode
 1695              		.code	16
 1696              		.thumb_func
 1697              		.type	CySysWdtSetMode, %function
 1698              	CySysWdtSetMode:
 1699              	.LFB22:
1022:Generated_Source\PSoC4/CyLFClk.c **** 
1023:Generated_Source\PSoC4/CyLFClk.c **** 
1024:Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
1025:Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysWdtSetMode
1026:Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
1027:Generated_Source\PSoC4/CyLFClk.c ****     * \brief
1028:Generated_Source\PSoC4/CyLFClk.c ****     * Writes the mode of one of the three WDT counters.
1029:Generated_Source\PSoC4/CyLFClk.c ****     *
1030:Generated_Source\PSoC4/CyLFClk.c ****     * \param counterNum: Valid range [0-2].  The number of the WDT counter.
1031:Generated_Source\PSoC4/CyLFClk.c ****     *
1032:Generated_Source\PSoC4/CyLFClk.c ****     * \param mode
1033:Generated_Source\PSoC4/CyLFClk.c ****     *  CY_SYS_WDT_MODE_NONE - Free running.<br>
1034:Generated_Source\PSoC4/CyLFClk.c ****     * CY_SYS_WDT_MODE_INT - The interrupt generated on match for counter 0
1035:Generated_Source\PSoC4/CyLFClk.c ****     * and 1, and on bit toggle for counter 2.<br>
1036:Generated_Source\PSoC4/CyLFClk.c ****     * CY_SYS_WDT_MODE_RESET - Reset on match (valid for counter 0 and 1 only).<br>
1037:Generated_Source\PSoC4/CyLFClk.c ****     * CY_SYS_WDT_MODE_INT_RESET - Generate an interrupt.  Generate a reset on
1038:Generated_Source\PSoC4/CyLFClk.c ****     * the 3rd non-handled interrupt (valid for counter 0 and counter 1 only).
1039:Generated_Source\PSoC4/CyLFClk.c ****     *
1040:Generated_Source\PSoC4/CyLFClk.c ****     * \details
1041:Generated_Source\PSoC4/CyLFClk.c ****     * WDT counter counterNum should be disabled to set a mode. Otherwise, this
1042:Generated_Source\PSoC4/CyLFClk.c ****     * function call has no effect. If the specified counter is enabled,
1043:Generated_Source\PSoC4/CyLFClk.c ****     * call the CySysWdtDisable() function with the corresponding parameter to
1044:Generated_Source\PSoC4/CyLFClk.c ****     * disable the specified counter and wait for it to stop.
1045:Generated_Source\PSoC4/CyLFClk.c ****     *
1046:Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
1047:Generated_Source\PSoC4/CyLFClk.c ****     void CySysWdtSetMode(uint32 counterNum, uint32 mode)
1048:Generated_Source\PSoC4/CyLFClk.c ****     {
 1700              		.loc 2 1048 0
 1701              		.cfi_startproc
 1702 0000 80B5     		push	{r7, lr}
 1703              		.cfi_def_cfa_offset 8
 1704              		.cfi_offset 7, -8
 1705              		.cfi_offset 14, -4
 1706 0002 84B0     		sub	sp, sp, #16
 1707              		.cfi_def_cfa_offset 24
 1708 0004 00AF     		add	r7, sp, #0
 1709              		.cfi_def_cfa_register 7
ARM GAS  C:\Users\akita\AppData\Local\Temp\ccTFmJyh.s 			page 62


 1710 0006 7860     		str	r0, [r7, #4]
 1711 0008 3960     		str	r1, [r7]
1049:Generated_Source\PSoC4/CyLFClk.c ****         uint32 configRegValue;
1050:Generated_Source\PSoC4/CyLFClk.c **** 
1051:Generated_Source\PSoC4/CyLFClk.c ****         CYASSERT(counterNum < CY_SYS_WDT_COUNTERS_MAX);
 1712              		.loc 2 1051 0
 1713 000a 7B68     		ldr	r3, [r7, #4]
 1714 000c 022B     		cmp	r3, #2
 1715 000e 02D9     		bls	.L133
 1716              		.loc 2 1051 0 is_stmt 0 discriminator 1
 1717 0010 0020     		mov	r0, #0
 1718 0012 FFF7FEFF 		bl	CyHalt
 1719              	.L133:
1052:Generated_Source\PSoC4/CyLFClk.c **** 
1053:Generated_Source\PSoC4/CyLFClk.c ****         if(0u == CySysWdtGetEnabledStatus(counterNum))
 1720              		.loc 2 1053 0 is_stmt 1
 1721 0016 7B68     		ldr	r3, [r7, #4]
 1722 0018 181C     		mov	r0, r3
 1723 001a FFF7FEFF 		bl	CySysWdtGetEnabledStatus
 1724 001e 031E     		sub	r3, r0, #0
 1725 0020 15D1     		bne	.L132
1054:Generated_Source\PSoC4/CyLFClk.c ****         {
1055:Generated_Source\PSoC4/CyLFClk.c ****             configRegValue = CY_SYS_WDT_CONFIG_REG &
 1726              		.loc 2 1055 0
 1727 0022 0C4B     		ldr	r3, .L135
 1728 0024 1B68     		ldr	r3, [r3]
1056:Generated_Source\PSoC4/CyLFClk.c ****                                 (uint32)~((uint32)(CY_SYS_WDT_MODE_MASK << (counterNum * CY_SYS_WDT
 1729              		.loc 2 1056 0
 1730 0026 7A68     		ldr	r2, [r7, #4]
 1731 0028 D200     		lsl	r2, r2, #3
 1732 002a 111C     		mov	r1, r2
 1733 002c 0322     		mov	r2, #3
 1734 002e 8A40     		lsl	r2, r2, r1
 1735 0030 D243     		mvn	r2, r2
1055:Generated_Source\PSoC4/CyLFClk.c ****                                 (uint32)~((uint32)(CY_SYS_WDT_MODE_MASK << (counterNum * CY_SYS_WDT
 1736              		.loc 2 1055 0
 1737 0032 1340     		and	r3, r2
 1738 0034 FB60     		str	r3, [r7, #12]
1057:Generated_Source\PSoC4/CyLFClk.c ****             configRegValue |= (uint32)((mode & CY_SYS_WDT_MODE_MASK) << (counterNum * CY_SYS_WDT_CN
 1739              		.loc 2 1057 0
 1740 0036 3B68     		ldr	r3, [r7]
 1741 0038 0322     		mov	r2, #3
 1742 003a 1340     		and	r3, r2
 1743 003c 7A68     		ldr	r2, [r7, #4]
 1744 003e D200     		lsl	r2, r2, #3
 1745 0040 9340     		lsl	r3, r3, r2
 1746 0042 FA68     		ldr	r2, [r7, #12]
 1747 0044 1343     		orr	r3, r2
 1748 0046 FB60     		str	r3, [r7, #12]
1058:Generated_Source\PSoC4/CyLFClk.c ****             CY_SYS_WDT_CONFIG_REG = configRegValue;
 1749              		.loc 2 1058 0
 1750 0048 024B     		ldr	r3, .L135
 1751 004a FA68     		ldr	r2, [r7, #12]
 1752 004c 1A60     		str	r2, [r3]
 1753              	.L132:
1059:Generated_Source\PSoC4/CyLFClk.c ****         }
1060:Generated_Source\PSoC4/CyLFClk.c ****     }
ARM GAS  C:\Users\akita\AppData\Local\Temp\ccTFmJyh.s 			page 63


 1754              		.loc 2 1060 0
 1755 004e BD46     		mov	sp, r7
 1756 0050 04B0     		add	sp, sp, #16
 1757              		@ sp needed
 1758 0052 80BD     		pop	{r7, pc}
 1759              	.L136:
 1760              		.align	2
 1761              	.L135:
 1762 0054 0C020B40 		.word	1074463244
 1763              		.cfi_endproc
 1764              	.LFE22:
 1765              		.size	CySysWdtSetMode, .-CySysWdtSetMode
 1766              		.section	.text.CySysWdtGetMode,"ax",%progbits
 1767              		.align	2
 1768              		.global	CySysWdtGetMode
 1769              		.code	16
 1770              		.thumb_func
 1771              		.type	CySysWdtGetMode, %function
 1772              	CySysWdtGetMode:
 1773              	.LFB23:
1061:Generated_Source\PSoC4/CyLFClk.c **** 
1062:Generated_Source\PSoC4/CyLFClk.c **** 
1063:Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
1064:Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysWdtGetMode
1065:Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
1066:Generated_Source\PSoC4/CyLFClk.c ****     * 
1067:Generated_Source\PSoC4/CyLFClk.c ****     * \brief Reads the mode of one of the three WDT counters.
1068:Generated_Source\PSoC4/CyLFClk.c ****     *
1069:Generated_Source\PSoC4/CyLFClk.c ****     * \param counterNum Valid range [0-2]. The number of the WDT counter.
1070:Generated_Source\PSoC4/CyLFClk.c ****     *
1071:Generated_Source\PSoC4/CyLFClk.c ****     * \return The mode of the counter. The same enumerated values as the mode 
1072:Generated_Source\PSoC4/CyLFClk.c ****     * parameter used in CySysWdtSetMode().
1073:Generated_Source\PSoC4/CyLFClk.c ****     *
1074:Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
1075:Generated_Source\PSoC4/CyLFClk.c ****     uint32 CySysWdtGetMode(uint32 counterNum)
1076:Generated_Source\PSoC4/CyLFClk.c ****     {
 1774              		.loc 2 1076 0
 1775              		.cfi_startproc
 1776 0000 80B5     		push	{r7, lr}
 1777              		.cfi_def_cfa_offset 8
 1778              		.cfi_offset 7, -8
 1779              		.cfi_offset 14, -4
 1780 0002 82B0     		sub	sp, sp, #8
 1781              		.cfi_def_cfa_offset 16
 1782 0004 00AF     		add	r7, sp, #0
 1783              		.cfi_def_cfa_register 7
 1784 0006 7860     		str	r0, [r7, #4]
1077:Generated_Source\PSoC4/CyLFClk.c ****         return ((CY_SYS_WDT_CONFIG_REG >> (counterNum * CY_SYS_WDT_CNT_SHIFT)) & CY_SYS_WDT_MODE_MA
 1785              		.loc 2 1077 0
 1786 0008 054B     		ldr	r3, .L139
 1787 000a 1B68     		ldr	r3, [r3]
 1788 000c 7A68     		ldr	r2, [r7, #4]
 1789 000e D200     		lsl	r2, r2, #3
 1790 0010 D340     		lsr	r3, r3, r2
 1791 0012 0322     		mov	r2, #3
 1792 0014 1340     		and	r3, r2
1078:Generated_Source\PSoC4/CyLFClk.c ****     }
ARM GAS  C:\Users\akita\AppData\Local\Temp\ccTFmJyh.s 			page 64


 1793              		.loc 2 1078 0
 1794 0016 181C     		mov	r0, r3
 1795 0018 BD46     		mov	sp, r7
 1796 001a 02B0     		add	sp, sp, #8
 1797              		@ sp needed
 1798 001c 80BD     		pop	{r7, pc}
 1799              	.L140:
 1800 001e C046     		.align	2
 1801              	.L139:
 1802 0020 0C020B40 		.word	1074463244
 1803              		.cfi_endproc
 1804              	.LFE23:
 1805              		.size	CySysWdtGetMode, .-CySysWdtGetMode
 1806              		.section	.text.CySysWdtSetClearOnMatch,"ax",%progbits
 1807              		.align	2
 1808              		.global	CySysWdtSetClearOnMatch
 1809              		.code	16
 1810              		.thumb_func
 1811              		.type	CySysWdtSetClearOnMatch, %function
 1812              	CySysWdtSetClearOnMatch:
 1813              	.LFB24:
1079:Generated_Source\PSoC4/CyLFClk.c **** 
1080:Generated_Source\PSoC4/CyLFClk.c **** 
1081:Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
1082:Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysWdtSetClearOnMatch
1083:Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
1084:Generated_Source\PSoC4/CyLFClk.c ****     * 
1085:Generated_Source\PSoC4/CyLFClk.c ****     * \brief Configures the WDT counter "clear on match" setting.
1086:Generated_Source\PSoC4/CyLFClk.c ****     *
1087:Generated_Source\PSoC4/CyLFClk.c ****     * If configured to "clear on match", the counter counts from 0 to MatchValue
1088:Generated_Source\PSoC4/CyLFClk.c ****     * giving it a period of (MatchValue + 1).
1089:Generated_Source\PSoC4/CyLFClk.c ****     *
1090:Generated_Source\PSoC4/CyLFClk.c ****     * \param counterNum
1091:Generated_Source\PSoC4/CyLFClk.c ****     * Valid range [0-1]. The number of the WDT counter. The match values are not
1092:Generated_Source\PSoC4/CyLFClk.c ****     * supported by counter 2.
1093:Generated_Source\PSoC4/CyLFClk.c ****     *
1094:Generated_Source\PSoC4/CyLFClk.c ****     * \param enable 0 to disable appropriate counter <br>
1095:Generated_Source\PSoC4/CyLFClk.c ****     *  1 to enable appropriate counter
1096:Generated_Source\PSoC4/CyLFClk.c ****     *
1097:Generated_Source\PSoC4/CyLFClk.c ****     * \details
1098:Generated_Source\PSoC4/CyLFClk.c ****     * WDT counter counterNum should be disabled. Otherwise this function call
1099:Generated_Source\PSoC4/CyLFClk.c ****     * has no effect. If the specified counter is enabled, call the CySysWdtDisable()
1100:Generated_Source\PSoC4/CyLFClk.c ****     * function with the corresponding parameter to disable the specified counter and
1101:Generated_Source\PSoC4/CyLFClk.c ****     * wait for it to stop. This may take up to three LFCLK cycles.
1102:Generated_Source\PSoC4/CyLFClk.c ****     *
1103:Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
1104:Generated_Source\PSoC4/CyLFClk.c ****     void CySysWdtSetClearOnMatch(uint32 counterNum, uint32 enable)
1105:Generated_Source\PSoC4/CyLFClk.c ****     {
 1814              		.loc 2 1105 0
 1815              		.cfi_startproc
 1816 0000 80B5     		push	{r7, lr}
 1817              		.cfi_def_cfa_offset 8
 1818              		.cfi_offset 7, -8
 1819              		.cfi_offset 14, -4
 1820 0002 84B0     		sub	sp, sp, #16
 1821              		.cfi_def_cfa_offset 24
 1822 0004 00AF     		add	r7, sp, #0
ARM GAS  C:\Users\akita\AppData\Local\Temp\ccTFmJyh.s 			page 65


 1823              		.cfi_def_cfa_register 7
 1824 0006 7860     		str	r0, [r7, #4]
 1825 0008 3960     		str	r1, [r7]
1106:Generated_Source\PSoC4/CyLFClk.c ****         uint32 configRegValue;
1107:Generated_Source\PSoC4/CyLFClk.c **** 
1108:Generated_Source\PSoC4/CyLFClk.c ****         CYASSERT((counterNum == CY_SYS_WDT_COUNTER0) ||
 1826              		.loc 2 1108 0
 1827 000a 7B68     		ldr	r3, [r7, #4]
 1828 000c 002B     		cmp	r3, #0
 1829 000e 02D0     		beq	.L142
 1830              		.loc 2 1108 0 is_stmt 0 discriminator 2
 1831 0010 7B68     		ldr	r3, [r7, #4]
 1832 0012 012B     		cmp	r3, #1
 1833 0014 01D1     		bne	.L143
 1834              	.L142:
 1835              		.loc 2 1108 0 discriminator 3
 1836 0016 0123     		mov	r3, #1
 1837 0018 00E0     		b	.L144
 1838              	.L143:
 1839              		.loc 2 1108 0 discriminator 4
 1840 001a 0023     		mov	r3, #0
 1841              	.L144:
 1842              		.loc 2 1108 0 discriminator 6
 1843 001c 002B     		cmp	r3, #0
 1844 001e 02D1     		bne	.L145
 1845              		.loc 2 1108 0 discriminator 7
 1846 0020 0020     		mov	r0, #0
 1847 0022 FFF7FEFF 		bl	CyHalt
 1848              	.L145:
1109:Generated_Source\PSoC4/CyLFClk.c ****                  (counterNum == CY_SYS_WDT_COUNTER1));
1110:Generated_Source\PSoC4/CyLFClk.c **** 
1111:Generated_Source\PSoC4/CyLFClk.c ****         if(0u == CySysWdtGetEnabledStatus(counterNum))
 1849              		.loc 2 1111 0 is_stmt 1
 1850 0026 7B68     		ldr	r3, [r7, #4]
 1851 0028 181C     		mov	r0, r3
 1852 002a FFF7FEFF 		bl	CySysWdtGetEnabledStatus
 1853 002e 031E     		sub	r3, r0, #0
 1854 0030 16D1     		bne	.L141
1112:Generated_Source\PSoC4/CyLFClk.c ****         {
1113:Generated_Source\PSoC4/CyLFClk.c ****             configRegValue = CY_SYS_WDT_CONFIG_REG & (uint32)~((uint32)((uint32)1u << 
 1855              		.loc 2 1113 0
 1856 0032 0D4B     		ldr	r3, .L147
 1857 0034 1B68     		ldr	r3, [r3]
1114:Generated_Source\PSoC4/CyLFClk.c ****                                      ((counterNum * CY_SYS_WDT_CNT_SHIFT) + CY_SYS_WDT_CNT_MATCH_CL
 1858              		.loc 2 1114 0
 1859 0036 7A68     		ldr	r2, [r7, #4]
 1860 0038 D200     		lsl	r2, r2, #3
 1861 003a 0232     		add	r2, r2, #2
1113:Generated_Source\PSoC4/CyLFClk.c ****                                      ((counterNum * CY_SYS_WDT_CNT_SHIFT) + CY_SYS_WDT_CNT_MATCH_CL
 1862              		.loc 2 1113 0
 1863 003c 111C     		mov	r1, r2
 1864 003e 0122     		mov	r2, #1
 1865 0040 8A40     		lsl	r2, r2, r1
 1866 0042 D243     		mvn	r2, r2
 1867 0044 1340     		and	r3, r2
 1868 0046 FB60     		str	r3, [r7, #12]
1115:Generated_Source\PSoC4/CyLFClk.c **** 
ARM GAS  C:\Users\akita\AppData\Local\Temp\ccTFmJyh.s 			page 66


1116:Generated_Source\PSoC4/CyLFClk.c ****             configRegValue
1117:Generated_Source\PSoC4/CyLFClk.c ****                 |= (uint32)(enable << ((counterNum * CY_SYS_WDT_CNT_SHIFT) + CY_SYS_WDT_CNT_MATCH_C
 1869              		.loc 2 1117 0
 1870 0048 7B68     		ldr	r3, [r7, #4]
 1871 004a DB00     		lsl	r3, r3, #3
 1872 004c 0233     		add	r3, r3, #2
 1873 004e 1A1C     		mov	r2, r3
 1874 0050 3B68     		ldr	r3, [r7]
 1875 0052 9340     		lsl	r3, r3, r2
 1876 0054 FA68     		ldr	r2, [r7, #12]
 1877 0056 1343     		orr	r3, r2
 1878 0058 FB60     		str	r3, [r7, #12]
1118:Generated_Source\PSoC4/CyLFClk.c **** 
1119:Generated_Source\PSoC4/CyLFClk.c ****             CY_SYS_WDT_CONFIG_REG = configRegValue;
 1879              		.loc 2 1119 0
 1880 005a 034B     		ldr	r3, .L147
 1881 005c FA68     		ldr	r2, [r7, #12]
 1882 005e 1A60     		str	r2, [r3]
 1883              	.L141:
1120:Generated_Source\PSoC4/CyLFClk.c ****         }
1121:Generated_Source\PSoC4/CyLFClk.c ****     }
 1884              		.loc 2 1121 0
 1885 0060 BD46     		mov	sp, r7
 1886 0062 04B0     		add	sp, sp, #16
 1887              		@ sp needed
 1888 0064 80BD     		pop	{r7, pc}
 1889              	.L148:
 1890 0066 C046     		.align	2
 1891              	.L147:
 1892 0068 0C020B40 		.word	1074463244
 1893              		.cfi_endproc
 1894              	.LFE24:
 1895              		.size	CySysWdtSetClearOnMatch, .-CySysWdtSetClearOnMatch
 1896              		.section	.text.CySysWdtGetClearOnMatch,"ax",%progbits
 1897              		.align	2
 1898              		.global	CySysWdtGetClearOnMatch
 1899              		.code	16
 1900              		.thumb_func
 1901              		.type	CySysWdtGetClearOnMatch, %function
 1902              	CySysWdtGetClearOnMatch:
 1903              	.LFB25:
1122:Generated_Source\PSoC4/CyLFClk.c **** 
1123:Generated_Source\PSoC4/CyLFClk.c **** 
1124:Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
1125:Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysWdtGetClearOnMatch
1126:Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
1127:Generated_Source\PSoC4/CyLFClk.c ****     * \brief
1128:Generated_Source\PSoC4/CyLFClk.c ****     * Reads the "clear on match" setting for the specified counter.
1129:Generated_Source\PSoC4/CyLFClk.c ****     *
1130:Generated_Source\PSoC4/CyLFClk.c ****     * \param
1131:Generated_Source\PSoC4/CyLFClk.c ****     * counterNum Valid range [0-1]. The number of the WDT counter. The match values
1132:Generated_Source\PSoC4/CyLFClk.c ****     * are not supported by counter 2.
1133:Generated_Source\PSoC4/CyLFClk.c ****     *
1134:Generated_Source\PSoC4/CyLFClk.c ****     * \return The "clear on match" status: <br>1 if enabled <br>0 if disabled
1135:Generated_Source\PSoC4/CyLFClk.c ****     *
1136:Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
1137:Generated_Source\PSoC4/CyLFClk.c ****     uint32 CySysWdtGetClearOnMatch(uint32 counterNum)
ARM GAS  C:\Users\akita\AppData\Local\Temp\ccTFmJyh.s 			page 67


1138:Generated_Source\PSoC4/CyLFClk.c ****     {
 1904              		.loc 2 1138 0
 1905              		.cfi_startproc
 1906 0000 80B5     		push	{r7, lr}
 1907              		.cfi_def_cfa_offset 8
 1908              		.cfi_offset 7, -8
 1909              		.cfi_offset 14, -4
 1910 0002 82B0     		sub	sp, sp, #8
 1911              		.cfi_def_cfa_offset 16
 1912 0004 00AF     		add	r7, sp, #0
 1913              		.cfi_def_cfa_register 7
 1914 0006 7860     		str	r0, [r7, #4]
1139:Generated_Source\PSoC4/CyLFClk.c ****         CYASSERT((counterNum == CY_SYS_WDT_COUNTER0) ||
 1915              		.loc 2 1139 0
 1916 0008 7B68     		ldr	r3, [r7, #4]
 1917 000a 002B     		cmp	r3, #0
 1918 000c 02D0     		beq	.L150
 1919              		.loc 2 1139 0 is_stmt 0 discriminator 2
 1920 000e 7B68     		ldr	r3, [r7, #4]
 1921 0010 012B     		cmp	r3, #1
 1922 0012 01D1     		bne	.L151
 1923              	.L150:
 1924              		.loc 2 1139 0 discriminator 3
 1925 0014 0123     		mov	r3, #1
 1926 0016 00E0     		b	.L152
 1927              	.L151:
 1928              		.loc 2 1139 0 discriminator 4
 1929 0018 0023     		mov	r3, #0
 1930              	.L152:
 1931              		.loc 2 1139 0 discriminator 6
 1932 001a 002B     		cmp	r3, #0
 1933 001c 02D1     		bne	.L153
 1934              		.loc 2 1139 0 discriminator 7
 1935 001e 0020     		mov	r0, #0
 1936 0020 FFF7FEFF 		bl	CyHalt
 1937              	.L153:
1140:Generated_Source\PSoC4/CyLFClk.c ****                  (counterNum == CY_SYS_WDT_COUNTER1));
1141:Generated_Source\PSoC4/CyLFClk.c **** 
1142:Generated_Source\PSoC4/CyLFClk.c ****         return (uint32)((CY_SYS_WDT_CONFIG_REG >>
 1938              		.loc 2 1142 0 is_stmt 1
 1939 0024 054B     		ldr	r3, .L155
 1940 0026 1B68     		ldr	r3, [r3]
1143:Generated_Source\PSoC4/CyLFClk.c ****                         ((counterNum * CY_SYS_WDT_CNT_SHIFT) + CY_SYS_WDT_CNT_MATCH_CLR_SHIFT)) & 0
 1941              		.loc 2 1143 0
 1942 0028 7A68     		ldr	r2, [r7, #4]
 1943 002a D200     		lsl	r2, r2, #3
 1944 002c 0232     		add	r2, r2, #2
1142:Generated_Source\PSoC4/CyLFClk.c ****                         ((counterNum * CY_SYS_WDT_CNT_SHIFT) + CY_SYS_WDT_CNT_MATCH_CLR_SHIFT)) & 0
 1945              		.loc 2 1142 0
 1946 002e D340     		lsr	r3, r3, r2
 1947 0030 0122     		mov	r2, #1
 1948 0032 1340     		and	r3, r2
1144:Generated_Source\PSoC4/CyLFClk.c ****     }
 1949              		.loc 2 1144 0
 1950 0034 181C     		mov	r0, r3
 1951 0036 BD46     		mov	sp, r7
 1952 0038 02B0     		add	sp, sp, #8
ARM GAS  C:\Users\akita\AppData\Local\Temp\ccTFmJyh.s 			page 68


 1953              		@ sp needed
 1954 003a 80BD     		pop	{r7, pc}
 1955              	.L156:
 1956              		.align	2
 1957              	.L155:
 1958 003c 0C020B40 		.word	1074463244
 1959              		.cfi_endproc
 1960              	.LFE25:
 1961              		.size	CySysWdtGetClearOnMatch, .-CySysWdtGetClearOnMatch
 1962              		.section	.text.CySysWdtEnable,"ax",%progbits
 1963              		.align	2
 1964              		.global	CySysWdtEnable
 1965              		.code	16
 1966              		.thumb_func
 1967              		.type	CySysWdtEnable, %function
 1968              	CySysWdtEnable:
 1969              	.LFB26:
1145:Generated_Source\PSoC4/CyLFClk.c **** 
1146:Generated_Source\PSoC4/CyLFClk.c **** 
1147:Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
1148:Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysWdtEnable
1149:Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
1150:Generated_Source\PSoC4/CyLFClk.c ****     *
1151:Generated_Source\PSoC4/CyLFClk.c ****     * \brief Enables the specified WDT counters.
1152:Generated_Source\PSoC4/CyLFClk.c ****     *
1153:Generated_Source\PSoC4/CyLFClk.c ****     * All the counters specified in the mask are enabled.
1154:Generated_Source\PSoC4/CyLFClk.c ****     *
1155:Generated_Source\PSoC4/CyLFClk.c ****     * \param counterMask
1156:Generated_Source\PSoC4/CyLFClk.c ****     *  CY_SYS_WDT_COUNTER0_MASK - The mask for counter 0 to enable.<br>
1157:Generated_Source\PSoC4/CyLFClk.c ****     * CY_SYS_WDT_COUNTER1_MASK - The mask for counter 1 to enable.<br>
1158:Generated_Source\PSoC4/CyLFClk.c ****     * CY_SYS_WDT_COUNTER2_MASK - The mask for counter 2 to enable.
1159:Generated_Source\PSoC4/CyLFClk.c ****     *
1160:Generated_Source\PSoC4/CyLFClk.c ****     * \details
1161:Generated_Source\PSoC4/CyLFClk.c ****     * Enabling or disabling WDT requires 3 LFCLK cycles to come into effect.
1162:Generated_Source\PSoC4/CyLFClk.c ****     * Therefore, the WDT enable state must not be changed more than once in
1163:Generated_Source\PSoC4/CyLFClk.c ****     * that period.
1164:Generated_Source\PSoC4/CyLFClk.c ****     *
1165:Generated_Source\PSoC4/CyLFClk.c ****     * After WDT is enabled, it is illegal to write WDT configuration (WDT_CONFIG)
1166:Generated_Source\PSoC4/CyLFClk.c ****     * and control (WDT_CONTROL) registers. This means that all WDT functions that
1167:Generated_Source\PSoC4/CyLFClk.c ****     * contain 'write' in the name (with the exception of CySysWdtSetMatch()
1168:Generated_Source\PSoC4/CyLFClk.c ****     * function) are illegal to call if WDT is enabled.
1169:Generated_Source\PSoC4/CyLFClk.c ****     *
1170:Generated_Source\PSoC4/CyLFClk.c ****     * PSoC 4100 / PSoC 4200: This function enables ILO.
1171:Generated_Source\PSoC4/CyLFClk.c ****     *
1172:Generated_Source\PSoC4/CyLFClk.c ****     * PSoC 4100 BLE / PSoC 4200 BLE / PSoC4200L / PSoC 4100M 
1173:Generated_Source\PSoC4/CyLFClk.c ****     * / PSoC 4200M:
1174:Generated_Source\PSoC4/CyLFClk.c ****     * LFLCK should be configured before calling this function. The desired
1175:Generated_Source\PSoC4/CyLFClk.c ****     * source should be enabled and configured to be the source for LFCLK.
1176:Generated_Source\PSoC4/CyLFClk.c ****     *
1177:Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
1178:Generated_Source\PSoC4/CyLFClk.c ****     void CySysWdtEnable(uint32 counterMask)
1179:Generated_Source\PSoC4/CyLFClk.c ****     {
 1970              		.loc 2 1179 0
 1971              		.cfi_startproc
 1972 0000 80B5     		push	{r7, lr}
 1973              		.cfi_def_cfa_offset 8
 1974              		.cfi_offset 7, -8
ARM GAS  C:\Users\akita\AppData\Local\Temp\ccTFmJyh.s 			page 69


 1975              		.cfi_offset 14, -4
 1976 0002 82B0     		sub	sp, sp, #8
 1977              		.cfi_def_cfa_offset 16
 1978 0004 00AF     		add	r7, sp, #0
 1979              		.cfi_def_cfa_register 7
 1980 0006 7860     		str	r0, [r7, #4]
1180:Generated_Source\PSoC4/CyLFClk.c ****         #if (!CY_IP_WCO)
1181:Generated_Source\PSoC4/CyLFClk.c ****             CySysClkIloStart();
1182:Generated_Source\PSoC4/CyLFClk.c ****         #endif /* (!CY_IP_WCO) */
1183:Generated_Source\PSoC4/CyLFClk.c **** 
1184:Generated_Source\PSoC4/CyLFClk.c ****         CY_SYS_WDT_CONTROL_REG |= counterMask;
 1981              		.loc 2 1184 0
 1982 0008 144B     		ldr	r3, .L164
 1983 000a 144A     		ldr	r2, .L164
 1984 000c 1168     		ldr	r1, [r2]
 1985 000e 7A68     		ldr	r2, [r7, #4]
 1986 0010 0A43     		orr	r2, r1
 1987 0012 1A60     		str	r2, [r3]
1185:Generated_Source\PSoC4/CyLFClk.c **** 
1186:Generated_Source\PSoC4/CyLFClk.c ****         if(0u != (counterMask & CY_SYS_WDT_COUNTER0_MASK))
 1988              		.loc 2 1186 0
 1989 0014 7B68     		ldr	r3, [r7, #4]
 1990 0016 0122     		mov	r2, #1
 1991 0018 1340     		and	r3, r2
 1992 001a 05D0     		beq	.L158
1187:Generated_Source\PSoC4/CyLFClk.c ****         {
1188:Generated_Source\PSoC4/CyLFClk.c ****             while (0u == CySysWdtGetEnabledStatus(CY_SYS_WDT_COUNTER0))
 1993              		.loc 2 1188 0
 1994 001c C046     		mov	r8, r8
 1995              	.L159:
 1996              		.loc 2 1188 0 is_stmt 0 discriminator 1
 1997 001e 0020     		mov	r0, #0
 1998 0020 FFF7FEFF 		bl	CySysWdtGetEnabledStatus
 1999 0024 031E     		sub	r3, r0, #0
 2000 0026 FAD0     		beq	.L159
 2001              	.L158:
1189:Generated_Source\PSoC4/CyLFClk.c ****             {
1190:Generated_Source\PSoC4/CyLFClk.c ****                 /* Wait for changes to come into effect */
1191:Generated_Source\PSoC4/CyLFClk.c ****             }
1192:Generated_Source\PSoC4/CyLFClk.c ****         }
1193:Generated_Source\PSoC4/CyLFClk.c **** 
1194:Generated_Source\PSoC4/CyLFClk.c ****         if(0u != (counterMask & CY_SYS_WDT_COUNTER1_MASK))
 2002              		.loc 2 1194 0 is_stmt 1
 2003 0028 7A68     		ldr	r2, [r7, #4]
 2004 002a 8023     		mov	r3, #128
 2005 002c 5B00     		lsl	r3, r3, #1
 2006 002e 1340     		and	r3, r2
 2007 0030 05D0     		beq	.L160
1195:Generated_Source\PSoC4/CyLFClk.c ****         {
1196:Generated_Source\PSoC4/CyLFClk.c ****             while (0u == CySysWdtGetEnabledStatus(CY_SYS_WDT_COUNTER1))
 2008              		.loc 2 1196 0
 2009 0032 C046     		mov	r8, r8
 2010              	.L161:
 2011              		.loc 2 1196 0 is_stmt 0 discriminator 1
 2012 0034 0120     		mov	r0, #1
 2013 0036 FFF7FEFF 		bl	CySysWdtGetEnabledStatus
 2014 003a 031E     		sub	r3, r0, #0
ARM GAS  C:\Users\akita\AppData\Local\Temp\ccTFmJyh.s 			page 70


 2015 003c FAD0     		beq	.L161
 2016              	.L160:
1197:Generated_Source\PSoC4/CyLFClk.c ****             {
1198:Generated_Source\PSoC4/CyLFClk.c ****                 /* Wait for changes to come into effect */
1199:Generated_Source\PSoC4/CyLFClk.c ****             }
1200:Generated_Source\PSoC4/CyLFClk.c ****         }
1201:Generated_Source\PSoC4/CyLFClk.c **** 
1202:Generated_Source\PSoC4/CyLFClk.c ****         if(0u != (counterMask & CY_SYS_WDT_COUNTER2_MASK))
 2017              		.loc 2 1202 0 is_stmt 1
 2018 003e 7A68     		ldr	r2, [r7, #4]
 2019 0040 8023     		mov	r3, #128
 2020 0042 5B02     		lsl	r3, r3, #9
 2021 0044 1340     		and	r3, r2
 2022 0046 05D0     		beq	.L157
1203:Generated_Source\PSoC4/CyLFClk.c ****         {
1204:Generated_Source\PSoC4/CyLFClk.c ****             while (0u == CySysWdtGetEnabledStatus(CY_SYS_WDT_COUNTER2))
 2023              		.loc 2 1204 0
 2024 0048 C046     		mov	r8, r8
 2025              	.L163:
 2026              		.loc 2 1204 0 is_stmt 0 discriminator 1
 2027 004a 0220     		mov	r0, #2
 2028 004c FFF7FEFF 		bl	CySysWdtGetEnabledStatus
 2029 0050 031E     		sub	r3, r0, #0
 2030 0052 FAD0     		beq	.L163
 2031              	.L157:
1205:Generated_Source\PSoC4/CyLFClk.c ****             {
1206:Generated_Source\PSoC4/CyLFClk.c ****                 /* Wait for changes to come into effect */
1207:Generated_Source\PSoC4/CyLFClk.c ****             }
1208:Generated_Source\PSoC4/CyLFClk.c ****         }
1209:Generated_Source\PSoC4/CyLFClk.c ****     }
 2032              		.loc 2 1209 0 is_stmt 1
 2033 0054 BD46     		mov	sp, r7
 2034 0056 02B0     		add	sp, sp, #8
 2035              		@ sp needed
 2036 0058 80BD     		pop	{r7, pc}
 2037              	.L165:
 2038 005a C046     		.align	2
 2039              	.L164:
 2040 005c 10020B40 		.word	1074463248
 2041              		.cfi_endproc
 2042              	.LFE26:
 2043              		.size	CySysWdtEnable, .-CySysWdtEnable
 2044              		.section	.text.CySysWdtDisable,"ax",%progbits
 2045              		.align	2
 2046              		.global	CySysWdtDisable
 2047              		.code	16
 2048              		.thumb_func
 2049              		.type	CySysWdtDisable, %function
 2050              	CySysWdtDisable:
 2051              	.LFB27:
1210:Generated_Source\PSoC4/CyLFClk.c **** 
1211:Generated_Source\PSoC4/CyLFClk.c **** 
1212:Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
1213:Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysWdtDisable
1214:Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
1215:Generated_Source\PSoC4/CyLFClk.c ****     *
1216:Generated_Source\PSoC4/CyLFClk.c ****     * \brief Disables the specified WDT counters.
ARM GAS  C:\Users\akita\AppData\Local\Temp\ccTFmJyh.s 			page 71


1217:Generated_Source\PSoC4/CyLFClk.c ****     * All the counters specified in the mask are disabled. The function waits for 
1218:Generated_Source\PSoC4/CyLFClk.c ****     * the changes to come into effect.
1219:Generated_Source\PSoC4/CyLFClk.c ****     *
1220:Generated_Source\PSoC4/CyLFClk.c ****     * \param counterMask
1221:Generated_Source\PSoC4/CyLFClk.c ****     * CY_SYS_WDT_COUNTER0_MASK - The mask for counter 0 to disable. <br>
1222:Generated_Source\PSoC4/CyLFClk.c ****     * CY_SYS_WDT_COUNTER1_MASK - The mask for counter 1 to disable. <br>
1223:Generated_Source\PSoC4/CyLFClk.c ****     * CY_SYS_WDT_COUNTER2_MASK - The mask for counter 2 to disable.
1224:Generated_Source\PSoC4/CyLFClk.c ****     *
1225:Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
1226:Generated_Source\PSoC4/CyLFClk.c ****     void CySysWdtDisable(uint32 counterMask)
1227:Generated_Source\PSoC4/CyLFClk.c ****     {
 2052              		.loc 2 1227 0
 2053              		.cfi_startproc
 2054 0000 80B5     		push	{r7, lr}
 2055              		.cfi_def_cfa_offset 8
 2056              		.cfi_offset 7, -8
 2057              		.cfi_offset 14, -4
 2058 0002 82B0     		sub	sp, sp, #8
 2059              		.cfi_def_cfa_offset 16
 2060 0004 00AF     		add	r7, sp, #0
 2061              		.cfi_def_cfa_register 7
 2062 0006 7860     		str	r0, [r7, #4]
1228:Generated_Source\PSoC4/CyLFClk.c ****         if (0uL == CySysWdtLocked())
 2063              		.loc 2 1228 0
 2064 0008 FFF7FEFF 		bl	CySysWdtLocked
 2065 000c 031E     		sub	r3, r0, #0
 2066 000e 26D1     		bne	.L166
1229:Generated_Source\PSoC4/CyLFClk.c ****         {
1230:Generated_Source\PSoC4/CyLFClk.c ****             CY_SYS_WDT_CONTROL_REG &= ~counterMask;
 2067              		.loc 2 1230 0
 2068 0010 144B     		ldr	r3, .L173
 2069 0012 144A     		ldr	r2, .L173
 2070 0014 1268     		ldr	r2, [r2]
 2071 0016 7968     		ldr	r1, [r7, #4]
 2072 0018 C943     		mvn	r1, r1
 2073 001a 0A40     		and	r2, r1
 2074 001c 1A60     		str	r2, [r3]
1231:Generated_Source\PSoC4/CyLFClk.c **** 
1232:Generated_Source\PSoC4/CyLFClk.c ****             if(0u != (counterMask & CY_SYS_WDT_COUNTER0_MASK))
 2075              		.loc 2 1232 0
 2076 001e 7B68     		ldr	r3, [r7, #4]
 2077 0020 0122     		mov	r2, #1
 2078 0022 1340     		and	r3, r2
 2079 0024 05D0     		beq	.L168
1233:Generated_Source\PSoC4/CyLFClk.c ****             {
1234:Generated_Source\PSoC4/CyLFClk.c ****                 while (0u != CySysWdtGetEnabledStatus(CY_SYS_WDT_COUNTER0))
 2080              		.loc 2 1234 0
 2081 0026 C046     		mov	r8, r8
 2082              	.L169:
 2083              		.loc 2 1234 0 is_stmt 0 discriminator 1
 2084 0028 0020     		mov	r0, #0
 2085 002a FFF7FEFF 		bl	CySysWdtGetEnabledStatus
 2086 002e 031E     		sub	r3, r0, #0
 2087 0030 FAD1     		bne	.L169
 2088              	.L168:
1235:Generated_Source\PSoC4/CyLFClk.c ****                 {
1236:Generated_Source\PSoC4/CyLFClk.c ****                     /* Wait for changes to come into effect */
ARM GAS  C:\Users\akita\AppData\Local\Temp\ccTFmJyh.s 			page 72


1237:Generated_Source\PSoC4/CyLFClk.c ****                 }
1238:Generated_Source\PSoC4/CyLFClk.c ****             }
1239:Generated_Source\PSoC4/CyLFClk.c **** 
1240:Generated_Source\PSoC4/CyLFClk.c ****             if(0u != (counterMask & CY_SYS_WDT_COUNTER1_MASK))
 2089              		.loc 2 1240 0 is_stmt 1
 2090 0032 7A68     		ldr	r2, [r7, #4]
 2091 0034 8023     		mov	r3, #128
 2092 0036 5B00     		lsl	r3, r3, #1
 2093 0038 1340     		and	r3, r2
 2094 003a 05D0     		beq	.L170
1241:Generated_Source\PSoC4/CyLFClk.c ****             {
1242:Generated_Source\PSoC4/CyLFClk.c ****                 while (0u != CySysWdtGetEnabledStatus(CY_SYS_WDT_COUNTER1))
 2095              		.loc 2 1242 0
 2096 003c C046     		mov	r8, r8
 2097              	.L171:
 2098              		.loc 2 1242 0 is_stmt 0 discriminator 1
 2099 003e 0120     		mov	r0, #1
 2100 0040 FFF7FEFF 		bl	CySysWdtGetEnabledStatus
 2101 0044 031E     		sub	r3, r0, #0
 2102 0046 FAD1     		bne	.L171
 2103              	.L170:
1243:Generated_Source\PSoC4/CyLFClk.c ****                 {
1244:Generated_Source\PSoC4/CyLFClk.c ****                     /* Wait for changes to come into effect */
1245:Generated_Source\PSoC4/CyLFClk.c ****                 }
1246:Generated_Source\PSoC4/CyLFClk.c ****             }
1247:Generated_Source\PSoC4/CyLFClk.c **** 
1248:Generated_Source\PSoC4/CyLFClk.c ****             if(0u != (counterMask & CY_SYS_WDT_COUNTER2_MASK))
 2104              		.loc 2 1248 0 is_stmt 1
 2105 0048 7A68     		ldr	r2, [r7, #4]
 2106 004a 8023     		mov	r3, #128
 2107 004c 5B02     		lsl	r3, r3, #9
 2108 004e 1340     		and	r3, r2
 2109 0050 05D0     		beq	.L166
1249:Generated_Source\PSoC4/CyLFClk.c ****             {
1250:Generated_Source\PSoC4/CyLFClk.c ****                 while (0u != CySysWdtGetEnabledStatus(CY_SYS_WDT_COUNTER2))
 2110              		.loc 2 1250 0
 2111 0052 C046     		mov	r8, r8
 2112              	.L172:
 2113              		.loc 2 1250 0 is_stmt 0 discriminator 1
 2114 0054 0220     		mov	r0, #2
 2115 0056 FFF7FEFF 		bl	CySysWdtGetEnabledStatus
 2116 005a 031E     		sub	r3, r0, #0
 2117 005c FAD1     		bne	.L172
 2118              	.L166:
1251:Generated_Source\PSoC4/CyLFClk.c ****                 {
1252:Generated_Source\PSoC4/CyLFClk.c ****                     /* Wait for changes to come into effect */
1253:Generated_Source\PSoC4/CyLFClk.c ****                 }
1254:Generated_Source\PSoC4/CyLFClk.c ****             }
1255:Generated_Source\PSoC4/CyLFClk.c ****         }
1256:Generated_Source\PSoC4/CyLFClk.c ****     }
 2119              		.loc 2 1256 0 is_stmt 1
 2120 005e BD46     		mov	sp, r7
 2121 0060 02B0     		add	sp, sp, #8
 2122              		@ sp needed
 2123 0062 80BD     		pop	{r7, pc}
 2124              	.L174:
 2125              		.align	2
ARM GAS  C:\Users\akita\AppData\Local\Temp\ccTFmJyh.s 			page 73


 2126              	.L173:
 2127 0064 10020B40 		.word	1074463248
 2128              		.cfi_endproc
 2129              	.LFE27:
 2130              		.size	CySysWdtDisable, .-CySysWdtDisable
 2131              		.section	.text.CySysWdtSetCascade,"ax",%progbits
 2132              		.align	2
 2133              		.global	CySysWdtSetCascade
 2134              		.code	16
 2135              		.thumb_func
 2136              		.type	CySysWdtSetCascade, %function
 2137              	CySysWdtSetCascade:
 2138              	.LFB28:
1257:Generated_Source\PSoC4/CyLFClk.c **** 
1258:Generated_Source\PSoC4/CyLFClk.c **** 
1259:Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
1260:Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysWdtSetCascade
1261:Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
1262:Generated_Source\PSoC4/CyLFClk.c ****     * \brief
1263:Generated_Source\PSoC4/CyLFClk.c ****     * Writes the two WDT cascade values based on the combination of mask values
1264:Generated_Source\PSoC4/CyLFClk.c ****     * specified.
1265:Generated_Source\PSoC4/CyLFClk.c ****     *
1266:Generated_Source\PSoC4/CyLFClk.c ****     * \param cascadeMask The mask value used to set or clear the cascade values:
1267:Generated_Source\PSoC4/CyLFClk.c ****     * CY_SYS_WDT_CASCADE_NONE - Neither <br>
1268:Generated_Source\PSoC4/CyLFClk.c ****     * CY_SYS_WDT_CASCADE_01 - Cascade 01 <br>
1269:Generated_Source\PSoC4/CyLFClk.c ****     * CY_SYS_WDT_CASCADE_12 - Cascade 12
1270:Generated_Source\PSoC4/CyLFClk.c ****     *
1271:Generated_Source\PSoC4/CyLFClk.c ****     * If only one cascade mask is specified, the second cascade is disabled.
1272:Generated_Source\PSoC4/CyLFClk.c ****     * To set both cascade modes, two defines should be ORed:
1273:Generated_Source\PSoC4/CyLFClk.c ****     * (CY_SYS_TIMER_CASCADE_01 | CY_SYS_TIMER_CASCADE_12).
1274:Generated_Source\PSoC4/CyLFClk.c ****     * \note If CySysWdtSetCascade() was called with ORed defines it is necessary 
1275:Generated_Source\PSoC4/CyLFClk.c ****     * to call CySysWdtSetClearOnMatch(1,1). It is needed to make sure that 
1276:Generated_Source\PSoC4/CyLFClk.c ****     * Counter 2 will be updated in the expected way.
1277:Generated_Source\PSoC4/CyLFClk.c ****     *
1278:Generated_Source\PSoC4/CyLFClk.c ****     * WDT counters that are part of the specified cascade should be disabled.
1279:Generated_Source\PSoC4/CyLFClk.c ****     * Otherwise this function call has no effect. If the specified
1280:Generated_Source\PSoC4/CyLFClk.c ****     * counter is enabled, call CySysWdtDisable() function with the corresponding
1281:Generated_Source\PSoC4/CyLFClk.c ****     * parameter to disable the specified counter and wait for it to stop. This may
1282:Generated_Source\PSoC4/CyLFClk.c ****     * take up to 3 LFCLK cycles.
1283:Generated_Source\PSoC4/CyLFClk.c ****     *
1284:Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
1285:Generated_Source\PSoC4/CyLFClk.c ****     void CySysWdtSetCascade(uint32 cascadeMask)
1286:Generated_Source\PSoC4/CyLFClk.c ****     {
 2139              		.loc 2 1286 0
 2140              		.cfi_startproc
 2141 0000 90B5     		push	{r4, r7, lr}
 2142              		.cfi_def_cfa_offset 12
 2143              		.cfi_offset 4, -12
 2144              		.cfi_offset 7, -8
 2145              		.cfi_offset 14, -4
 2146 0002 85B0     		sub	sp, sp, #20
 2147              		.cfi_def_cfa_offset 32
 2148 0004 00AF     		add	r7, sp, #0
 2149              		.cfi_def_cfa_register 7
 2150 0006 7860     		str	r0, [r7, #4]
1287:Generated_Source\PSoC4/CyLFClk.c ****         uint32 configRegValue;
1288:Generated_Source\PSoC4/CyLFClk.c ****         uint32 countersEnableStatus;
ARM GAS  C:\Users\akita\AppData\Local\Temp\ccTFmJyh.s 			page 74


1289:Generated_Source\PSoC4/CyLFClk.c **** 
1290:Generated_Source\PSoC4/CyLFClk.c ****         countersEnableStatus = CySysWdtGetEnabledStatus(CY_SYS_WDT_COUNTER0) |
 2151              		.loc 2 1290 0
 2152 0008 0020     		mov	r0, #0
 2153 000a FFF7FEFF 		bl	CySysWdtGetEnabledStatus
 2154 000e 041C     		mov	r4, r0
1291:Generated_Source\PSoC4/CyLFClk.c ****                             CySysWdtGetEnabledStatus(CY_SYS_WDT_COUNTER1) |
 2155              		.loc 2 1291 0
 2156 0010 0120     		mov	r0, #1
 2157 0012 FFF7FEFF 		bl	CySysWdtGetEnabledStatus
 2158 0016 031C     		mov	r3, r0
1290:Generated_Source\PSoC4/CyLFClk.c ****                             CySysWdtGetEnabledStatus(CY_SYS_WDT_COUNTER1) |
 2159              		.loc 2 1290 0
 2160 0018 1C43     		orr	r4, r3
1292:Generated_Source\PSoC4/CyLFClk.c ****                             CySysWdtGetEnabledStatus(CY_SYS_WDT_COUNTER2);
 2161              		.loc 2 1292 0
 2162 001a 0220     		mov	r0, #2
 2163 001c FFF7FEFF 		bl	CySysWdtGetEnabledStatus
 2164 0020 031C     		mov	r3, r0
1290:Generated_Source\PSoC4/CyLFClk.c ****                             CySysWdtGetEnabledStatus(CY_SYS_WDT_COUNTER1) |
 2165              		.loc 2 1290 0
 2166 0022 2343     		orr	r3, r4
 2167 0024 FB60     		str	r3, [r7, #12]
1293:Generated_Source\PSoC4/CyLFClk.c **** 
1294:Generated_Source\PSoC4/CyLFClk.c ****         if (0u == countersEnableStatus)
 2168              		.loc 2 1294 0
 2169 0026 FB68     		ldr	r3, [r7, #12]
 2170 0028 002B     		cmp	r3, #0
 2171 002a 0DD1     		bne	.L175
1295:Generated_Source\PSoC4/CyLFClk.c ****         {
1296:Generated_Source\PSoC4/CyLFClk.c ****             configRegValue = CY_SYS_WDT_CONFIG_REG;
 2172              		.loc 2 1296 0
 2173 002c 084B     		ldr	r3, .L177
 2174 002e 1B68     		ldr	r3, [r3]
 2175 0030 BB60     		str	r3, [r7, #8]
1297:Generated_Source\PSoC4/CyLFClk.c ****             configRegValue &= ((uint32)(~(CY_SYS_WDT_CASCADE_01|CY_SYS_WDT_CASCADE_12)));
 2176              		.loc 2 1297 0
 2177 0032 BB68     		ldr	r3, [r7, #8]
 2178 0034 074A     		ldr	r2, .L177+4
 2179 0036 1340     		and	r3, r2
 2180 0038 BB60     		str	r3, [r7, #8]
1298:Generated_Source\PSoC4/CyLFClk.c ****             configRegValue |= cascadeMask;
 2181              		.loc 2 1298 0
 2182 003a BA68     		ldr	r2, [r7, #8]
 2183 003c 7B68     		ldr	r3, [r7, #4]
 2184 003e 1343     		orr	r3, r2
 2185 0040 BB60     		str	r3, [r7, #8]
1299:Generated_Source\PSoC4/CyLFClk.c ****             CY_SYS_WDT_CONFIG_REG = configRegValue;
 2186              		.loc 2 1299 0
 2187 0042 034B     		ldr	r3, .L177
 2188 0044 BA68     		ldr	r2, [r7, #8]
 2189 0046 1A60     		str	r2, [r3]
 2190              	.L175:
1300:Generated_Source\PSoC4/CyLFClk.c ****         }
1301:Generated_Source\PSoC4/CyLFClk.c ****     }
 2191              		.loc 2 1301 0
 2192 0048 BD46     		mov	sp, r7
ARM GAS  C:\Users\akita\AppData\Local\Temp\ccTFmJyh.s 			page 75


 2193 004a 05B0     		add	sp, sp, #20
 2194              		@ sp needed
 2195 004c 90BD     		pop	{r4, r7, pc}
 2196              	.L178:
 2197 004e C046     		.align	2
 2198              	.L177:
 2199 0050 0C020B40 		.word	1074463244
 2200 0054 F7F7FFFF 		.word	-2057
 2201              		.cfi_endproc
 2202              	.LFE28:
 2203              		.size	CySysWdtSetCascade, .-CySysWdtSetCascade
 2204              		.section	.text.CySysWdtGetCascade,"ax",%progbits
 2205              		.align	2
 2206              		.global	CySysWdtGetCascade
 2207              		.code	16
 2208              		.thumb_func
 2209              		.type	CySysWdtGetCascade, %function
 2210              	CySysWdtGetCascade:
 2211              	.LFB29:
1302:Generated_Source\PSoC4/CyLFClk.c **** 
1303:Generated_Source\PSoC4/CyLFClk.c **** 
1304:Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
1305:Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysWdtGetCascade
1306:Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
1307:Generated_Source\PSoC4/CyLFClk.c ****     *
1308:Generated_Source\PSoC4/CyLFClk.c ****     * \brief Reads the two WDT cascade values returning a mask of the bits set.
1309:Generated_Source\PSoC4/CyLFClk.c ****     *
1310:Generated_Source\PSoC4/CyLFClk.c ****     * \return The mask of the cascade values set.
1311:Generated_Source\PSoC4/CyLFClk.c ****     * \return CY_SYS_WDT_CASCADE_NONE - Neither
1312:Generated_Source\PSoC4/CyLFClk.c ****     * \return CY_SYS_WDT_CASCADE_01 - Cascade 01
1313:Generated_Source\PSoC4/CyLFClk.c ****     * \return CY_SYS_WDT_CASCADE_12 - Cascade 12
1314:Generated_Source\PSoC4/CyLFClk.c ****     *
1315:Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
1316:Generated_Source\PSoC4/CyLFClk.c ****     uint32 CySysWdtGetCascade(void)
1317:Generated_Source\PSoC4/CyLFClk.c ****     {
 2212              		.loc 2 1317 0
 2213              		.cfi_startproc
 2214 0000 80B5     		push	{r7, lr}
 2215              		.cfi_def_cfa_offset 8
 2216              		.cfi_offset 7, -8
 2217              		.cfi_offset 14, -4
 2218 0002 00AF     		add	r7, sp, #0
 2219              		.cfi_def_cfa_register 7
1318:Generated_Source\PSoC4/CyLFClk.c ****         return (CY_SYS_WDT_CONFIG_REG & (CY_SYS_WDT_CASCADE_01 | CY_SYS_WDT_CASCADE_12));
 2220              		.loc 2 1318 0
 2221 0004 034B     		ldr	r3, .L181
 2222 0006 1B68     		ldr	r3, [r3]
 2223 0008 034A     		ldr	r2, .L181+4
 2224 000a 1340     		and	r3, r2
1319:Generated_Source\PSoC4/CyLFClk.c ****     }
 2225              		.loc 2 1319 0
 2226 000c 181C     		mov	r0, r3
 2227 000e BD46     		mov	sp, r7
 2228              		@ sp needed
 2229 0010 80BD     		pop	{r7, pc}
 2230              	.L182:
 2231 0012 C046     		.align	2
ARM GAS  C:\Users\akita\AppData\Local\Temp\ccTFmJyh.s 			page 76


 2232              	.L181:
 2233 0014 0C020B40 		.word	1074463244
 2234 0018 08080000 		.word	2056
 2235              		.cfi_endproc
 2236              	.LFE29:
 2237              		.size	CySysWdtGetCascade, .-CySysWdtGetCascade
 2238              		.section	.text.CySysWdtSetMatch,"ax",%progbits
 2239              		.align	2
 2240              		.global	CySysWdtSetMatch
 2241              		.code	16
 2242              		.thumb_func
 2243              		.type	CySysWdtSetMatch, %function
 2244              	CySysWdtSetMatch:
 2245              	.LFB30:
1320:Generated_Source\PSoC4/CyLFClk.c **** 
1321:Generated_Source\PSoC4/CyLFClk.c **** 
1322:Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
1323:Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysWdtSetMatch
1324:Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
1325:Generated_Source\PSoC4/CyLFClk.c ****     *
1326:Generated_Source\PSoC4/CyLFClk.c ****     * \brief Configures the WDT counter match comparison value.
1327:Generated_Source\PSoC4/CyLFClk.c ****     *
1328:Generated_Source\PSoC4/CyLFClk.c ****     * \param counterNum
1329:Generated_Source\PSoC4/CyLFClk.c ****     * Valid range [0-1]. The number of the WDT counter. The match values are not
1330:Generated_Source\PSoC4/CyLFClk.c ****     * supported by counter 2.
1331:Generated_Source\PSoC4/CyLFClk.c ****     *
1332:Generated_Source\PSoC4/CyLFClk.c ****     * \param match
1333:Generated_Source\PSoC4/CyLFClk.c ****     * Valid range [0-65535]. The value to be used to match against the counter.
1334:Generated_Source\PSoC4/CyLFClk.c ****     *
1335:Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
1336:Generated_Source\PSoC4/CyLFClk.c ****     void CySysWdtSetMatch(uint32 counterNum, uint32 match)
1337:Generated_Source\PSoC4/CyLFClk.c ****     {
 2246              		.loc 2 1337 0
 2247              		.cfi_startproc
 2248 0000 80B5     		push	{r7, lr}
 2249              		.cfi_def_cfa_offset 8
 2250              		.cfi_offset 7, -8
 2251              		.cfi_offset 14, -4
 2252 0002 84B0     		sub	sp, sp, #16
 2253              		.cfi_def_cfa_offset 24
 2254 0004 00AF     		add	r7, sp, #0
 2255              		.cfi_def_cfa_register 7
 2256 0006 7860     		str	r0, [r7, #4]
 2257 0008 3960     		str	r1, [r7]
1338:Generated_Source\PSoC4/CyLFClk.c ****         uint32 regValue;
1339:Generated_Source\PSoC4/CyLFClk.c **** 
1340:Generated_Source\PSoC4/CyLFClk.c ****         CYASSERT((counterNum == CY_SYS_WDT_COUNTER0) ||
 2258              		.loc 2 1340 0
 2259 000a 7B68     		ldr	r3, [r7, #4]
 2260 000c 002B     		cmp	r3, #0
 2261 000e 02D0     		beq	.L184
 2262              		.loc 2 1340 0 is_stmt 0 discriminator 2
 2263 0010 7B68     		ldr	r3, [r7, #4]
 2264 0012 012B     		cmp	r3, #1
 2265 0014 01D1     		bne	.L185
 2266              	.L184:
 2267              		.loc 2 1340 0 discriminator 3
ARM GAS  C:\Users\akita\AppData\Local\Temp\ccTFmJyh.s 			page 77


 2268 0016 0123     		mov	r3, #1
 2269 0018 00E0     		b	.L186
 2270              	.L185:
 2271              		.loc 2 1340 0 discriminator 4
 2272 001a 0023     		mov	r3, #0
 2273              	.L186:
 2274              		.loc 2 1340 0 discriminator 6
 2275 001c 002B     		cmp	r3, #0
 2276 001e 02D1     		bne	.L187
 2277              		.loc 2 1340 0 discriminator 7
 2278 0020 0020     		mov	r0, #0
 2279 0022 FFF7FEFF 		bl	CyHalt
 2280              	.L187:
1341:Generated_Source\PSoC4/CyLFClk.c ****                  (counterNum == CY_SYS_WDT_COUNTER1));
1342:Generated_Source\PSoC4/CyLFClk.c **** 
1343:Generated_Source\PSoC4/CyLFClk.c ****         /* Wait for previous changes to come into effect */
1344:Generated_Source\PSoC4/CyLFClk.c ****         CyDelayUs(CY_SYS_WDT_3LFCLK_DELAY_US);
 2281              		.loc 2 1344 0 is_stmt 1
 2282 0026 174B     		ldr	r3, .L192
 2283 0028 1B68     		ldr	r3, [r3]
 2284 002a 9B0F     		lsr	r3, r3, #30
 2285 002c 9B07     		lsl	r3, r3, #30
 2286 002e 01D1     		bne	.L188
 2287              		.loc 2 1344 0 is_stmt 0 discriminator 1
 2288 0030 C923     		mov	r3, #201
 2289 0032 00E0     		b	.L189
 2290              	.L188:
 2291              		.loc 2 1344 0 discriminator 2
 2292 0034 5D23     		mov	r3, #93
 2293              	.L189:
 2294              		.loc 2 1344 0 discriminator 4
 2295 0036 181C     		mov	r0, r3
 2296 0038 FFF7FEFF 		bl	CyDelayUs
1345:Generated_Source\PSoC4/CyLFClk.c **** 
1346:Generated_Source\PSoC4/CyLFClk.c ****         regValue = CY_SYS_WDT_MATCH_REG;
 2297              		.loc 2 1346 0 is_stmt 1 discriminator 4
 2298 003c 124B     		ldr	r3, .L192+4
 2299 003e 1B68     		ldr	r3, [r3]
 2300 0040 FB60     		str	r3, [r7, #12]
1347:Generated_Source\PSoC4/CyLFClk.c ****         regValue &= (uint32)~((uint32)(CY_SYS_WDT_LOWER_16BITS_MASK << (counterNum * CY_SYS_WDT_CNT
 2301              		.loc 2 1347 0 discriminator 4
 2302 0042 7B68     		ldr	r3, [r7, #4]
 2303 0044 1B01     		lsl	r3, r3, #4
 2304 0046 1A1C     		mov	r2, r3
 2305 0048 104B     		ldr	r3, .L192+8
 2306 004a 9340     		lsl	r3, r3, r2
 2307 004c DA43     		mvn	r2, r3
 2308 004e FB68     		ldr	r3, [r7, #12]
 2309 0050 1340     		and	r3, r2
 2310 0052 FB60     		str	r3, [r7, #12]
1348:Generated_Source\PSoC4/CyLFClk.c ****         CY_SYS_WDT_MATCH_REG = (regValue | (match << (counterNum * CY_SYS_WDT_CNT_MATCH_SHIFT)));
 2311              		.loc 2 1348 0 discriminator 4
 2312 0054 0C4B     		ldr	r3, .L192+4
 2313 0056 7A68     		ldr	r2, [r7, #4]
 2314 0058 1201     		lsl	r2, r2, #4
 2315 005a 111C     		mov	r1, r2
 2316 005c 3A68     		ldr	r2, [r7]
ARM GAS  C:\Users\akita\AppData\Local\Temp\ccTFmJyh.s 			page 78


 2317 005e 8A40     		lsl	r2, r2, r1
 2318 0060 111C     		mov	r1, r2
 2319 0062 FA68     		ldr	r2, [r7, #12]
 2320 0064 0A43     		orr	r2, r1
 2321 0066 1A60     		str	r2, [r3]
1349:Generated_Source\PSoC4/CyLFClk.c **** 
1350:Generated_Source\PSoC4/CyLFClk.c ****         /* Make sure match synchronization has started */
1351:Generated_Source\PSoC4/CyLFClk.c ****         CyDelayUs(CY_SYS_WDT_1LFCLK_DELAY_US);
 2322              		.loc 2 1351 0 discriminator 4
 2323 0068 064B     		ldr	r3, .L192
 2324 006a 1B68     		ldr	r3, [r3]
 2325 006c 9B0F     		lsr	r3, r3, #30
 2326 006e 9B07     		lsl	r3, r3, #30
 2327 0070 01D1     		bne	.L190
 2328              		.loc 2 1351 0 is_stmt 0 discriminator 1
 2329 0072 4323     		mov	r3, #67
 2330 0074 00E0     		b	.L191
 2331              	.L190:
 2332              		.loc 2 1351 0 discriminator 2
 2333 0076 1F23     		mov	r3, #31
 2334              	.L191:
 2335              		.loc 2 1351 0 discriminator 4
 2336 0078 181C     		mov	r0, r3
 2337 007a FFF7FEFF 		bl	CyDelayUs
1352:Generated_Source\PSoC4/CyLFClk.c ****     }
 2338              		.loc 2 1352 0 is_stmt 1 discriminator 4
 2339 007e BD46     		mov	sp, r7
 2340 0080 04B0     		add	sp, sp, #16
 2341              		@ sp needed
 2342 0082 80BD     		pop	{r7, pc}
 2343              	.L193:
 2344              		.align	2
 2345              	.L192:
 2346 0084 0C020B40 		.word	1074463244
 2347 0088 08020B40 		.word	1074463240
 2348 008c FFFF0000 		.word	65535
 2349              		.cfi_endproc
 2350              	.LFE30:
 2351              		.size	CySysWdtSetMatch, .-CySysWdtSetMatch
 2352              		.section	.text.CySysWdtSetToggleBit,"ax",%progbits
 2353              		.align	2
 2354              		.global	CySysWdtSetToggleBit
 2355              		.code	16
 2356              		.thumb_func
 2357              		.type	CySysWdtSetToggleBit, %function
 2358              	CySysWdtSetToggleBit:
 2359              	.LFB31:
1353:Generated_Source\PSoC4/CyLFClk.c **** 
1354:Generated_Source\PSoC4/CyLFClk.c **** 
1355:Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
1356:Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysWdtSetToggleBit
1357:Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
1358:Generated_Source\PSoC4/CyLFClk.c ****     * \brief
1359:Generated_Source\PSoC4/CyLFClk.c ****     * Configures which bit in WDT counter 2 to monitor for a toggle.
1360:Generated_Source\PSoC4/CyLFClk.c ****     *
1361:Generated_Source\PSoC4/CyLFClk.c ****     * When that bit toggles, an interrupt is generated if the mode for counter 2 has
1362:Generated_Source\PSoC4/CyLFClk.c ****     * enabled interrupts.
ARM GAS  C:\Users\akita\AppData\Local\Temp\ccTFmJyh.s 			page 79


1363:Generated_Source\PSoC4/CyLFClk.c ****     *
1364:Generated_Source\PSoC4/CyLFClk.c ****     * \param bits Valid range [0-31].  Counter 2 bit to monitor for a toggle.
1365:Generated_Source\PSoC4/CyLFClk.c ****     *
1366:Generated_Source\PSoC4/CyLFClk.c ****     * \details
1367:Generated_Source\PSoC4/CyLFClk.c ****     * WDT Counter 2 should be disabled. Otherwise this function call has no
1368:Generated_Source\PSoC4/CyLFClk.c ****     * effect.
1369:Generated_Source\PSoC4/CyLFClk.c ****     *
1370:Generated_Source\PSoC4/CyLFClk.c ****     * If the specified counter is enabled, call the CySysWdtDisable() function with
1371:Generated_Source\PSoC4/CyLFClk.c ****     * the corresponding parameter to disable the specified counter and wait for it to
1372:Generated_Source\PSoC4/CyLFClk.c ****     * stop. This may take up to 3 LFCLK cycles.
1373:Generated_Source\PSoC4/CyLFClk.c ****     *
1374:Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
1375:Generated_Source\PSoC4/CyLFClk.c ****     void CySysWdtSetToggleBit(uint32 bits)
1376:Generated_Source\PSoC4/CyLFClk.c ****     {
 2360              		.loc 2 1376 0
 2361              		.cfi_startproc
 2362 0000 80B5     		push	{r7, lr}
 2363              		.cfi_def_cfa_offset 8
 2364              		.cfi_offset 7, -8
 2365              		.cfi_offset 14, -4
 2366 0002 84B0     		sub	sp, sp, #16
 2367              		.cfi_def_cfa_offset 24
 2368 0004 00AF     		add	r7, sp, #0
 2369              		.cfi_def_cfa_register 7
 2370 0006 7860     		str	r0, [r7, #4]
1377:Generated_Source\PSoC4/CyLFClk.c ****         uint32 configRegValue;
1378:Generated_Source\PSoC4/CyLFClk.c **** 
1379:Generated_Source\PSoC4/CyLFClk.c ****         if (0u == CySysWdtGetEnabledStatus(CY_SYS_WDT_COUNTER2))
 2371              		.loc 2 1379 0
 2372 0008 0220     		mov	r0, #2
 2373 000a FFF7FEFF 		bl	CySysWdtGetEnabledStatus
 2374 000e 031E     		sub	r3, r0, #0
 2375 0010 10D1     		bne	.L194
1380:Generated_Source\PSoC4/CyLFClk.c ****         {
1381:Generated_Source\PSoC4/CyLFClk.c ****             configRegValue = CY_SYS_WDT_CONFIG_REG;
 2376              		.loc 2 1381 0
 2377 0012 0A4B     		ldr	r3, .L196
 2378 0014 1B68     		ldr	r3, [r3]
 2379 0016 FB60     		str	r3, [r7, #12]
1382:Generated_Source\PSoC4/CyLFClk.c ****             configRegValue &= (uint32)(~((uint32)(CY_SYS_WDT_CONFIG_BITS2_MASK << CY_SYS_WDT_CONFIG
 2380              		.loc 2 1382 0
 2381 0018 FB68     		ldr	r3, [r7, #12]
 2382 001a 094A     		ldr	r2, .L196+4
 2383 001c 1340     		and	r3, r2
 2384 001e FB60     		str	r3, [r7, #12]
1383:Generated_Source\PSoC4/CyLFClk.c ****             configRegValue |= ((bits & CY_SYS_WDT_CONFIG_BITS2_MASK) << CY_SYS_WDT_CONFIG_BITS2_POS
 2385              		.loc 2 1383 0
 2386 0020 7B68     		ldr	r3, [r7, #4]
 2387 0022 1F22     		mov	r2, #31
 2388 0024 1340     		and	r3, r2
 2389 0026 1B06     		lsl	r3, r3, #24
 2390 0028 FA68     		ldr	r2, [r7, #12]
 2391 002a 1343     		orr	r3, r2
 2392 002c FB60     		str	r3, [r7, #12]
1384:Generated_Source\PSoC4/CyLFClk.c ****             CY_SYS_WDT_CONFIG_REG = configRegValue;
 2393              		.loc 2 1384 0
 2394 002e 034B     		ldr	r3, .L196
ARM GAS  C:\Users\akita\AppData\Local\Temp\ccTFmJyh.s 			page 80


 2395 0030 FA68     		ldr	r2, [r7, #12]
 2396 0032 1A60     		str	r2, [r3]
 2397              	.L194:
1385:Generated_Source\PSoC4/CyLFClk.c ****         }
1386:Generated_Source\PSoC4/CyLFClk.c ****     }
 2398              		.loc 2 1386 0
 2399 0034 BD46     		mov	sp, r7
 2400 0036 04B0     		add	sp, sp, #16
 2401              		@ sp needed
 2402 0038 80BD     		pop	{r7, pc}
 2403              	.L197:
 2404 003a C046     		.align	2
 2405              	.L196:
 2406 003c 0C020B40 		.word	1074463244
 2407 0040 FFFFFFE0 		.word	-520093697
 2408              		.cfi_endproc
 2409              	.LFE31:
 2410              		.size	CySysWdtSetToggleBit, .-CySysWdtSetToggleBit
 2411              		.section	.text.CySysWdtGetToggleBit,"ax",%progbits
 2412              		.align	2
 2413              		.global	CySysWdtGetToggleBit
 2414              		.code	16
 2415              		.thumb_func
 2416              		.type	CySysWdtGetToggleBit, %function
 2417              	CySysWdtGetToggleBit:
 2418              	.LFB32:
1387:Generated_Source\PSoC4/CyLFClk.c **** 
1388:Generated_Source\PSoC4/CyLFClk.c **** 
1389:Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
1390:Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysWdtGetToggleBit
1391:Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
1392:Generated_Source\PSoC4/CyLFClk.c ****     * \brief
1393:Generated_Source\PSoC4/CyLFClk.c ****     * Reads which bit in WDT counter 2 is monitored for a toggle.
1394:Generated_Source\PSoC4/CyLFClk.c ****     *
1395:Generated_Source\PSoC4/CyLFClk.c ****     * \return The bit that is monitored (range of 0 to 31)
1396:Generated_Source\PSoC4/CyLFClk.c ****     *
1397:Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
1398:Generated_Source\PSoC4/CyLFClk.c ****     uint32 CySysWdtGetToggleBit(void)
1399:Generated_Source\PSoC4/CyLFClk.c ****     {
 2419              		.loc 2 1399 0
 2420              		.cfi_startproc
 2421 0000 80B5     		push	{r7, lr}
 2422              		.cfi_def_cfa_offset 8
 2423              		.cfi_offset 7, -8
 2424              		.cfi_offset 14, -4
 2425 0002 00AF     		add	r7, sp, #0
 2426              		.cfi_def_cfa_register 7
1400:Generated_Source\PSoC4/CyLFClk.c ****         return ((CY_SYS_WDT_CONFIG_REG >> CY_SYS_WDT_CONFIG_BITS2_POS) & CY_SYS_WDT_CONFIG_BITS2_MA
 2427              		.loc 2 1400 0
 2428 0004 034B     		ldr	r3, .L200
 2429 0006 1B68     		ldr	r3, [r3]
 2430 0008 1B0E     		lsr	r3, r3, #24
 2431 000a 1F22     		mov	r2, #31
 2432 000c 1340     		and	r3, r2
1401:Generated_Source\PSoC4/CyLFClk.c ****     }
 2433              		.loc 2 1401 0
 2434 000e 181C     		mov	r0, r3
ARM GAS  C:\Users\akita\AppData\Local\Temp\ccTFmJyh.s 			page 81


 2435 0010 BD46     		mov	sp, r7
 2436              		@ sp needed
 2437 0012 80BD     		pop	{r7, pc}
 2438              	.L201:
 2439              		.align	2
 2440              	.L200:
 2441 0014 0C020B40 		.word	1074463244
 2442              		.cfi_endproc
 2443              	.LFE32:
 2444              		.size	CySysWdtGetToggleBit, .-CySysWdtGetToggleBit
 2445              		.section	.text.CySysWdtGetMatch,"ax",%progbits
 2446              		.align	2
 2447              		.global	CySysWdtGetMatch
 2448              		.code	16
 2449              		.thumb_func
 2450              		.type	CySysWdtGetMatch, %function
 2451              	CySysWdtGetMatch:
 2452              	.LFB33:
1402:Generated_Source\PSoC4/CyLFClk.c **** 
1403:Generated_Source\PSoC4/CyLFClk.c **** 
1404:Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
1405:Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysWdtGetMatch
1406:Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
1407:Generated_Source\PSoC4/CyLFClk.c ****     *
1408:Generated_Source\PSoC4/CyLFClk.c ****     * \brief Reads the WDT counter match comparison value.
1409:Generated_Source\PSoC4/CyLFClk.c ****     *
1410:Generated_Source\PSoC4/CyLFClk.c ****     * \param counterNum Valid range [0-1].  The number of the WDT counter. The match
1411:Generated_Source\PSoC4/CyLFClk.c ****     * values are not supported by counter 2.
1412:Generated_Source\PSoC4/CyLFClk.c ****     *
1413:Generated_Source\PSoC4/CyLFClk.c ****     * \return A 16-bit match value.
1414:Generated_Source\PSoC4/CyLFClk.c ****     *
1415:Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
1416:Generated_Source\PSoC4/CyLFClk.c ****     uint32 CySysWdtGetMatch(uint32 counterNum)
1417:Generated_Source\PSoC4/CyLFClk.c ****     {
 2453              		.loc 2 1417 0
 2454              		.cfi_startproc
 2455 0000 80B5     		push	{r7, lr}
 2456              		.cfi_def_cfa_offset 8
 2457              		.cfi_offset 7, -8
 2458              		.cfi_offset 14, -4
 2459 0002 82B0     		sub	sp, sp, #8
 2460              		.cfi_def_cfa_offset 16
 2461 0004 00AF     		add	r7, sp, #0
 2462              		.cfi_def_cfa_register 7
 2463 0006 7860     		str	r0, [r7, #4]
1418:Generated_Source\PSoC4/CyLFClk.c ****         CYASSERT((counterNum == CY_SYS_WDT_COUNTER0) ||
 2464              		.loc 2 1418 0
 2465 0008 7B68     		ldr	r3, [r7, #4]
 2466 000a 002B     		cmp	r3, #0
 2467 000c 02D0     		beq	.L203
 2468              		.loc 2 1418 0 is_stmt 0 discriminator 2
 2469 000e 7B68     		ldr	r3, [r7, #4]
 2470 0010 012B     		cmp	r3, #1
 2471 0012 01D1     		bne	.L204
 2472              	.L203:
 2473              		.loc 2 1418 0 discriminator 3
 2474 0014 0123     		mov	r3, #1
ARM GAS  C:\Users\akita\AppData\Local\Temp\ccTFmJyh.s 			page 82


 2475 0016 00E0     		b	.L205
 2476              	.L204:
 2477              		.loc 2 1418 0 discriminator 4
 2478 0018 0023     		mov	r3, #0
 2479              	.L205:
 2480              		.loc 2 1418 0 discriminator 6
 2481 001a 002B     		cmp	r3, #0
 2482 001c 02D1     		bne	.L206
 2483              		.loc 2 1418 0 discriminator 7
 2484 001e 0020     		mov	r0, #0
 2485 0020 FFF7FEFF 		bl	CyHalt
 2486              	.L206:
1419:Generated_Source\PSoC4/CyLFClk.c ****                  (counterNum == CY_SYS_WDT_COUNTER1));
1420:Generated_Source\PSoC4/CyLFClk.c **** 
1421:Generated_Source\PSoC4/CyLFClk.c ****         return ((uint32)(CY_SYS_WDT_MATCH_REG >> 
 2487              		.loc 2 1421 0 is_stmt 1
 2488 0024 054B     		ldr	r3, .L208
 2489 0026 1B68     		ldr	r3, [r3]
1422:Generated_Source\PSoC4/CyLFClk.c ****                                             (counterNum * CY_SYS_WDT_CNT_MATCH_SHIFT)) & CY_SYS_WDT
 2490              		.loc 2 1422 0
 2491 0028 7A68     		ldr	r2, [r7, #4]
 2492 002a 1201     		lsl	r2, r2, #4
1421:Generated_Source\PSoC4/CyLFClk.c ****                                             (counterNum * CY_SYS_WDT_CNT_MATCH_SHIFT)) & CY_SYS_WDT
 2493              		.loc 2 1421 0
 2494 002c D340     		lsr	r3, r3, r2
 2495 002e 1B04     		lsl	r3, r3, #16
 2496 0030 1B0C     		lsr	r3, r3, #16
1423:Generated_Source\PSoC4/CyLFClk.c ****     }
 2497              		.loc 2 1423 0
 2498 0032 181C     		mov	r0, r3
 2499 0034 BD46     		mov	sp, r7
 2500 0036 02B0     		add	sp, sp, #8
 2501              		@ sp needed
 2502 0038 80BD     		pop	{r7, pc}
 2503              	.L209:
 2504 003a C046     		.align	2
 2505              	.L208:
 2506 003c 08020B40 		.word	1074463240
 2507              		.cfi_endproc
 2508              	.LFE33:
 2509              		.size	CySysWdtGetMatch, .-CySysWdtGetMatch
 2510              		.section	.text.CySysWdtGetCount,"ax",%progbits
 2511              		.align	2
 2512              		.global	CySysWdtGetCount
 2513              		.code	16
 2514              		.thumb_func
 2515              		.type	CySysWdtGetCount, %function
 2516              	CySysWdtGetCount:
 2517              	.LFB34:
1424:Generated_Source\PSoC4/CyLFClk.c **** 
1425:Generated_Source\PSoC4/CyLFClk.c **** 
1426:Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
1427:Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysWdtGetCount
1428:Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
1429:Generated_Source\PSoC4/CyLFClk.c ****     *
1430:Generated_Source\PSoC4/CyLFClk.c ****     * \brief Reads the current WDT counter value.
1431:Generated_Source\PSoC4/CyLFClk.c ****     *
ARM GAS  C:\Users\akita\AppData\Local\Temp\ccTFmJyh.s 			page 83


1432:Generated_Source\PSoC4/CyLFClk.c ****     * \param counterNum: Valid range [0-2]. The number of the WDT counter.
1433:Generated_Source\PSoC4/CyLFClk.c ****     *
1434:Generated_Source\PSoC4/CyLFClk.c ****     * \return A live counter value.  Counter 0 and Counter 1 are 16 bit counters 
1435:Generated_Source\PSoC4/CyLFClk.c ****     * and counter 2 is a 32 bit counter.
1436:Generated_Source\PSoC4/CyLFClk.c ****     *
1437:Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
1438:Generated_Source\PSoC4/CyLFClk.c ****     uint32 CySysWdtGetCount(uint32 counterNum)
1439:Generated_Source\PSoC4/CyLFClk.c ****     {
 2518              		.loc 2 1439 0
 2519              		.cfi_startproc
 2520 0000 80B5     		push	{r7, lr}
 2521              		.cfi_def_cfa_offset 8
 2522              		.cfi_offset 7, -8
 2523              		.cfi_offset 14, -4
 2524 0002 84B0     		sub	sp, sp, #16
 2525              		.cfi_def_cfa_offset 24
 2526 0004 00AF     		add	r7, sp, #0
 2527              		.cfi_def_cfa_register 7
 2528 0006 7860     		str	r0, [r7, #4]
1440:Generated_Source\PSoC4/CyLFClk.c ****         uint32 regValue = 0u;
 2529              		.loc 2 1440 0
 2530 0008 0023     		mov	r3, #0
 2531 000a FB60     		str	r3, [r7, #12]
1441:Generated_Source\PSoC4/CyLFClk.c **** 
1442:Generated_Source\PSoC4/CyLFClk.c ****         switch(counterNum)
 2532              		.loc 2 1442 0
 2533 000c 7B68     		ldr	r3, [r7, #4]
 2534 000e 012B     		cmp	r3, #1
 2535 0010 09D0     		beq	.L212
 2536 0012 02D3     		bcc	.L213
 2537 0014 022B     		cmp	r3, #2
 2538 0016 0BD0     		beq	.L214
 2539 0018 0EE0     		b	.L217
 2540              	.L213:
1443:Generated_Source\PSoC4/CyLFClk.c ****         {
1444:Generated_Source\PSoC4/CyLFClk.c ****             /* WDT Counter 0 */
1445:Generated_Source\PSoC4/CyLFClk.c ****             case 0u:
1446:Generated_Source\PSoC4/CyLFClk.c ****                 regValue = CY_SYS_WDT_CTRLOW_REG & CY_SYS_WDT_LOWER_16BITS_MASK;
 2541              		.loc 2 1446 0
 2542 001a 0C4B     		ldr	r3, .L218
 2543 001c 1B68     		ldr	r3, [r3]
 2544 001e 1B04     		lsl	r3, r3, #16
 2545 0020 1B0C     		lsr	r3, r3, #16
 2546 0022 FB60     		str	r3, [r7, #12]
1447:Generated_Source\PSoC4/CyLFClk.c ****             break;
 2547              		.loc 2 1447 0
 2548 0024 0CE0     		b	.L215
 2549              	.L212:
1448:Generated_Source\PSoC4/CyLFClk.c **** 
1449:Generated_Source\PSoC4/CyLFClk.c ****             /* WDT Counter 1 */
1450:Generated_Source\PSoC4/CyLFClk.c ****             case 1u:
1451:Generated_Source\PSoC4/CyLFClk.c ****                 regValue = (CY_SYS_WDT_CTRLOW_REG >> CY_SYS_WDT_CNT_MATCH_SHIFT) & CY_SYS_WDT_LOWER
 2550              		.loc 2 1451 0
 2551 0026 094B     		ldr	r3, .L218
 2552 0028 1B68     		ldr	r3, [r3]
 2553 002a 1B0C     		lsr	r3, r3, #16
 2554 002c FB60     		str	r3, [r7, #12]
ARM GAS  C:\Users\akita\AppData\Local\Temp\ccTFmJyh.s 			page 84


1452:Generated_Source\PSoC4/CyLFClk.c ****             break;
 2555              		.loc 2 1452 0
 2556 002e 07E0     		b	.L215
 2557              	.L214:
1453:Generated_Source\PSoC4/CyLFClk.c **** 
1454:Generated_Source\PSoC4/CyLFClk.c ****             /* WDT Counter 2 */
1455:Generated_Source\PSoC4/CyLFClk.c ****             case 2u:
1456:Generated_Source\PSoC4/CyLFClk.c ****                 regValue = CY_SYS_WDT_CTRHIGH_REG;
 2558              		.loc 2 1456 0
 2559 0030 074B     		ldr	r3, .L218+4
 2560 0032 1B68     		ldr	r3, [r3]
 2561 0034 FB60     		str	r3, [r7, #12]
1457:Generated_Source\PSoC4/CyLFClk.c ****             break;
 2562              		.loc 2 1457 0
 2563 0036 03E0     		b	.L215
 2564              	.L217:
1458:Generated_Source\PSoC4/CyLFClk.c **** 
1459:Generated_Source\PSoC4/CyLFClk.c ****             default:
1460:Generated_Source\PSoC4/CyLFClk.c ****                 CYASSERT(0u != 0u);
 2565              		.loc 2 1460 0
 2566 0038 0020     		mov	r0, #0
 2567 003a FFF7FEFF 		bl	CyHalt
1461:Generated_Source\PSoC4/CyLFClk.c ****             break;
 2568              		.loc 2 1461 0
 2569 003e C046     		mov	r8, r8
 2570              	.L215:
1462:Generated_Source\PSoC4/CyLFClk.c ****         }
1463:Generated_Source\PSoC4/CyLFClk.c **** 
1464:Generated_Source\PSoC4/CyLFClk.c ****         return (regValue);
 2571              		.loc 2 1464 0
 2572 0040 FB68     		ldr	r3, [r7, #12]
1465:Generated_Source\PSoC4/CyLFClk.c ****     }
 2573              		.loc 2 1465 0
 2574 0042 181C     		mov	r0, r3
 2575 0044 BD46     		mov	sp, r7
 2576 0046 04B0     		add	sp, sp, #16
 2577              		@ sp needed
 2578 0048 80BD     		pop	{r7, pc}
 2579              	.L219:
 2580 004a C046     		.align	2
 2581              	.L218:
 2582 004c 00020B40 		.word	1074463232
 2583 0050 04020B40 		.word	1074463236
 2584              		.cfi_endproc
 2585              	.LFE34:
 2586              		.size	CySysWdtGetCount, .-CySysWdtGetCount
 2587              		.section	.text.CySysWdtGetInterruptSource,"ax",%progbits
 2588              		.align	2
 2589              		.global	CySysWdtGetInterruptSource
 2590              		.code	16
 2591              		.thumb_func
 2592              		.type	CySysWdtGetInterruptSource, %function
 2593              	CySysWdtGetInterruptSource:
 2594              	.LFB35:
1466:Generated_Source\PSoC4/CyLFClk.c **** 
1467:Generated_Source\PSoC4/CyLFClk.c **** 
1468:Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
ARM GAS  C:\Users\akita\AppData\Local\Temp\ccTFmJyh.s 			page 85


1469:Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysWdtGetInterruptSource
1470:Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
1471:Generated_Source\PSoC4/CyLFClk.c ****     * \brief
1472:Generated_Source\PSoC4/CyLFClk.c ****     * Reads a mask containing all the WDT counters interrupts that are currently
1473:Generated_Source\PSoC4/CyLFClk.c ****     * set by the hardware, if a corresponding mode is selected.
1474:Generated_Source\PSoC4/CyLFClk.c ****     *
1475:Generated_Source\PSoC4/CyLFClk.c ****     * \return The mask of interrupts set
1476:Generated_Source\PSoC4/CyLFClk.c ****     * \return CY_SYS_WDT_COUNTER0_INT - Counter 0
1477:Generated_Source\PSoC4/CyLFClk.c ****     * \return CY_SYS_WDT_COUNTER1_INT - Counter 1
1478:Generated_Source\PSoC4/CyLFClk.c ****     * \return CY_SYS_WDT_COUNTER2_INT - Counter 2
1479:Generated_Source\PSoC4/CyLFClk.c ****     *
1480:Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
1481:Generated_Source\PSoC4/CyLFClk.c ****     uint32 CySysWdtGetInterruptSource(void)
1482:Generated_Source\PSoC4/CyLFClk.c ****     {
 2595              		.loc 2 1482 0
 2596              		.cfi_startproc
 2597 0000 80B5     		push	{r7, lr}
 2598              		.cfi_def_cfa_offset 8
 2599              		.cfi_offset 7, -8
 2600              		.cfi_offset 14, -4
 2601 0002 00AF     		add	r7, sp, #0
 2602              		.cfi_def_cfa_register 7
1483:Generated_Source\PSoC4/CyLFClk.c ****         return (CY_SYS_WDT_CONTROL_REG & (CY_SYS_WDT_COUNTER0_INT | CY_SYS_WDT_COUNTER1_INT | CY_SY
 2603              		.loc 2 1483 0
 2604 0004 034B     		ldr	r3, .L222
 2605 0006 1B68     		ldr	r3, [r3]
 2606 0008 034A     		ldr	r2, .L222+4
 2607 000a 1340     		and	r3, r2
1484:Generated_Source\PSoC4/CyLFClk.c ****     }
 2608              		.loc 2 1484 0
 2609 000c 181C     		mov	r0, r3
 2610 000e BD46     		mov	sp, r7
 2611              		@ sp needed
 2612 0010 80BD     		pop	{r7, pc}
 2613              	.L223:
 2614 0012 C046     		.align	2
 2615              	.L222:
 2616 0014 10020B40 		.word	1074463248
 2617 0018 04040400 		.word	263172
 2618              		.cfi_endproc
 2619              	.LFE35:
 2620              		.size	CySysWdtGetInterruptSource, .-CySysWdtGetInterruptSource
 2621              		.section	.text.CySysWdtClearInterrupt,"ax",%progbits
 2622              		.align	2
 2623              		.global	CySysWdtClearInterrupt
 2624              		.code	16
 2625              		.thumb_func
 2626              		.type	CySysWdtClearInterrupt, %function
 2627              	CySysWdtClearInterrupt:
 2628              	.LFB36:
1485:Generated_Source\PSoC4/CyLFClk.c **** 
1486:Generated_Source\PSoC4/CyLFClk.c **** 
1487:Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
1488:Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysWdtClearInterrupt
1489:Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
1490:Generated_Source\PSoC4/CyLFClk.c ****     * \brief
1491:Generated_Source\PSoC4/CyLFClk.c ****     * Clears all the WDT counter interrupts set in the mask.
ARM GAS  C:\Users\akita\AppData\Local\Temp\ccTFmJyh.s 			page 86


1492:Generated_Source\PSoC4/CyLFClk.c ****     *
1493:Generated_Source\PSoC4/CyLFClk.c ****     * Calling this function also prevents from Reset when the counter mode is set 
1494:Generated_Source\PSoC4/CyLFClk.c ****     * to generate 3 interrupts and then the device resets.
1495:Generated_Source\PSoC4/CyLFClk.c ****     *
1496:Generated_Source\PSoC4/CyLFClk.c ****     * All the WDT interrupts are to be cleared by the firmware, otherwise
1497:Generated_Source\PSoC4/CyLFClk.c ****     * interrupts are generated continuously.
1498:Generated_Source\PSoC4/CyLFClk.c ****     *
1499:Generated_Source\PSoC4/CyLFClk.c ****     * \param counterMask
1500:Generated_Source\PSoC4/CyLFClk.c ****     * CY_SYS_WDT_COUNTER0_INT - Clears counter 0 interrupts <br>
1501:Generated_Source\PSoC4/CyLFClk.c ****     * CY_SYS_WDT_COUNTER1_INT - Clears counter 1 interrupts <br>
1502:Generated_Source\PSoC4/CyLFClk.c ****     * CY_SYS_WDT_COUNTER2_INT - Clears counter 2 interrupts
1503:Generated_Source\PSoC4/CyLFClk.c ****     *
1504:Generated_Source\PSoC4/CyLFClk.c ****     * \details
1505:Generated_Source\PSoC4/CyLFClk.c ****     * This function temporary removes the watchdog lock, if it was set, and
1506:Generated_Source\PSoC4/CyLFClk.c ****     * restores the lock state after cleaning the WDT interrupts that are set in
1507:Generated_Source\PSoC4/CyLFClk.c ****     * a mask.
1508:Generated_Source\PSoC4/CyLFClk.c ****     *
1509:Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
1510:Generated_Source\PSoC4/CyLFClk.c ****     void CySysWdtClearInterrupt(uint32 counterMask)
1511:Generated_Source\PSoC4/CyLFClk.c ****     {
 2629              		.loc 2 1511 0
 2630              		.cfi_startproc
 2631 0000 90B5     		push	{r4, r7, lr}
 2632              		.cfi_def_cfa_offset 12
 2633              		.cfi_offset 4, -12
 2634              		.cfi_offset 7, -8
 2635              		.cfi_offset 14, -4
 2636 0002 85B0     		sub	sp, sp, #20
 2637              		.cfi_def_cfa_offset 32
 2638 0004 00AF     		add	r7, sp, #0
 2639              		.cfi_def_cfa_register 7
 2640 0006 7860     		str	r0, [r7, #4]
1512:Generated_Source\PSoC4/CyLFClk.c ****         uint8 interruptState;
1513:Generated_Source\PSoC4/CyLFClk.c ****         uint32 wdtLockState;
1514:Generated_Source\PSoC4/CyLFClk.c **** 
1515:Generated_Source\PSoC4/CyLFClk.c ****         interruptState = CyEnterCriticalSection();
 2641              		.loc 2 1515 0
 2642 0008 0B23     		mov	r3, #11
 2643 000a FC18     		add	r4, r7, r3
 2644 000c FFF7FEFF 		bl	CyEnterCriticalSection
 2645 0010 031C     		mov	r3, r0
 2646 0012 2370     		strb	r3, [r4]
1516:Generated_Source\PSoC4/CyLFClk.c **** 
1517:Generated_Source\PSoC4/CyLFClk.c ****         if (0u != CySysWdtLocked())
 2647              		.loc 2 1517 0
 2648 0014 FFF7FEFF 		bl	CySysWdtLocked
 2649 0018 031E     		sub	r3, r0, #0
 2650 001a 04D0     		beq	.L225
1518:Generated_Source\PSoC4/CyLFClk.c ****         {
1519:Generated_Source\PSoC4/CyLFClk.c ****             wdtLockState = 1u;
 2651              		.loc 2 1519 0
 2652 001c 0123     		mov	r3, #1
 2653 001e FB60     		str	r3, [r7, #12]
1520:Generated_Source\PSoC4/CyLFClk.c ****             CySysWdtUnlock();
 2654              		.loc 2 1520 0
 2655 0020 FFF7FEFF 		bl	CySysWdtUnlock
 2656 0024 01E0     		b	.L226
ARM GAS  C:\Users\akita\AppData\Local\Temp\ccTFmJyh.s 			page 87


 2657              	.L225:
1521:Generated_Source\PSoC4/CyLFClk.c ****         }
1522:Generated_Source\PSoC4/CyLFClk.c ****         else
1523:Generated_Source\PSoC4/CyLFClk.c ****         {
1524:Generated_Source\PSoC4/CyLFClk.c ****             wdtLockState = 0u;
 2658              		.loc 2 1524 0
 2659 0026 0023     		mov	r3, #0
 2660 0028 FB60     		str	r3, [r7, #12]
 2661              	.L226:
1525:Generated_Source\PSoC4/CyLFClk.c ****         }
1526:Generated_Source\PSoC4/CyLFClk.c **** 
1527:Generated_Source\PSoC4/CyLFClk.c ****         /* Set new WDT control register value */
1528:Generated_Source\PSoC4/CyLFClk.c ****         counterMask &= (CY_SYS_WDT_COUNTER0_INT |
 2662              		.loc 2 1528 0
 2663 002a 7B68     		ldr	r3, [r7, #4]
 2664 002c 0D4A     		ldr	r2, .L228
 2665 002e 1340     		and	r3, r2
 2666 0030 7B60     		str	r3, [r7, #4]
1529:Generated_Source\PSoC4/CyLFClk.c ****                         CY_SYS_WDT_COUNTER1_INT |
1530:Generated_Source\PSoC4/CyLFClk.c ****                         CY_SYS_WDT_COUNTER2_INT);
1531:Generated_Source\PSoC4/CyLFClk.c **** 
1532:Generated_Source\PSoC4/CyLFClk.c ****         CY_SYS_WDT_CONTROL_REG = counterMask | (CY_SYS_WDT_CONTROL_REG & ~(CY_SYS_WDT_COUNTER0_INT 
 2667              		.loc 2 1532 0
 2668 0032 0D4B     		ldr	r3, .L228+4
 2669 0034 0C4A     		ldr	r2, .L228+4
 2670 0036 1268     		ldr	r2, [r2]
 2671 0038 0C49     		ldr	r1, .L228+8
 2672 003a 1140     		and	r1, r2
 2673 003c 7A68     		ldr	r2, [r7, #4]
 2674 003e 0A43     		orr	r2, r1
 2675 0040 1A60     		str	r2, [r3]
1533:Generated_Source\PSoC4/CyLFClk.c ****                                                                            CY_SYS_WDT_COUNTER1_INT 
1534:Generated_Source\PSoC4/CyLFClk.c ****                                                                            CY_SYS_WDT_COUNTER2_INT)
1535:Generated_Source\PSoC4/CyLFClk.c **** 
1536:Generated_Source\PSoC4/CyLFClk.c ****         /* Read the CY_SYS_WDT_CONTROL_REG to clear the interrupt request.
1537:Generated_Source\PSoC4/CyLFClk.c ****          * Cypress ID #207093, #206231
1538:Generated_Source\PSoC4/CyLFClk.c ****         */
1539:Generated_Source\PSoC4/CyLFClk.c ****         (void)CY_SYS_WDT_CONTROL_REG;
 2676              		.loc 2 1539 0
 2677 0042 094B     		ldr	r3, .L228+4
 2678 0044 1B68     		ldr	r3, [r3]
1540:Generated_Source\PSoC4/CyLFClk.c **** 
1541:Generated_Source\PSoC4/CyLFClk.c ****         if (1u == wdtLockState)
 2679              		.loc 2 1541 0
 2680 0046 FB68     		ldr	r3, [r7, #12]
 2681 0048 012B     		cmp	r3, #1
 2682 004a 01D1     		bne	.L227
1542:Generated_Source\PSoC4/CyLFClk.c ****         {
1543:Generated_Source\PSoC4/CyLFClk.c ****             CySysWdtLock();
 2683              		.loc 2 1543 0
 2684 004c FFF7FEFF 		bl	CySysWdtLock
 2685              	.L227:
1544:Generated_Source\PSoC4/CyLFClk.c ****         }
1545:Generated_Source\PSoC4/CyLFClk.c **** 
1546:Generated_Source\PSoC4/CyLFClk.c ****         CyExitCriticalSection(interruptState);
 2686              		.loc 2 1546 0
 2687 0050 0B23     		mov	r3, #11
ARM GAS  C:\Users\akita\AppData\Local\Temp\ccTFmJyh.s 			page 88


 2688 0052 FB18     		add	r3, r7, r3
 2689 0054 1B78     		ldrb	r3, [r3]
 2690 0056 181C     		mov	r0, r3
 2691 0058 FFF7FEFF 		bl	CyExitCriticalSection
1547:Generated_Source\PSoC4/CyLFClk.c ****     }
 2692              		.loc 2 1547 0
 2693 005c BD46     		mov	sp, r7
 2694 005e 05B0     		add	sp, sp, #20
 2695              		@ sp needed
 2696 0060 90BD     		pop	{r4, r7, pc}
 2697              	.L229:
 2698 0062 C046     		.align	2
 2699              	.L228:
 2700 0064 04040400 		.word	263172
 2701 0068 10020B40 		.word	1074463248
 2702 006c FBFBFBFF 		.word	-263173
 2703              		.cfi_endproc
 2704              	.LFE36:
 2705              		.size	CySysWdtClearInterrupt, .-CySysWdtClearInterrupt
 2706              		.section	.text.CySysWdtResetCounters,"ax",%progbits
 2707              		.align	2
 2708              		.global	CySysWdtResetCounters
 2709              		.code	16
 2710              		.thumb_func
 2711              		.type	CySysWdtResetCounters, %function
 2712              	CySysWdtResetCounters:
 2713              	.LFB37:
1548:Generated_Source\PSoC4/CyLFClk.c **** 
1549:Generated_Source\PSoC4/CyLFClk.c **** 
1550:Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
1551:Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysWdtResetCounters
1552:Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
1553:Generated_Source\PSoC4/CyLFClk.c ****     * \brief
1554:Generated_Source\PSoC4/CyLFClk.c ****     * Resets all the WDT counters set in the mask.
1555:Generated_Source\PSoC4/CyLFClk.c ****     *
1556:Generated_Source\PSoC4/CyLFClk.c ****     * \param countersMask
1557:Generated_Source\PSoC4/CyLFClk.c ****     * CY_SYS_WDT_COUNTER0_RESET - Reset counter 0 <br>
1558:Generated_Source\PSoC4/CyLFClk.c ****     * CY_SYS_WDT_COUNTER1_RESET - Reset counter 1 <br>
1559:Generated_Source\PSoC4/CyLFClk.c ****     * CY_SYS_WDT_COUNTER2_RESET - Reset counter 2
1560:Generated_Source\PSoC4/CyLFClk.c ****     *
1561:Generated_Source\PSoC4/CyLFClk.c ****     * \details
1562:Generated_Source\PSoC4/CyLFClk.c ****     * This function does not reset counter values if the Watchdog is locked.
1563:Generated_Source\PSoC4/CyLFClk.c ****     * This function waits while corresponding counters will be reset. This may
1564:Generated_Source\PSoC4/CyLFClk.c ****     * take up to 3 LFCLK cycles.
1565:Generated_Source\PSoC4/CyLFClk.c ****     * The LFCLK source must be enabled. Otherwise, the function will never exit.
1566:Generated_Source\PSoC4/CyLFClk.c ****     *
1567:Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
1568:Generated_Source\PSoC4/CyLFClk.c ****     void CySysWdtResetCounters(uint32 countersMask)
1569:Generated_Source\PSoC4/CyLFClk.c ****     {
 2714              		.loc 2 1569 0
 2715              		.cfi_startproc
 2716 0000 80B5     		push	{r7, lr}
 2717              		.cfi_def_cfa_offset 8
 2718              		.cfi_offset 7, -8
 2719              		.cfi_offset 14, -4
 2720 0002 82B0     		sub	sp, sp, #8
 2721              		.cfi_def_cfa_offset 16
ARM GAS  C:\Users\akita\AppData\Local\Temp\ccTFmJyh.s 			page 89


 2722 0004 00AF     		add	r7, sp, #0
 2723              		.cfi_def_cfa_register 7
 2724 0006 7860     		str	r0, [r7, #4]
1570:Generated_Source\PSoC4/CyLFClk.c ****         /* Set new WDT reset value */
1571:Generated_Source\PSoC4/CyLFClk.c ****         CY_SYS_WDT_CONTROL_REG |= (countersMask & CY_SYS_WDT_COUNTERS_RESET);
 2725              		.loc 2 1571 0
 2726 0008 084B     		ldr	r3, .L232
 2727 000a 084A     		ldr	r2, .L232
 2728 000c 1168     		ldr	r1, [r2]
 2729 000e 7A68     		ldr	r2, [r7, #4]
 2730 0010 0748     		ldr	r0, .L232+4
 2731 0012 0240     		and	r2, r0
 2732 0014 0A43     		orr	r2, r1
 2733 0016 1A60     		str	r2, [r3]
1572:Generated_Source\PSoC4/CyLFClk.c **** 
1573:Generated_Source\PSoC4/CyLFClk.c ****         while (0uL != (CY_SYS_WDT_CONTROL_REG & CY_SYS_WDT_COUNTERS_RESET))
 2734              		.loc 2 1573 0
 2735 0018 C046     		mov	r8, r8
 2736              	.L231:
 2737              		.loc 2 1573 0 is_stmt 0 discriminator 1
 2738 001a 044B     		ldr	r3, .L232
 2739 001c 1B68     		ldr	r3, [r3]
 2740 001e 044A     		ldr	r2, .L232+4
 2741 0020 1340     		and	r3, r2
 2742 0022 FAD1     		bne	.L231
1574:Generated_Source\PSoC4/CyLFClk.c ****         {
1575:Generated_Source\PSoC4/CyLFClk.c ****             /* Wait for reset to come into effect */
1576:Generated_Source\PSoC4/CyLFClk.c ****         }
1577:Generated_Source\PSoC4/CyLFClk.c ****     }
 2743              		.loc 2 1577 0 is_stmt 1
 2744 0024 BD46     		mov	sp, r7
 2745 0026 02B0     		add	sp, sp, #8
 2746              		@ sp needed
 2747 0028 80BD     		pop	{r7, pc}
 2748              	.L233:
 2749 002a C046     		.align	2
 2750              	.L232:
 2751 002c 10020B40 		.word	1074463248
 2752 0030 08080800 		.word	526344
 2753              		.cfi_endproc
 2754              	.LFE37:
 2755              		.size	CySysWdtResetCounters, .-CySysWdtResetCounters
 2756              		.section	.text.CySysWdtSetInterruptCallback,"ax",%progbits
 2757              		.align	2
 2758              		.global	CySysWdtSetInterruptCallback
 2759              		.code	16
 2760              		.thumb_func
 2761              		.type	CySysWdtSetInterruptCallback, %function
 2762              	CySysWdtSetInterruptCallback:
 2763              	.LFB38:
1578:Generated_Source\PSoC4/CyLFClk.c **** 
1579:Generated_Source\PSoC4/CyLFClk.c **** 
1580:Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
1581:Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysWdtSetInterruptCallback
1582:Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
1583:Generated_Source\PSoC4/CyLFClk.c ****     * \brief
1584:Generated_Source\PSoC4/CyLFClk.c ****     * Sets the ISR callback function for the particular WDT counter.
ARM GAS  C:\Users\akita\AppData\Local\Temp\ccTFmJyh.s 			page 90


1585:Generated_Source\PSoC4/CyLFClk.c ****     * These functions are called on the WDT interrupt.
1586:Generated_Source\PSoC4/CyLFClk.c ****     *
1587:Generated_Source\PSoC4/CyLFClk.c ****     * \param counterNum The number of the WDT counter.
1588:Generated_Source\PSoC4/CyLFClk.c ****     * \param function The pointer to the callback function.
1589:Generated_Source\PSoC4/CyLFClk.c ****     *
1590:Generated_Source\PSoC4/CyLFClk.c ****     * \return The pointer to the previous callback function.
1591:Generated_Source\PSoC4/CyLFClk.c ****     * \return NULL is returned if the specified address is not set.
1592:Generated_Source\PSoC4/CyLFClk.c ****     *
1593:Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
1594:Generated_Source\PSoC4/CyLFClk.c ****     cyWdtCallback CySysWdtSetInterruptCallback(uint32 counterNum, cyWdtCallback function)
1595:Generated_Source\PSoC4/CyLFClk.c ****     {
 2764              		.loc 2 1595 0
 2765              		.cfi_startproc
 2766 0000 80B5     		push	{r7, lr}
 2767              		.cfi_def_cfa_offset 8
 2768              		.cfi_offset 7, -8
 2769              		.cfi_offset 14, -4
 2770 0002 84B0     		sub	sp, sp, #16
 2771              		.cfi_def_cfa_offset 24
 2772 0004 00AF     		add	r7, sp, #0
 2773              		.cfi_def_cfa_register 7
 2774 0006 7860     		str	r0, [r7, #4]
 2775 0008 3960     		str	r1, [r7]
1596:Generated_Source\PSoC4/CyLFClk.c ****         cyWdtCallback prevCallback = (void *)0;
 2776              		.loc 2 1596 0
 2777 000a 0023     		mov	r3, #0
 2778 000c FB60     		str	r3, [r7, #12]
1597:Generated_Source\PSoC4/CyLFClk.c **** 
1598:Generated_Source\PSoC4/CyLFClk.c ****         if(counterNum < CY_WDT_NUM_OF_WDT)
 2779              		.loc 2 1598 0
 2780 000e 7B68     		ldr	r3, [r7, #4]
 2781 0010 022B     		cmp	r3, #2
 2782 0012 0AD8     		bhi	.L235
1599:Generated_Source\PSoC4/CyLFClk.c ****         {
1600:Generated_Source\PSoC4/CyLFClk.c ****             prevCallback = cySysWdtCallback[counterNum];
 2783              		.loc 2 1600 0
 2784 0014 094B     		ldr	r3, .L238
 2785 0016 7A68     		ldr	r2, [r7, #4]
 2786 0018 9200     		lsl	r2, r2, #2
 2787 001a D358     		ldr	r3, [r2, r3]
 2788 001c FB60     		str	r3, [r7, #12]
1601:Generated_Source\PSoC4/CyLFClk.c ****             cySysWdtCallback[counterNum] = function;
 2789              		.loc 2 1601 0
 2790 001e 074B     		ldr	r3, .L238
 2791 0020 7A68     		ldr	r2, [r7, #4]
 2792 0022 9200     		lsl	r2, r2, #2
 2793 0024 3968     		ldr	r1, [r7]
 2794 0026 D150     		str	r1, [r2, r3]
 2795 0028 02E0     		b	.L236
 2796              	.L235:
1602:Generated_Source\PSoC4/CyLFClk.c ****         }
1603:Generated_Source\PSoC4/CyLFClk.c ****         else
1604:Generated_Source\PSoC4/CyLFClk.c ****         {
1605:Generated_Source\PSoC4/CyLFClk.c ****             CYASSERT(0u != 0u);
 2797              		.loc 2 1605 0 discriminator 1
 2798 002a 0020     		mov	r0, #0
 2799 002c FFF7FEFF 		bl	CyHalt
ARM GAS  C:\Users\akita\AppData\Local\Temp\ccTFmJyh.s 			page 91


 2800              	.L236:
1606:Generated_Source\PSoC4/CyLFClk.c ****         }
1607:Generated_Source\PSoC4/CyLFClk.c **** 
1608:Generated_Source\PSoC4/CyLFClk.c ****         return((cyWdtCallback)prevCallback);
 2801              		.loc 2 1608 0
 2802 0030 FB68     		ldr	r3, [r7, #12]
1609:Generated_Source\PSoC4/CyLFClk.c ****     }
 2803              		.loc 2 1609 0
 2804 0032 181C     		mov	r0, r3
 2805 0034 BD46     		mov	sp, r7
 2806 0036 04B0     		add	sp, sp, #16
 2807              		@ sp needed
 2808 0038 80BD     		pop	{r7, pc}
 2809              	.L239:
 2810 003a C046     		.align	2
 2811              	.L238:
 2812 003c 0C000000 		.word	cySysWdtCallback
 2813              		.cfi_endproc
 2814              	.LFE38:
 2815              		.size	CySysWdtSetInterruptCallback, .-CySysWdtSetInterruptCallback
 2816              		.section	.text.CySysWdtGetInterruptCallback,"ax",%progbits
 2817              		.align	2
 2818              		.global	CySysWdtGetInterruptCallback
 2819              		.code	16
 2820              		.thumb_func
 2821              		.type	CySysWdtGetInterruptCallback, %function
 2822              	CySysWdtGetInterruptCallback:
 2823              	.LFB39:
1610:Generated_Source\PSoC4/CyLFClk.c **** 
1611:Generated_Source\PSoC4/CyLFClk.c **** 
1612:Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
1613:Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysWdtGetInterruptCallback
1614:Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
1615:Generated_Source\PSoC4/CyLFClk.c ****     * \brief
1616:Generated_Source\PSoC4/CyLFClk.c ****     * Gets the ISR callback function for the particular WDT counter.
1617:Generated_Source\PSoC4/CyLFClk.c ****     *
1618:Generated_Source\PSoC4/CyLFClk.c ****     * \param counterNum The number of the WDT counter.
1619:Generated_Source\PSoC4/CyLFClk.c ****     *
1620:Generated_Source\PSoC4/CyLFClk.c ****     * \return The pointer to the callback function registered for a particular WDT by
1621:Generated_Source\PSoC4/CyLFClk.c ****     * a particular address that are passed through arguments.
1622:Generated_Source\PSoC4/CyLFClk.c ****     *
1623:Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
1624:Generated_Source\PSoC4/CyLFClk.c ****     cyWdtCallback CySysWdtGetInterruptCallback(uint32 counterNum)
1625:Generated_Source\PSoC4/CyLFClk.c ****     {
 2824              		.loc 2 1625 0
 2825              		.cfi_startproc
 2826 0000 80B5     		push	{r7, lr}
 2827              		.cfi_def_cfa_offset 8
 2828              		.cfi_offset 7, -8
 2829              		.cfi_offset 14, -4
 2830 0002 84B0     		sub	sp, sp, #16
 2831              		.cfi_def_cfa_offset 24
 2832 0004 00AF     		add	r7, sp, #0
 2833              		.cfi_def_cfa_register 7
 2834 0006 7860     		str	r0, [r7, #4]
1626:Generated_Source\PSoC4/CyLFClk.c ****         cyWdtCallback retCallback = (void *)0;
 2835              		.loc 2 1626 0
ARM GAS  C:\Users\akita\AppData\Local\Temp\ccTFmJyh.s 			page 92


 2836 0008 0023     		mov	r3, #0
 2837 000a FB60     		str	r3, [r7, #12]
1627:Generated_Source\PSoC4/CyLFClk.c **** 
1628:Generated_Source\PSoC4/CyLFClk.c ****         if(counterNum < CY_WDT_NUM_OF_WDT)
 2838              		.loc 2 1628 0
 2839 000c 7B68     		ldr	r3, [r7, #4]
 2840 000e 022B     		cmp	r3, #2
 2841 0010 05D8     		bhi	.L241
1629:Generated_Source\PSoC4/CyLFClk.c ****         {
1630:Generated_Source\PSoC4/CyLFClk.c ****             retCallback = (cyWdtCallback)cySysWdtCallback[counterNum];
 2842              		.loc 2 1630 0
 2843 0012 074B     		ldr	r3, .L244
 2844 0014 7A68     		ldr	r2, [r7, #4]
 2845 0016 9200     		lsl	r2, r2, #2
 2846 0018 D358     		ldr	r3, [r2, r3]
 2847 001a FB60     		str	r3, [r7, #12]
 2848 001c 02E0     		b	.L242
 2849              	.L241:
1631:Generated_Source\PSoC4/CyLFClk.c ****         }
1632:Generated_Source\PSoC4/CyLFClk.c ****         else
1633:Generated_Source\PSoC4/CyLFClk.c ****         {
1634:Generated_Source\PSoC4/CyLFClk.c ****             CYASSERT(0u != 0u);
 2850              		.loc 2 1634 0 discriminator 1
 2851 001e 0020     		mov	r0, #0
 2852 0020 FFF7FEFF 		bl	CyHalt
 2853              	.L242:
1635:Generated_Source\PSoC4/CyLFClk.c ****         }
1636:Generated_Source\PSoC4/CyLFClk.c **** 
1637:Generated_Source\PSoC4/CyLFClk.c ****         return(retCallback);
 2854              		.loc 2 1637 0
 2855 0024 FB68     		ldr	r3, [r7, #12]
1638:Generated_Source\PSoC4/CyLFClk.c ****     }
 2856              		.loc 2 1638 0
 2857 0026 181C     		mov	r0, r3
 2858 0028 BD46     		mov	sp, r7
 2859 002a 04B0     		add	sp, sp, #16
 2860              		@ sp needed
 2861 002c 80BD     		pop	{r7, pc}
 2862              	.L245:
 2863 002e C046     		.align	2
 2864              	.L244:
 2865 0030 0C000000 		.word	cySysWdtCallback
 2866              		.cfi_endproc
 2867              	.LFE39:
 2868              		.size	CySysWdtGetInterruptCallback, .-CySysWdtGetInterruptCallback
 2869              		.section	.text.CySysWdtEnableCounterIsr,"ax",%progbits
 2870              		.align	2
 2871              		.global	CySysWdtEnableCounterIsr
 2872              		.code	16
 2873              		.thumb_func
 2874              		.type	CySysWdtEnableCounterIsr, %function
 2875              	CySysWdtEnableCounterIsr:
 2876              	.LFB40:
1639:Generated_Source\PSoC4/CyLFClk.c **** 
1640:Generated_Source\PSoC4/CyLFClk.c **** 
1641:Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
1642:Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysWdtEnableCounterIsr
ARM GAS  C:\Users\akita\AppData\Local\Temp\ccTFmJyh.s 			page 93


1643:Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
1644:Generated_Source\PSoC4/CyLFClk.c ****     * \brief
1645:Generated_Source\PSoC4/CyLFClk.c ****     * Enables the ISR callback servicing for the particular WDT counter
1646:Generated_Source\PSoC4/CyLFClk.c ****     *
1647:Generated_Source\PSoC4/CyLFClk.c ****     * \param counterNum Valid range [0-2]. The number of the WDT counter.
1648:Generated_Source\PSoC4/CyLFClk.c ****     *
1649:Generated_Source\PSoC4/CyLFClk.c ****     * Value corresponds to appropriate WDT counter. For example value 1 
1650:Generated_Source\PSoC4/CyLFClk.c ****     * corresponds to second WDT counter.
1651:Generated_Source\PSoC4/CyLFClk.c ****     *
1652:Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
1653:Generated_Source\PSoC4/CyLFClk.c ****     void CySysWdtEnableCounterIsr(uint32 counterNum)
1654:Generated_Source\PSoC4/CyLFClk.c ****     {
 2877              		.loc 2 1654 0
 2878              		.cfi_startproc
 2879 0000 80B5     		push	{r7, lr}
 2880              		.cfi_def_cfa_offset 8
 2881              		.cfi_offset 7, -8
 2882              		.cfi_offset 14, -4
 2883 0002 82B0     		sub	sp, sp, #8
 2884              		.cfi_def_cfa_offset 16
 2885 0004 00AF     		add	r7, sp, #0
 2886              		.cfi_def_cfa_register 7
 2887 0006 7860     		str	r0, [r7, #4]
1655:Generated_Source\PSoC4/CyLFClk.c ****         if(counterNum <= CY_SYS_WDT_COUNTER2)
 2888              		.loc 2 1655 0
 2889 0008 7B68     		ldr	r3, [r7, #4]
 2890 000a 022B     		cmp	r3, #2
 2891 000c 13D8     		bhi	.L247
1656:Generated_Source\PSoC4/CyLFClk.c ****         {
1657:Generated_Source\PSoC4/CyLFClk.c ****             disableServicedIsr &= ~counterIntMaskTbl[counterNum];
 2892              		.loc 2 1657 0
 2893 000e 0D4B     		ldr	r3, .L249
 2894 0010 7A68     		ldr	r2, [r7, #4]
 2895 0012 9200     		lsl	r2, r2, #2
 2896 0014 D358     		ldr	r3, [r2, r3]
 2897 0016 DA43     		mvn	r2, r3
 2898 0018 0B4B     		ldr	r3, .L249+4
 2899 001a 1B68     		ldr	r3, [r3]
 2900 001c 1A40     		and	r2, r3
 2901 001e 0A4B     		ldr	r3, .L249+4
 2902 0020 1A60     		str	r2, [r3]
1658:Generated_Source\PSoC4/CyLFClk.c ****             wdtIsrMask |= counterIntMaskTbl[counterNum];
 2903              		.loc 2 1658 0
 2904 0022 084B     		ldr	r3, .L249
 2905 0024 7A68     		ldr	r2, [r7, #4]
 2906 0026 9200     		lsl	r2, r2, #2
 2907 0028 D258     		ldr	r2, [r2, r3]
 2908 002a 084B     		ldr	r3, .L249+8
 2909 002c 1B68     		ldr	r3, [r3]
 2910 002e 1A43     		orr	r2, r3
 2911 0030 064B     		ldr	r3, .L249+8
 2912 0032 1A60     		str	r2, [r3]
 2913 0034 02E0     		b	.L246
 2914              	.L247:
1659:Generated_Source\PSoC4/CyLFClk.c ****         }
1660:Generated_Source\PSoC4/CyLFClk.c ****         else
1661:Generated_Source\PSoC4/CyLFClk.c ****         {
ARM GAS  C:\Users\akita\AppData\Local\Temp\ccTFmJyh.s 			page 94


1662:Generated_Source\PSoC4/CyLFClk.c ****             CYASSERT(0u != 0u);
 2915              		.loc 2 1662 0 discriminator 1
 2916 0036 0020     		mov	r0, #0
 2917 0038 FFF7FEFF 		bl	CyHalt
 2918              	.L246:
1663:Generated_Source\PSoC4/CyLFClk.c ****         }
1664:Generated_Source\PSoC4/CyLFClk.c ****     }
 2919              		.loc 2 1664 0
 2920 003c BD46     		mov	sp, r7
 2921 003e 02B0     		add	sp, sp, #8
 2922              		@ sp needed
 2923 0040 80BD     		pop	{r7, pc}
 2924              	.L250:
 2925 0042 C046     		.align	2
 2926              	.L249:
 2927 0044 00000000 		.word	counterIntMaskTbl
 2928 0048 08000000 		.word	disableServicedIsr
 2929 004c 04000000 		.word	wdtIsrMask
 2930              		.cfi_endproc
 2931              	.LFE40:
 2932              		.size	CySysWdtEnableCounterIsr, .-CySysWdtEnableCounterIsr
 2933              		.section	.text.CySysWdtDisableCounterIsr,"ax",%progbits
 2934              		.align	2
 2935              		.global	CySysWdtDisableCounterIsr
 2936              		.code	16
 2937              		.thumb_func
 2938              		.type	CySysWdtDisableCounterIsr, %function
 2939              	CySysWdtDisableCounterIsr:
 2940              	.LFB41:
1665:Generated_Source\PSoC4/CyLFClk.c **** 
1666:Generated_Source\PSoC4/CyLFClk.c **** 
1667:Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
1668:Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysWdtDisableCounterIsr
1669:Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
1670:Generated_Source\PSoC4/CyLFClk.c ****     * \brief
1671:Generated_Source\PSoC4/CyLFClk.c ****     * Disables the ISR callback servicing for the particular WDT counter
1672:Generated_Source\PSoC4/CyLFClk.c ****     *
1673:Generated_Source\PSoC4/CyLFClk.c ****     * \param counterNum Valid range [0-2]. The number of the WDT counter.
1674:Generated_Source\PSoC4/CyLFClk.c ****     *
1675:Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
1676:Generated_Source\PSoC4/CyLFClk.c ****     void CySysWdtDisableCounterIsr(uint32 counterNum)
1677:Generated_Source\PSoC4/CyLFClk.c ****     {
 2941              		.loc 2 1677 0
 2942              		.cfi_startproc
 2943 0000 80B5     		push	{r7, lr}
 2944              		.cfi_def_cfa_offset 8
 2945              		.cfi_offset 7, -8
 2946              		.cfi_offset 14, -4
 2947 0002 82B0     		sub	sp, sp, #8
 2948              		.cfi_def_cfa_offset 16
 2949 0004 00AF     		add	r7, sp, #0
 2950              		.cfi_def_cfa_register 7
 2951 0006 7860     		str	r0, [r7, #4]
1678:Generated_Source\PSoC4/CyLFClk.c ****         if(counterNum <= CY_SYS_WDT_COUNTER2)
 2952              		.loc 2 1678 0
 2953 0008 7B68     		ldr	r3, [r7, #4]
 2954 000a 022B     		cmp	r3, #2
ARM GAS  C:\Users\akita\AppData\Local\Temp\ccTFmJyh.s 			page 95


 2955 000c 0AD8     		bhi	.L252
1679:Generated_Source\PSoC4/CyLFClk.c ****         {
1680:Generated_Source\PSoC4/CyLFClk.c ****             wdtIsrMask &= ~counterIntMaskTbl[counterNum];
 2956              		.loc 2 1680 0
 2957 000e 084B     		ldr	r3, .L254
 2958 0010 7A68     		ldr	r2, [r7, #4]
 2959 0012 9200     		lsl	r2, r2, #2
 2960 0014 D358     		ldr	r3, [r2, r3]
 2961 0016 DA43     		mvn	r2, r3
 2962 0018 064B     		ldr	r3, .L254+4
 2963 001a 1B68     		ldr	r3, [r3]
 2964 001c 1A40     		and	r2, r3
 2965 001e 054B     		ldr	r3, .L254+4
 2966 0020 1A60     		str	r2, [r3]
 2967 0022 02E0     		b	.L251
 2968              	.L252:
1681:Generated_Source\PSoC4/CyLFClk.c ****         }
1682:Generated_Source\PSoC4/CyLFClk.c ****         else
1683:Generated_Source\PSoC4/CyLFClk.c ****         {
1684:Generated_Source\PSoC4/CyLFClk.c ****             CYASSERT(0u != 0u);
 2969              		.loc 2 1684 0 discriminator 1
 2970 0024 0020     		mov	r0, #0
 2971 0026 FFF7FEFF 		bl	CyHalt
 2972              	.L251:
1685:Generated_Source\PSoC4/CyLFClk.c ****         }
1686:Generated_Source\PSoC4/CyLFClk.c ****     }
 2973              		.loc 2 1686 0
 2974 002a BD46     		mov	sp, r7
 2975 002c 02B0     		add	sp, sp, #8
 2976              		@ sp needed
 2977 002e 80BD     		pop	{r7, pc}
 2978              	.L255:
 2979              		.align	2
 2980              	.L254:
 2981 0030 00000000 		.word	counterIntMaskTbl
 2982 0034 04000000 		.word	wdtIsrMask
 2983              		.cfi_endproc
 2984              	.LFE41:
 2985              		.size	CySysWdtDisableCounterIsr, .-CySysWdtDisableCounterIsr
 2986              		.section	.text.CySysWdtIsr,"ax",%progbits
 2987              		.align	2
 2988              		.global	CySysWdtIsr
 2989              		.code	16
 2990              		.thumb_func
 2991              		.type	CySysWdtIsr, %function
 2992              	CySysWdtIsr:
 2993              	.LFB42:
1687:Generated_Source\PSoC4/CyLFClk.c **** 
1688:Generated_Source\PSoC4/CyLFClk.c **** 
1689:Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
1690:Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysWdtIsr
1691:Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
1692:Generated_Source\PSoC4/CyLFClk.c ****     * \brief
1693:Generated_Source\PSoC4/CyLFClk.c ****     * This is the handler of the WDT interrupt in CPU NVIC.
1694:Generated_Source\PSoC4/CyLFClk.c ****     *
1695:Generated_Source\PSoC4/CyLFClk.c ****     * The handler checks which WDT triggered in the interrupt and calls the 
1696:Generated_Source\PSoC4/CyLFClk.c ****     * respective callback functions configured by the user by using 
ARM GAS  C:\Users\akita\AppData\Local\Temp\ccTFmJyh.s 			page 96


1697:Generated_Source\PSoC4/CyLFClk.c ****     * CySysWdtSetIsrCallback() API.
1698:Generated_Source\PSoC4/CyLFClk.c ****     *
1699:Generated_Source\PSoC4/CyLFClk.c ****     * The order of the callback execution is incremental. Callback-0 is
1700:Generated_Source\PSoC4/CyLFClk.c ****     * run as the first one and callback-2 is called as the last one.
1701:Generated_Source\PSoC4/CyLFClk.c ****     *
1702:Generated_Source\PSoC4/CyLFClk.c ****     * \details
1703:Generated_Source\PSoC4/CyLFClk.c ****     * This function clears the WDT interrupt every time when it is called.
1704:Generated_Source\PSoC4/CyLFClk.c ****     * Reset after the 3rd interrupt does not happen if this function is registered
1705:Generated_Source\PSoC4/CyLFClk.c ****     * as the interrupt handler even if the "Watchdog with Interrupt" mode is
1706:Generated_Source\PSoC4/CyLFClk.c ****     * selected on the "Low Frequency Clocks" tab.
1707:Generated_Source\PSoC4/CyLFClk.c ****     *
1708:Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
1709:Generated_Source\PSoC4/CyLFClk.c ****     void CySysWdtIsr(void)
1710:Generated_Source\PSoC4/CyLFClk.c ****     {
 2994              		.loc 2 1710 0
 2995              		.cfi_startproc
 2996 0000 80B5     		push	{r7, lr}
 2997              		.cfi_def_cfa_offset 8
 2998              		.cfi_offset 7, -8
 2999              		.cfi_offset 14, -4
 3000 0002 00AF     		add	r7, sp, #0
 3001              		.cfi_def_cfa_register 7
1711:Generated_Source\PSoC4/CyLFClk.c ****         if(0u != (CY_SYS_WDT_COUNTER0_INT & CY_SYS_WDT_CONTROL_REG))
 3002              		.loc 2 1711 0
 3003 0004 334B     		ldr	r3, .L263
 3004 0006 1B68     		ldr	r3, [r3]
 3005 0008 0422     		mov	r2, #4
 3006 000a 1340     		and	r3, r2
 3007 000c 1FD0     		beq	.L257
1712:Generated_Source\PSoC4/CyLFClk.c ****         {
1713:Generated_Source\PSoC4/CyLFClk.c ****             if(0u != (CY_SYS_WDT_COUNTER0_INT & wdtIsrMask))
 3008              		.loc 2 1713 0
 3009 000e 324B     		ldr	r3, .L263+4
 3010 0010 1B68     		ldr	r3, [r3]
 3011 0012 0422     		mov	r2, #4
 3012 0014 1340     		and	r3, r2
 3013 0016 17D0     		beq	.L258
1714:Generated_Source\PSoC4/CyLFClk.c ****             {
1715:Generated_Source\PSoC4/CyLFClk.c ****                 wdtIsrMask &= ~(disableServicedIsr & CY_SYS_WDT_COUNTER0_INT);
 3014              		.loc 2 1715 0
 3015 0018 304B     		ldr	r3, .L263+8
 3016 001a 1B68     		ldr	r3, [r3]
 3017 001c 0422     		mov	r2, #4
 3018 001e 1340     		and	r3, r2
 3019 0020 DA43     		mvn	r2, r3
 3020 0022 2D4B     		ldr	r3, .L263+4
 3021 0024 1B68     		ldr	r3, [r3]
 3022 0026 1A40     		and	r2, r3
 3023 0028 2B4B     		ldr	r3, .L263+4
 3024 002a 1A60     		str	r2, [r3]
1716:Generated_Source\PSoC4/CyLFClk.c ****                 disableServicedIsr  &= ~CY_SYS_WDT_COUNTER0_INT;
 3025              		.loc 2 1716 0
 3026 002c 2B4B     		ldr	r3, .L263+8
 3027 002e 1B68     		ldr	r3, [r3]
 3028 0030 0422     		mov	r2, #4
 3029 0032 9343     		bic	r3, r2
 3030 0034 1A1C     		mov	r2, r3
ARM GAS  C:\Users\akita\AppData\Local\Temp\ccTFmJyh.s 			page 97


 3031 0036 294B     		ldr	r3, .L263+8
 3032 0038 1A60     		str	r2, [r3]
1717:Generated_Source\PSoC4/CyLFClk.c ****                 if(cySysWdtCallback[CY_SYS_WDT_COUNTER0] != (void *) 0)
 3033              		.loc 2 1717 0
 3034 003a 294B     		ldr	r3, .L263+12
 3035 003c 1B68     		ldr	r3, [r3]
 3036 003e 002B     		cmp	r3, #0
 3037 0040 02D0     		beq	.L258
1718:Generated_Source\PSoC4/CyLFClk.c ****                 {
1719:Generated_Source\PSoC4/CyLFClk.c ****                     (void)(cySysWdtCallback[CY_SYS_WDT_COUNTER0])();
 3038              		.loc 2 1719 0
 3039 0042 274B     		ldr	r3, .L263+12
 3040 0044 1B68     		ldr	r3, [r3]
 3041 0046 9847     		blx	r3
 3042              	.L258:
1720:Generated_Source\PSoC4/CyLFClk.c ****                 }
1721:Generated_Source\PSoC4/CyLFClk.c ****             }
1722:Generated_Source\PSoC4/CyLFClk.c ****             CySysWdtClearInterrupt(CY_SYS_WDT_COUNTER0_INT);
 3043              		.loc 2 1722 0
 3044 0048 0420     		mov	r0, #4
 3045 004a FFF7FEFF 		bl	CySysWdtClearInterrupt
 3046              	.L257:
1723:Generated_Source\PSoC4/CyLFClk.c ****         }
1724:Generated_Source\PSoC4/CyLFClk.c **** 
1725:Generated_Source\PSoC4/CyLFClk.c ****         if(0u != (CY_SYS_WDT_COUNTER1_INT & CY_SYS_WDT_CONTROL_REG))
 3047              		.loc 2 1725 0
 3048 004e 214B     		ldr	r3, .L263
 3049 0050 1A68     		ldr	r2, [r3]
 3050 0052 8023     		mov	r3, #128
 3051 0054 DB00     		lsl	r3, r3, #3
 3052 0056 1340     		and	r3, r2
 3053 0058 22D0     		beq	.L259
1726:Generated_Source\PSoC4/CyLFClk.c ****         {
1727:Generated_Source\PSoC4/CyLFClk.c ****             if(0u != (CY_SYS_WDT_COUNTER1_INT & wdtIsrMask))
 3054              		.loc 2 1727 0
 3055 005a 1F4B     		ldr	r3, .L263+4
 3056 005c 1A68     		ldr	r2, [r3]
 3057 005e 8023     		mov	r3, #128
 3058 0060 DB00     		lsl	r3, r3, #3
 3059 0062 1340     		and	r3, r2
 3060 0064 17D0     		beq	.L260
1728:Generated_Source\PSoC4/CyLFClk.c ****             {
1729:Generated_Source\PSoC4/CyLFClk.c ****                 wdtIsrMask &= ~(disableServicedIsr & CY_SYS_WDT_COUNTER1_INT);
 3061              		.loc 2 1729 0
 3062 0066 1D4B     		ldr	r3, .L263+8
 3063 0068 1A68     		ldr	r2, [r3]
 3064 006a 8023     		mov	r3, #128
 3065 006c DB00     		lsl	r3, r3, #3
 3066 006e 1340     		and	r3, r2
 3067 0070 DA43     		mvn	r2, r3
 3068 0072 194B     		ldr	r3, .L263+4
 3069 0074 1B68     		ldr	r3, [r3]
 3070 0076 1A40     		and	r2, r3
 3071 0078 174B     		ldr	r3, .L263+4
 3072 007a 1A60     		str	r2, [r3]
1730:Generated_Source\PSoC4/CyLFClk.c ****                 disableServicedIsr  &= ~CY_SYS_WDT_COUNTER1_INT;
 3073              		.loc 2 1730 0
ARM GAS  C:\Users\akita\AppData\Local\Temp\ccTFmJyh.s 			page 98


 3074 007c 174B     		ldr	r3, .L263+8
 3075 007e 1B68     		ldr	r3, [r3]
 3076 0080 184A     		ldr	r2, .L263+16
 3077 0082 1A40     		and	r2, r3
 3078 0084 154B     		ldr	r3, .L263+8
 3079 0086 1A60     		str	r2, [r3]
1731:Generated_Source\PSoC4/CyLFClk.c ****                 if(cySysWdtCallback[CY_SYS_WDT_COUNTER1] != (void *) 0)
 3080              		.loc 2 1731 0
 3081 0088 154B     		ldr	r3, .L263+12
 3082 008a 5B68     		ldr	r3, [r3, #4]
 3083 008c 002B     		cmp	r3, #0
 3084 008e 02D0     		beq	.L260
1732:Generated_Source\PSoC4/CyLFClk.c ****                 {
1733:Generated_Source\PSoC4/CyLFClk.c ****                     (void)(cySysWdtCallback[CY_SYS_WDT_COUNTER1])();
 3085              		.loc 2 1733 0
 3086 0090 134B     		ldr	r3, .L263+12
 3087 0092 5B68     		ldr	r3, [r3, #4]
 3088 0094 9847     		blx	r3
 3089              	.L260:
1734:Generated_Source\PSoC4/CyLFClk.c ****                 }
1735:Generated_Source\PSoC4/CyLFClk.c ****             }
1736:Generated_Source\PSoC4/CyLFClk.c ****             CySysWdtClearInterrupt(CY_SYS_WDT_COUNTER1_INT);
 3090              		.loc 2 1736 0
 3091 0096 8023     		mov	r3, #128
 3092 0098 DB00     		lsl	r3, r3, #3
 3093 009a 181C     		mov	r0, r3
 3094 009c FFF7FEFF 		bl	CySysWdtClearInterrupt
 3095              	.L259:
1737:Generated_Source\PSoC4/CyLFClk.c ****         }
1738:Generated_Source\PSoC4/CyLFClk.c **** 
1739:Generated_Source\PSoC4/CyLFClk.c ****         if(0u != (CY_SYS_WDT_COUNTER2_INT & CY_SYS_WDT_CONTROL_REG))
 3096              		.loc 2 1739 0
 3097 00a0 0C4B     		ldr	r3, .L263
 3098 00a2 1A68     		ldr	r2, [r3]
 3099 00a4 8023     		mov	r3, #128
 3100 00a6 DB02     		lsl	r3, r3, #11
 3101 00a8 1340     		and	r3, r2
 3102 00aa 11D0     		beq	.L256
1740:Generated_Source\PSoC4/CyLFClk.c ****         {
1741:Generated_Source\PSoC4/CyLFClk.c ****             if(0u != (CY_SYS_WDT_COUNTER2_INT & wdtIsrMask))
 3103              		.loc 2 1741 0
 3104 00ac 0A4B     		ldr	r3, .L263+4
 3105 00ae 1A68     		ldr	r2, [r3]
 3106 00b0 8023     		mov	r3, #128
 3107 00b2 DB02     		lsl	r3, r3, #11
 3108 00b4 1340     		and	r3, r2
 3109 00b6 06D0     		beq	.L262
1742:Generated_Source\PSoC4/CyLFClk.c ****             {
1743:Generated_Source\PSoC4/CyLFClk.c ****                 if(cySysWdtCallback[CY_SYS_WDT_COUNTER2] != (void *) 0)
 3110              		.loc 2 1743 0
 3111 00b8 094B     		ldr	r3, .L263+12
 3112 00ba 9B68     		ldr	r3, [r3, #8]
 3113 00bc 002B     		cmp	r3, #0
 3114 00be 02D0     		beq	.L262
1744:Generated_Source\PSoC4/CyLFClk.c ****                 {
1745:Generated_Source\PSoC4/CyLFClk.c ****                     (void)(cySysWdtCallback[CY_SYS_WDT_COUNTER2])();
 3115              		.loc 2 1745 0
ARM GAS  C:\Users\akita\AppData\Local\Temp\ccTFmJyh.s 			page 99


 3116 00c0 074B     		ldr	r3, .L263+12
 3117 00c2 9B68     		ldr	r3, [r3, #8]
 3118 00c4 9847     		blx	r3
 3119              	.L262:
1746:Generated_Source\PSoC4/CyLFClk.c ****                 }
1747:Generated_Source\PSoC4/CyLFClk.c ****             }
1748:Generated_Source\PSoC4/CyLFClk.c ****             CySysWdtClearInterrupt(CY_SYS_WDT_COUNTER2_INT);
 3120              		.loc 2 1748 0
 3121 00c6 8023     		mov	r3, #128
 3122 00c8 DB02     		lsl	r3, r3, #11
 3123 00ca 181C     		mov	r0, r3
 3124 00cc FFF7FEFF 		bl	CySysWdtClearInterrupt
 3125              	.L256:
1749:Generated_Source\PSoC4/CyLFClk.c ****         }
1750:Generated_Source\PSoC4/CyLFClk.c ****     }
 3126              		.loc 2 1750 0
 3127 00d0 BD46     		mov	sp, r7
 3128              		@ sp needed
 3129 00d2 80BD     		pop	{r7, pc}
 3130              	.L264:
 3131              		.align	2
 3132              	.L263:
 3133 00d4 10020B40 		.word	1074463248
 3134 00d8 04000000 		.word	wdtIsrMask
 3135 00dc 08000000 		.word	disableServicedIsr
 3136 00e0 0C000000 		.word	cySysWdtCallback
 3137 00e4 FFFBFFFF 		.word	-1025
 3138              		.cfi_endproc
 3139              	.LFE42:
 3140              		.size	CySysWdtIsr, .-CySysWdtIsr
 3141              		.section	.text.CySysWatchdogFeed,"ax",%progbits
 3142              		.align	2
 3143              		.global	CySysWatchdogFeed
 3144              		.code	16
 3145              		.thumb_func
 3146              		.type	CySysWatchdogFeed, %function
 3147              	CySysWatchdogFeed:
 3148              	.LFB43:
1751:Generated_Source\PSoC4/CyLFClk.c **** 
1752:Generated_Source\PSoC4/CyLFClk.c **** 
1753:Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
1754:Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysWatchdogFeed
1755:Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
1756:Generated_Source\PSoC4/CyLFClk.c ****     * \brief
1757:Generated_Source\PSoC4/CyLFClk.c ****     * Feeds the corresponded Watchdog Counter before it causes the device reset.
1758:Generated_Source\PSoC4/CyLFClk.c ****     *
1759:Generated_Source\PSoC4/CyLFClk.c ****     * Supported only for first WDT0 and second WDT1 counters in the "Watchdog" or 
1760:Generated_Source\PSoC4/CyLFClk.c ****     * "Watchdog w/ Interrupts" modes.
1761:Generated_Source\PSoC4/CyLFClk.c ****     *
1762:Generated_Source\PSoC4/CyLFClk.c ****     * \param counterNum
1763:Generated_Source\PSoC4/CyLFClk.c ****     * CY_SYS_WDT_COUNTER0 - Feeds the Counter 0 <br>
1764:Generated_Source\PSoC4/CyLFClk.c ****     * CY_SYS_WDT_COUNTER1 - Feeds the Counter 1
1765:Generated_Source\PSoC4/CyLFClk.c ****     *
1766:Generated_Source\PSoC4/CyLFClk.c ****     * Value of counterNum corresponds to appropriate counter. For example value 1 
1767:Generated_Source\PSoC4/CyLFClk.c ****     * corresponds to second WDT1 Counter.
1768:Generated_Source\PSoC4/CyLFClk.c ****     *
1769:Generated_Source\PSoC4/CyLFClk.c ****     * \details
ARM GAS  C:\Users\akita\AppData\Local\Temp\ccTFmJyh.s 			page 100


1770:Generated_Source\PSoC4/CyLFClk.c ****     * Clears the WDT counter in the "Watchdog" mode or clears the WDT interrupt in
1771:Generated_Source\PSoC4/CyLFClk.c ****     * "Watchdog w/ Interrupts" mode. Does nothing in other modes.
1772:Generated_Source\PSoC4/CyLFClk.c ****     *
1773:Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
1774:Generated_Source\PSoC4/CyLFClk.c ****     void CySysWatchdogFeed(uint32 counterNum)
1775:Generated_Source\PSoC4/CyLFClk.c ****     {
 3149              		.loc 2 1775 0
 3150              		.cfi_startproc
 3151 0000 80B5     		push	{r7, lr}
 3152              		.cfi_def_cfa_offset 8
 3153              		.cfi_offset 7, -8
 3154              		.cfi_offset 14, -4
 3155 0002 82B0     		sub	sp, sp, #8
 3156              		.cfi_def_cfa_offset 16
 3157 0004 00AF     		add	r7, sp, #0
 3158              		.cfi_def_cfa_register 7
 3159 0006 7860     		str	r0, [r7, #4]
1776:Generated_Source\PSoC4/CyLFClk.c ****         if(counterNum == CY_SYS_WDT_COUNTER0)
 3160              		.loc 2 1776 0
 3161 0008 7B68     		ldr	r3, [r7, #4]
 3162 000a 002B     		cmp	r3, #0
 3163 000c 18D1     		bne	.L266
1777:Generated_Source\PSoC4/CyLFClk.c ****         {
1778:Generated_Source\PSoC4/CyLFClk.c ****             if(CY_SYS_WDT_MODE_INT_RESET == CySysWdtGetMode(counterNum))
 3164              		.loc 2 1778 0
 3165 000e 7B68     		ldr	r3, [r7, #4]
 3166 0010 181C     		mov	r0, r3
 3167 0012 FFF7FEFF 		bl	CySysWdtGetMode
 3168 0016 031E     		sub	r3, r0, #0
 3169 0018 032B     		cmp	r3, #3
 3170 001a 03D1     		bne	.L267
1779:Generated_Source\PSoC4/CyLFClk.c ****             {
1780:Generated_Source\PSoC4/CyLFClk.c ****                 CySysWdtClearInterrupt(CY_SYS_WDT_COUNTER0_INT);
 3171              		.loc 2 1780 0
 3172 001c 0420     		mov	r0, #4
 3173 001e FFF7FEFF 		bl	CySysWdtClearInterrupt
 3174 0022 2EE0     		b	.L265
 3175              	.L267:
1781:Generated_Source\PSoC4/CyLFClk.c ****             }
1782:Generated_Source\PSoC4/CyLFClk.c ****             else if(CY_SYS_WDT_MODE_RESET == CySysWdtGetMode(counterNum))
 3176              		.loc 2 1782 0
 3177 0024 7B68     		ldr	r3, [r7, #4]
 3178 0026 181C     		mov	r0, r3
 3179 0028 FFF7FEFF 		bl	CySysWdtGetMode
 3180 002c 031E     		sub	r3, r0, #0
 3181 002e 022B     		cmp	r3, #2
 3182 0030 27D1     		bne	.L265
1783:Generated_Source\PSoC4/CyLFClk.c ****             {
1784:Generated_Source\PSoC4/CyLFClk.c ****                 CySysWdtResetCounters(CY_SYS_WDT_COUNTER0_RESET);
 3183              		.loc 2 1784 0
 3184 0032 0820     		mov	r0, #8
 3185 0034 FFF7FEFF 		bl	CySysWdtResetCounters
1785:Generated_Source\PSoC4/CyLFClk.c ****                 CySysWdtClearInterrupt(CY_SYS_WDT_COUNTER0_INT);
 3186              		.loc 2 1785 0
 3187 0038 0420     		mov	r0, #4
 3188 003a FFF7FEFF 		bl	CySysWdtClearInterrupt
 3189 003e 20E0     		b	.L265
ARM GAS  C:\Users\akita\AppData\Local\Temp\ccTFmJyh.s 			page 101


 3190              	.L266:
1786:Generated_Source\PSoC4/CyLFClk.c ****             }
1787:Generated_Source\PSoC4/CyLFClk.c ****             else
1788:Generated_Source\PSoC4/CyLFClk.c ****             {
1789:Generated_Source\PSoC4/CyLFClk.c ****                 /* Do nothing. */
1790:Generated_Source\PSoC4/CyLFClk.c ****             }
1791:Generated_Source\PSoC4/CyLFClk.c ****         }
1792:Generated_Source\PSoC4/CyLFClk.c ****         else if(counterNum == CY_SYS_WDT_COUNTER1)
 3191              		.loc 2 1792 0
 3192 0040 7B68     		ldr	r3, [r7, #4]
 3193 0042 012B     		cmp	r3, #1
 3194 0044 1DD1     		bne	.L265
1793:Generated_Source\PSoC4/CyLFClk.c ****         {
1794:Generated_Source\PSoC4/CyLFClk.c ****             if(CY_SYS_WDT_MODE_INT_RESET == CySysWdtGetMode(counterNum))
 3195              		.loc 2 1794 0
 3196 0046 7B68     		ldr	r3, [r7, #4]
 3197 0048 181C     		mov	r0, r3
 3198 004a FFF7FEFF 		bl	CySysWdtGetMode
 3199 004e 031E     		sub	r3, r0, #0
 3200 0050 032B     		cmp	r3, #3
 3201 0052 05D1     		bne	.L269
1795:Generated_Source\PSoC4/CyLFClk.c ****             {
1796:Generated_Source\PSoC4/CyLFClk.c ****                 CySysWdtClearInterrupt(CY_SYS_WDT_COUNTER1_INT);
 3202              		.loc 2 1796 0
 3203 0054 8023     		mov	r3, #128
 3204 0056 DB00     		lsl	r3, r3, #3
 3205 0058 181C     		mov	r0, r3
 3206 005a FFF7FEFF 		bl	CySysWdtClearInterrupt
 3207 005e 10E0     		b	.L265
 3208              	.L269:
1797:Generated_Source\PSoC4/CyLFClk.c ****             }
1798:Generated_Source\PSoC4/CyLFClk.c ****             else if(CY_SYS_WDT_MODE_RESET == CySysWdtGetMode(counterNum))
 3209              		.loc 2 1798 0
 3210 0060 7B68     		ldr	r3, [r7, #4]
 3211 0062 181C     		mov	r0, r3
 3212 0064 FFF7FEFF 		bl	CySysWdtGetMode
 3213 0068 031E     		sub	r3, r0, #0
 3214 006a 022B     		cmp	r3, #2
 3215 006c 09D1     		bne	.L265
1799:Generated_Source\PSoC4/CyLFClk.c ****             {
1800:Generated_Source\PSoC4/CyLFClk.c ****                 CySysWdtResetCounters(CY_SYS_WDT_COUNTER1_RESET);
 3216              		.loc 2 1800 0
 3217 006e 8023     		mov	r3, #128
 3218 0070 1B01     		lsl	r3, r3, #4
 3219 0072 181C     		mov	r0, r3
 3220 0074 FFF7FEFF 		bl	CySysWdtResetCounters
1801:Generated_Source\PSoC4/CyLFClk.c ****                 CySysWdtClearInterrupt(CY_SYS_WDT_COUNTER1_INT);
 3221              		.loc 2 1801 0
 3222 0078 8023     		mov	r3, #128
 3223 007a DB00     		lsl	r3, r3, #3
 3224 007c 181C     		mov	r0, r3
 3225 007e FFF7FEFF 		bl	CySysWdtClearInterrupt
 3226              	.L265:
1802:Generated_Source\PSoC4/CyLFClk.c ****             }
1803:Generated_Source\PSoC4/CyLFClk.c ****             else
1804:Generated_Source\PSoC4/CyLFClk.c ****             {
1805:Generated_Source\PSoC4/CyLFClk.c ****                 /* Do nothing. */
ARM GAS  C:\Users\akita\AppData\Local\Temp\ccTFmJyh.s 			page 102


1806:Generated_Source\PSoC4/CyLFClk.c ****             }
1807:Generated_Source\PSoC4/CyLFClk.c ****         }
1808:Generated_Source\PSoC4/CyLFClk.c ****         else
1809:Generated_Source\PSoC4/CyLFClk.c ****         {
1810:Generated_Source\PSoC4/CyLFClk.c ****             /* Do nothing. */
1811:Generated_Source\PSoC4/CyLFClk.c ****         }
1812:Generated_Source\PSoC4/CyLFClk.c ****     }
 3227              		.loc 2 1812 0
 3228 0082 BD46     		mov	sp, r7
 3229 0084 02B0     		add	sp, sp, #8
 3230              		@ sp needed
 3231 0086 80BD     		pop	{r7, pc}
 3232              		.cfi_endproc
 3233              	.LFE43:
 3234              		.size	CySysWatchdogFeed, .-CySysWatchdogFeed
 3235              		.section	.text.CySysClkLfclkPosedgeCatch,"ax",%progbits
 3236              		.align	2
 3237              		.code	16
 3238              		.thumb_func
 3239              		.type	CySysClkLfclkPosedgeCatch, %function
 3240              	CySysClkLfclkPosedgeCatch:
 3241              	.LFB44:
1813:Generated_Source\PSoC4/CyLFClk.c **** 
1814:Generated_Source\PSoC4/CyLFClk.c **** 
1815:Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
1816:Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysClkLfclkPosedgeCatch
1817:Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
1818:Generated_Source\PSoC4/CyLFClk.c ****     * \internal
1819:Generated_Source\PSoC4/CyLFClk.c ****     * Returns once the LFCLK positive edge occurred.
1820:Generated_Source\PSoC4/CyLFClk.c ****     *
1821:Generated_Source\PSoC4/CyLFClk.c ****     * CySysClkLfclkPosedgeRestore() should be called after this function
1822:Generated_Source\PSoC4/CyLFClk.c ****     * to restore the WDT configuration.
1823:Generated_Source\PSoC4/CyLFClk.c ****     *
1824:Generated_Source\PSoC4/CyLFClk.c ****     * A pair of the CySysClkLfclkPosedgeCatch() and CySysClkLfclkPosedgeRestore()
1825:Generated_Source\PSoC4/CyLFClk.c ****     * functions is expected to be called inside a critical section.
1826:Generated_Source\PSoC4/CyLFClk.c ****     *
1827:Generated_Source\PSoC4/CyLFClk.c ****     * To ensure that the WDT counter value is read until it changes, the enabled
1828:Generated_Source\PSoC4/CyLFClk.c ****     * WDT counter is used. If no counter is enabled, counter 0 is enabled.
1829:Generated_Source\PSoC4/CyLFClk.c ****     * And after the LFCLK source is switched, the counter 0 configuration
1830:Generated_Source\PSoC4/CyLFClk.c ****     * is restored.
1831:Generated_Source\PSoC4/CyLFClk.c ****     *
1832:Generated_Source\PSoC4/CyLFClk.c ****     * Not applicable for the PSoC 4000 / PSoC 4000S / PSoC 4100S / PSoC Analog 
1833:Generated_Source\PSoC4/CyLFClk.c ****     * Coprocessor devices.
1834:Generated_Source\PSoC4/CyLFClk.c ****     *
1835:Generated_Source\PSoC4/CyLFClk.c ****     * \details
1836:Generated_Source\PSoC4/CyLFClk.c ****     * This function has no effect if WDT is locked (CySysWdtLock() is
1837:Generated_Source\PSoC4/CyLFClk.c ****     * called). Call CySysWdtUnlock() to unlock WDT.
1838:Generated_Source\PSoC4/CyLFClk.c ****     * \endinternal
1839:Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
1840:Generated_Source\PSoC4/CyLFClk.c ****     static void CySysClkLfclkPosedgeCatch(void)
1841:Generated_Source\PSoC4/CyLFClk.c ****     {
 3242              		.loc 2 1841 0
 3243              		.cfi_startproc
 3244 0000 80B5     		push	{r7, lr}
 3245              		.cfi_def_cfa_offset 8
 3246              		.cfi_offset 7, -8
 3247              		.cfi_offset 14, -4
ARM GAS  C:\Users\akita\AppData\Local\Temp\ccTFmJyh.s 			page 103


 3248 0002 82B0     		sub	sp, sp, #8
 3249              		.cfi_def_cfa_offset 16
 3250 0004 00AF     		add	r7, sp, #0
 3251              		.cfi_def_cfa_register 7
1842:Generated_Source\PSoC4/CyLFClk.c ****         uint32 firstCount;
1843:Generated_Source\PSoC4/CyLFClk.c ****         static uint32 lfclkPosedgeEnabledWdtCounter = 0u;
1844:Generated_Source\PSoC4/CyLFClk.c **** 
1845:Generated_Source\PSoC4/CyLFClk.c ****         if (0u != CySysWdtGetEnabledStatus(CY_SYS_WDT_COUNTER0))
 3252              		.loc 2 1845 0
 3253 0006 0020     		mov	r0, #0
 3254 0008 FFF7FEFF 		bl	CySysWdtGetEnabledStatus
 3255 000c 031E     		sub	r3, r0, #0
 3256 000e 03D0     		beq	.L271
1846:Generated_Source\PSoC4/CyLFClk.c ****         {
1847:Generated_Source\PSoC4/CyLFClk.c ****             lfclkPosedgeEnabledWdtCounter = CY_SYS_WDT_COUNTER0;
 3257              		.loc 2 1847 0
 3258 0010 1E4B     		ldr	r3, .L276
 3259 0012 0022     		mov	r2, #0
 3260 0014 1A60     		str	r2, [r3]
 3261 0016 24E0     		b	.L272
 3262              	.L271:
1848:Generated_Source\PSoC4/CyLFClk.c ****         }
1849:Generated_Source\PSoC4/CyLFClk.c ****         else if (0u != CySysWdtGetEnabledStatus(CY_SYS_WDT_COUNTER1))
 3263              		.loc 2 1849 0
 3264 0018 0120     		mov	r0, #1
 3265 001a FFF7FEFF 		bl	CySysWdtGetEnabledStatus
 3266 001e 031E     		sub	r3, r0, #0
 3267 0020 03D0     		beq	.L273
1850:Generated_Source\PSoC4/CyLFClk.c ****         {
1851:Generated_Source\PSoC4/CyLFClk.c ****             lfclkPosedgeEnabledWdtCounter = CY_SYS_WDT_COUNTER1;
 3268              		.loc 2 1851 0
 3269 0022 1A4B     		ldr	r3, .L276
 3270 0024 0122     		mov	r2, #1
 3271 0026 1A60     		str	r2, [r3]
 3272 0028 1BE0     		b	.L272
 3273              	.L273:
1852:Generated_Source\PSoC4/CyLFClk.c ****         }
1853:Generated_Source\PSoC4/CyLFClk.c ****         else if (0u != CySysWdtGetEnabledStatus(CY_SYS_WDT_COUNTER2))
 3274              		.loc 2 1853 0
 3275 002a 0220     		mov	r0, #2
 3276 002c FFF7FEFF 		bl	CySysWdtGetEnabledStatus
 3277 0030 031E     		sub	r3, r0, #0
 3278 0032 03D0     		beq	.L274
1854:Generated_Source\PSoC4/CyLFClk.c ****         {
1855:Generated_Source\PSoC4/CyLFClk.c ****             lfclkPosedgeEnabledWdtCounter = CY_SYS_WDT_COUNTER2;
 3279              		.loc 2 1855 0
 3280 0034 154B     		ldr	r3, .L276
 3281 0036 0222     		mov	r2, #2
 3282 0038 1A60     		str	r2, [r3]
 3283 003a 12E0     		b	.L272
 3284              	.L274:
1856:Generated_Source\PSoC4/CyLFClk.c ****         }
1857:Generated_Source\PSoC4/CyLFClk.c ****         else /* All WDT counters are disabled */
1858:Generated_Source\PSoC4/CyLFClk.c ****         {
1859:Generated_Source\PSoC4/CyLFClk.c ****             /* Configure WDT counter # 0 */
1860:Generated_Source\PSoC4/CyLFClk.c ****             lfclkPosedgeWdtCounter0Enabled = 1u;
 3285              		.loc 2 1860 0
ARM GAS  C:\Users\akita\AppData\Local\Temp\ccTFmJyh.s 			page 104


 3286 003c 144B     		ldr	r3, .L276+4
 3287 003e 0122     		mov	r2, #1
 3288 0040 1A60     		str	r2, [r3]
1861:Generated_Source\PSoC4/CyLFClk.c ****             lfclkPosedgeEnabledWdtCounter = CY_SYS_WDT_COUNTER0;
 3289              		.loc 2 1861 0
 3290 0042 124B     		ldr	r3, .L276
 3291 0044 0022     		mov	r2, #0
 3292 0046 1A60     		str	r2, [r3]
1862:Generated_Source\PSoC4/CyLFClk.c **** 
1863:Generated_Source\PSoC4/CyLFClk.c ****             lfclkPosedgeWdtCounter0Mode = CySysWdtGetMode(CY_SYS_WDT_COUNTER0);
 3293              		.loc 2 1863 0
 3294 0048 0020     		mov	r0, #0
 3295 004a FFF7FEFF 		bl	CySysWdtGetMode
 3296 004e 021C     		mov	r2, r0
 3297 0050 104B     		ldr	r3, .L276+8
 3298 0052 1A60     		str	r2, [r3]
1864:Generated_Source\PSoC4/CyLFClk.c ****             CySysWdtSetMode(CY_SYS_WDT_COUNTER0, CY_SYS_WDT_MODE_NONE);
 3299              		.loc 2 1864 0
 3300 0054 0020     		mov	r0, #0
 3301 0056 0021     		mov	r1, #0
 3302 0058 FFF7FEFF 		bl	CySysWdtSetMode
1865:Generated_Source\PSoC4/CyLFClk.c ****             CySysWdtEnable(CY_SYS_WDT_COUNTER0_MASK);
 3303              		.loc 2 1865 0
 3304 005c 0120     		mov	r0, #1
 3305 005e FFF7FEFF 		bl	CySysWdtEnable
 3306              	.L272:
1866:Generated_Source\PSoC4/CyLFClk.c ****         }
1867:Generated_Source\PSoC4/CyLFClk.c **** 
1868:Generated_Source\PSoC4/CyLFClk.c ****         firstCount = CySysWdtGetCount(lfclkPosedgeEnabledWdtCounter);
 3307              		.loc 2 1868 0
 3308 0062 0A4B     		ldr	r3, .L276
 3309 0064 1B68     		ldr	r3, [r3]
 3310 0066 181C     		mov	r0, r3
 3311 0068 FFF7FEFF 		bl	CySysWdtGetCount
 3312 006c 031C     		mov	r3, r0
 3313 006e 7B60     		str	r3, [r7, #4]
1869:Generated_Source\PSoC4/CyLFClk.c ****         while (CySysWdtGetCount(lfclkPosedgeEnabledWdtCounter) == firstCount)
 3314              		.loc 2 1869 0
 3315 0070 C046     		mov	r8, r8
 3316              	.L275:
 3317              		.loc 2 1869 0 is_stmt 0 discriminator 1
 3318 0072 064B     		ldr	r3, .L276
 3319 0074 1B68     		ldr	r3, [r3]
 3320 0076 181C     		mov	r0, r3
 3321 0078 FFF7FEFF 		bl	CySysWdtGetCount
 3322 007c 021E     		sub	r2, r0, #0
 3323 007e 7B68     		ldr	r3, [r7, #4]
 3324 0080 9A42     		cmp	r2, r3
 3325 0082 F6D0     		beq	.L275
1870:Generated_Source\PSoC4/CyLFClk.c ****         {
1871:Generated_Source\PSoC4/CyLFClk.c ****             /* Wait for counter to increment */
1872:Generated_Source\PSoC4/CyLFClk.c ****         }
1873:Generated_Source\PSoC4/CyLFClk.c ****     }
 3326              		.loc 2 1873 0 is_stmt 1
 3327 0084 BD46     		mov	sp, r7
 3328 0086 02B0     		add	sp, sp, #8
 3329              		@ sp needed
ARM GAS  C:\Users\akita\AppData\Local\Temp\ccTFmJyh.s 			page 105


 3330 0088 80BD     		pop	{r7, pc}
 3331              	.L277:
 3332 008a C046     		.align	2
 3333              	.L276:
 3334 008c 24000000 		.word	lfclkPosedgeEnabledWdtCounter.4941
 3335 0090 00000000 		.word	lfclkPosedgeWdtCounter0Enabled
 3336 0094 04000000 		.word	lfclkPosedgeWdtCounter0Mode
 3337              		.cfi_endproc
 3338              	.LFE44:
 3339              		.size	CySysClkLfclkPosedgeCatch, .-CySysClkLfclkPosedgeCatch
 3340              		.section	.text.CySysClkLfclkPosedgeRestore,"ax",%progbits
 3341              		.align	2
 3342              		.code	16
 3343              		.thumb_func
 3344              		.type	CySysClkLfclkPosedgeRestore, %function
 3345              	CySysClkLfclkPosedgeRestore:
 3346              	.LFB45:
1874:Generated_Source\PSoC4/CyLFClk.c **** 
1875:Generated_Source\PSoC4/CyLFClk.c **** 
1876:Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
1877:Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysClkLfclkPosedgeRestore
1878:Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
1879:Generated_Source\PSoC4/CyLFClk.c ****     * \internal
1880:Generated_Source\PSoC4/CyLFClk.c ****     *  Restores the WDT configuration after a CySysClkLfclkPosedgeCatch() call.
1881:Generated_Source\PSoC4/CyLFClk.c ****     *
1882:Generated_Source\PSoC4/CyLFClk.c ****     *  A pair of the CySysClkLfclkPosedgeCatch() and CySysClkLfclkPosedgeRestore()
1883:Generated_Source\PSoC4/CyLFClk.c ****     *  functions is expected to be called inside a critical section.
1884:Generated_Source\PSoC4/CyLFClk.c ****     *
1885:Generated_Source\PSoC4/CyLFClk.c ****     * Not applicable for the PSoC 4000/PSoC 4000S / PSoC 4100S / PSoC Analog 
1886:Generated_Source\PSoC4/CyLFClk.c ****     * Coprocessor devices.
1887:Generated_Source\PSoC4/CyLFClk.c ****     *
1888:Generated_Source\PSoC4/CyLFClk.c ****     * \details
1889:Generated_Source\PSoC4/CyLFClk.c ****     *  This function has no effect if WDT is locked (CySysWdtLock() is
1890:Generated_Source\PSoC4/CyLFClk.c ****     *  called). Call CySysWdtUnlock() to unlock WDT.
1891:Generated_Source\PSoC4/CyLFClk.c ****     *
1892:Generated_Source\PSoC4/CyLFClk.c ****     * \endinternal
1893:Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
1894:Generated_Source\PSoC4/CyLFClk.c ****     static void CySysClkLfclkPosedgeRestore(void)
1895:Generated_Source\PSoC4/CyLFClk.c ****     {
 3347              		.loc 2 1895 0
 3348              		.cfi_startproc
 3349 0000 80B5     		push	{r7, lr}
 3350              		.cfi_def_cfa_offset 8
 3351              		.cfi_offset 7, -8
 3352              		.cfi_offset 14, -4
 3353 0002 00AF     		add	r7, sp, #0
 3354              		.cfi_def_cfa_register 7
1896:Generated_Source\PSoC4/CyLFClk.c ****         if (lfclkPosedgeWdtCounter0Enabled != 0u)
 3355              		.loc 2 1896 0
 3356 0004 0A4B     		ldr	r3, .L280
 3357 0006 1B68     		ldr	r3, [r3]
 3358 0008 002B     		cmp	r3, #0
 3359 000a 0ED0     		beq	.L278
1897:Generated_Source\PSoC4/CyLFClk.c ****         {
1898:Generated_Source\PSoC4/CyLFClk.c ****             /* Restore counter # 0 configuration and force its shutdown */
1899:Generated_Source\PSoC4/CyLFClk.c ****             CY_SYS_WDT_CONTROL_REG &= (uint32)(~CY_SYS_WDT_COUNTER0_MASK);
 3360              		.loc 2 1899 0
ARM GAS  C:\Users\akita\AppData\Local\Temp\ccTFmJyh.s 			page 106


 3361 000c 094B     		ldr	r3, .L280+4
 3362 000e 094A     		ldr	r2, .L280+4
 3363 0010 1268     		ldr	r2, [r2]
 3364 0012 0121     		mov	r1, #1
 3365 0014 8A43     		bic	r2, r1
 3366 0016 1A60     		str	r2, [r3]
1900:Generated_Source\PSoC4/CyLFClk.c ****             CySysWdtSetMode(CY_SYS_WDT_COUNTER0, lfclkPosedgeWdtCounter0Mode);
 3367              		.loc 2 1900 0
 3368 0018 074B     		ldr	r3, .L280+8
 3369 001a 1B68     		ldr	r3, [r3]
 3370 001c 0020     		mov	r0, #0
 3371 001e 191C     		mov	r1, r3
 3372 0020 FFF7FEFF 		bl	CySysWdtSetMode
1901:Generated_Source\PSoC4/CyLFClk.c ****             lfclkPosedgeWdtCounter0Enabled = 0u;
 3373              		.loc 2 1901 0
 3374 0024 024B     		ldr	r3, .L280
 3375 0026 0022     		mov	r2, #0
 3376 0028 1A60     		str	r2, [r3]
 3377              	.L278:
1902:Generated_Source\PSoC4/CyLFClk.c ****         }
1903:Generated_Source\PSoC4/CyLFClk.c ****     }
 3378              		.loc 2 1903 0
 3379 002a BD46     		mov	sp, r7
 3380              		@ sp needed
 3381 002c 80BD     		pop	{r7, pc}
 3382              	.L281:
 3383 002e C046     		.align	2
 3384              	.L280:
 3385 0030 00000000 		.word	lfclkPosedgeWdtCounter0Enabled
 3386 0034 10020B40 		.word	1074463248
 3387 0038 04000000 		.word	lfclkPosedgeWdtCounter0Mode
 3388              		.cfi_endproc
 3389              	.LFE45:
 3390              		.size	CySysClkLfclkPosedgeRestore, .-CySysClkLfclkPosedgeRestore
 3391              		.section	.text.CySysTimerDelay,"ax",%progbits
 3392              		.align	2
 3393              		.global	CySysTimerDelay
 3394              		.code	16
 3395              		.thumb_func
 3396              		.type	CySysTimerDelay, %function
 3397              	CySysTimerDelay:
 3398              	.LFB46:
1904:Generated_Source\PSoC4/CyLFClk.c **** 
1905:Generated_Source\PSoC4/CyLFClk.c **** #else
1906:Generated_Source\PSoC4/CyLFClk.c **** 
1907:Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
1908:Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysWdtGetEnabledStatus
1909:Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
1910:Generated_Source\PSoC4/CyLFClk.c ****     *
1911:Generated_Source\PSoC4/CyLFClk.c ****     * \brief Reads the enabled status of the WDT counter.
1912:Generated_Source\PSoC4/CyLFClk.c ****     *
1913:Generated_Source\PSoC4/CyLFClk.c ****     * \return The status of the WDT counter:
1914:Generated_Source\PSoC4/CyLFClk.c ****     * \return 0 - Counter is disabled
1915:Generated_Source\PSoC4/CyLFClk.c ****     * \return 1 - Counter is enabled
1916:Generated_Source\PSoC4/CyLFClk.c ****     *
1917:Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
1918:Generated_Source\PSoC4/CyLFClk.c ****     uint32 CySysWdtGetEnabledStatus(void)
ARM GAS  C:\Users\akita\AppData\Local\Temp\ccTFmJyh.s 			page 107


1919:Generated_Source\PSoC4/CyLFClk.c ****     {
1920:Generated_Source\PSoC4/CyLFClk.c ****         return ((CY_SYS_WDT_DISABLE_KEY_REG == CY_SYS_WDT_KEY) ? (uint32) 0u : (uint32) 1u);
1921:Generated_Source\PSoC4/CyLFClk.c ****     }
1922:Generated_Source\PSoC4/CyLFClk.c **** 
1923:Generated_Source\PSoC4/CyLFClk.c **** 
1924:Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
1925:Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysWdtEnable
1926:Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
1927:Generated_Source\PSoC4/CyLFClk.c ****     *
1928:Generated_Source\PSoC4/CyLFClk.c ****     * \brief
1929:Generated_Source\PSoC4/CyLFClk.c ****     * Enables watchdog timer reset generation.
1930:Generated_Source\PSoC4/CyLFClk.c ****     *
1931:Generated_Source\PSoC4/CyLFClk.c ****     * CySysWdtClearInterrupt() feeds the watchdog. Two unserviced interrupts lead 
1932:Generated_Source\PSoC4/CyLFClk.c ****     * to a system reset (i.e. at the third match).
1933:Generated_Source\PSoC4/CyLFClk.c ****     *
1934:Generated_Source\PSoC4/CyLFClk.c ****     * ILO is enabled by the hardware once WDT is started.
1935:Generated_Source\PSoC4/CyLFClk.c ****     *
1936:Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
1937:Generated_Source\PSoC4/CyLFClk.c ****     void CySysWdtEnable(void)
1938:Generated_Source\PSoC4/CyLFClk.c ****     {
1939:Generated_Source\PSoC4/CyLFClk.c ****         CY_SYS_WDT_DISABLE_KEY_REG = 0u;
1940:Generated_Source\PSoC4/CyLFClk.c ****     }
1941:Generated_Source\PSoC4/CyLFClk.c **** 
1942:Generated_Source\PSoC4/CyLFClk.c **** 
1943:Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
1944:Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysWdtDisable
1945:Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
1946:Generated_Source\PSoC4/CyLFClk.c ****     *
1947:Generated_Source\PSoC4/CyLFClk.c ****     * \brief Disables the WDT reset generation.
1948:Generated_Source\PSoC4/CyLFClk.c ****     *
1949:Generated_Source\PSoC4/CyLFClk.c ****     * This function unlocks the ENABLE bit in the CLK_ILO_CONFIG registers and
1950:Generated_Source\PSoC4/CyLFClk.c ****     * enables the user to disable ILO.
1951:Generated_Source\PSoC4/CyLFClk.c ****     *
1952:Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
1953:Generated_Source\PSoC4/CyLFClk.c ****     void CySysWdtDisable(void)
1954:Generated_Source\PSoC4/CyLFClk.c ****     {
1955:Generated_Source\PSoC4/CyLFClk.c ****         CY_SYS_WDT_DISABLE_KEY_REG = CY_SYS_WDT_KEY;
1956:Generated_Source\PSoC4/CyLFClk.c ****     }
1957:Generated_Source\PSoC4/CyLFClk.c **** 
1958:Generated_Source\PSoC4/CyLFClk.c **** 
1959:Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
1960:Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysWdtSetMatch
1961:Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
1962:Generated_Source\PSoC4/CyLFClk.c ****     *
1963:Generated_Source\PSoC4/CyLFClk.c ****     * \brief Configures the WDT counter match comparison value.
1964:Generated_Source\PSoC4/CyLFClk.c ****     *
1965:Generated_Source\PSoC4/CyLFClk.c ****     * \param match Valid range [0-65535]. The value to be used to match against 
1966:Generated_Source\PSoC4/CyLFClk.c ****     * the counter.
1967:Generated_Source\PSoC4/CyLFClk.c ****     *
1968:Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
1969:Generated_Source\PSoC4/CyLFClk.c ****     void CySysWdtSetMatch(uint32 match)
1970:Generated_Source\PSoC4/CyLFClk.c ****     {
1971:Generated_Source\PSoC4/CyLFClk.c ****         match &= CY_SYS_WDT_MATCH_MASK;
1972:Generated_Source\PSoC4/CyLFClk.c ****         CY_SYS_WDT_MATCH_REG = (CY_SYS_WDT_MATCH_REG & (uint32)(~CY_SYS_WDT_MATCH_MASK)) | match;
1973:Generated_Source\PSoC4/CyLFClk.c ****     }
1974:Generated_Source\PSoC4/CyLFClk.c **** 
1975:Generated_Source\PSoC4/CyLFClk.c **** 
ARM GAS  C:\Users\akita\AppData\Local\Temp\ccTFmJyh.s 			page 108


1976:Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
1977:Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysWdtGetMatch
1978:Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
1979:Generated_Source\PSoC4/CyLFClk.c ****     *
1980:Generated_Source\PSoC4/CyLFClk.c ****     * \brief Reads the WDT counter match comparison value.
1981:Generated_Source\PSoC4/CyLFClk.c ****     *
1982:Generated_Source\PSoC4/CyLFClk.c ****     * \return The counter match value.
1983:Generated_Source\PSoC4/CyLFClk.c ****     *
1984:Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
1985:Generated_Source\PSoC4/CyLFClk.c ****     uint32 CySysWdtGetMatch(void)
1986:Generated_Source\PSoC4/CyLFClk.c ****     {
1987:Generated_Source\PSoC4/CyLFClk.c ****         return (CY_SYS_WDT_MATCH_REG & CY_SYS_WDT_MATCH_MASK);
1988:Generated_Source\PSoC4/CyLFClk.c ****     }
1989:Generated_Source\PSoC4/CyLFClk.c **** 
1990:Generated_Source\PSoC4/CyLFClk.c **** 
1991:Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
1992:Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysWdtGetCount
1993:Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
1994:Generated_Source\PSoC4/CyLFClk.c ****     *
1995:Generated_Source\PSoC4/CyLFClk.c ****     * \brief Reads the current WDT counter value.
1996:Generated_Source\PSoC4/CyLFClk.c ****     *
1997:Generated_Source\PSoC4/CyLFClk.c ****     * \return A live counter value.
1998:Generated_Source\PSoC4/CyLFClk.c ****     *
1999:Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
2000:Generated_Source\PSoC4/CyLFClk.c ****     uint32 CySysWdtGetCount(void)
2001:Generated_Source\PSoC4/CyLFClk.c ****     {
2002:Generated_Source\PSoC4/CyLFClk.c ****         return ((uint32)CY_SYS_WDT_COUNTER_REG);
2003:Generated_Source\PSoC4/CyLFClk.c ****     }
2004:Generated_Source\PSoC4/CyLFClk.c **** 
2005:Generated_Source\PSoC4/CyLFClk.c **** 
2006:Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
2007:Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysWdtSetIgnoreBits
2008:Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
2009:Generated_Source\PSoC4/CyLFClk.c ****     *
2010:Generated_Source\PSoC4/CyLFClk.c ****     * \brief
2011:Generated_Source\PSoC4/CyLFClk.c ****     * Configures the number of the MSB bits of the watchdog timer that are not
2012:Generated_Source\PSoC4/CyLFClk.c ****     * checked against the match.
2013:Generated_Source\PSoC4/CyLFClk.c ****     *
2014:Generated_Source\PSoC4/CyLFClk.c ****     * \param bitsNum Valid range [0-15]. The number of the MSB bits.
2015:Generated_Source\PSoC4/CyLFClk.c ****     *
2016:Generated_Source\PSoC4/CyLFClk.c ****     * \details The value of bitsNum controls the time-to-reset of the watchdog
2017:Generated_Source\PSoC4/CyLFClk.c ****     * (which happens after 3 successive matches).
2018:Generated_Source\PSoC4/CyLFClk.c ****     *
2019:Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
2020:Generated_Source\PSoC4/CyLFClk.c ****     void CySysWdtSetIgnoreBits(uint32 bitsNum)
2021:Generated_Source\PSoC4/CyLFClk.c ****     {
2022:Generated_Source\PSoC4/CyLFClk.c ****         bitsNum = ((uint32)(bitsNum << CY_SYS_WDT_IGNORE_BITS_SHIFT) & CY_SYS_WDT_IGNORE_BITS_MASK)
2023:Generated_Source\PSoC4/CyLFClk.c ****         CY_SYS_WDT_MATCH_REG = (CY_SYS_WDT_MATCH_REG & (uint32)(~CY_SYS_WDT_IGNORE_BITS_MASK)) | bi
2024:Generated_Source\PSoC4/CyLFClk.c ****     }
2025:Generated_Source\PSoC4/CyLFClk.c **** 
2026:Generated_Source\PSoC4/CyLFClk.c **** 
2027:Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
2028:Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysWdtGetIgnoreBits
2029:Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
2030:Generated_Source\PSoC4/CyLFClk.c ****     *
2031:Generated_Source\PSoC4/CyLFClk.c ****     * \brief
2032:Generated_Source\PSoC4/CyLFClk.c ****     * Reads the number of the  MSB bits of the watchdog timer that are not
ARM GAS  C:\Users\akita\AppData\Local\Temp\ccTFmJyh.s 			page 109


2033:Generated_Source\PSoC4/CyLFClk.c ****     * checked against the match.
2034:Generated_Source\PSoC4/CyLFClk.c ****     *
2035:Generated_Source\PSoC4/CyLFClk.c ****     * \return The number of the MSB bits.
2036:Generated_Source\PSoC4/CyLFClk.c ****     *
2037:Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
2038:Generated_Source\PSoC4/CyLFClk.c ****     uint32 CySysWdtGetIgnoreBits(void)
2039:Generated_Source\PSoC4/CyLFClk.c ****     {
2040:Generated_Source\PSoC4/CyLFClk.c ****         return((uint32)((CY_SYS_WDT_MATCH_REG & CY_SYS_WDT_IGNORE_BITS_MASK) >> CY_SYS_WDT_IGNORE_B
2041:Generated_Source\PSoC4/CyLFClk.c ****     }
2042:Generated_Source\PSoC4/CyLFClk.c **** 
2043:Generated_Source\PSoC4/CyLFClk.c **** 
2044:Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
2045:Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysWdtClearInterrupt
2046:Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
2047:Generated_Source\PSoC4/CyLFClk.c ****     *
2048:Generated_Source\PSoC4/CyLFClk.c ****     * \brief
2049:Generated_Source\PSoC4/CyLFClk.c ****     * Feeds the watchdog.
2050:Generated_Source\PSoC4/CyLFClk.c ****     * Cleans the WDT match flag which is set every time the WDT counter reaches a 
2051:Generated_Source\PSoC4/CyLFClk.c ****     * WDT match value. Two unserviced interrupts lead to a system reset 
2052:Generated_Source\PSoC4/CyLFClk.c ****     * (i.e. at the third match).
2053:Generated_Source\PSoC4/CyLFClk.c ****     *
2054:Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
2055:Generated_Source\PSoC4/CyLFClk.c ****     void CySysWdtClearInterrupt(void)
2056:Generated_Source\PSoC4/CyLFClk.c ****     {
2057:Generated_Source\PSoC4/CyLFClk.c ****         CY_SYS_SRSS_INTR_REG |= CY_SYS_WDT_LOWER_BIT_MASK;
2058:Generated_Source\PSoC4/CyLFClk.c ****     }
2059:Generated_Source\PSoC4/CyLFClk.c **** 
2060:Generated_Source\PSoC4/CyLFClk.c **** 
2061:Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
2062:Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysWdtMaskInterrupt
2063:Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
2064:Generated_Source\PSoC4/CyLFClk.c ****     *
2065:Generated_Source\PSoC4/CyLFClk.c ****     * \brief
2066:Generated_Source\PSoC4/CyLFClk.c ****     * After masking interrupts from WDT, they are not passed to CPU.
2067:Generated_Source\PSoC4/CyLFClk.c ****     * This function does not disable WDT reset generation.
2068:Generated_Source\PSoC4/CyLFClk.c ****     *
2069:Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
2070:Generated_Source\PSoC4/CyLFClk.c ****     void CySysWdtMaskInterrupt(void)
2071:Generated_Source\PSoC4/CyLFClk.c ****     {
2072:Generated_Source\PSoC4/CyLFClk.c ****         CY_SYS_SRSS_INTR_MASK_REG &= (uint32)(~ (uint32)CY_SYS_WDT_LOWER_BIT_MASK);
2073:Generated_Source\PSoC4/CyLFClk.c ****     }
2074:Generated_Source\PSoC4/CyLFClk.c **** 
2075:Generated_Source\PSoC4/CyLFClk.c **** 
2076:Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
2077:Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysWdtUnmaskInterrupt
2078:Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
2079:Generated_Source\PSoC4/CyLFClk.c ****     *
2080:Generated_Source\PSoC4/CyLFClk.c ****     * \brief
2081:Generated_Source\PSoC4/CyLFClk.c ****     * After unmasking interrupts from WDT, they are passed to CPU.
2082:Generated_Source\PSoC4/CyLFClk.c ****     * This function does not impact the reset generation.
2083:Generated_Source\PSoC4/CyLFClk.c ****     *
2084:Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
2085:Generated_Source\PSoC4/CyLFClk.c ****     void CySysWdtUnmaskInterrupt(void)
2086:Generated_Source\PSoC4/CyLFClk.c ****     {
2087:Generated_Source\PSoC4/CyLFClk.c ****         CY_SYS_SRSS_INTR_MASK_REG |= CY_SYS_WDT_LOWER_BIT_MASK;
2088:Generated_Source\PSoC4/CyLFClk.c ****     }
2089:Generated_Source\PSoC4/CyLFClk.c **** 
ARM GAS  C:\Users\akita\AppData\Local\Temp\ccTFmJyh.s 			page 110


2090:Generated_Source\PSoC4/CyLFClk.c **** 
2091:Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
2092:Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysWdtSetIsrCallback
2093:Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
2094:Generated_Source\PSoC4/CyLFClk.c ****     *
2095:Generated_Source\PSoC4/CyLFClk.c ****     * \brief
2096:Generated_Source\PSoC4/CyLFClk.c ****     * Sets the ISR callback function for the WDT counter
2097:Generated_Source\PSoC4/CyLFClk.c ****     *
2098:Generated_Source\PSoC4/CyLFClk.c ****     * \param function The pointer to the callback function.
2099:Generated_Source\PSoC4/CyLFClk.c ****     *
2100:Generated_Source\PSoC4/CyLFClk.c ****     * \return The pointer to a previous callback function.
2101:Generated_Source\PSoC4/CyLFClk.c ****     *
2102:Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
2103:Generated_Source\PSoC4/CyLFClk.c ****     cyWdtCallback CySysWdtSetInterruptCallback(cyWdtCallback function)
2104:Generated_Source\PSoC4/CyLFClk.c ****     {
2105:Generated_Source\PSoC4/CyLFClk.c ****         cyWdtCallback prevCallback = (void *)0;
2106:Generated_Source\PSoC4/CyLFClk.c **** 
2107:Generated_Source\PSoC4/CyLFClk.c ****         prevCallback = cySysWdtCallback;
2108:Generated_Source\PSoC4/CyLFClk.c ****         cySysWdtCallback = function;
2109:Generated_Source\PSoC4/CyLFClk.c **** 
2110:Generated_Source\PSoC4/CyLFClk.c ****         return(prevCallback);
2111:Generated_Source\PSoC4/CyLFClk.c ****     }
2112:Generated_Source\PSoC4/CyLFClk.c **** 
2113:Generated_Source\PSoC4/CyLFClk.c **** 
2114:Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
2115:Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysWdtGetIsrCallback
2116:Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
2117:Generated_Source\PSoC4/CyLFClk.c ****     *
2118:Generated_Source\PSoC4/CyLFClk.c ****     * \brief
2119:Generated_Source\PSoC4/CyLFClk.c ****     * Gets the ISR callback function for the WDT counter
2120:Generated_Source\PSoC4/CyLFClk.c ****     *
2121:Generated_Source\PSoC4/CyLFClk.c ****     * \return The pointer to the callback function registered for WDT.
2122:Generated_Source\PSoC4/CyLFClk.c ****     *
2123:Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
2124:Generated_Source\PSoC4/CyLFClk.c ****     cyWdtCallback CySysWdtGetInterruptCallback(void)
2125:Generated_Source\PSoC4/CyLFClk.c ****     {
2126:Generated_Source\PSoC4/CyLFClk.c ****         return(cySysWdtCallback);
2127:Generated_Source\PSoC4/CyLFClk.c ****     }
2128:Generated_Source\PSoC4/CyLFClk.c **** 
2129:Generated_Source\PSoC4/CyLFClk.c **** 
2130:Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
2131:Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysWdtIsr
2132:Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
2133:Generated_Source\PSoC4/CyLFClk.c ****     *
2134:Generated_Source\PSoC4/CyLFClk.c ****     * \brief
2135:Generated_Source\PSoC4/CyLFClk.c ****     * This is the handler of the WDT interrupt in CPU NVIC.
2136:Generated_Source\PSoC4/CyLFClk.c ****     *
2137:Generated_Source\PSoC4/CyLFClk.c ****     * The handler calls the respective callback functions configured by the user 
2138:Generated_Source\PSoC4/CyLFClk.c ****     * by using CySysWdtSetIsrCallback() API.
2139:Generated_Source\PSoC4/CyLFClk.c ****     *
2140:Generated_Source\PSoC4/CyLFClk.c ****     *
2141:Generated_Source\PSoC4/CyLFClk.c ****     * \details
2142:Generated_Source\PSoC4/CyLFClk.c ****     * This function clears the WDT interrupt every time when it is called.
2143:Generated_Source\PSoC4/CyLFClk.c ****     * Reset after the 3rd interrupt does not happen if this function is registered
2144:Generated_Source\PSoC4/CyLFClk.c ****     * as the interrupt handler even if the "Watchdog with Interrupt" mode is
2145:Generated_Source\PSoC4/CyLFClk.c ****     * selected on the "Low Frequency Clocks" tab.
2146:Generated_Source\PSoC4/CyLFClk.c ****     *
ARM GAS  C:\Users\akita\AppData\Local\Temp\ccTFmJyh.s 			page 111


2147:Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
2148:Generated_Source\PSoC4/CyLFClk.c ****     void CySysWdtIsr(void)
2149:Generated_Source\PSoC4/CyLFClk.c ****     {
2150:Generated_Source\PSoC4/CyLFClk.c ****         if(cySysWdtCallback != (void *) 0)
2151:Generated_Source\PSoC4/CyLFClk.c ****         {
2152:Generated_Source\PSoC4/CyLFClk.c ****             (void)(cySysWdtCallback)();
2153:Generated_Source\PSoC4/CyLFClk.c ****         }
2154:Generated_Source\PSoC4/CyLFClk.c **** 
2155:Generated_Source\PSoC4/CyLFClk.c ****         CySysWdtClearInterrupt();
2156:Generated_Source\PSoC4/CyLFClk.c ****     }
2157:Generated_Source\PSoC4/CyLFClk.c **** 
2158:Generated_Source\PSoC4/CyLFClk.c **** #endif /* (CY_IP_SRSSV2) */
2159:Generated_Source\PSoC4/CyLFClk.c **** 
2160:Generated_Source\PSoC4/CyLFClk.c **** 
2161:Generated_Source\PSoC4/CyLFClk.c **** #if(CY_IP_SRSSLT && CY_IP_WCO && CY_IP_WCO_WDT_EN)
2162:Generated_Source\PSoC4/CyLFClk.c **** 
2163:Generated_Source\PSoC4/CyLFClk.c **** /*******************************************************************************
2164:Generated_Source\PSoC4/CyLFClk.c **** * Function Name: CySysClkGetTimerSource
2165:Generated_Source\PSoC4/CyLFClk.c **** ********************************************************************************
2166:Generated_Source\PSoC4/CyLFClk.c **** *
2167:Generated_Source\PSoC4/CyLFClk.c **** * \brief Gets the clock source for the DeepSleep Timers.
2168:Generated_Source\PSoC4/CyLFClk.c **** *
2169:Generated_Source\PSoC4/CyLFClk.c **** * The function is applicable only for PSoC 4100S / PSoC Analog Coprocessor.
2170:Generated_Source\PSoC4/CyLFClk.c **** *
2171:Generated_Source\PSoC4/CyLFClk.c **** * \return The DeepSleep Timer source
2172:Generated_Source\PSoC4/CyLFClk.c **** * CY_SYS_CLK_TIMER_SRC_ILO Internal Low Frequency (32 kHz) Oscillator (ILO)
2173:Generated_Source\PSoC4/CyLFClk.c **** * CY_SYS_CLK_TIMER_SRC_WCO Low Frequency Watch Crystal Oscillator (WCO)
2174:Generated_Source\PSoC4/CyLFClk.c **** *
2175:Generated_Source\PSoC4/CyLFClk.c **** *******************************************************************************/
2176:Generated_Source\PSoC4/CyLFClk.c ****     static uint32 CySysClkGetTimerSource(void)
2177:Generated_Source\PSoC4/CyLFClk.c ****     {
2178:Generated_Source\PSoC4/CyLFClk.c ****         uint32 timerSource;
2179:Generated_Source\PSoC4/CyLFClk.c ****         timerSource = CY_SYS_WCO_WDT_CONFIG_REG & CY_SYS_CLK_TIMER_SEL_MASK;
2180:Generated_Source\PSoC4/CyLFClk.c ****         return (timerSource);
2181:Generated_Source\PSoC4/CyLFClk.c ****     }    
2182:Generated_Source\PSoC4/CyLFClk.c **** 
2183:Generated_Source\PSoC4/CyLFClk.c **** 
2184:Generated_Source\PSoC4/CyLFClk.c **** /*******************************************************************************
2185:Generated_Source\PSoC4/CyLFClk.c **** * Function Name: CySysClkSetTimerSource
2186:Generated_Source\PSoC4/CyLFClk.c **** ****************************************************************************//**
2187:Generated_Source\PSoC4/CyLFClk.c **** *
2188:Generated_Source\PSoC4/CyLFClk.c **** * \brief Sets the clock source for the DeepSleep Timers.
2189:Generated_Source\PSoC4/CyLFClk.c **** *
2190:Generated_Source\PSoC4/CyLFClk.c **** * The function is applicable only for PSoC 4100S / PSoC Analog Coprocessor 
2191:Generated_Source\PSoC4/CyLFClk.c **** * devices.
2192:Generated_Source\PSoC4/CyLFClk.c **** *
2193:Generated_Source\PSoC4/CyLFClk.c **** * \param source
2194:Generated_Source\PSoC4/CyLFClk.c **** *  CY_SYS_CLK_TIMER_SRC_ILO - Internal Low Frequency (32 kHz) Oscillator 
2195:Generated_Source\PSoC4/CyLFClk.c **** * (ILO).<br>
2196:Generated_Source\PSoC4/CyLFClk.c **** * CY_SYS_CLK_TIMER_SRC_WCO - Low Frequency Watch Crystal Oscillator 
2197:Generated_Source\PSoC4/CyLFClk.c **** * (WCO).
2198:Generated_Source\PSoC4/CyLFClk.c **** *
2199:Generated_Source\PSoC4/CyLFClk.c **** * \details Both the current source and the new source must be running and stable 
2200:Generated_Source\PSoC4/CyLFClk.c **** * before calling this function.
2201:Generated_Source\PSoC4/CyLFClk.c **** *
2202:Generated_Source\PSoC4/CyLFClk.c **** * \warning DeepSleep Timer reset is required if Timer source was switched while 
2203:Generated_Source\PSoC4/CyLFClk.c **** * DeepSleep Timers were running. Call CySysTimerResetCounters() API after 
ARM GAS  C:\Users\akita\AppData\Local\Temp\ccTFmJyh.s 			page 112


2204:Generated_Source\PSoC4/CyLFClk.c **** * Timer source switching.
2205:Generated_Source\PSoC4/CyLFClk.c **** * It is highly recommended to disable DeepSleep Timers before Timer source 
2206:Generated_Source\PSoC4/CyLFClk.c **** * switching. Changing the Timer source may change the functionality that uses 
2207:Generated_Source\PSoC4/CyLFClk.c **** * this Timers as clock source.
2208:Generated_Source\PSoC4/CyLFClk.c **** *******************************************************************************/
2209:Generated_Source\PSoC4/CyLFClk.c ****     void CySysClkSetTimerSource(uint32 source)
2210:Generated_Source\PSoC4/CyLFClk.c ****     {
2211:Generated_Source\PSoC4/CyLFClk.c ****         uint8  interruptState;
2212:Generated_Source\PSoC4/CyLFClk.c **** 
2213:Generated_Source\PSoC4/CyLFClk.c ****         if (CySysClkGetTimerSource() != source)
2214:Generated_Source\PSoC4/CyLFClk.c ****         {
2215:Generated_Source\PSoC4/CyLFClk.c **** 
2216:Generated_Source\PSoC4/CyLFClk.c ****             /* Reset both _EN bits in WCO_WDT_CLKEN register */
2217:Generated_Source\PSoC4/CyLFClk.c ****             CY_SYS_WCO_WDT_CLKEN_REG &= ~CY_SYS_WCO_WDT_CLKEN_RESET_MASK;
2218:Generated_Source\PSoC4/CyLFClk.c ****             
2219:Generated_Source\PSoC4/CyLFClk.c ****             /* Wait 4 new clock source-cycles for change to come into effect */
2220:Generated_Source\PSoC4/CyLFClk.c ****             CyDelayUs(CY_SYS_4TIMER_DELAY_US);
2221:Generated_Source\PSoC4/CyLFClk.c **** 
2222:Generated_Source\PSoC4/CyLFClk.c ****             interruptState = CyEnterCriticalSection();
2223:Generated_Source\PSoC4/CyLFClk.c ****             CY_SYS_WCO_WDT_CONFIG_REG = (CY_SYS_WCO_WDT_CONFIG_REG & (uint32)(~CY_SYS_CLK_TIMER_SEL
2224:Generated_Source\PSoC4/CyLFClk.c ****                                     (source & CY_SYS_CLK_TIMER_SEL_MASK);
2225:Generated_Source\PSoC4/CyLFClk.c ****             CyExitCriticalSection(interruptState);
2226:Generated_Source\PSoC4/CyLFClk.c ****         }
2227:Generated_Source\PSoC4/CyLFClk.c **** 
2228:Generated_Source\PSoC4/CyLFClk.c ****         CY_SYS_WCO_WDT_CLKEN_REG = (CY_SYS_WCO_WDT_CLKEN_REG & (uint32)(~CY_SYS_WCO_WDT_CLKEN_RESET
2229:Generated_Source\PSoC4/CyLFClk.c ****                                     CY_SYS_SET_CURRENT_TIMER_SOURCE_BIT;
2230:Generated_Source\PSoC4/CyLFClk.c ****     }
2231:Generated_Source\PSoC4/CyLFClk.c **** 
2232:Generated_Source\PSoC4/CyLFClk.c **** 
2233:Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
2234:Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysTimerGetEnabledStatus
2235:Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
2236:Generated_Source\PSoC4/CyLFClk.c ****     *
2237:Generated_Source\PSoC4/CyLFClk.c ****     * \brief Reads the enabled status of one of the three DeepSleep Timer 
2238:Generated_Source\PSoC4/CyLFClk.c ****     * counters.
2239:Generated_Source\PSoC4/CyLFClk.c ****     *
2240:Generated_Source\PSoC4/CyLFClk.c ****     * \param counterNum: Valid range [0-2]. The number of the DeepSleep Timer 
2241:Generated_Source\PSoC4/CyLFClk.c ****     * counter.
2242:Generated_Source\PSoC4/CyLFClk.c ****     *
2243:Generated_Source\PSoC4/CyLFClk.c ****     * \return The status of the Timers counter:
2244:Generated_Source\PSoC4/CyLFClk.c ****     * \return 0 - If the Counter is disabled.
2245:Generated_Source\PSoC4/CyLFClk.c ****     * \return 1 - If the Counter is enabled.
2246:Generated_Source\PSoC4/CyLFClk.c ****     *
2247:Generated_Source\PSoC4/CyLFClk.c ****     * \details
2248:Generated_Source\PSoC4/CyLFClk.c ****     * This function returns an actual DeepSleep Timer counter status from the 
2249:Generated_Source\PSoC4/CyLFClk.c ****     * status register. It may take up to 3 LFCLK cycles for the Timer status 
2250:Generated_Source\PSoC4/CyLFClk.c ****     * register to contain actual data after the Timer counter is enabled.
2251:Generated_Source\PSoC4/CyLFClk.c ****     *
2252:Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
2253:Generated_Source\PSoC4/CyLFClk.c ****     uint32 CySysTimerGetEnabledStatus(uint32 counterNum)
2254:Generated_Source\PSoC4/CyLFClk.c ****     {
2255:Generated_Source\PSoC4/CyLFClk.c ****         CYASSERT(counterNum < CY_SYS_TIMER_COUNTERS_MAX);
2256:Generated_Source\PSoC4/CyLFClk.c ****         return ((CY_SYS_WCO_WDT_CONTROL_REG >> ((CY_SYS_TIMER_CNT_SHIFT * counterNum) + 
2257:Generated_Source\PSoC4/CyLFClk.c ****                                                  CY_SYS_TIMER_CNT_STTS_SHIFT)) & 0x01u);
2258:Generated_Source\PSoC4/CyLFClk.c ****     }
2259:Generated_Source\PSoC4/CyLFClk.c **** 
2260:Generated_Source\PSoC4/CyLFClk.c **** 
ARM GAS  C:\Users\akita\AppData\Local\Temp\ccTFmJyh.s 			page 113


2261:Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
2262:Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysTimerSetMode
2263:Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
2264:Generated_Source\PSoC4/CyLFClk.c ****     *
2265:Generated_Source\PSoC4/CyLFClk.c ****     * \brief Writes the mode of one of the three DeepSleep Timer counters.
2266:Generated_Source\PSoC4/CyLFClk.c ****     *
2267:Generated_Source\PSoC4/CyLFClk.c ****     * \param counterNum: Valid range [0-2]. The number of the DeepSleep Timer 
2268:Generated_Source\PSoC4/CyLFClk.c ****     * counter.
2269:Generated_Source\PSoC4/CyLFClk.c ****     *
2270:Generated_Source\PSoC4/CyLFClk.c ****     * \param mode
2271:Generated_Source\PSoC4/CyLFClk.c ****     *  CY_SYS_TIMER_MODE_NONE - Free running.<br>
2272:Generated_Source\PSoC4/CyLFClk.c ****     * CY_SYS_TIMER_MODE_INT - The interrupt generated on match for counter 0
2273:Generated_Source\PSoC4/CyLFClk.c ****     * and 1, and on bit toggle for counter 2.
2274:Generated_Source\PSoC4/CyLFClk.c ****     *
2275:Generated_Source\PSoC4/CyLFClk.c ****     * \details
2276:Generated_Source\PSoC4/CyLFClk.c ****     * DeepSleep Timer counter counterNum should be disabled to set a mode. 
2277:Generated_Source\PSoC4/CyLFClk.c ****     * Otherwise, this function call has no effect. If the specified counter is 
2278:Generated_Source\PSoC4/CyLFClk.c ****     * enabled, call the CySysTimerDisable() function with the corresponding 
2279:Generated_Source\PSoC4/CyLFClk.c ****     * parameter to disable the specified counter and wait for it to stop.
2280:Generated_Source\PSoC4/CyLFClk.c ****     *
2281:Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
2282:Generated_Source\PSoC4/CyLFClk.c ****     void CySysTimerSetMode(uint32 counterNum, uint32 mode)
2283:Generated_Source\PSoC4/CyLFClk.c ****     {
2284:Generated_Source\PSoC4/CyLFClk.c ****         uint32 configRegValue;
2285:Generated_Source\PSoC4/CyLFClk.c **** 
2286:Generated_Source\PSoC4/CyLFClk.c ****         CYASSERT(counterNum < CY_SYS_TIMER_COUNTERS_MAX);
2287:Generated_Source\PSoC4/CyLFClk.c **** 
2288:Generated_Source\PSoC4/CyLFClk.c ****         CYASSERT(mode <= CY_SYS_TIMER_MODE_MASK);
2289:Generated_Source\PSoC4/CyLFClk.c **** 
2290:Generated_Source\PSoC4/CyLFClk.c ****         if(0u == CySysTimerGetEnabledStatus(counterNum))
2291:Generated_Source\PSoC4/CyLFClk.c ****         {
2292:Generated_Source\PSoC4/CyLFClk.c ****             configRegValue = CY_SYS_WCO_WDT_CONFIG_REG &
2293:Generated_Source\PSoC4/CyLFClk.c ****                                 (uint32)~((uint32)(CY_SYS_TIMER_MODE_MASK << (counterNum * CY_SYS_T
2294:Generated_Source\PSoC4/CyLFClk.c ****             configRegValue |= (uint32)((mode & CY_SYS_TIMER_MODE_MASK) << (counterNum * CY_SYS_TIME
2295:Generated_Source\PSoC4/CyLFClk.c ****             CY_SYS_WCO_WDT_CONFIG_REG = configRegValue;
2296:Generated_Source\PSoC4/CyLFClk.c ****         }
2297:Generated_Source\PSoC4/CyLFClk.c ****     }
2298:Generated_Source\PSoC4/CyLFClk.c **** 
2299:Generated_Source\PSoC4/CyLFClk.c **** 
2300:Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
2301:Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysTimerGetMode
2302:Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
2303:Generated_Source\PSoC4/CyLFClk.c ****     *
2304:Generated_Source\PSoC4/CyLFClk.c ****     * \brief Reads the mode of one of the three DeepSleep Timer counters.
2305:Generated_Source\PSoC4/CyLFClk.c ****     *
2306:Generated_Source\PSoC4/CyLFClk.c ****     * \param counterNum Valid range [0-2]. The number of the Timer counter.
2307:Generated_Source\PSoC4/CyLFClk.c ****     *
2308:Generated_Source\PSoC4/CyLFClk.c ****     * \return The mode of the counter. The same enumerated values as the mode 
2309:Generated_Source\PSoC4/CyLFClk.c ****     * parameter used in CySysTimerSetMode().
2310:Generated_Source\PSoC4/CyLFClk.c ****     *
2311:Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
2312:Generated_Source\PSoC4/CyLFClk.c ****     uint32 CySysTimerGetMode(uint32 counterNum)
2313:Generated_Source\PSoC4/CyLFClk.c ****     {
2314:Generated_Source\PSoC4/CyLFClk.c ****         return ((CY_SYS_WCO_WDT_CONFIG_REG >> (counterNum * CY_SYS_TIMER_CNT_SHIFT)) & CY_SYS_TIMER
2315:Generated_Source\PSoC4/CyLFClk.c ****     }
2316:Generated_Source\PSoC4/CyLFClk.c **** 
2317:Generated_Source\PSoC4/CyLFClk.c **** 
ARM GAS  C:\Users\akita\AppData\Local\Temp\ccTFmJyh.s 			page 114


2318:Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
2319:Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysTimerSetClearOnMatch
2320:Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
2321:Generated_Source\PSoC4/CyLFClk.c ****     *
2322:Generated_Source\PSoC4/CyLFClk.c ****     * \brief Configures the DeepSleep Timer counter "clear on match" setting.
2323:Generated_Source\PSoC4/CyLFClk.c ****     *
2324:Generated_Source\PSoC4/CyLFClk.c ****     * If configured to "clear on match", the counter counts from 0 to MatchValue 
2325:Generated_Source\PSoC4/CyLFClk.c ****     * giving it a period of (MatchValue + 1).
2326:Generated_Source\PSoC4/CyLFClk.c ****     *
2327:Generated_Source\PSoC4/CyLFClk.c ****     * \param counterNum
2328:Generated_Source\PSoC4/CyLFClk.c ****     * Valid range [0-1]. The number of the Timer counter. The match values are not
2329:Generated_Source\PSoC4/CyLFClk.c ****     * supported by counter 2.
2330:Generated_Source\PSoC4/CyLFClk.c ****     * \param enable 0 to disable appropriate counter <br>
2331:Generated_Source\PSoC4/CyLFClk.c ****     * 1 to enable appropriate counter
2332:Generated_Source\PSoC4/CyLFClk.c ****     *
2333:Generated_Source\PSoC4/CyLFClk.c ****     * \details
2334:Generated_Source\PSoC4/CyLFClk.c ****     * Timer counter counterNum should be disabled. Otherwise this function call
2335:Generated_Source\PSoC4/CyLFClk.c ****     * has no effect. If the specified counter is enabled, call the CySysTimerDisable()
2336:Generated_Source\PSoC4/CyLFClk.c ****     * function with the corresponding parameter to disable the specified counter and
2337:Generated_Source\PSoC4/CyLFClk.c ****     * wait for it to stop. This may take up to three Timer source-cycles.
2338:Generated_Source\PSoC4/CyLFClk.c ****     *
2339:Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
2340:Generated_Source\PSoC4/CyLFClk.c ****     void CySysTimerSetClearOnMatch(uint32 counterNum, uint32 enable)
2341:Generated_Source\PSoC4/CyLFClk.c ****     {
2342:Generated_Source\PSoC4/CyLFClk.c ****         uint32 configRegValue;
2343:Generated_Source\PSoC4/CyLFClk.c **** 
2344:Generated_Source\PSoC4/CyLFClk.c ****         CYASSERT((counterNum == CY_SYS_TIMER0) ||
2345:Generated_Source\PSoC4/CyLFClk.c ****                  (counterNum == CY_SYS_TIMER1));
2346:Generated_Source\PSoC4/CyLFClk.c **** 
2347:Generated_Source\PSoC4/CyLFClk.c ****         if(0u == CySysTimerGetEnabledStatus(counterNum))
2348:Generated_Source\PSoC4/CyLFClk.c ****         {
2349:Generated_Source\PSoC4/CyLFClk.c ****             configRegValue = CY_SYS_WCO_WDT_CONFIG_REG & (uint32)~((uint32)((uint32)1u << 
2350:Generated_Source\PSoC4/CyLFClk.c ****              ((counterNum * CY_SYS_TIMER_CNT_SHIFT) + CY_SYS_TIMER_CNT_MATCH_CLR_SHIFT)));
2351:Generated_Source\PSoC4/CyLFClk.c **** 
2352:Generated_Source\PSoC4/CyLFClk.c ****             configRegValue
2353:Generated_Source\PSoC4/CyLFClk.c ****                 |= (uint32)(enable << ((counterNum * CY_SYS_TIMER_CNT_SHIFT) + CY_SYS_TIMER_CNT_MAT
2354:Generated_Source\PSoC4/CyLFClk.c **** 
2355:Generated_Source\PSoC4/CyLFClk.c ****             CY_SYS_WCO_WDT_CONFIG_REG = configRegValue;
2356:Generated_Source\PSoC4/CyLFClk.c ****         }
2357:Generated_Source\PSoC4/CyLFClk.c ****     }
2358:Generated_Source\PSoC4/CyLFClk.c **** 
2359:Generated_Source\PSoC4/CyLFClk.c **** 
2360:Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
2361:Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysTimerGetClearOnMatch
2362:Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
2363:Generated_Source\PSoC4/CyLFClk.c ****     *
2364:Generated_Source\PSoC4/CyLFClk.c ****     * \brief Reads the "clear on match" setting for the specified DeepSleep Timer 
2365:Generated_Source\PSoC4/CyLFClk.c ****     * counter.
2366:Generated_Source\PSoC4/CyLFClk.c ****     *
2367:Generated_Source\PSoC4/CyLFClk.c ****     * \param counterNum Valid range [0-1].  The number of the Timer counter. The 
2368:Generated_Source\PSoC4/CyLFClk.c ****     * match values are not supported by counter 2.
2369:Generated_Source\PSoC4/CyLFClk.c ****     *
2370:Generated_Source\PSoC4/CyLFClk.c ****     * \return The "clear on match" status: <br>1 if enabled <br>0 if disabled
2371:Generated_Source\PSoC4/CyLFClk.c ****     *
2372:Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
2373:Generated_Source\PSoC4/CyLFClk.c ****     uint32 CySysTimerGetClearOnMatch(uint32 counterNum)
2374:Generated_Source\PSoC4/CyLFClk.c ****     {
ARM GAS  C:\Users\akita\AppData\Local\Temp\ccTFmJyh.s 			page 115


2375:Generated_Source\PSoC4/CyLFClk.c ****         CYASSERT((counterNum == CY_SYS_TIMER0) ||
2376:Generated_Source\PSoC4/CyLFClk.c ****                  (counterNum == CY_SYS_TIMER1));
2377:Generated_Source\PSoC4/CyLFClk.c **** 
2378:Generated_Source\PSoC4/CyLFClk.c ****         return (uint32)((CY_SYS_WCO_WDT_CONFIG_REG >>
2379:Generated_Source\PSoC4/CyLFClk.c ****                         ((counterNum * CY_SYS_TIMER_CNT_SHIFT) + CY_SYS_TIMER_CNT_MATCH_CLR_SHIFT))
2380:Generated_Source\PSoC4/CyLFClk.c ****     }
2381:Generated_Source\PSoC4/CyLFClk.c **** 
2382:Generated_Source\PSoC4/CyLFClk.c **** 
2383:Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
2384:Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysTimerEnable
2385:Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
2386:Generated_Source\PSoC4/CyLFClk.c ****     *
2387:Generated_Source\PSoC4/CyLFClk.c ****     * \brief Enables the specified DeepSleep Timer counters. All the counters 
2388:Generated_Source\PSoC4/CyLFClk.c ****     * specified in the mask are enabled.
2389:Generated_Source\PSoC4/CyLFClk.c ****     *
2390:Generated_Source\PSoC4/CyLFClk.c ****     * \param counterMask  CY_SYS_TIMER0_MASK - The mask for counter 0 to enable.<br>
2391:Generated_Source\PSoC4/CyLFClk.c ****     * CY_SYS_TIMER1_MASK - The mask for counter 1 to enable.<br>
2392:Generated_Source\PSoC4/CyLFClk.c ****     * CY_SYS_TIMER2_MASK - The mask for counter 2 to enable.
2393:Generated_Source\PSoC4/CyLFClk.c ****     *
2394:Generated_Source\PSoC4/CyLFClk.c ****     * \details
2395:Generated_Source\PSoC4/CyLFClk.c ****     * Enabling or disabling Timer requires 3 Timer source-cycles to come into effect.
2396:Generated_Source\PSoC4/CyLFClk.c ****     * Therefore, the Timer enable state must not be changed more than once in
2397:Generated_Source\PSoC4/CyLFClk.c ****     * that period.
2398:Generated_Source\PSoC4/CyLFClk.c ****     *
2399:Generated_Source\PSoC4/CyLFClk.c ****     * After Timer is enabled, it is illegal to write Timer configuration 
2400:Generated_Source\PSoC4/CyLFClk.c ****     * (WCO_WDT_CONFIG) and control (WCO_WDT_CONTROL) registers. This means that all
2401:Generated_Source\PSoC4/CyLFClk.c ****     * Timer functions that contain 'write' in the name (with the exception of 
2402:Generated_Source\PSoC4/CyLFClk.c ****     * CySysTimerSetMatch() function) are illegal to call once Timer enabled.
2403:Generated_Source\PSoC4/CyLFClk.c ****     *
2404:Generated_Source\PSoC4/CyLFClk.c ****     * Timer current source must be running and stable before calling this 
2405:Generated_Source\PSoC4/CyLFClk.c ****     * function.
2406:Generated_Source\PSoC4/CyLFClk.c ****     *
2407:Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
2408:Generated_Source\PSoC4/CyLFClk.c ****     void CySysTimerEnable(uint32 counterMask)
2409:Generated_Source\PSoC4/CyLFClk.c ****     {
2410:Generated_Source\PSoC4/CyLFClk.c ****         CY_SYS_WCO_WDT_CONTROL_REG |= counterMask;
2411:Generated_Source\PSoC4/CyLFClk.c **** 
2412:Generated_Source\PSoC4/CyLFClk.c ****         if(0u != (counterMask & CY_SYS_TIMER0_MASK))
2413:Generated_Source\PSoC4/CyLFClk.c ****         {
2414:Generated_Source\PSoC4/CyLFClk.c ****             while (0u == CySysTimerGetEnabledStatus(CY_SYS_TIMER0))
2415:Generated_Source\PSoC4/CyLFClk.c ****             {
2416:Generated_Source\PSoC4/CyLFClk.c ****                 /* Wait for changes to come into effect */
2417:Generated_Source\PSoC4/CyLFClk.c ****             }
2418:Generated_Source\PSoC4/CyLFClk.c ****         }
2419:Generated_Source\PSoC4/CyLFClk.c **** 
2420:Generated_Source\PSoC4/CyLFClk.c ****         if(0u != (counterMask & CY_SYS_TIMER1_MASK))
2421:Generated_Source\PSoC4/CyLFClk.c ****         {
2422:Generated_Source\PSoC4/CyLFClk.c ****             while (0u == CySysTimerGetEnabledStatus(CY_SYS_TIMER1))
2423:Generated_Source\PSoC4/CyLFClk.c ****             {
2424:Generated_Source\PSoC4/CyLFClk.c ****                 /* Wait for changes to come into effect */
2425:Generated_Source\PSoC4/CyLFClk.c ****             }
2426:Generated_Source\PSoC4/CyLFClk.c ****         }
2427:Generated_Source\PSoC4/CyLFClk.c **** 
2428:Generated_Source\PSoC4/CyLFClk.c ****         if(0u != (counterMask & CY_SYS_TIMER2_MASK))
2429:Generated_Source\PSoC4/CyLFClk.c ****         {
2430:Generated_Source\PSoC4/CyLFClk.c ****             while (0u == CySysTimerGetEnabledStatus(CY_SYS_TIMER2))
2431:Generated_Source\PSoC4/CyLFClk.c ****             {
ARM GAS  C:\Users\akita\AppData\Local\Temp\ccTFmJyh.s 			page 116


2432:Generated_Source\PSoC4/CyLFClk.c ****                 /* Wait for changes to come into effect */
2433:Generated_Source\PSoC4/CyLFClk.c ****             }
2434:Generated_Source\PSoC4/CyLFClk.c ****         }
2435:Generated_Source\PSoC4/CyLFClk.c ****     }
2436:Generated_Source\PSoC4/CyLFClk.c **** 
2437:Generated_Source\PSoC4/CyLFClk.c **** 
2438:Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
2439:Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysTimerDisable
2440:Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
2441:Generated_Source\PSoC4/CyLFClk.c ****     *
2442:Generated_Source\PSoC4/CyLFClk.c ****     * \brief Disables the specified DeepSleep Timer counters.
2443:Generated_Source\PSoC4/CyLFClk.c ****     *
2444:Generated_Source\PSoC4/CyLFClk.c ****     * All the counters specified in the mask are disabled. The function waits for 
2445:Generated_Source\PSoC4/CyLFClk.c ****     * the changes to come into effect.
2446:Generated_Source\PSoC4/CyLFClk.c ****     *
2447:Generated_Source\PSoC4/CyLFClk.c ****     * \param counterMask
2448:Generated_Source\PSoC4/CyLFClk.c ****     *  CY_SYS_TIMER0_MASK - The mask for Counter 0 to disable.<br>
2449:Generated_Source\PSoC4/CyLFClk.c ****     * CY_SYS_TIMER1_MASK - The mask for Counter 1 to disable.<br>
2450:Generated_Source\PSoC4/CyLFClk.c ****     * CY_SYS_TIMER2_MASK - The mask for Counter 2 to disable.
2451:Generated_Source\PSoC4/CyLFClk.c ****     *
2452:Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
2453:Generated_Source\PSoC4/CyLFClk.c ****     void CySysTimerDisable(uint32 counterMask)
2454:Generated_Source\PSoC4/CyLFClk.c ****     {
2455:Generated_Source\PSoC4/CyLFClk.c **** 
2456:Generated_Source\PSoC4/CyLFClk.c ****         CY_SYS_WCO_WDT_CONTROL_REG &= ~counterMask;
2457:Generated_Source\PSoC4/CyLFClk.c **** 
2458:Generated_Source\PSoC4/CyLFClk.c ****         if(0u != (counterMask & CY_SYS_TIMER0_MASK))
2459:Generated_Source\PSoC4/CyLFClk.c ****         {
2460:Generated_Source\PSoC4/CyLFClk.c ****             while (0u != CySysTimerGetEnabledStatus(CY_SYS_TIMER0))
2461:Generated_Source\PSoC4/CyLFClk.c ****             {
2462:Generated_Source\PSoC4/CyLFClk.c ****                 /* Wait for changes to come into effect */
2463:Generated_Source\PSoC4/CyLFClk.c ****             }
2464:Generated_Source\PSoC4/CyLFClk.c ****         }
2465:Generated_Source\PSoC4/CyLFClk.c **** 
2466:Generated_Source\PSoC4/CyLFClk.c ****         if(0u != (counterMask & CY_SYS_TIMER1_MASK))
2467:Generated_Source\PSoC4/CyLFClk.c ****         {
2468:Generated_Source\PSoC4/CyLFClk.c ****             while (0u != CySysTimerGetEnabledStatus(CY_SYS_TIMER1))
2469:Generated_Source\PSoC4/CyLFClk.c ****             {
2470:Generated_Source\PSoC4/CyLFClk.c ****                 /* Wait for changes to come into effect */
2471:Generated_Source\PSoC4/CyLFClk.c ****             }
2472:Generated_Source\PSoC4/CyLFClk.c ****         }
2473:Generated_Source\PSoC4/CyLFClk.c **** 
2474:Generated_Source\PSoC4/CyLFClk.c ****         if(0u != (counterMask & CY_SYS_TIMER2_MASK))
2475:Generated_Source\PSoC4/CyLFClk.c ****         {
2476:Generated_Source\PSoC4/CyLFClk.c ****             while (0u != CySysTimerGetEnabledStatus(CY_SYS_TIMER2))
2477:Generated_Source\PSoC4/CyLFClk.c ****             {
2478:Generated_Source\PSoC4/CyLFClk.c ****                 /* Wait for changes to come into effect */
2479:Generated_Source\PSoC4/CyLFClk.c ****             }
2480:Generated_Source\PSoC4/CyLFClk.c ****         }
2481:Generated_Source\PSoC4/CyLFClk.c **** 
2482:Generated_Source\PSoC4/CyLFClk.c ****     }
2483:Generated_Source\PSoC4/CyLFClk.c **** 
2484:Generated_Source\PSoC4/CyLFClk.c **** 
2485:Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
2486:Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysTimerSetCascade
2487:Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
2488:Generated_Source\PSoC4/CyLFClk.c ****     *
ARM GAS  C:\Users\akita\AppData\Local\Temp\ccTFmJyh.s 			page 117


2489:Generated_Source\PSoC4/CyLFClk.c ****     * \brief
2490:Generated_Source\PSoC4/CyLFClk.c ****     * Writes the two DeepSleep Timers cascade values based on the combination of 
2491:Generated_Source\PSoC4/CyLFClk.c ****     * mask values specified.
2492:Generated_Source\PSoC4/CyLFClk.c ****     *
2493:Generated_Source\PSoC4/CyLFClk.c ****     * \param cascadeMask The mask value used to set or clear the cascade values:
2494:Generated_Source\PSoC4/CyLFClk.c ****     * CY_SYS_TIMER_CASCADE_NONE - Neither<br>
2495:Generated_Source\PSoC4/CyLFClk.c ****     * CY_SYS_TIMER_CASCADE_01 - Cascade 01<br>
2496:Generated_Source\PSoC4/CyLFClk.c ****     * CY_SYS_TIMER_CASCADE_12 - Cascade 12
2497:Generated_Source\PSoC4/CyLFClk.c ****     *
2498:Generated_Source\PSoC4/CyLFClk.c ****     * If only one cascade mask is specified, the second cascade is disabled.
2499:Generated_Source\PSoC4/CyLFClk.c ****     * To set both cascade modes, two defines should be ORed:
2500:Generated_Source\PSoC4/CyLFClk.c ****     * (CY_SYS_TIMER_CASCADE_01 | CY_SYS_TIMER_CASCADE_12).
2501:Generated_Source\PSoC4/CyLFClk.c ****     * \note If CySysTimerSetCascade() was called with ORed defines it is necessary 
2502:Generated_Source\PSoC4/CyLFClk.c ****     * to call CySysTimeSetClearOnMatch(1,1). It is needed to make sure that 
2503:Generated_Source\PSoC4/CyLFClk.c ****     * Counter 2 will be updated in the expected way.
2504:Generated_Source\PSoC4/CyLFClk.c ****     *
2505:Generated_Source\PSoC4/CyLFClk.c ****     * Timer counters that are part of the specified cascade should be disabled.
2506:Generated_Source\PSoC4/CyLFClk.c ****     * Otherwise this function call has no effect. If the specified
2507:Generated_Source\PSoC4/CyLFClk.c ****     * counter is enabled, call CySysTimerDisable() function with the corresponding
2508:Generated_Source\PSoC4/CyLFClk.c ****     * parameter to disable the specified counter and wait for it to stop. This may
2509:Generated_Source\PSoC4/CyLFClk.c ****     * take up to 3 Timers source-cycles.
2510:Generated_Source\PSoC4/CyLFClk.c ****     *
2511:Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
2512:Generated_Source\PSoC4/CyLFClk.c ****     void CySysTimerSetCascade(uint32 cascadeMask)
2513:Generated_Source\PSoC4/CyLFClk.c ****     {
2514:Generated_Source\PSoC4/CyLFClk.c ****         uint32 configRegValue;
2515:Generated_Source\PSoC4/CyLFClk.c ****         uint32 countersEnableStatus;
2516:Generated_Source\PSoC4/CyLFClk.c **** 
2517:Generated_Source\PSoC4/CyLFClk.c ****         countersEnableStatus = CySysTimerGetEnabledStatus(CY_SYS_TIMER0) |
2518:Generated_Source\PSoC4/CyLFClk.c ****                             CySysTimerGetEnabledStatus(CY_SYS_TIMER1) |
2519:Generated_Source\PSoC4/CyLFClk.c ****                             CySysTimerGetEnabledStatus(CY_SYS_TIMER2);
2520:Generated_Source\PSoC4/CyLFClk.c **** 
2521:Generated_Source\PSoC4/CyLFClk.c ****         if (0u == countersEnableStatus)
2522:Generated_Source\PSoC4/CyLFClk.c ****         {
2523:Generated_Source\PSoC4/CyLFClk.c ****             configRegValue = CY_SYS_WCO_WDT_CONFIG_REG;
2524:Generated_Source\PSoC4/CyLFClk.c ****             configRegValue &= ((uint32)(~(CY_SYS_TIMER_CASCADE_01|CY_SYS_TIMER_CASCADE_12)));
2525:Generated_Source\PSoC4/CyLFClk.c ****             configRegValue |= cascadeMask;
2526:Generated_Source\PSoC4/CyLFClk.c ****             CY_SYS_WCO_WDT_CONFIG_REG = configRegValue;
2527:Generated_Source\PSoC4/CyLFClk.c ****         }
2528:Generated_Source\PSoC4/CyLFClk.c ****     }
2529:Generated_Source\PSoC4/CyLFClk.c **** 
2530:Generated_Source\PSoC4/CyLFClk.c **** 
2531:Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
2532:Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysTimerGetCascade
2533:Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
2534:Generated_Source\PSoC4/CyLFClk.c ****     *
2535:Generated_Source\PSoC4/CyLFClk.c ****     * \brief Reads the two DeepSleep Timer cascade values returning a mask of the 
2536:Generated_Source\PSoC4/CyLFClk.c ****     * bits set.
2537:Generated_Source\PSoC4/CyLFClk.c ****     *
2538:Generated_Source\PSoC4/CyLFClk.c ****     * \return The mask of the cascade values set.
2539:Generated_Source\PSoC4/CyLFClk.c ****     * \return CY_SYS_TIMER_CASCADE_NONE - Neither
2540:Generated_Source\PSoC4/CyLFClk.c ****     * \return CY_SYS_TIMER_CASCADE_01 - Cascade 01
2541:Generated_Source\PSoC4/CyLFClk.c ****     * \return CY_SYS_TIMER_CASCADE_12 - Cascade 12
2542:Generated_Source\PSoC4/CyLFClk.c ****     *
2543:Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
2544:Generated_Source\PSoC4/CyLFClk.c ****     uint32 CySysTimerGetCascade(void)
2545:Generated_Source\PSoC4/CyLFClk.c ****     {
ARM GAS  C:\Users\akita\AppData\Local\Temp\ccTFmJyh.s 			page 118


2546:Generated_Source\PSoC4/CyLFClk.c ****         return (CY_SYS_WCO_WDT_CONFIG_REG & (CY_SYS_TIMER_CASCADE_01 | CY_SYS_TIMER_CASCADE_12));
2547:Generated_Source\PSoC4/CyLFClk.c ****     }
2548:Generated_Source\PSoC4/CyLFClk.c **** 
2549:Generated_Source\PSoC4/CyLFClk.c **** 
2550:Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
2551:Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysTimerSetMatch
2552:Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
2553:Generated_Source\PSoC4/CyLFClk.c ****     *
2554:Generated_Source\PSoC4/CyLFClk.c ****     * \brief Configures the Timer counter match comparison value.
2555:Generated_Source\PSoC4/CyLFClk.c ****     *
2556:Generated_Source\PSoC4/CyLFClk.c ****     * \param counterNum Valid range [0-1]. The number of the Timer counter. The 
2557:Generated_Source\PSoC4/CyLFClk.c ****     * match values are not supported by counter 2.
2558:Generated_Source\PSoC4/CyLFClk.c ****     *
2559:Generated_Source\PSoC4/CyLFClk.c ****     * \param match Valid range [0-65535]. The value to be used to match against 
2560:Generated_Source\PSoC4/CyLFClk.c ****     * the counter.
2561:Generated_Source\PSoC4/CyLFClk.c ****     *
2562:Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
2563:Generated_Source\PSoC4/CyLFClk.c ****     void CySysTimerSetMatch(uint32 counterNum, uint32 match)
2564:Generated_Source\PSoC4/CyLFClk.c ****     {
2565:Generated_Source\PSoC4/CyLFClk.c ****         uint32 regValue;
2566:Generated_Source\PSoC4/CyLFClk.c **** 
2567:Generated_Source\PSoC4/CyLFClk.c ****         CYASSERT((counterNum == CY_SYS_TIMER0) ||
2568:Generated_Source\PSoC4/CyLFClk.c ****                  (counterNum == CY_SYS_TIMER1));
2569:Generated_Source\PSoC4/CyLFClk.c **** 
2570:Generated_Source\PSoC4/CyLFClk.c ****         /* Wait for previous changes to come into effect */
2571:Generated_Source\PSoC4/CyLFClk.c ****         CyDelayUs(CY_SYS_3TIMER_DELAY_US);
2572:Generated_Source\PSoC4/CyLFClk.c **** 
2573:Generated_Source\PSoC4/CyLFClk.c ****         regValue = CY_SYS_WCO_WDT_MATCH_REG;
2574:Generated_Source\PSoC4/CyLFClk.c ****         regValue &= (uint32)~((uint32)(CY_SYS_TIMER_LOWER_16BITS_MASK << (counterNum * CY_SYS_TIMER
2575:Generated_Source\PSoC4/CyLFClk.c ****         CY_SYS_WCO_WDT_MATCH_REG = (regValue | (match << (counterNum * CY_SYS_TIMER_CNT_MATCH_SHIFT
2576:Generated_Source\PSoC4/CyLFClk.c **** 
2577:Generated_Source\PSoC4/CyLFClk.c ****         /* Make sure match synchronization has started */
2578:Generated_Source\PSoC4/CyLFClk.c ****         CyDelayUs(CY_SYS_1TIMER_DELAY_US);
2579:Generated_Source\PSoC4/CyLFClk.c ****     }
2580:Generated_Source\PSoC4/CyLFClk.c **** 
2581:Generated_Source\PSoC4/CyLFClk.c **** 
2582:Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
2583:Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysTimerSetToggleBit
2584:Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
2585:Generated_Source\PSoC4/CyLFClk.c ****     *
2586:Generated_Source\PSoC4/CyLFClk.c ****     * \brief Configures which bit in Timer counter 2 to monitor for a toggle.
2587:Generated_Source\PSoC4/CyLFClk.c ****     *
2588:Generated_Source\PSoC4/CyLFClk.c ****     * When that bit toggles, an interrupt is generated if mode for counter 2 has
2589:Generated_Source\PSoC4/CyLFClk.c ****     * enabled interrupts.
2590:Generated_Source\PSoC4/CyLFClk.c ****     *
2591:Generated_Source\PSoC4/CyLFClk.c ****     * \param bits Valid range [0-31]. Counter 2 bit to monitor for a toggle.
2592:Generated_Source\PSoC4/CyLFClk.c ****     *
2593:Generated_Source\PSoC4/CyLFClk.c ****     * \details Timer counter 2 should be disabled. Otherwise this function call has
2594:Generated_Source\PSoC4/CyLFClk.c ****     * no effect.
2595:Generated_Source\PSoC4/CyLFClk.c ****     *
2596:Generated_Source\PSoC4/CyLFClk.c ****     * If the specified counter is enabled, call the CySysTimerDisable() function with
2597:Generated_Source\PSoC4/CyLFClk.c ****     * the corresponding parameter to disable the specified counter and wait for it to
2598:Generated_Source\PSoC4/CyLFClk.c ****     * stop. This may take up to three Timer source-cycles.
2599:Generated_Source\PSoC4/CyLFClk.c ****     *
2600:Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
2601:Generated_Source\PSoC4/CyLFClk.c ****     void CySysTimerSetToggleBit(uint32 bits)
2602:Generated_Source\PSoC4/CyLFClk.c ****     {
ARM GAS  C:\Users\akita\AppData\Local\Temp\ccTFmJyh.s 			page 119


2603:Generated_Source\PSoC4/CyLFClk.c ****         uint32 configRegValue;
2604:Generated_Source\PSoC4/CyLFClk.c **** 
2605:Generated_Source\PSoC4/CyLFClk.c ****         if (0u == CySysTimerGetEnabledStatus(CY_SYS_TIMER2))
2606:Generated_Source\PSoC4/CyLFClk.c ****         {
2607:Generated_Source\PSoC4/CyLFClk.c ****             configRegValue = CY_SYS_WCO_WDT_CONFIG_REG;
2608:Generated_Source\PSoC4/CyLFClk.c ****             configRegValue &= (uint32)(~((uint32)(CY_SYS_TIMER_CONFIG_BITS2_MASK << CY_SYS_TIMER_CO
2609:Generated_Source\PSoC4/CyLFClk.c ****             configRegValue |= ((bits & CY_SYS_TIMER_CONFIG_BITS2_MASK) << CY_SYS_TIMER_CONFIG_BITS2
2610:Generated_Source\PSoC4/CyLFClk.c ****             CY_SYS_WCO_WDT_CONFIG_REG = configRegValue;
2611:Generated_Source\PSoC4/CyLFClk.c ****         }
2612:Generated_Source\PSoC4/CyLFClk.c ****     }
2613:Generated_Source\PSoC4/CyLFClk.c **** 
2614:Generated_Source\PSoC4/CyLFClk.c **** 
2615:Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
2616:Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysTimerGetToggleBit
2617:Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
2618:Generated_Source\PSoC4/CyLFClk.c ****     *
2619:Generated_Source\PSoC4/CyLFClk.c ****     * \brief Reads which bit in Timer counter 2 is monitored for a toggle.
2620:Generated_Source\PSoC4/CyLFClk.c ****     *
2621:Generated_Source\PSoC4/CyLFClk.c ****     * \return The bit that is monitored (range of 0 to 31)
2622:Generated_Source\PSoC4/CyLFClk.c ****     *
2623:Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
2624:Generated_Source\PSoC4/CyLFClk.c ****     uint32 CySysTimerGetToggleBit(void)
2625:Generated_Source\PSoC4/CyLFClk.c ****     {
2626:Generated_Source\PSoC4/CyLFClk.c ****         return ((CY_SYS_WCO_WDT_CONFIG_REG >> CY_SYS_TIMER_CONFIG_BITS2_POS) & CY_SYS_TIMER_CONFIG_
2627:Generated_Source\PSoC4/CyLFClk.c ****     }
2628:Generated_Source\PSoC4/CyLFClk.c **** 
2629:Generated_Source\PSoC4/CyLFClk.c **** 
2630:Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
2631:Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysTimerGetMatch
2632:Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
2633:Generated_Source\PSoC4/CyLFClk.c ****     *
2634:Generated_Source\PSoC4/CyLFClk.c ****     * \brief Reads the Timer counter match comparison value.
2635:Generated_Source\PSoC4/CyLFClk.c ****     *
2636:Generated_Source\PSoC4/CyLFClk.c ****     * \param counterNum Valid range [0-1]. The number of the DeepSleep Timer 
2637:Generated_Source\PSoC4/CyLFClk.c ****     * counter. The match values are not supported by counter 2.
2638:Generated_Source\PSoC4/CyLFClk.c ****     *
2639:Generated_Source\PSoC4/CyLFClk.c ****     * \return A 16-bit match value.
2640:Generated_Source\PSoC4/CyLFClk.c ****     *
2641:Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
2642:Generated_Source\PSoC4/CyLFClk.c ****     uint32 CySysTimerGetMatch(uint32 counterNum)
2643:Generated_Source\PSoC4/CyLFClk.c ****     {
2644:Generated_Source\PSoC4/CyLFClk.c ****         CYASSERT((counterNum == CY_SYS_TIMER0) ||
2645:Generated_Source\PSoC4/CyLFClk.c ****                  (counterNum == CY_SYS_TIMER1));
2646:Generated_Source\PSoC4/CyLFClk.c **** 
2647:Generated_Source\PSoC4/CyLFClk.c ****         return ((uint32)(CY_SYS_WCO_WDT_MATCH_REG >> (counterNum * CY_SYS_TIMER_CNT_MATCH_SHIFT)) &
2648:Generated_Source\PSoC4/CyLFClk.c ****                                                                   CY_SYS_TIMER_LOWER_16BITS_MASK);
2649:Generated_Source\PSoC4/CyLFClk.c ****     }
2650:Generated_Source\PSoC4/CyLFClk.c **** 
2651:Generated_Source\PSoC4/CyLFClk.c **** 
2652:Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
2653:Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysTimerGetCount
2654:Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
2655:Generated_Source\PSoC4/CyLFClk.c ****     *
2656:Generated_Source\PSoC4/CyLFClk.c ****     * \brief Reads the current DeepSleep Timer counter value.
2657:Generated_Source\PSoC4/CyLFClk.c ****     *
2658:Generated_Source\PSoC4/CyLFClk.c ****     * \param counterNum Valid range [0-2]. The number of the Timer counter.
2659:Generated_Source\PSoC4/CyLFClk.c ****     *
ARM GAS  C:\Users\akita\AppData\Local\Temp\ccTFmJyh.s 			page 120


2660:Generated_Source\PSoC4/CyLFClk.c ****     * \return A live counter value. Counter 0 and Counter 1 are 16 bit counters 
2661:Generated_Source\PSoC4/CyLFClk.c ****     * and counter 2 is a 32 bit counter.
2662:Generated_Source\PSoC4/CyLFClk.c ****     *
2663:Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
2664:Generated_Source\PSoC4/CyLFClk.c ****     uint32 CySysTimerGetCount(uint32 counterNum)
2665:Generated_Source\PSoC4/CyLFClk.c ****     {
2666:Generated_Source\PSoC4/CyLFClk.c ****         uint32 regValue = 0u;
2667:Generated_Source\PSoC4/CyLFClk.c **** 
2668:Generated_Source\PSoC4/CyLFClk.c ****         switch(counterNum)
2669:Generated_Source\PSoC4/CyLFClk.c ****         {
2670:Generated_Source\PSoC4/CyLFClk.c ****             /* Timer Counter 0 */
2671:Generated_Source\PSoC4/CyLFClk.c ****             case 0u:
2672:Generated_Source\PSoC4/CyLFClk.c ****                 regValue = CY_SYS_WCO_WDT_CTRLOW_REG & CY_SYS_TIMER_LOWER_16BITS_MASK;
2673:Generated_Source\PSoC4/CyLFClk.c ****             break;
2674:Generated_Source\PSoC4/CyLFClk.c **** 
2675:Generated_Source\PSoC4/CyLFClk.c ****             /* Timer Counter 1 */
2676:Generated_Source\PSoC4/CyLFClk.c ****             case 1u:
2677:Generated_Source\PSoC4/CyLFClk.c ****                 regValue = (CY_SYS_WCO_WDT_CTRLOW_REG >> CY_SYS_TIMER_CNT_MATCH_SHIFT) & CY_SYS_TIM
2678:Generated_Source\PSoC4/CyLFClk.c ****             break;
2679:Generated_Source\PSoC4/CyLFClk.c **** 
2680:Generated_Source\PSoC4/CyLFClk.c ****             /* Timer Counter 2 */
2681:Generated_Source\PSoC4/CyLFClk.c ****             case 2u:
2682:Generated_Source\PSoC4/CyLFClk.c ****                 regValue = CY_SYS_WCO_WDT_CTRHIGH_REG;
2683:Generated_Source\PSoC4/CyLFClk.c ****             break;
2684:Generated_Source\PSoC4/CyLFClk.c **** 
2685:Generated_Source\PSoC4/CyLFClk.c ****             default:
2686:Generated_Source\PSoC4/CyLFClk.c ****                 CYASSERT(0u != 0u);
2687:Generated_Source\PSoC4/CyLFClk.c ****             break;
2688:Generated_Source\PSoC4/CyLFClk.c ****         }
2689:Generated_Source\PSoC4/CyLFClk.c **** 
2690:Generated_Source\PSoC4/CyLFClk.c ****         return (regValue);
2691:Generated_Source\PSoC4/CyLFClk.c ****     }
2692:Generated_Source\PSoC4/CyLFClk.c **** 
2693:Generated_Source\PSoC4/CyLFClk.c **** 
2694:Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
2695:Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysTimerGetInterruptSource
2696:Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
2697:Generated_Source\PSoC4/CyLFClk.c ****     *
2698:Generated_Source\PSoC4/CyLFClk.c ****     * \brief
2699:Generated_Source\PSoC4/CyLFClk.c ****     * Reads a mask containing all the DeepSleep Timer counters interrupts that are 
2700:Generated_Source\PSoC4/CyLFClk.c ****     * currently set by the hardware, if a corresponding mode is selected.
2701:Generated_Source\PSoC4/CyLFClk.c ****     *
2702:Generated_Source\PSoC4/CyLFClk.c ****     * \return The mask of interrupts set
2703:Generated_Source\PSoC4/CyLFClk.c ****     * \return CY_SYS_TIMER0_INT - Set interrupt for Counter 0
2704:Generated_Source\PSoC4/CyLFClk.c ****     * \return CY_SYS_TIMER1_INT - Set interrupt for Counter 1
2705:Generated_Source\PSoC4/CyLFClk.c ****     * \return CY_SYS_TIMER2_INT - Set interrupt for Counter 2
2706:Generated_Source\PSoC4/CyLFClk.c ****     *
2707:Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
2708:Generated_Source\PSoC4/CyLFClk.c ****     uint32 CySysTimerGetInterruptSource(void)
2709:Generated_Source\PSoC4/CyLFClk.c ****     {
2710:Generated_Source\PSoC4/CyLFClk.c ****         return (CY_SYS_WCO_WDT_CONTROL_REG & (CY_SYS_TIMER0_INT | CY_SYS_TIMER1_INT | CY_SYS_TIMER2
2711:Generated_Source\PSoC4/CyLFClk.c ****     }
2712:Generated_Source\PSoC4/CyLFClk.c **** 
2713:Generated_Source\PSoC4/CyLFClk.c **** 
2714:Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
2715:Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysTimerClearInterrupt
2716:Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
ARM GAS  C:\Users\akita\AppData\Local\Temp\ccTFmJyh.s 			page 121


2717:Generated_Source\PSoC4/CyLFClk.c ****     *
2718:Generated_Source\PSoC4/CyLFClk.c ****     * \brief Clears all the DeepSleep Timer counter interrupts set in the mask.
2719:Generated_Source\PSoC4/CyLFClk.c ****     *
2720:Generated_Source\PSoC4/CyLFClk.c ****     * All the Timer interrupts are to be cleared by the firmware, otherwise
2721:Generated_Source\PSoC4/CyLFClk.c ****     * interrupts are generated continuously.
2722:Generated_Source\PSoC4/CyLFClk.c ****     *
2723:Generated_Source\PSoC4/CyLFClk.c ****     * \param counterMask
2724:Generated_Source\PSoC4/CyLFClk.c ****     *  CY_SYS_TIMER0_INT - Clear counter 0<br>
2725:Generated_Source\PSoC4/CyLFClk.c ****     * CY_SYS_TIMER1_INT - Clear counter 1<br>
2726:Generated_Source\PSoC4/CyLFClk.c ****     * CY_SYS_TIMER2_INT - Clear counter 2
2727:Generated_Source\PSoC4/CyLFClk.c ****     *
2728:Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
2729:Generated_Source\PSoC4/CyLFClk.c ****     void CySysTimerClearInterrupt(uint32 counterMask)
2730:Generated_Source\PSoC4/CyLFClk.c ****     {
2731:Generated_Source\PSoC4/CyLFClk.c ****         uint8 interruptState;
2732:Generated_Source\PSoC4/CyLFClk.c ****         interruptState = CyEnterCriticalSection();
2733:Generated_Source\PSoC4/CyLFClk.c **** 
2734:Generated_Source\PSoC4/CyLFClk.c ****         /* Set new WCO_TIMER control register value */
2735:Generated_Source\PSoC4/CyLFClk.c ****         counterMask &= (CY_SYS_TIMER0_INT |
2736:Generated_Source\PSoC4/CyLFClk.c ****                         CY_SYS_TIMER1_INT |
2737:Generated_Source\PSoC4/CyLFClk.c ****                         CY_SYS_TIMER2_INT);
2738:Generated_Source\PSoC4/CyLFClk.c **** 
2739:Generated_Source\PSoC4/CyLFClk.c ****         CY_SYS_WCO_WDT_CONTROL_REG = counterMask | (CY_SYS_WCO_WDT_CONTROL_REG & ~(CY_SYS_TIMER0_IN
2740:Generated_Source\PSoC4/CyLFClk.c ****                                                                            CY_SYS_TIMER1_INT |
2741:Generated_Source\PSoC4/CyLFClk.c ****                                                                            CY_SYS_TIMER2_INT));
2742:Generated_Source\PSoC4/CyLFClk.c **** 
2743:Generated_Source\PSoC4/CyLFClk.c ****         /* Read the CY_SYS_WDT_CONTROL_REG to clear the interrupt request.
2744:Generated_Source\PSoC4/CyLFClk.c ****          * Cypress ID #207093, #206231
2745:Generated_Source\PSoC4/CyLFClk.c ****         */
2746:Generated_Source\PSoC4/CyLFClk.c ****         (void)CY_SYS_WCO_WDT_CONTROL_REG;
2747:Generated_Source\PSoC4/CyLFClk.c **** 
2748:Generated_Source\PSoC4/CyLFClk.c ****         CyExitCriticalSection(interruptState);
2749:Generated_Source\PSoC4/CyLFClk.c ****     }
2750:Generated_Source\PSoC4/CyLFClk.c **** 
2751:Generated_Source\PSoC4/CyLFClk.c **** 
2752:Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
2753:Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysTimerSetInterruptCallback
2754:Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
2755:Generated_Source\PSoC4/CyLFClk.c ****     *
2756:Generated_Source\PSoC4/CyLFClk.c ****     * \brief
2757:Generated_Source\PSoC4/CyLFClk.c ****     * Sets the ISR callback function for the particular DeepSleep Timer counter.
2758:Generated_Source\PSoC4/CyLFClk.c ****     *
2759:Generated_Source\PSoC4/CyLFClk.c ****     * These functions are called on the Timer interrupt.
2760:Generated_Source\PSoC4/CyLFClk.c ****     *
2761:Generated_Source\PSoC4/CyLFClk.c ****     * \param counterNum The number of the Timer counter.
2762:Generated_Source\PSoC4/CyLFClk.c ****     * \param function The pointer to the callback function.
2763:Generated_Source\PSoC4/CyLFClk.c ****     *
2764:Generated_Source\PSoC4/CyLFClk.c ****     * \return  The pointer to the previous callback function. 
2765:Generated_Source\PSoC4/CyLFClk.c ****     * \return NULL is returned if the specified address is not set.
2766:Generated_Source\PSoC4/CyLFClk.c ****     *
2767:Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
2768:Generated_Source\PSoC4/CyLFClk.c ****     cyTimerCallback CySysTimerSetInterruptCallback(uint32 counterNum, cyTimerCallback function)
2769:Generated_Source\PSoC4/CyLFClk.c ****     {
2770:Generated_Source\PSoC4/CyLFClk.c ****         cyTimerCallback prevCallback = (void *)0;
2771:Generated_Source\PSoC4/CyLFClk.c **** 
2772:Generated_Source\PSoC4/CyLFClk.c ****         if(counterNum < CY_SYS_NUM_OF_TIMERS)
2773:Generated_Source\PSoC4/CyLFClk.c ****         {
ARM GAS  C:\Users\akita\AppData\Local\Temp\ccTFmJyh.s 			page 122


2774:Generated_Source\PSoC4/CyLFClk.c ****             prevCallback = cySysTimerCallback[counterNum];
2775:Generated_Source\PSoC4/CyLFClk.c ****             cySysTimerCallback[counterNum] = function;
2776:Generated_Source\PSoC4/CyLFClk.c ****         }
2777:Generated_Source\PSoC4/CyLFClk.c ****         else
2778:Generated_Source\PSoC4/CyLFClk.c ****         {
2779:Generated_Source\PSoC4/CyLFClk.c ****             CYASSERT(0u != 0u);
2780:Generated_Source\PSoC4/CyLFClk.c ****         }
2781:Generated_Source\PSoC4/CyLFClk.c **** 
2782:Generated_Source\PSoC4/CyLFClk.c ****         return((cyTimerCallback)prevCallback);
2783:Generated_Source\PSoC4/CyLFClk.c ****     }
2784:Generated_Source\PSoC4/CyLFClk.c **** 
2785:Generated_Source\PSoC4/CyLFClk.c **** 
2786:Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
2787:Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysTimerGetInterruptCallback
2788:Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
2789:Generated_Source\PSoC4/CyLFClk.c ****     *
2790:Generated_Source\PSoC4/CyLFClk.c ****     * \brief Gets the ISR callback function for the particular DeepSleep Timer 
2791:Generated_Source\PSoC4/CyLFClk.c ****     * counter.
2792:Generated_Source\PSoC4/CyLFClk.c ****     *
2793:Generated_Source\PSoC4/CyLFClk.c ****     * \param counterNum The number of the Timer counter.
2794:Generated_Source\PSoC4/CyLFClk.c ****     *
2795:Generated_Source\PSoC4/CyLFClk.c ****     * \return
2796:Generated_Source\PSoC4/CyLFClk.c ****     * The pointer to the callback function registered for a particular Timer by
2797:Generated_Source\PSoC4/CyLFClk.c ****     * a particular address that are passed through arguments.
2798:Generated_Source\PSoC4/CyLFClk.c ****     *
2799:Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
2800:Generated_Source\PSoC4/CyLFClk.c ****     cyTimerCallback CySysTimerGetInterruptCallback(uint32 counterNum)
2801:Generated_Source\PSoC4/CyLFClk.c ****     {
2802:Generated_Source\PSoC4/CyLFClk.c ****         cyTimerCallback retCallback = (void *)0;
2803:Generated_Source\PSoC4/CyLFClk.c **** 
2804:Generated_Source\PSoC4/CyLFClk.c ****         if(counterNum < CY_SYS_NUM_OF_TIMERS)
2805:Generated_Source\PSoC4/CyLFClk.c ****         {
2806:Generated_Source\PSoC4/CyLFClk.c ****             retCallback = (cyTimerCallback)cySysTimerCallback[counterNum];
2807:Generated_Source\PSoC4/CyLFClk.c ****         }
2808:Generated_Source\PSoC4/CyLFClk.c ****         else
2809:Generated_Source\PSoC4/CyLFClk.c ****         {
2810:Generated_Source\PSoC4/CyLFClk.c ****             CYASSERT(0u != 0u);
2811:Generated_Source\PSoC4/CyLFClk.c ****         }
2812:Generated_Source\PSoC4/CyLFClk.c **** 
2813:Generated_Source\PSoC4/CyLFClk.c ****         return(retCallback);
2814:Generated_Source\PSoC4/CyLFClk.c ****     }
2815:Generated_Source\PSoC4/CyLFClk.c **** 
2816:Generated_Source\PSoC4/CyLFClk.c **** 
2817:Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
2818:Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysTimerEnableIsr
2819:Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
2820:Generated_Source\PSoC4/CyLFClk.c ****     *
2821:Generated_Source\PSoC4/CyLFClk.c ****     * \brief Enables the ISR callback servicing for the particular Timer counter
2822:Generated_Source\PSoC4/CyLFClk.c ****     *
2823:Generated_Source\PSoC4/CyLFClk.c ****     * \param counterNum Valid range [0-2]. The number of the Timer counter.
2824:Generated_Source\PSoC4/CyLFClk.c ****     *
2825:Generated_Source\PSoC4/CyLFClk.c ****     * Value corresponds to appropriate Timer counter. For example value 1 
2826:Generated_Source\PSoC4/CyLFClk.c ****     * corresponds to second Timer counter.
2827:Generated_Source\PSoC4/CyLFClk.c ****     *
2828:Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
2829:Generated_Source\PSoC4/CyLFClk.c ****     void CySysTimerEnableIsr(uint32 counterNum)
2830:Generated_Source\PSoC4/CyLFClk.c ****     {
ARM GAS  C:\Users\akita\AppData\Local\Temp\ccTFmJyh.s 			page 123


2831:Generated_Source\PSoC4/CyLFClk.c ****         if(counterNum <= CY_SYS_TIMER2)
2832:Generated_Source\PSoC4/CyLFClk.c ****         {
2833:Generated_Source\PSoC4/CyLFClk.c ****             disableTimerServicedIsr &= ~counterTimerIntMaskTbl[counterNum];
2834:Generated_Source\PSoC4/CyLFClk.c ****             timerIsrMask |= counterTimerIntMaskTbl[counterNum];
2835:Generated_Source\PSoC4/CyLFClk.c ****         }
2836:Generated_Source\PSoC4/CyLFClk.c ****         else
2837:Generated_Source\PSoC4/CyLFClk.c ****         {
2838:Generated_Source\PSoC4/CyLFClk.c ****             CYASSERT(0u != 0u);
2839:Generated_Source\PSoC4/CyLFClk.c ****         }
2840:Generated_Source\PSoC4/CyLFClk.c ****     }
2841:Generated_Source\PSoC4/CyLFClk.c **** 
2842:Generated_Source\PSoC4/CyLFClk.c **** 
2843:Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
2844:Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysTimerDisableIsr
2845:Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
2846:Generated_Source\PSoC4/CyLFClk.c ****     *
2847:Generated_Source\PSoC4/CyLFClk.c ****     * \brief Disables the ISR callback servicing for the particular Timer counter
2848:Generated_Source\PSoC4/CyLFClk.c ****     *
2849:Generated_Source\PSoC4/CyLFClk.c ****     * \param counterNum Valid range [0-2]. The number of the Timer counter.
2850:Generated_Source\PSoC4/CyLFClk.c ****     *
2851:Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
2852:Generated_Source\PSoC4/CyLFClk.c ****     void CySysTimerDisableIsr(uint32 counterNum)
2853:Generated_Source\PSoC4/CyLFClk.c ****     {
2854:Generated_Source\PSoC4/CyLFClk.c ****         if(counterNum <= CY_SYS_TIMER2)
2855:Generated_Source\PSoC4/CyLFClk.c ****         {
2856:Generated_Source\PSoC4/CyLFClk.c ****             timerIsrMask &= ~counterTimerIntMaskTbl[counterNum];
2857:Generated_Source\PSoC4/CyLFClk.c ****         }
2858:Generated_Source\PSoC4/CyLFClk.c ****         else
2859:Generated_Source\PSoC4/CyLFClk.c ****         {
2860:Generated_Source\PSoC4/CyLFClk.c ****             CYASSERT(0u != 0u);
2861:Generated_Source\PSoC4/CyLFClk.c ****         }
2862:Generated_Source\PSoC4/CyLFClk.c ****     }
2863:Generated_Source\PSoC4/CyLFClk.c **** 
2864:Generated_Source\PSoC4/CyLFClk.c **** 
2865:Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
2866:Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysTimerIsr
2867:Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
2868:Generated_Source\PSoC4/CyLFClk.c ****     *
2869:Generated_Source\PSoC4/CyLFClk.c ****     * \brief This is the handler of the DeepSleep Timer interrupt in CPU NVIC.
2870:Generated_Source\PSoC4/CyLFClk.c ****     *
2871:Generated_Source\PSoC4/CyLFClk.c ****     * The handler checks which Timer triggered in the interrupt and calls the 
2872:Generated_Source\PSoC4/CyLFClk.c ****     * respective callback functions configured by the user by using 
2873:Generated_Source\PSoC4/CyLFClk.c ****     * CySysTimerSetIsrCallback() API.
2874:Generated_Source\PSoC4/CyLFClk.c ****     *
2875:Generated_Source\PSoC4/CyLFClk.c ****     * The order of the callback execution is incremental. Callback-0 is
2876:Generated_Source\PSoC4/CyLFClk.c ****     * run as the first one and callback-2 is called as the last one.
2877:Generated_Source\PSoC4/CyLFClk.c ****     *
2878:Generated_Source\PSoC4/CyLFClk.c ****     * \details This function clears the DeepSleep Timer interrupt every time when 
2879:Generated_Source\PSoC4/CyLFClk.c ****     * it is called.
2880:Generated_Source\PSoC4/CyLFClk.c ****     *
2881:Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
2882:Generated_Source\PSoC4/CyLFClk.c ****     void CySysTimerIsr(void)
2883:Generated_Source\PSoC4/CyLFClk.c ****     {
2884:Generated_Source\PSoC4/CyLFClk.c ****         if(0u != (CY_SYS_TIMER0_INT & CY_SYS_WCO_WDT_CONTROL_REG))
2885:Generated_Source\PSoC4/CyLFClk.c ****         {
2886:Generated_Source\PSoC4/CyLFClk.c ****             if(0u != (CY_SYS_TIMER0_INT & timerIsrMask))
2887:Generated_Source\PSoC4/CyLFClk.c ****             {
ARM GAS  C:\Users\akita\AppData\Local\Temp\ccTFmJyh.s 			page 124


2888:Generated_Source\PSoC4/CyLFClk.c ****                 timerIsrMask &= ~(disableTimerServicedIsr & CY_SYS_TIMER0_INT);
2889:Generated_Source\PSoC4/CyLFClk.c ****                 disableTimerServicedIsr  &= ~CY_SYS_TIMER0_INT;
2890:Generated_Source\PSoC4/CyLFClk.c ****                 if(cySysTimerCallback[CY_SYS_TIMER0] != (void *) 0)
2891:Generated_Source\PSoC4/CyLFClk.c ****                 {
2892:Generated_Source\PSoC4/CyLFClk.c ****                     (void)(cySysTimerCallback[CY_SYS_TIMER0])();
2893:Generated_Source\PSoC4/CyLFClk.c ****                 }
2894:Generated_Source\PSoC4/CyLFClk.c ****             }
2895:Generated_Source\PSoC4/CyLFClk.c ****             CySysTimerClearInterrupt(CY_SYS_TIMER0_INT);
2896:Generated_Source\PSoC4/CyLFClk.c ****         }
2897:Generated_Source\PSoC4/CyLFClk.c **** 
2898:Generated_Source\PSoC4/CyLFClk.c ****         if(0u != (CY_SYS_TIMER1_INT & CY_SYS_WCO_WDT_CONTROL_REG))
2899:Generated_Source\PSoC4/CyLFClk.c ****         {
2900:Generated_Source\PSoC4/CyLFClk.c ****             if(0u != (CY_SYS_TIMER1_INT & timerIsrMask))
2901:Generated_Source\PSoC4/CyLFClk.c ****             {
2902:Generated_Source\PSoC4/CyLFClk.c ****                 timerIsrMask &= ~(disableTimerServicedIsr & CY_SYS_TIMER1_INT);
2903:Generated_Source\PSoC4/CyLFClk.c ****                 disableTimerServicedIsr  &= ~CY_SYS_TIMER1_INT;
2904:Generated_Source\PSoC4/CyLFClk.c ****                 if(cySysTimerCallback[CY_SYS_TIMER1] != (void *) 0)
2905:Generated_Source\PSoC4/CyLFClk.c ****                 {
2906:Generated_Source\PSoC4/CyLFClk.c ****                     (void)(cySysTimerCallback[CY_SYS_TIMER1])();
2907:Generated_Source\PSoC4/CyLFClk.c ****                 }
2908:Generated_Source\PSoC4/CyLFClk.c ****             }
2909:Generated_Source\PSoC4/CyLFClk.c ****             CySysTimerClearInterrupt(CY_SYS_TIMER1_INT);
2910:Generated_Source\PSoC4/CyLFClk.c ****         }
2911:Generated_Source\PSoC4/CyLFClk.c **** 
2912:Generated_Source\PSoC4/CyLFClk.c ****         if(0u != (CY_SYS_TIMER2_INT & CY_SYS_WCO_WDT_CONTROL_REG))
2913:Generated_Source\PSoC4/CyLFClk.c ****         {
2914:Generated_Source\PSoC4/CyLFClk.c ****             if(0u != (CY_SYS_TIMER2_INT & timerIsrMask))
2915:Generated_Source\PSoC4/CyLFClk.c ****             {
2916:Generated_Source\PSoC4/CyLFClk.c ****                 if(cySysTimerCallback[CY_SYS_TIMER2] != (void *) 0)
2917:Generated_Source\PSoC4/CyLFClk.c ****                 {
2918:Generated_Source\PSoC4/CyLFClk.c ****                     (void)(cySysTimerCallback[CY_SYS_TIMER2])();
2919:Generated_Source\PSoC4/CyLFClk.c ****                 }
2920:Generated_Source\PSoC4/CyLFClk.c ****             }
2921:Generated_Source\PSoC4/CyLFClk.c ****             CySysTimerClearInterrupt(CY_SYS_TIMER2_INT);
2922:Generated_Source\PSoC4/CyLFClk.c ****         }
2923:Generated_Source\PSoC4/CyLFClk.c ****     }
2924:Generated_Source\PSoC4/CyLFClk.c **** 
2925:Generated_Source\PSoC4/CyLFClk.c **** 
2926:Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
2927:Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysTimerResetCounters
2928:Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
2929:Generated_Source\PSoC4/CyLFClk.c ****     *
2930:Generated_Source\PSoC4/CyLFClk.c ****     * \brief Resets all the Timer counters set in the mask.
2931:Generated_Source\PSoC4/CyLFClk.c ****     *
2932:Generated_Source\PSoC4/CyLFClk.c ****     * \param countersMask
2933:Generated_Source\PSoC4/CyLFClk.c ****     * CY_SYS_TIMER0_RESET - Reset the Counter 0<br>
2934:Generated_Source\PSoC4/CyLFClk.c ****     * CY_SYS_TIMER1_RESET - Reset the Counter 1<br>
2935:Generated_Source\PSoC4/CyLFClk.c ****     * CY_SYS_TIMER2_RESET - Reset the Counter 2
2936:Generated_Source\PSoC4/CyLFClk.c ****     *
2937:Generated_Source\PSoC4/CyLFClk.c ****     * \details
2938:Generated_Source\PSoC4/CyLFClk.c ****     * This function waits while corresponding counters will be reset. This may
2939:Generated_Source\PSoC4/CyLFClk.c ****     * take up to 3 DeepSleep Timer source-cycles. DeepSleep Timer source must be 
2940:Generated_Source\PSoC4/CyLFClk.c ****     * enabled. Otherwise, the function will never exit.
2941:Generated_Source\PSoC4/CyLFClk.c ****     *
2942:Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
2943:Generated_Source\PSoC4/CyLFClk.c ****     void CySysTimerResetCounters(uint32 countersMask)
2944:Generated_Source\PSoC4/CyLFClk.c ****     {
ARM GAS  C:\Users\akita\AppData\Local\Temp\ccTFmJyh.s 			page 125


2945:Generated_Source\PSoC4/CyLFClk.c ****         /* Set new Timer reset value */
2946:Generated_Source\PSoC4/CyLFClk.c ****         CY_SYS_WCO_WDT_CONTROL_REG |= (countersMask & CY_SYS_TIMER_RESET);
2947:Generated_Source\PSoC4/CyLFClk.c **** 
2948:Generated_Source\PSoC4/CyLFClk.c ****         while (0uL != (CY_SYS_WCO_WDT_CONTROL_REG & CY_SYS_TIMER_RESET))
2949:Generated_Source\PSoC4/CyLFClk.c ****         {
2950:Generated_Source\PSoC4/CyLFClk.c ****             /* Wait for reset to come into effect */
2951:Generated_Source\PSoC4/CyLFClk.c ****         }
2952:Generated_Source\PSoC4/CyLFClk.c ****     }
2953:Generated_Source\PSoC4/CyLFClk.c **** #endif /* (CY_IP_SRSSLT && CY_IP_WCO && CY_IP_WCO_WDT_EN) */
2954:Generated_Source\PSoC4/CyLFClk.c **** 
2955:Generated_Source\PSoC4/CyLFClk.c **** 
2956:Generated_Source\PSoC4/CyLFClk.c **** #if(CY_IP_SRSSV2 || (CY_IP_WCO_WDT_EN && CY_IP_SRSSLT))
2957:Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
2958:Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysTimerDelay
2959:Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
2960:Generated_Source\PSoC4/CyLFClk.c ****     *
2961:Generated_Source\PSoC4/CyLFClk.c ****     * \brief
2962:Generated_Source\PSoC4/CyLFClk.c ****     * The function implements the delay specified in the LFCLK clock ticks.
2963:Generated_Source\PSoC4/CyLFClk.c ****     *
2964:Generated_Source\PSoC4/CyLFClk.c ****     * This API is applicable for PSoC 4100 / PSoC 4200 / PSoC 4100 BLE / 
2965:Generated_Source\PSoC4/CyLFClk.c ****     * PSoC 4200 BLE / PRoC BLE / PSoC 4200L / PSoC 4100M / PSoC 4200M devices to 
2966:Generated_Source\PSoC4/CyLFClk.c ****     * use WDT. Also this API is available to use for PSoC4100S and / PSoC Analog 
2967:Generated_Source\PSoC4/CyLFClk.c ****     * Coprocessor devices to use DeepSleep Timers.
2968:Generated_Source\PSoC4/CyLFClk.c ****     *
2969:Generated_Source\PSoC4/CyLFClk.c ****     * For PSoC 4100 / PSoC 4200 / PSoC 4100 BLE / PSoC 4200 BLE / PRoC BLE / PSoC 
2970:Generated_Source\PSoC4/CyLFClk.c ****     * 4200L / PSoC 4100M / PSoC 4200M devices:
2971:Generated_Source\PSoC4/CyLFClk.c ****     * The specified WDT counter should be configured as described below and started.
2972:Generated_Source\PSoC4/CyLFClk.c ****     *
2973:Generated_Source\PSoC4/CyLFClk.c ****     * For PSoC 4100S / PSoC Analog Coprocessor devices:
2974:Generated_Source\PSoC4/CyLFClk.c ****     * The specified DeepSleep Timer counter should be configured as described below
2975:Generated_Source\PSoC4/CyLFClk.c ****     * and started.
2976:Generated_Source\PSoC4/CyLFClk.c ****     *
2977:Generated_Source\PSoC4/CyLFClk.c ****     * This function can operate in two modes: the "WAIT" and "INTERRUPT" modes. In
2978:Generated_Source\PSoC4/CyLFClk.c ****     * the "WAIT" mode, the function waits for the specified number of ticks. In the
2979:Generated_Source\PSoC4/CyLFClk.c ****     * "INTERRUPT" mode, the interrupt is generated after the specified number of
2980:Generated_Source\PSoC4/CyLFClk.c ****     * ticks.
2981:Generated_Source\PSoC4/CyLFClk.c ****     *
2982:Generated_Source\PSoC4/CyLFClk.c ****     * For the correct function operation, the "Clear On Match" option should be
2983:Generated_Source\PSoC4/CyLFClk.c ****     * disabled for the specified WDT or DeepSleep Timer counter. Use 
2984:Generated_Source\PSoC4/CyLFClk.c ****     * CySysWdtSetClearOnMatch() for WDT or CySysTimerSetClearOnMatch() for DeepSleep
2985:Generated_Source\PSoC4/CyLFClk.c ****     * Timer function with the "enable" parameter equal to zero for the used WDT 
2986:Generated_Source\PSoC4/CyLFClk.c ****     * counter or DeepSleep Timer counter.
2987:Generated_Source\PSoC4/CyLFClk.c ****     *
2988:Generated_Source\PSoC4/CyLFClk.c ****     * The corresponding WDT counter should be configured to match the selected
2989:Generated_Source\PSoC4/CyLFClk.c ****     * mode: "Free running Timer" for the "WAIT" mode, and
2990:Generated_Source\PSoC4/CyLFClk.c ****     * "Periodic Timer" / "Watchdog (w/Interrupt)" for the "INTERRUPT" mode.
2991:Generated_Source\PSoC4/CyLFClk.c ****     *
2992:Generated_Source\PSoC4/CyLFClk.c ****     * Or the corresponding DeepSleep Timer counter should be configured to match the
2993:Generated_Source\PSoC4/CyLFClk.c ****     * selected mode: "Free running Timer" for the "WAIT" mode, and
2994:Generated_Source\PSoC4/CyLFClk.c ****     * "Periodic Timer" for the "INTERRUPT" mode.
2995:Generated_Source\PSoC4/CyLFClk.c ****     *
2996:Generated_Source\PSoC4/CyLFClk.c ****     * This can be configured in two ways:
2997:Generated_Source\PSoC4/CyLFClk.c ****     * - Through the DWR page. Open the "Clocks" tab, click the "Edit Clocks..."
2998:Generated_Source\PSoC4/CyLFClk.c ****     * button, in the "Configure System Clocks" window click on the
2999:Generated_Source\PSoC4/CyLFClk.c ****     * "Low Frequency Clocks" tab and choose the appropriate option for the used
3000:Generated_Source\PSoC4/CyLFClk.c ****     * WDT or DeepSleep Timer counter.
3001:Generated_Source\PSoC4/CyLFClk.c ****     *
ARM GAS  C:\Users\akita\AppData\Local\Temp\ccTFmJyh.s 			page 126


3002:Generated_Source\PSoC4/CyLFClk.c ****     * - Through the CySysWdtSetMode() for WDT or CySysTimerSetMode() for DeepSleep
3003:Generated_Source\PSoC4/CyLFClk.c ****     * Timer function. Call it with the appropriate "mode" parameter for the 
3004:Generated_Source\PSoC4/CyLFClk.c ****     * used WDT or DeepSleep Timer counter.
3005:Generated_Source\PSoC4/CyLFClk.c ****     *
3006:Generated_Source\PSoC4/CyLFClk.c ****     * For the "INTERRUPT" mode, the recommended sequence is the following:
3007:Generated_Source\PSoC4/CyLFClk.c ****     * - Call the CySysWdtDisableCounterIsr() for WDT or 
3008:Generated_Source\PSoC4/CyLFClk.c ****     * CySysTimerDisableIsr() for DeepSleep Timer function to disable servicing
3009:Generated_Source\PSoC4/CyLFClk.c ****     * interrupts of the specified WDT or DeepSleep Timer counter.
3010:Generated_Source\PSoC4/CyLFClk.c ****     *
3011:Generated_Source\PSoC4/CyLFClk.c ****     * - Call the CySysWdtSetInterruptCallback() for WDT or 
3012:Generated_Source\PSoC4/CyLFClk.c ****     * CySysTimerSetIsrCallback() for DeepSleep Timer function to register 
3013:Generated_Source\PSoC4/CyLFClk.c ****     * the callback function for the corresponding WDT or DeepSleep Timer counter.
3014:Generated_Source\PSoC4/CyLFClk.c ****     *
3015:Generated_Source\PSoC4/CyLFClk.c ****     * - Call the CySysTimerDelay() function.
3016:Generated_Source\PSoC4/CyLFClk.c ****     *
3017:Generated_Source\PSoC4/CyLFClk.c ****     * \param counterNum Valid range [0-1]. The number of the counter 
3018:Generated_Source\PSoC4/CyLFClk.c ****     * (Timer0 or Timer1).
3019:Generated_Source\PSoC4/CyLFClk.c ****     * \param delayType
3020:Generated_Source\PSoC4/CyLFClk.c ****     * CY_SYS_TIMER_WAIT - "WAIT" mode. <br>
3021:Generated_Source\PSoC4/CyLFClk.c ****     * CY_SYS_TIMER_INTERRUPT - "INTERRUPT" mode.
3022:Generated_Source\PSoC4/CyLFClk.c ****     * \param delay The delay value in the LFCLK ticks 
3023:Generated_Source\PSoC4/CyLFClk.c ****     * (allowable range - 16-bit value).
3024:Generated_Source\PSoC4/CyLFClk.c ****     *
3025:Generated_Source\PSoC4/CyLFClk.c ****     * \details
3026:Generated_Source\PSoC4/CyLFClk.c ****     * In the "INTERRUPT" mode, this function enables ISR callback servicing
3027:Generated_Source\PSoC4/CyLFClk.c ****     * from the corresponding WDT or DeepSleep Timer counter. Servicing of this ISR 
3028:Generated_Source\PSoC4/CyLFClk.c ****     * callback will be disabled after the expiration of the delay time.
3029:Generated_Source\PSoC4/CyLFClk.c ****     *
3030:Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
3031:Generated_Source\PSoC4/CyLFClk.c ****     void CySysTimerDelay(uint32 counterNum, cy_sys_timer_delaytype_enum delayType, uint32 delay)
3032:Generated_Source\PSoC4/CyLFClk.c ****     {
 3399              		.loc 2 3032 0
 3400              		.cfi_startproc
 3401 0000 80B5     		push	{r7, lr}
 3402              		.cfi_def_cfa_offset 8
 3403              		.cfi_offset 7, -8
 3404              		.cfi_offset 14, -4
 3405 0002 86B0     		sub	sp, sp, #24
 3406              		.cfi_def_cfa_offset 32
 3407 0004 00AF     		add	r7, sp, #0
 3408              		.cfi_def_cfa_register 7
 3409 0006 F860     		str	r0, [r7, #12]
 3410 0008 7A60     		str	r2, [r7, #4]
 3411 000a 0B23     		mov	r3, #11
 3412 000c FB18     		add	r3, r7, r3
 3413 000e 0A1C     		add	r2, r1, #0
 3414 0010 1A70     		strb	r2, [r3]
3033:Generated_Source\PSoC4/CyLFClk.c ****         uint32 regValue;
3034:Generated_Source\PSoC4/CyLFClk.c ****         uint32 matchValue;
3035:Generated_Source\PSoC4/CyLFClk.c **** 
3036:Generated_Source\PSoC4/CyLFClk.c ****         #if(CY_IP_SRSSV2)
3037:Generated_Source\PSoC4/CyLFClk.c ****             if((counterNum < CY_SYS_WDT_COUNTER2) && (0uL == CySysWdtGetClearOnMatch(counterNum)) &
 3415              		.loc 2 3037 0
 3416 0012 FB68     		ldr	r3, [r7, #12]
 3417 0014 012B     		cmp	r3, #1
 3418 0016 20D8     		bhi	.L283
 3419              		.loc 2 3037 0 is_stmt 0 discriminator 1
ARM GAS  C:\Users\akita\AppData\Local\Temp\ccTFmJyh.s 			page 127


 3420 0018 FB68     		ldr	r3, [r7, #12]
 3421 001a 181C     		mov	r0, r3
 3422 001c FFF7FEFF 		bl	CySysWdtGetClearOnMatch
 3423 0020 031E     		sub	r3, r0, #0
 3424 0022 1AD1     		bne	.L283
 3425              		.loc 2 3037 0 discriminator 2
 3426 0024 7B68     		ldr	r3, [r7, #4]
 3427 0026 104A     		ldr	r2, .L285
 3428 0028 9342     		cmp	r3, r2
 3429 002a 16D8     		bhi	.L283
3038:Generated_Source\PSoC4/CyLFClk.c ****                                                                 (delay <= CY_SYS_UINT16_MAX_VAL))
3039:Generated_Source\PSoC4/CyLFClk.c ****             {
3040:Generated_Source\PSoC4/CyLFClk.c ****                 regValue   = CySysWdtGetCount(counterNum);
 3430              		.loc 2 3040 0 is_stmt 1
 3431 002c FB68     		ldr	r3, [r7, #12]
 3432 002e 181C     		mov	r0, r3
 3433 0030 FFF7FEFF 		bl	CySysWdtGetCount
 3434 0034 031C     		mov	r3, r0
 3435 0036 7B61     		str	r3, [r7, #20]
3041:Generated_Source\PSoC4/CyLFClk.c ****                 matchValue = (regValue + delay) & (uint32)CY_SYS_UINT16_MAX_VAL;
 3436              		.loc 2 3041 0
 3437 0038 7A69     		ldr	r2, [r7, #20]
 3438 003a 7B68     		ldr	r3, [r7, #4]
 3439 003c D318     		add	r3, r2, r3
 3440 003e 1B04     		lsl	r3, r3, #16
 3441 0040 1B0C     		lsr	r3, r3, #16
 3442 0042 3B61     		str	r3, [r7, #16]
3042:Generated_Source\PSoC4/CyLFClk.c **** 
3043:Generated_Source\PSoC4/CyLFClk.c ****                 CySysTimerDelayUntilMatch(counterNum, delayType, matchValue);
 3443              		.loc 2 3043 0
 3444 0044 F968     		ldr	r1, [r7, #12]
 3445 0046 0B23     		mov	r3, #11
 3446 0048 FB18     		add	r3, r7, r3
 3447 004a 1A78     		ldrb	r2, [r3]
 3448 004c 3B69     		ldr	r3, [r7, #16]
 3449 004e 081C     		mov	r0, r1
 3450 0050 111C     		mov	r1, r2
 3451 0052 1A1C     		mov	r2, r3
 3452 0054 FFF7FEFF 		bl	CySysTimerDelayUntilMatch
 3453 0058 02E0     		b	.L282
 3454              	.L283:
3044:Generated_Source\PSoC4/CyLFClk.c ****             }
3045:Generated_Source\PSoC4/CyLFClk.c ****             else
3046:Generated_Source\PSoC4/CyLFClk.c ****             {
3047:Generated_Source\PSoC4/CyLFClk.c ****                 CYASSERT(0u != 0u);
 3455              		.loc 2 3047 0 discriminator 1
 3456 005a 0020     		mov	r0, #0
 3457 005c FFF7FEFF 		bl	CyHalt
 3458              	.L282:
3048:Generated_Source\PSoC4/CyLFClk.c ****             }
3049:Generated_Source\PSoC4/CyLFClk.c ****         #endif /* (CY_IP_SRSSV2) */
3050:Generated_Source\PSoC4/CyLFClk.c **** 
3051:Generated_Source\PSoC4/CyLFClk.c ****         #if(CY_IP_WCO_WDT_EN && CY_IP_SRSSLT)
3052:Generated_Source\PSoC4/CyLFClk.c ****             if((counterNum < CY_SYS_TIMER2) && (0uL == CySysTimerGetClearOnMatch(counterNum)) && 
3053:Generated_Source\PSoC4/CyLFClk.c ****                                                             (delay <= CY_SYS_UINT16_MAX_VAL))
3054:Generated_Source\PSoC4/CyLFClk.c ****             {
3055:Generated_Source\PSoC4/CyLFClk.c ****                 regValue   = CySysTimerGetCount(counterNum);
ARM GAS  C:\Users\akita\AppData\Local\Temp\ccTFmJyh.s 			page 128


3056:Generated_Source\PSoC4/CyLFClk.c ****                 matchValue = (regValue + delay) & (uint32)CY_SYS_UINT16_MAX_VAL;
3057:Generated_Source\PSoC4/CyLFClk.c **** 
3058:Generated_Source\PSoC4/CyLFClk.c ****                 CySysTimerDelayUntilMatch(counterNum, delayType, matchValue);
3059:Generated_Source\PSoC4/CyLFClk.c ****             }
3060:Generated_Source\PSoC4/CyLFClk.c ****             else
3061:Generated_Source\PSoC4/CyLFClk.c ****             {
3062:Generated_Source\PSoC4/CyLFClk.c ****                 CYASSERT(0u != 0u);
3063:Generated_Source\PSoC4/CyLFClk.c ****             }
3064:Generated_Source\PSoC4/CyLFClk.c ****         #endif /* (CY_IP_WCO_WDT_EN) */
3065:Generated_Source\PSoC4/CyLFClk.c ****     }
 3459              		.loc 2 3065 0
 3460 0060 BD46     		mov	sp, r7
 3461 0062 06B0     		add	sp, sp, #24
 3462              		@ sp needed
 3463 0064 80BD     		pop	{r7, pc}
 3464              	.L286:
 3465 0066 C046     		.align	2
 3466              	.L285:
 3467 0068 FFFF0000 		.word	65535
 3468              		.cfi_endproc
 3469              	.LFE46:
 3470              		.size	CySysTimerDelay, .-CySysTimerDelay
 3471              		.section	.text.CySysTimerDelayUntilMatch,"ax",%progbits
 3472              		.align	2
 3473              		.global	CySysTimerDelayUntilMatch
 3474              		.code	16
 3475              		.thumb_func
 3476              		.type	CySysTimerDelayUntilMatch, %function
 3477              	CySysTimerDelayUntilMatch:
 3478              	.LFB47:
3066:Generated_Source\PSoC4/CyLFClk.c **** 
3067:Generated_Source\PSoC4/CyLFClk.c **** 
3068:Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
3069:Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysTimerDelayUntilMatch
3070:Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
3071:Generated_Source\PSoC4/CyLFClk.c ****     *
3072:Generated_Source\PSoC4/CyLFClk.c ****     * \brief
3073:Generated_Source\PSoC4/CyLFClk.c ****     * The function implements the delay specified as the number of WDT or DeepSleep
3074:Generated_Source\PSoC4/CyLFClk.c ****     * Timer clock source ticks between WDT or DeepSleep Timer current value and 
3075:Generated_Source\PSoC4/CyLFClk.c ****     * match" value.
3076:Generated_Source\PSoC4/CyLFClk.c ****     *
3077:Generated_Source\PSoC4/CyLFClk.c ****     * This API is applicable for PSoC 4100 / PSoC 4200 / PRoC BLE / PSoC 4100 BLE /
3078:Generated_Source\PSoC4/CyLFClk.c ****     * PSoC 4200 BLE / PSoC 4200L / PSoC 4100M / PSoC 4200M devices to use WDT.
3079:Generated_Source\PSoC4/CyLFClk.c ****     * Also this API is available to use for PSoC4100S / Analog Coprocessor devices
3080:Generated_Source\PSoC4/CyLFClk.c ****     * to use DeepSleep Timers.
3081:Generated_Source\PSoC4/CyLFClk.c ****     * 
3082:Generated_Source\PSoC4/CyLFClk.c ****     * For PSoC 4100 / PSoC 4200 / PSoC 4100 BLE / PSoC 4200 BLE / PRoC BLE / PSoC 
3083:Generated_Source\PSoC4/CyLFClk.c ****     * 4200L / PSoC 4100M / PSoC 4200M devices:
3084:Generated_Source\PSoC4/CyLFClk.c ****     * The function implements the delay specified as the number of LFCLK ticks
3085:Generated_Source\PSoC4/CyLFClk.c ****     * between the specified WDT counter's current value and the "match"
3086:Generated_Source\PSoC4/CyLFClk.c ****     * passed as the parameter to this function. The current WDT counter value can 
3087:Generated_Source\PSoC4/CyLFClk.c ****     * be obtained using the CySysWdtGetCount() function.
3088:Generated_Source\PSoC4/CyLFClk.c ****     *
3089:Generated_Source\PSoC4/CyLFClk.c ****     * For PSoC4100 S and Analog Coprocessor devices:
3090:Generated_Source\PSoC4/CyLFClk.c ****     * The function implements the delay specified as the number of DeepSleep Timer 
3091:Generated_Source\PSoC4/CyLFClk.c ****     * input clock ticks for Timer0/Timer1 counter's current value and the "match" 
3092:Generated_Source\PSoC4/CyLFClk.c ****     * passed as the parameter to this function. The current DeepSleep Timer counter
ARM GAS  C:\Users\akita\AppData\Local\Temp\ccTFmJyh.s 			page 129


3093:Generated_Source\PSoC4/CyLFClk.c ****     * value can be obtained using the CySysWdtGetCount() function.
3094:Generated_Source\PSoC4/CyLFClk.c ****     *
3095:Generated_Source\PSoC4/CyLFClk.c ****     * For PSoC 4100 / PSoC 4200 / PSoC 4100 BLE / PSoC 4200 BLE / PRoC BLE / PSoC 
3096:Generated_Source\PSoC4/CyLFClk.c ****     * 4200L / PSoC 4100M / PSoC 4200M devices:
3097:Generated_Source\PSoC4/CyLFClk.c ****     * The specified WDT counter should be configured as described below and started.
3098:Generated_Source\PSoC4/CyLFClk.c ****     *
3099:Generated_Source\PSoC4/CyLFClk.c ****     * For PSoC PSoC 4100S / PSoC Analog Coprocessor devices:
3100:Generated_Source\PSoC4/CyLFClk.c ****     * The specified DeepSleep Timer counter should be configured as described below
3101:Generated_Source\PSoC4/CyLFClk.c ****     * and started.
3102:Generated_Source\PSoC4/CyLFClk.c ****     *
3103:Generated_Source\PSoC4/CyLFClk.c ****     * This function can operate in two modes: the "WAIT" and "INTERRUPT" modes. In
3104:Generated_Source\PSoC4/CyLFClk.c ****     * the "WAIT" mode, the function waits for the specified number of ticks. In the
3105:Generated_Source\PSoC4/CyLFClk.c ****     * "INTERRUPT" mode, the interrupt is generated after the specified number of
3106:Generated_Source\PSoC4/CyLFClk.c ****     * ticks.
3107:Generated_Source\PSoC4/CyLFClk.c ****     *
3108:Generated_Source\PSoC4/CyLFClk.c ****     * For the correct function operation, the "Clear On Match" option should be
3109:Generated_Source\PSoC4/CyLFClk.c ****     * disabled for the specified WDT or DeepSleep Timer counter. Use 
3110:Generated_Source\PSoC4/CyLFClk.c ****     * CySysWdtSetClearOnMatch() for WDT or CySysTimerSetClearOnMatch() for DeepSleep
3111:Generated_Source\PSoC4/CyLFClk.c ****     * Timer function with the "enable" parameter equal to zero for the used WDT 
3112:Generated_Source\PSoC4/CyLFClk.c ****     * or DeepSleep Timer counter.
3113:Generated_Source\PSoC4/CyLFClk.c ****     *
3114:Generated_Source\PSoC4/CyLFClk.c ****     * For PSoC 4100 / PSoC 4200 / PSoC 4100 BLE / PSoC 4200 BLE / PRoC BLE / PSoC 
3115:Generated_Source\PSoC4/CyLFClk.c ****     * 4200L / PSoC 4100M/PSoC 4200M devices:
3116:Generated_Source\PSoC4/CyLFClk.c ****     * The corresponding WDT counter should be configured to match the selected
3117:Generated_Source\PSoC4/CyLFClk.c ****     * mode: "Free running Timer" for the "WAIT" mode, and
3118:Generated_Source\PSoC4/CyLFClk.c ****     * "Periodic Timer" / "Watchdog (w/Interrupt)" for the "INTERRUPT" mode.
3119:Generated_Source\PSoC4/CyLFClk.c ****     *
3120:Generated_Source\PSoC4/CyLFClk.c ****     * For PSoC 4100S / PSoC Analog Coprocessor devices:
3121:Generated_Source\PSoC4/CyLFClk.c ****     * Corresponding DeepSleep Timer counter should be configured to match the 
3122:Generated_Source\PSoC4/CyLFClk.c ****     * selected mode: "Free running Timer" for the "WAIT" mode, and
3123:Generated_Source\PSoC4/CyLFClk.c ****     * "Periodic Timer" for the "INTERRUPT" mode.
3124:Generated_Source\PSoC4/CyLFClk.c ****     *
3125:Generated_Source\PSoC4/CyLFClk.c ****     * This can be configured in two ways:
3126:Generated_Source\PSoC4/CyLFClk.c ****     * - Through the DWR page. Open the "Clocks" tab, click the "Edit Clocks..."
3127:Generated_Source\PSoC4/CyLFClk.c ****     * button, in the "Configure System Clocks" window click on the
3128:Generated_Source\PSoC4/CyLFClk.c ****     * "Low Frequency Clocks" tab and choose the appropriate option for the used
3129:Generated_Source\PSoC4/CyLFClk.c ****     * WDT or DeepSleep Timer counter.
3130:Generated_Source\PSoC4/CyLFClk.c ****     *
3131:Generated_Source\PSoC4/CyLFClk.c ****     * - Through the CySysWdtSetMode() for WDT or CySysTimerSetMode() for DeepSleep
3132:Generated_Source\PSoC4/CyLFClk.c ****     * Timer function. Call it with the appropriate "mode" parameter for the 
3133:Generated_Source\PSoC4/CyLFClk.c ****     * used WDT or DeepSleep Timer counter.
3134:Generated_Source\PSoC4/CyLFClk.c ****     *
3135:Generated_Source\PSoC4/CyLFClk.c ****     * For the "INTERRUPT" mode, the recommended sequence is the following:
3136:Generated_Source\PSoC4/CyLFClk.c ****     * - Call the CySysWdtDisableCounterIsr() for WDT or 
3137:Generated_Source\PSoC4/CyLFClk.c ****     * CySysTimerDisableIsr() for DeepSleep Timer function to disable servicing
3138:Generated_Source\PSoC4/CyLFClk.c ****     * interrupts of the specified WDT or DeepSleep Timer counter.
3139:Generated_Source\PSoC4/CyLFClk.c ****     *
3140:Generated_Source\PSoC4/CyLFClk.c ****     * - Call the CySysWdtSetInterruptCallback() for WDT or 
3141:Generated_Source\PSoC4/CyLFClk.c ****     * CySysTimerSetInterruptCallback() for DeepSleep Timer function to register 
3142:Generated_Source\PSoC4/CyLFClk.c ****     * the callback function for the corresponding WDT or DeepSleep Timer counter.
3143:Generated_Source\PSoC4/CyLFClk.c ****     *
3144:Generated_Source\PSoC4/CyLFClk.c ****     * - Call the CySysTimerDelay() function.
3145:Generated_Source\PSoC4/CyLFClk.c ****     *
3146:Generated_Source\PSoC4/CyLFClk.c ****     * \param counterNum Valid range [0-1]. The number of the WDT or DeepSleep 
3147:Generated_Source\PSoC4/CyLFClk.c ****     * Timer.
3148:Generated_Source\PSoC4/CyLFClk.c ****     * counter (Timer0 or Timer1).
3149:Generated_Source\PSoC4/CyLFClk.c ****     * \param delayType  CY_SYS_TIMER_WAIT - "WAIT" mode.<br>
ARM GAS  C:\Users\akita\AppData\Local\Temp\ccTFmJyh.s 			page 130


3150:Generated_Source\PSoC4/CyLFClk.c ****     * CY_SYS_TIMER_INTERRUPT - "INTERRUPT" mode.
3151:Generated_Source\PSoC4/CyLFClk.c ****     * \param delay The delay value in the LFCLK ticks
3152:Generated_Source\PSoC4/CyLFClk.c ****     * (allowable range - 16-bit value).
3153:Generated_Source\PSoC4/CyLFClk.c ****     *
3154:Generated_Source\PSoC4/CyLFClk.c ****     * \details
3155:Generated_Source\PSoC4/CyLFClk.c ****     * In the "INTERRUPT" mode, this function enables ISR callback servicing
3156:Generated_Source\PSoC4/CyLFClk.c ****     * from the corresponding WDT counter. Servicing of this ISR callback will be
3157:Generated_Source\PSoC4/CyLFClk.c ****     * disabled after the expiration of the delay time.
3158:Generated_Source\PSoC4/CyLFClk.c ****     *
3159:Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
3160:Generated_Source\PSoC4/CyLFClk.c ****     void CySysTimerDelayUntilMatch(uint32 counterNum, cy_sys_timer_delaytype_enum delayType, uint32
3161:Generated_Source\PSoC4/CyLFClk.c ****     {
 3479              		.loc 2 3161 0
 3480              		.cfi_startproc
 3481 0000 80B5     		push	{r7, lr}
 3482              		.cfi_def_cfa_offset 8
 3483              		.cfi_offset 7, -8
 3484              		.cfi_offset 14, -4
 3485 0002 86B0     		sub	sp, sp, #24
 3486              		.cfi_def_cfa_offset 32
 3487 0004 00AF     		add	r7, sp, #0
 3488              		.cfi_def_cfa_register 7
 3489 0006 F860     		str	r0, [r7, #12]
 3490 0008 7A60     		str	r2, [r7, #4]
 3491 000a 0B23     		mov	r3, #11
 3492 000c FB18     		add	r3, r7, r3
 3493 000e 0A1C     		add	r2, r1, #0
 3494 0010 1A70     		strb	r2, [r3]
3162:Generated_Source\PSoC4/CyLFClk.c ****         uint32 tmpValue;
3163:Generated_Source\PSoC4/CyLFClk.c **** 
3164:Generated_Source\PSoC4/CyLFClk.c ****         #if(CY_IP_SRSSV2)
3165:Generated_Source\PSoC4/CyLFClk.c ****             if((counterNum < CY_SYS_WDT_COUNTER2) && (0uL == CySysWdtGetClearOnMatch(counterNum)) &
 3495              		.loc 2 3165 0
 3496 0012 FB68     		ldr	r3, [r7, #12]
 3497 0014 012B     		cmp	r3, #1
 3498 0016 3BD8     		bhi	.L288
 3499              		.loc 2 3165 0 is_stmt 0 discriminator 1
 3500 0018 FB68     		ldr	r3, [r7, #12]
 3501 001a 181C     		mov	r0, r3
 3502 001c FFF7FEFF 		bl	CySysWdtGetClearOnMatch
 3503 0020 031E     		sub	r3, r0, #0
 3504 0022 35D1     		bne	.L288
 3505              		.loc 2 3165 0 discriminator 2
 3506 0024 7B68     		ldr	r3, [r7, #4]
 3507 0026 1D4A     		ldr	r2, .L294
 3508 0028 9342     		cmp	r3, r2
 3509 002a 31D8     		bhi	.L288
3166:Generated_Source\PSoC4/CyLFClk.c ****                                                                 (match <= CY_SYS_UINT16_MAX_VAL))
3167:Generated_Source\PSoC4/CyLFClk.c ****             {
3168:Generated_Source\PSoC4/CyLFClk.c ****                 if(delayType == CY_SYS_TIMER_WAIT)
 3510              		.loc 2 3168 0 is_stmt 1
 3511 002c 0B23     		mov	r3, #11
 3512 002e FB18     		add	r3, r7, r3
 3513 0030 1B78     		ldrb	r3, [r3]
 3514 0032 002B     		cmp	r3, #0
 3515 0034 14D1     		bne	.L289
 3516              	.L290:
ARM GAS  C:\Users\akita\AppData\Local\Temp\ccTFmJyh.s 			page 131


3169:Generated_Source\PSoC4/CyLFClk.c ****                 {
3170:Generated_Source\PSoC4/CyLFClk.c ****                     do
3171:Generated_Source\PSoC4/CyLFClk.c ****                     {
3172:Generated_Source\PSoC4/CyLFClk.c ****                         tmpValue = CySysWdtGetCount(counterNum);
 3517              		.loc 2 3172 0 discriminator 1
 3518 0036 FB68     		ldr	r3, [r7, #12]
 3519 0038 181C     		mov	r0, r3
 3520 003a FFF7FEFF 		bl	CySysWdtGetCount
 3521 003e 031C     		mov	r3, r0
 3522 0040 7B61     		str	r3, [r7, #20]
3173:Generated_Source\PSoC4/CyLFClk.c ****                     }while(tmpValue > match);
 3523              		.loc 2 3173 0 discriminator 1
 3524 0042 7A69     		ldr	r2, [r7, #20]
 3525 0044 7B68     		ldr	r3, [r7, #4]
 3526 0046 9A42     		cmp	r2, r3
 3527 0048 F5D8     		bhi	.L290
 3528              	.L291:
3174:Generated_Source\PSoC4/CyLFClk.c **** 
3175:Generated_Source\PSoC4/CyLFClk.c ****                     do
3176:Generated_Source\PSoC4/CyLFClk.c ****                     {
3177:Generated_Source\PSoC4/CyLFClk.c ****                         tmpValue = CySysWdtGetCount(counterNum);
 3529              		.loc 2 3177 0 discriminator 1
 3530 004a FB68     		ldr	r3, [r7, #12]
 3531 004c 181C     		mov	r0, r3
 3532 004e FFF7FEFF 		bl	CySysWdtGetCount
 3533 0052 031C     		mov	r3, r0
 3534 0054 7B61     		str	r3, [r7, #20]
3178:Generated_Source\PSoC4/CyLFClk.c ****                     }while(tmpValue < match);
 3535              		.loc 2 3178 0 discriminator 1
 3536 0056 7A69     		ldr	r2, [r7, #20]
 3537 0058 7B68     		ldr	r3, [r7, #4]
 3538 005a 9A42     		cmp	r2, r3
 3539 005c F5D3     		bcc	.L291
3168:Generated_Source\PSoC4/CyLFClk.c ****                 {
 3540              		.loc 2 3168 0
 3541 005e 1AE0     		b	.L287
 3542              	.L289:
3179:Generated_Source\PSoC4/CyLFClk.c ****                 }
3180:Generated_Source\PSoC4/CyLFClk.c ****                 else
3181:Generated_Source\PSoC4/CyLFClk.c ****                 {
3182:Generated_Source\PSoC4/CyLFClk.c ****                     tmpValue = counterIntMaskTbl[counterNum];
 3543              		.loc 2 3182 0
 3544 0060 0F4B     		ldr	r3, .L294+4
 3545 0062 FA68     		ldr	r2, [r7, #12]
 3546 0064 9200     		lsl	r2, r2, #2
 3547 0066 D358     		ldr	r3, [r2, r3]
 3548 0068 7B61     		str	r3, [r7, #20]
3183:Generated_Source\PSoC4/CyLFClk.c ****                     CySysWdtSetMatch(counterNum, match);
 3549              		.loc 2 3183 0
 3550 006a FA68     		ldr	r2, [r7, #12]
 3551 006c 7B68     		ldr	r3, [r7, #4]
 3552 006e 101C     		mov	r0, r2
 3553 0070 191C     		mov	r1, r3
 3554 0072 FFF7FEFF 		bl	CySysWdtSetMatch
3184:Generated_Source\PSoC4/CyLFClk.c **** 
3185:Generated_Source\PSoC4/CyLFClk.c ****                     disableServicedIsr  |= tmpValue;
 3555              		.loc 2 3185 0
ARM GAS  C:\Users\akita\AppData\Local\Temp\ccTFmJyh.s 			page 132


 3556 0076 0B4B     		ldr	r3, .L294+8
 3557 0078 1A68     		ldr	r2, [r3]
 3558 007a 7B69     		ldr	r3, [r7, #20]
 3559 007c 1A43     		orr	r2, r3
 3560 007e 094B     		ldr	r3, .L294+8
 3561 0080 1A60     		str	r2, [r3]
3186:Generated_Source\PSoC4/CyLFClk.c ****                     wdtIsrMask |= tmpValue;
 3562              		.loc 2 3186 0
 3563 0082 094B     		ldr	r3, .L294+12
 3564 0084 1A68     		ldr	r2, [r3]
 3565 0086 7B69     		ldr	r3, [r7, #20]
 3566 0088 1A43     		orr	r2, r3
 3567 008a 074B     		ldr	r3, .L294+12
 3568 008c 1A60     		str	r2, [r3]
3168:Generated_Source\PSoC4/CyLFClk.c ****                 {
 3569              		.loc 2 3168 0
 3570 008e 02E0     		b	.L287
 3571              	.L288:
3187:Generated_Source\PSoC4/CyLFClk.c ****                 }
3188:Generated_Source\PSoC4/CyLFClk.c ****             }
3189:Generated_Source\PSoC4/CyLFClk.c ****             else
3190:Generated_Source\PSoC4/CyLFClk.c ****             {
3191:Generated_Source\PSoC4/CyLFClk.c ****                 CYASSERT(0u != 0u);
 3572              		.loc 2 3191 0 discriminator 1
 3573 0090 0020     		mov	r0, #0
 3574 0092 FFF7FEFF 		bl	CyHalt
 3575              	.L287:
3192:Generated_Source\PSoC4/CyLFClk.c ****             }
3193:Generated_Source\PSoC4/CyLFClk.c **** 
3194:Generated_Source\PSoC4/CyLFClk.c ****         #endif /* (CY_IP_SRSSV2) */  
3195:Generated_Source\PSoC4/CyLFClk.c **** 
3196:Generated_Source\PSoC4/CyLFClk.c ****         #if(CY_IP_WCO_WDT_EN && CY_IP_SRSSLT)
3197:Generated_Source\PSoC4/CyLFClk.c ****         if((counterNum < CY_SYS_TIMER2) && (0uL == CySysTimerGetClearOnMatch(counterNum)) &&
3198:Generated_Source\PSoC4/CyLFClk.c ****                                                         (match <= CY_SYS_UINT16_MAX_VAL))
3199:Generated_Source\PSoC4/CyLFClk.c ****         {
3200:Generated_Source\PSoC4/CyLFClk.c ****             if(delayType == CY_SYS_TIMER_WAIT)
3201:Generated_Source\PSoC4/CyLFClk.c ****             {
3202:Generated_Source\PSoC4/CyLFClk.c ****                 do
3203:Generated_Source\PSoC4/CyLFClk.c ****                 {
3204:Generated_Source\PSoC4/CyLFClk.c ****                     tmpValue = CySysTimerGetCount(counterNum);
3205:Generated_Source\PSoC4/CyLFClk.c ****                 }while(tmpValue > match);
3206:Generated_Source\PSoC4/CyLFClk.c **** 
3207:Generated_Source\PSoC4/CyLFClk.c ****                 do
3208:Generated_Source\PSoC4/CyLFClk.c ****                 {
3209:Generated_Source\PSoC4/CyLFClk.c ****                     tmpValue = CySysTimerGetCount(counterNum);
3210:Generated_Source\PSoC4/CyLFClk.c ****                 }while(tmpValue < match);
3211:Generated_Source\PSoC4/CyLFClk.c ****             }
3212:Generated_Source\PSoC4/CyLFClk.c ****             else
3213:Generated_Source\PSoC4/CyLFClk.c ****             {
3214:Generated_Source\PSoC4/CyLFClk.c ****                 tmpValue = counterTimerIntMaskTbl[counterNum];
3215:Generated_Source\PSoC4/CyLFClk.c ****                 CySysTimerSetMatch(counterNum, match);
3216:Generated_Source\PSoC4/CyLFClk.c **** 
3217:Generated_Source\PSoC4/CyLFClk.c ****                 disableTimerServicedIsr  |= tmpValue;
3218:Generated_Source\PSoC4/CyLFClk.c ****                 timerIsrMask |= tmpValue;
3219:Generated_Source\PSoC4/CyLFClk.c ****             }
3220:Generated_Source\PSoC4/CyLFClk.c ****         }
3221:Generated_Source\PSoC4/CyLFClk.c ****         else
ARM GAS  C:\Users\akita\AppData\Local\Temp\ccTFmJyh.s 			page 133


3222:Generated_Source\PSoC4/CyLFClk.c ****         {
3223:Generated_Source\PSoC4/CyLFClk.c ****             CYASSERT(0u != 0u);
3224:Generated_Source\PSoC4/CyLFClk.c ****         }
3225:Generated_Source\PSoC4/CyLFClk.c ****         #endif /* (CY_IP_WCO_WDT_EN && CY_IP_SRSSLT) */
3226:Generated_Source\PSoC4/CyLFClk.c ****     }
 3576              		.loc 2 3226 0
 3577 0096 BD46     		mov	sp, r7
 3578 0098 06B0     		add	sp, sp, #24
 3579              		@ sp needed
 3580 009a 80BD     		pop	{r7, pc}
 3581              	.L295:
 3582              		.align	2
 3583              	.L294:
 3584 009c FFFF0000 		.word	65535
 3585 00a0 00000000 		.word	counterIntMaskTbl
 3586 00a4 08000000 		.word	disableServicedIsr
 3587 00a8 04000000 		.word	wdtIsrMask
 3588              		.cfi_endproc
 3589              	.LFE47:
 3590              		.size	CySysTimerDelayUntilMatch, .-CySysTimerDelayUntilMatch
 3591              		.bss
 3592              	iloTrimTrig.4745:
 3593 0018 00       		.space	1
 3594 0019 000000   		.align	2
 3595              	compensateRunningStatus.4755:
 3596 001c 00000000 		.space	4
 3597              		.align	2
 3598              	trimRunningStatus.4767:
 3599 0020 00000000 		.space	4
 3600              		.align	2
 3601              	lfclkPosedgeEnabledWdtCounter.4941:
 3602 0024 00000000 		.space	4
 3603              		.text
 3604              	.Letext0:
 3605              		.file 3 "Generated_Source\\PSoC4\\cytypes.h"
 3606              		.file 4 "Generated_Source\\PSoC4\\CyLib.h"
 3607              		.section	.debug_info,"",%progbits
 3608              	.Ldebug_info0:
 3609 0000 9F0A0000 		.4byte	0xa9f
 3610 0004 0400     		.2byte	0x4
 3611 0006 00000000 		.4byte	.Ldebug_abbrev0
 3612 000a 04       		.byte	0x4
 3613 000b 01       		.uleb128 0x1
 3614 000c FB070000 		.4byte	.LASF119
 3615 0010 01       		.byte	0x1
 3616 0011 7E060000 		.4byte	.LASF120
 3617 0015 AA030000 		.4byte	.LASF121
 3618 0019 00000000 		.4byte	.Ldebug_ranges0+0
 3619 001d 00000000 		.4byte	0
 3620 0021 00000000 		.4byte	.Ldebug_line0
 3621 0025 02       		.uleb128 0x2
 3622 0026 01       		.byte	0x1
 3623 0027 06       		.byte	0x6
 3624 0028 68010000 		.4byte	.LASF0
 3625 002c 02       		.uleb128 0x2
 3626 002d 01       		.byte	0x1
 3627 002e 08       		.byte	0x8
ARM GAS  C:\Users\akita\AppData\Local\Temp\ccTFmJyh.s 			page 134


 3628 002f D2050000 		.4byte	.LASF1
 3629 0033 02       		.uleb128 0x2
 3630 0034 02       		.byte	0x2
 3631 0035 05       		.byte	0x5
 3632 0036 1C060000 		.4byte	.LASF2
 3633 003a 02       		.uleb128 0x2
 3634 003b 02       		.byte	0x2
 3635 003c 07       		.byte	0x7
 3636 003d DE030000 		.4byte	.LASF3
 3637 0041 02       		.uleb128 0x2
 3638 0042 04       		.byte	0x4
 3639 0043 05       		.byte	0x5
 3640 0044 D2010000 		.4byte	.LASF4
 3641 0048 02       		.uleb128 0x2
 3642 0049 04       		.byte	0x4
 3643 004a 07       		.byte	0x7
 3644 004b 58030000 		.4byte	.LASF5
 3645 004f 02       		.uleb128 0x2
 3646 0050 08       		.byte	0x8
 3647 0051 05       		.byte	0x5
 3648 0052 5A010000 		.4byte	.LASF6
 3649 0056 02       		.uleb128 0x2
 3650 0057 08       		.byte	0x8
 3651 0058 07       		.byte	0x7
 3652 0059 EF000000 		.4byte	.LASF7
 3653 005d 03       		.uleb128 0x3
 3654 005e 04       		.byte	0x4
 3655 005f 05       		.byte	0x5
 3656 0060 696E7400 		.ascii	"int\000"
 3657 0064 02       		.uleb128 0x2
 3658 0065 04       		.byte	0x4
 3659 0066 07       		.byte	0x7
 3660 0067 10030000 		.4byte	.LASF8
 3661 006b 04       		.uleb128 0x4
 3662 006c ED010000 		.4byte	.LASF9
 3663 0070 03       		.byte	0x3
 3664 0071 B901     		.2byte	0x1b9
 3665 0073 2C000000 		.4byte	0x2c
 3666 0077 04       		.uleb128 0x4
 3667 0078 00000000 		.4byte	.LASF10
 3668 007c 03       		.byte	0x3
 3669 007d BA01     		.2byte	0x1ba
 3670 007f 3A000000 		.4byte	0x3a
 3671 0083 04       		.uleb128 0x4
 3672 0084 45020000 		.4byte	.LASF11
 3673 0088 03       		.byte	0x3
 3674 0089 BB01     		.2byte	0x1bb
 3675 008b 48000000 		.4byte	0x48
 3676 008f 04       		.uleb128 0x4
 3677 0090 9A010000 		.4byte	.LASF12
 3678 0094 03       		.byte	0x3
 3679 0095 BE01     		.2byte	0x1be
 3680 0097 41000000 		.4byte	0x41
 3681 009b 02       		.uleb128 0x2
 3682 009c 04       		.byte	0x4
 3683 009d 04       		.byte	0x4
 3684 009e 93050000 		.4byte	.LASF13
ARM GAS  C:\Users\akita\AppData\Local\Temp\ccTFmJyh.s 			page 135


 3685 00a2 02       		.uleb128 0x2
 3686 00a3 08       		.byte	0x8
 3687 00a4 04       		.byte	0x4
 3688 00a5 FA010000 		.4byte	.LASF14
 3689 00a9 02       		.uleb128 0x2
 3690 00aa 01       		.byte	0x1
 3691 00ab 08       		.byte	0x8
 3692 00ac F2060000 		.4byte	.LASF15
 3693 00b0 04       		.uleb128 0x4
 3694 00b1 F2070000 		.4byte	.LASF16
 3695 00b5 03       		.byte	0x3
 3696 00b6 5B02     		.2byte	0x25b
 3697 00b8 48000000 		.4byte	0x48
 3698 00bc 05       		.uleb128 0x5
 3699 00bd 77000000 		.4byte	0x77
 3700 00c1 04       		.uleb128 0x4
 3701 00c2 94040000 		.4byte	.LASF17
 3702 00c6 03       		.byte	0x3
 3703 00c7 6502     		.2byte	0x265
 3704 00c9 CD000000 		.4byte	0xcd
 3705 00cd 05       		.uleb128 0x5
 3706 00ce 83000000 		.4byte	0x83
 3707 00d2 06       		.uleb128 0x6
 3708 00d3 04       		.byte	0x4
 3709 00d4 D8000000 		.4byte	0xd8
 3710 00d8 07       		.uleb128 0x7
 3711 00d9 08       		.uleb128 0x8
 3712 00da 01       		.byte	0x1
 3713 00db 01       		.byte	0x1
 3714 00dc 1B       		.byte	0x1b
 3715 00dd EE000000 		.4byte	0xee
 3716 00e1 09       		.uleb128 0x9
 3717 00e2 26050000 		.4byte	.LASF18
 3718 00e6 00       		.sleb128 0
 3719 00e7 09       		.uleb128 0x9
 3720 00e8 C0080000 		.4byte	.LASF19
 3721 00ec 01       		.sleb128 1
 3722 00ed 00       		.byte	0
 3723 00ee 0A       		.uleb128 0xa
 3724 00ef B1010000 		.4byte	.LASF20
 3725 00f3 01       		.byte	0x1
 3726 00f4 1E       		.byte	0x1e
 3727 00f5 D9000000 		.4byte	0xd9
 3728 00f9 0A       		.uleb128 0xa
 3729 00fa 8C010000 		.4byte	.LASF21
 3730 00fe 01       		.byte	0x1
 3731 00ff 58       		.byte	0x58
 3732 0100 D2000000 		.4byte	0xd2
 3733 0104 02       		.uleb128 0x2
 3734 0105 04       		.byte	0x4
 3735 0106 07       		.byte	0x7
 3736 0107 E8040000 		.4byte	.LASF22
 3737 010b 0B       		.uleb128 0xb
 3738 010c 3E010000 		.4byte	.LASF23
 3739 0110 01       		.byte	0x1
 3740 0111 9002     		.2byte	0x290
 3741 0113 00000000 		.4byte	.LFB0
ARM GAS  C:\Users\akita\AppData\Local\Temp\ccTFmJyh.s 			page 136


 3742 0117 48000000 		.4byte	.LFE0-.LFB0
 3743 011b 01       		.uleb128 0x1
 3744 011c 9C       		.byte	0x9c
 3745 011d 0B       		.uleb128 0xb
 3746 011e 67020000 		.4byte	.LASF24
 3747 0122 01       		.byte	0x1
 3748 0123 A902     		.2byte	0x2a9
 3749 0125 00000000 		.4byte	.LFB1
 3750 0129 48000000 		.4byte	.LFE1-.LFB1
 3751 012d 01       		.uleb128 0x1
 3752 012e 9C       		.byte	0x9c
 3753 012f 0C       		.uleb128 0xc
 3754 0130 4C040000 		.4byte	.LASF29
 3755 0134 02       		.byte	0x2
 3756 0135 53       		.byte	0x53
 3757 0136 00000000 		.4byte	.LFB2
 3758 013a 1C000000 		.4byte	.LFE2-.LFB2
 3759 013e 01       		.uleb128 0x1
 3760 013f 9C       		.byte	0x9c
 3761 0140 0D       		.uleb128 0xd
 3762 0141 13020000 		.4byte	.LASF25
 3763 0145 02       		.byte	0x2
 3764 0146 6C       		.byte	0x6c
 3765 0147 00000000 		.4byte	.LFB3
 3766 014b 60000000 		.4byte	.LFE3-.LFB3
 3767 014f 01       		.uleb128 0x1
 3768 0150 9C       		.byte	0x9c
 3769 0151 64010000 		.4byte	0x164
 3770 0155 0E       		.uleb128 0xe
 3771 0156 7D010000 		.4byte	.LASF27
 3772 015a 02       		.byte	0x2
 3773 015b 6F       		.byte	0x6f
 3774 015c 6B000000 		.4byte	0x6b
 3775 0160 02       		.uleb128 0x2
 3776 0161 91       		.byte	0x91
 3777 0162 6F       		.sleb128 -17
 3778 0163 00       		.byte	0
 3779 0164 0F       		.uleb128 0xf
 3780 0165 B4000000 		.4byte	.LASF26
 3781 0169 02       		.byte	0x2
 3782 016a A8       		.byte	0xa8
 3783 016b 00000000 		.4byte	.LFB4
 3784 016f 6C000000 		.4byte	.LFE4-.LFB4
 3785 0173 01       		.uleb128 0x1
 3786 0174 9C       		.byte	0x9c
 3787 0175 8B010000 		.4byte	0x18b
 3788 0179 0E       		.uleb128 0xe
 3789 017a 27040000 		.4byte	.LASF28
 3790 017e 02       		.byte	0x2
 3791 017f AB       		.byte	0xab
 3792 0180 6B000000 		.4byte	0x6b
 3793 0184 05       		.uleb128 0x5
 3794 0185 03       		.byte	0x3
 3795 0186 18000000 		.4byte	iloTrimTrig.4745
 3796 018a 00       		.byte	0
 3797 018b 0C       		.uleb128 0xc
 3798 018c 4C020000 		.4byte	.LASF30
ARM GAS  C:\Users\akita\AppData\Local\Temp\ccTFmJyh.s 			page 137


 3799 0190 02       		.byte	0x2
 3800 0191 C9       		.byte	0xc9
 3801 0192 00000000 		.4byte	.LFB5
 3802 0196 1C000000 		.4byte	.LFE5-.LFB5
 3803 019a 01       		.uleb128 0x1
 3804 019b 9C       		.byte	0x9c
 3805 019c 10       		.uleb128 0x10
 3806 019d AA080000 		.4byte	.LASF38
 3807 01a1 02       		.byte	0x2
 3808 01a2 0B01     		.2byte	0x10b
 3809 01a4 B0000000 		.4byte	0xb0
 3810 01a8 00000000 		.4byte	.LFB6
 3811 01ac 5C010000 		.4byte	.LFE6-.LFB6
 3812 01b0 01       		.uleb128 0x1
 3813 01b1 9C       		.byte	0x9c
 3814 01b2 23020000 		.4byte	0x223
 3815 01b6 11       		.uleb128 0x11
 3816 01b7 4B030000 		.4byte	.LASF31
 3817 01bb 02       		.byte	0x2
 3818 01bc 0B01     		.2byte	0x10b
 3819 01be 83000000 		.4byte	0x83
 3820 01c2 02       		.uleb128 0x2
 3821 01c3 91       		.byte	0x91
 3822 01c4 5C       		.sleb128 -36
 3823 01c5 11       		.uleb128 0x11
 3824 01c6 01020000 		.4byte	.LASF32
 3825 01ca 02       		.byte	0x2
 3826 01cb 0B01     		.2byte	0x10b
 3827 01cd 23020000 		.4byte	0x223
 3828 01d1 02       		.uleb128 0x2
 3829 01d2 91       		.byte	0x91
 3830 01d3 58       		.sleb128 -40
 3831 01d4 12       		.uleb128 0x12
 3832 01d5 23020000 		.4byte	.LASF33
 3833 01d9 02       		.byte	0x2
 3834 01da 0D01     		.2byte	0x10d
 3835 01dc 83000000 		.4byte	0x83
 3836 01e0 02       		.uleb128 0x2
 3837 01e1 91       		.byte	0x91
 3838 01e2 6C       		.sleb128 -20
 3839 01e3 12       		.uleb128 0x12
 3840 01e4 88070000 		.4byte	.LASF34
 3841 01e8 02       		.byte	0x2
 3842 01e9 0E01     		.2byte	0x10e
 3843 01eb 83000000 		.4byte	0x83
 3844 01ef 02       		.uleb128 0x2
 3845 01f0 91       		.byte	0x91
 3846 01f1 60       		.sleb128 -32
 3847 01f2 12       		.uleb128 0x12
 3848 01f3 E0050000 		.4byte	.LASF35
 3849 01f7 02       		.byte	0x2
 3850 01f8 0F01     		.2byte	0x10f
 3851 01fa 83000000 		.4byte	0x83
 3852 01fe 05       		.uleb128 0x5
 3853 01ff 03       		.byte	0x3
 3854 0200 1C000000 		.4byte	compensateRunningStatus.4755
 3855 0204 12       		.uleb128 0x12
ARM GAS  C:\Users\akita\AppData\Local\Temp\ccTFmJyh.s 			page 138


 3856 0205 38050000 		.4byte	.LASF36
 3857 0209 02       		.byte	0x2
 3858 020a 1001     		.2byte	0x110
 3859 020c 83000000 		.4byte	0x83
 3860 0210 02       		.uleb128 0x2
 3861 0211 91       		.byte	0x91
 3862 0212 64       		.sleb128 -28
 3863 0213 12       		.uleb128 0x12
 3864 0214 BA040000 		.4byte	.LASF37
 3865 0218 02       		.byte	0x2
 3866 0219 1101     		.2byte	0x111
 3867 021b B0000000 		.4byte	0xb0
 3868 021f 02       		.uleb128 0x2
 3869 0220 91       		.byte	0x91
 3870 0221 68       		.sleb128 -24
 3871 0222 00       		.byte	0
 3872 0223 06       		.uleb128 0x6
 3873 0224 04       		.byte	0x4
 3874 0225 83000000 		.4byte	0x83
 3875 0229 13       		.uleb128 0x13
 3876 022a 50060000 		.4byte	.LASF62
 3877 022e 02       		.byte	0x2
 3878 022f 7201     		.2byte	0x172
 3879 0231 83000000 		.4byte	0x83
 3880 0235 00000000 		.4byte	.LFB7
 3881 0239 1C000000 		.4byte	.LFE7-.LFB7
 3882 023d 01       		.uleb128 0x1
 3883 023e 9C       		.byte	0x9c
 3884 023f 10       		.uleb128 0x10
 3885 0240 40060000 		.4byte	.LASF39
 3886 0244 02       		.byte	0x2
 3887 0245 C101     		.2byte	0x1c1
 3888 0247 B0000000 		.4byte	0xb0
 3889 024b 00000000 		.4byte	.LFB8
 3890 024f 24010000 		.4byte	.LFE8-.LFB8
 3891 0253 01       		.uleb128 0x1
 3892 0254 9C       		.byte	0x9c
 3893 0255 C6020000 		.4byte	0x2c6
 3894 0259 11       		.uleb128 0x11
 3895 025a F7060000 		.4byte	.LASF40
 3896 025e 02       		.byte	0x2
 3897 025f C101     		.2byte	0x1c1
 3898 0261 83000000 		.4byte	0x83
 3899 0265 02       		.uleb128 0x2
 3900 0266 91       		.byte	0x91
 3901 0267 64       		.sleb128 -28
 3902 0268 11       		.uleb128 0x11
 3903 0269 9F060000 		.4byte	.LASF41
 3904 026d 02       		.byte	0x2
 3905 026e C101     		.2byte	0x1c1
 3906 0270 C6020000 		.4byte	0x2c6
 3907 0274 02       		.uleb128 0x2
 3908 0275 91       		.byte	0x91
 3909 0276 60       		.sleb128 -32
 3910 0277 12       		.uleb128 0x12
 3911 0278 58070000 		.4byte	.LASF42
 3912 027c 02       		.byte	0x2
ARM GAS  C:\Users\akita\AppData\Local\Temp\ccTFmJyh.s 			page 139


 3913 027d C301     		.2byte	0x1c3
 3914 027f 83000000 		.4byte	0x83
 3915 0283 02       		.uleb128 0x2
 3916 0284 91       		.byte	0x91
 3917 0285 74       		.sleb128 -12
 3918 0286 12       		.uleb128 0x12
 3919 0287 68050000 		.4byte	.LASF43
 3920 028b 02       		.byte	0x2
 3921 028c C401     		.2byte	0x1c4
 3922 028e 83000000 		.4byte	0x83
 3923 0292 02       		.uleb128 0x2
 3924 0293 91       		.byte	0x91
 3925 0294 70       		.sleb128 -16
 3926 0295 12       		.uleb128 0x12
 3927 0296 66070000 		.4byte	.LASF44
 3928 029a 02       		.byte	0x2
 3929 029b C501     		.2byte	0x1c5
 3930 029d 83000000 		.4byte	0x83
 3931 02a1 05       		.uleb128 0x5
 3932 02a2 03       		.byte	0x3
 3933 02a3 20000000 		.4byte	trimRunningStatus.4767
 3934 02a7 12       		.uleb128 0x12
 3935 02a8 38050000 		.4byte	.LASF36
 3936 02ac 02       		.byte	0x2
 3937 02ad C601     		.2byte	0x1c6
 3938 02af 83000000 		.4byte	0x83
 3939 02b3 02       		.uleb128 0x2
 3940 02b4 91       		.byte	0x91
 3941 02b5 68       		.sleb128 -24
 3942 02b6 12       		.uleb128 0x12
 3943 02b7 BA040000 		.4byte	.LASF37
 3944 02bb 02       		.byte	0x2
 3945 02bc C701     		.2byte	0x1c7
 3946 02be B0000000 		.4byte	0xb0
 3947 02c2 02       		.uleb128 0x2
 3948 02c3 91       		.byte	0x91
 3949 02c4 6C       		.sleb128 -20
 3950 02c5 00       		.byte	0
 3951 02c6 06       		.uleb128 0x6
 3952 02c7 04       		.byte	0x4
 3953 02c8 8F000000 		.4byte	0x8f
 3954 02cc 10       		.uleb128 0x10
 3955 02cd 33040000 		.4byte	.LASF45
 3956 02d1 02       		.byte	0x2
 3957 02d2 3B02     		.2byte	0x23b
 3958 02d4 B0000000 		.4byte	0xb0
 3959 02d8 00000000 		.4byte	.LFB9
 3960 02dc FC000000 		.4byte	.LFE9-.LFB9
 3961 02e0 01       		.uleb128 0x1
 3962 02e1 9C       		.byte	0x9c
 3963 02e2 41030000 		.4byte	0x341
 3964 02e6 11       		.uleb128 0x11
 3965 02e7 9F060000 		.4byte	.LASF41
 3966 02eb 02       		.byte	0x2
 3967 02ec 3B02     		.2byte	0x23b
 3968 02ee C6020000 		.4byte	0x2c6
 3969 02f2 02       		.uleb128 0x2
ARM GAS  C:\Users\akita\AppData\Local\Temp\ccTFmJyh.s 			page 140


 3970 02f3 91       		.byte	0x91
 3971 02f4 5C       		.sleb128 -36
 3972 02f5 12       		.uleb128 0x12
 3973 02f6 55000000 		.4byte	.LASF46
 3974 02fa 02       		.byte	0x2
 3975 02fb 3D02     		.2byte	0x23d
 3976 02fd 83000000 		.4byte	0x83
 3977 0301 02       		.uleb128 0x2
 3978 0302 91       		.byte	0x91
 3979 0303 6C       		.sleb128 -20
 3980 0304 12       		.uleb128 0x12
 3981 0305 06010000 		.4byte	.LASF47
 3982 0309 02       		.byte	0x2
 3983 030a 3E02     		.2byte	0x23e
 3984 030c 83000000 		.4byte	0x83
 3985 0310 02       		.uleb128 0x2
 3986 0311 91       		.byte	0x91
 3987 0312 64       		.sleb128 -28
 3988 0313 12       		.uleb128 0x12
 3989 0314 A0010000 		.4byte	.LASF48
 3990 0318 02       		.byte	0x2
 3991 0319 3F02     		.2byte	0x23f
 3992 031b 8F000000 		.4byte	0x8f
 3993 031f 02       		.uleb128 0x2
 3994 0320 91       		.byte	0x91
 3995 0321 68       		.sleb128 -24
 3996 0322 12       		.uleb128 0x12
 3997 0323 D5030000 		.4byte	.LASF49
 3998 0327 02       		.byte	0x2
 3999 0328 4002     		.2byte	0x240
 4000 032a 8F000000 		.4byte	0x8f
 4001 032e 02       		.uleb128 0x2
 4002 032f 91       		.byte	0x91
 4003 0330 74       		.sleb128 -12
 4004 0331 12       		.uleb128 0x12
 4005 0332 2D010000 		.4byte	.LASF50
 4006 0336 02       		.byte	0x2
 4007 0337 4102     		.2byte	0x241
 4008 0339 B0000000 		.4byte	0xb0
 4009 033d 02       		.uleb128 0x2
 4010 033e 91       		.byte	0x91
 4011 033f 70       		.sleb128 -16
 4012 0340 00       		.byte	0
 4013 0341 14       		.uleb128 0x14
 4014 0342 08050000 		.4byte	.LASF51
 4015 0346 02       		.byte	0x2
 4016 0347 8802     		.2byte	0x288
 4017 0349 B0000000 		.4byte	0xb0
 4018 034d 00000000 		.4byte	.LFB10
 4019 0351 4C000000 		.4byte	.LFE10-.LFB10
 4020 0355 01       		.uleb128 0x1
 4021 0356 9C       		.byte	0x9c
 4022 0357 6B030000 		.4byte	0x36b
 4023 035b 12       		.uleb128 0x12
 4024 035c BA040000 		.4byte	.LASF37
 4025 0360 02       		.byte	0x2
 4026 0361 8A02     		.2byte	0x28a
ARM GAS  C:\Users\akita\AppData\Local\Temp\ccTFmJyh.s 			page 141


 4027 0363 B0000000 		.4byte	0xb0
 4028 0367 02       		.uleb128 0x2
 4029 0368 91       		.byte	0x91
 4030 0369 74       		.sleb128 -12
 4031 036a 00       		.byte	0
 4032 036b 15       		.uleb128 0x15
 4033 036c 9D000000 		.4byte	.LASF122
 4034 0370 02       		.byte	0x2
 4035 0371 AD02     		.2byte	0x2ad
 4036 0373 83000000 		.4byte	0x83
 4037 0377 00000000 		.4byte	.LFB11
 4038 037b 20000000 		.4byte	.LFE11-.LFB11
 4039 037f 01       		.uleb128 0x1
 4040 0380 9C       		.byte	0x9c
 4041 0381 95030000 		.4byte	0x395
 4042 0385 12       		.uleb128 0x12
 4043 0386 07000000 		.4byte	.LASF52
 4044 038a 02       		.byte	0x2
 4045 038b AF02     		.2byte	0x2af
 4046 038d 83000000 		.4byte	0x83
 4047 0391 02       		.uleb128 0x2
 4048 0392 91       		.byte	0x91
 4049 0393 74       		.sleb128 -12
 4050 0394 00       		.byte	0
 4051 0395 16       		.uleb128 0x16
 4052 0396 1D030000 		.4byte	.LASF53
 4053 039a 02       		.byte	0x2
 4054 039b DE02     		.2byte	0x2de
 4055 039d 00000000 		.4byte	.LFB12
 4056 03a1 54000000 		.4byte	.LFE12-.LFB12
 4057 03a5 01       		.uleb128 0x1
 4058 03a6 9C       		.byte	0x9c
 4059 03a7 CA030000 		.4byte	0x3ca
 4060 03ab 11       		.uleb128 0x11
 4061 03ac C7040000 		.4byte	.LASF54
 4062 03b0 02       		.byte	0x2
 4063 03b1 DE02     		.2byte	0x2de
 4064 03b3 83000000 		.4byte	0x83
 4065 03b7 02       		.uleb128 0x2
 4066 03b8 91       		.byte	0x91
 4067 03b9 64       		.sleb128 -28
 4068 03ba 12       		.uleb128 0x12
 4069 03bb 7D010000 		.4byte	.LASF27
 4070 03bf 02       		.byte	0x2
 4071 03c0 E002     		.2byte	0x2e0
 4072 03c2 6B000000 		.4byte	0x6b
 4073 03c6 02       		.uleb128 0x2
 4074 03c7 91       		.byte	0x91
 4075 03c8 6F       		.sleb128 -17
 4076 03c9 00       		.byte	0
 4077 03ca 17       		.uleb128 0x17
 4078 03cb 9D070000 		.4byte	.LASF55
 4079 03cf 02       		.byte	0x2
 4080 03d0 0303     		.2byte	0x303
 4081 03d2 00000000 		.4byte	.LFB13
 4082 03d6 20000000 		.4byte	.LFE13-.LFB13
 4083 03da 01       		.uleb128 0x1
ARM GAS  C:\Users\akita\AppData\Local\Temp\ccTFmJyh.s 			page 142


 4084 03db 9C       		.byte	0x9c
 4085 03dc 16       		.uleb128 0x16
 4086 03dd B0060000 		.4byte	.LASF56
 4087 03e1 02       		.byte	0x2
 4088 03e2 1503     		.2byte	0x315
 4089 03e4 00000000 		.4byte	.LFB14
 4090 03e8 5C000000 		.4byte	.LFE14-.LFB14
 4091 03ec 01       		.uleb128 0x1
 4092 03ed 9C       		.byte	0x9c
 4093 03ee 02040000 		.4byte	0x402
 4094 03f2 12       		.uleb128 0x12
 4095 03f3 7D010000 		.4byte	.LASF27
 4096 03f7 02       		.byte	0x2
 4097 03f8 1803     		.2byte	0x318
 4098 03fa 6B000000 		.4byte	0x6b
 4099 03fe 02       		.uleb128 0x2
 4100 03ff 91       		.byte	0x91
 4101 0400 6F       		.sleb128 -17
 4102 0401 00       		.byte	0
 4103 0402 18       		.uleb128 0x18
 4104 0403 1A010000 		.4byte	.LASF79
 4105 0407 02       		.byte	0x2
 4106 0408 3803     		.2byte	0x338
 4107 040a 83000000 		.4byte	0x83
 4108 040e 00000000 		.4byte	.LFB15
 4109 0412 1C000000 		.4byte	.LFE15-.LFB15
 4110 0416 01       		.uleb128 0x1
 4111 0417 9C       		.byte	0x9c
 4112 0418 10       		.uleb128 0x10
 4113 0419 C0060000 		.4byte	.LASF57
 4114 041d 02       		.byte	0x2
 4115 041e 5303     		.2byte	0x353
 4116 0420 83000000 		.4byte	0x83
 4117 0424 00000000 		.4byte	.LFB16
 4118 0428 40000000 		.4byte	.LFE16-.LFB16
 4119 042c 01       		.uleb128 0x1
 4120 042d 9C       		.byte	0x9c
 4121 042e 51040000 		.4byte	0x451
 4122 0432 11       		.uleb128 0x11
 4123 0433 F7060000 		.4byte	.LASF40
 4124 0437 02       		.byte	0x2
 4125 0438 5303     		.2byte	0x353
 4126 043a 83000000 		.4byte	0x83
 4127 043e 02       		.uleb128 0x2
 4128 043f 91       		.byte	0x91
 4129 0440 6C       		.sleb128 -20
 4130 0441 12       		.uleb128 0x12
 4131 0442 72040000 		.4byte	.LASF58
 4132 0446 02       		.byte	0x2
 4133 0447 5503     		.2byte	0x355
 4134 0449 83000000 		.4byte	0x83
 4135 044d 02       		.uleb128 0x2
 4136 044e 91       		.byte	0x91
 4137 044f 74       		.sleb128 -12
 4138 0450 00       		.byte	0
 4139 0451 16       		.uleb128 0x16
 4140 0452 CE040000 		.4byte	.LASF59
ARM GAS  C:\Users\akita\AppData\Local\Temp\ccTFmJyh.s 			page 143


 4141 0456 02       		.byte	0x2
 4142 0457 9603     		.2byte	0x396
 4143 0459 00000000 		.4byte	.LFB17
 4144 045d 3C000000 		.4byte	.LFE17-.LFB17
 4145 0461 01       		.uleb128 0x1
 4146 0462 9C       		.byte	0x9c
 4147 0463 77040000 		.4byte	0x477
 4148 0467 11       		.uleb128 0x11
 4149 0468 E4010000 		.4byte	.LASF60
 4150 046c 02       		.byte	0x2
 4151 046d 9603     		.2byte	0x396
 4152 046f 83000000 		.4byte	0x83
 4153 0473 02       		.uleb128 0x2
 4154 0474 91       		.byte	0x91
 4155 0475 74       		.sleb128 -12
 4156 0476 00       		.byte	0
 4157 0477 16       		.uleb128 0x16
 4158 0478 0D070000 		.4byte	.LASF61
 4159 047c 02       		.byte	0x2
 4160 047d B403     		.2byte	0x3b4
 4161 047f 00000000 		.4byte	.LFB18
 4162 0483 34000000 		.4byte	.LFE18-.LFB18
 4163 0487 01       		.uleb128 0x1
 4164 0488 9C       		.byte	0x9c
 4165 0489 9D040000 		.4byte	0x49d
 4166 048d 12       		.uleb128 0x12
 4167 048e 7D010000 		.4byte	.LASF27
 4168 0492 02       		.byte	0x2
 4169 0493 B603     		.2byte	0x3b6
 4170 0495 6B000000 		.4byte	0x6b
 4171 0499 02       		.uleb128 0x2
 4172 049a 91       		.byte	0x91
 4173 049b 6F       		.sleb128 -17
 4174 049c 00       		.byte	0
 4175 049d 13       		.uleb128 0x13
 4176 049e C3050000 		.4byte	.LASF63
 4177 04a2 02       		.byte	0x2
 4178 04a3 C903     		.2byte	0x3c9
 4179 04a5 83000000 		.4byte	0x83
 4180 04a9 00000000 		.4byte	.LFB19
 4181 04ad 20000000 		.4byte	.LFE19-.LFB19
 4182 04b1 01       		.uleb128 0x1
 4183 04b2 9C       		.byte	0x9c
 4184 04b3 16       		.uleb128 0x16
 4185 04b4 46000000 		.4byte	.LASF64
 4186 04b8 02       		.byte	0x2
 4187 04b9 D703     		.2byte	0x3d7
 4188 04bb 00000000 		.4byte	.LFB20
 4189 04bf 4C000000 		.4byte	.LFE20-.LFB20
 4190 04c3 01       		.uleb128 0x1
 4191 04c4 9C       		.byte	0x9c
 4192 04c5 D9040000 		.4byte	0x4d9
 4193 04c9 12       		.uleb128 0x12
 4194 04ca 7D010000 		.4byte	.LASF27
 4195 04ce 02       		.byte	0x2
 4196 04cf D903     		.2byte	0x3d9
 4197 04d1 6B000000 		.4byte	0x6b
ARM GAS  C:\Users\akita\AppData\Local\Temp\ccTFmJyh.s 			page 144


 4198 04d5 02       		.uleb128 0x2
 4199 04d6 91       		.byte	0x91
 4200 04d7 6F       		.sleb128 -17
 4201 04d8 00       		.byte	0
 4202 04d9 10       		.uleb128 0x10
 4203 04da F1030000 		.4byte	.LASF65
 4204 04de 02       		.byte	0x2
 4205 04df F903     		.2byte	0x3f9
 4206 04e1 83000000 		.4byte	0x83
 4207 04e5 00000000 		.4byte	.LFB21
 4208 04e9 30000000 		.4byte	.LFE21-.LFB21
 4209 04ed 01       		.uleb128 0x1
 4210 04ee 9C       		.byte	0x9c
 4211 04ef 03050000 		.4byte	0x503
 4212 04f3 11       		.uleb128 0x11
 4213 04f4 65000000 		.4byte	.LASF66
 4214 04f8 02       		.byte	0x2
 4215 04f9 F903     		.2byte	0x3f9
 4216 04fb 83000000 		.4byte	0x83
 4217 04ff 02       		.uleb128 0x2
 4218 0500 91       		.byte	0x91
 4219 0501 74       		.sleb128 -12
 4220 0502 00       		.byte	0
 4221 0503 16       		.uleb128 0x16
 4222 0504 36000000 		.4byte	.LASF67
 4223 0508 02       		.byte	0x2
 4224 0509 1704     		.2byte	0x417
 4225 050b 00000000 		.4byte	.LFB22
 4226 050f 58000000 		.4byte	.LFE22-.LFB22
 4227 0513 01       		.uleb128 0x1
 4228 0514 9C       		.byte	0x9c
 4229 0515 47050000 		.4byte	0x547
 4230 0519 11       		.uleb128 0x11
 4231 051a 65000000 		.4byte	.LASF66
 4232 051e 02       		.byte	0x2
 4233 051f 1704     		.2byte	0x417
 4234 0521 83000000 		.4byte	0x83
 4235 0525 02       		.uleb128 0x2
 4236 0526 91       		.byte	0x91
 4237 0527 6C       		.sleb128 -20
 4238 0528 11       		.uleb128 0x11
 4239 0529 F7060000 		.4byte	.LASF40
 4240 052d 02       		.byte	0x2
 4241 052e 1704     		.2byte	0x417
 4242 0530 83000000 		.4byte	0x83
 4243 0534 02       		.uleb128 0x2
 4244 0535 91       		.byte	0x91
 4245 0536 68       		.sleb128 -24
 4246 0537 12       		.uleb128 0x12
 4247 0538 BB070000 		.4byte	.LASF68
 4248 053c 02       		.byte	0x2
 4249 053d 1904     		.2byte	0x419
 4250 053f 83000000 		.4byte	0x83
 4251 0543 02       		.uleb128 0x2
 4252 0544 91       		.byte	0x91
 4253 0545 74       		.sleb128 -12
 4254 0546 00       		.byte	0
ARM GAS  C:\Users\akita\AppData\Local\Temp\ccTFmJyh.s 			page 145


 4255 0547 14       		.uleb128 0x14
 4256 0548 78070000 		.4byte	.LASF69
 4257 054c 02       		.byte	0x2
 4258 054d 3304     		.2byte	0x433
 4259 054f 83000000 		.4byte	0x83
 4260 0553 00000000 		.4byte	.LFB23
 4261 0557 24000000 		.4byte	.LFE23-.LFB23
 4262 055b 01       		.uleb128 0x1
 4263 055c 9C       		.byte	0x9c
 4264 055d 71050000 		.4byte	0x571
 4265 0561 11       		.uleb128 0x11
 4266 0562 65000000 		.4byte	.LASF66
 4267 0566 02       		.byte	0x2
 4268 0567 3304     		.2byte	0x433
 4269 0569 83000000 		.4byte	0x83
 4270 056d 02       		.uleb128 0x2
 4271 056e 91       		.byte	0x91
 4272 056f 74       		.sleb128 -12
 4273 0570 00       		.byte	0
 4274 0571 16       		.uleb128 0x16
 4275 0572 2D070000 		.4byte	.LASF70
 4276 0576 02       		.byte	0x2
 4277 0577 5004     		.2byte	0x450
 4278 0579 00000000 		.4byte	.LFB24
 4279 057d 6C000000 		.4byte	.LFE24-.LFB24
 4280 0581 01       		.uleb128 0x1
 4281 0582 9C       		.byte	0x9c
 4282 0583 B5050000 		.4byte	0x5b5
 4283 0587 11       		.uleb128 0x11
 4284 0588 65000000 		.4byte	.LASF66
 4285 058c 02       		.byte	0x2
 4286 058d 5004     		.2byte	0x450
 4287 058f 83000000 		.4byte	0x83
 4288 0593 02       		.uleb128 0x2
 4289 0594 91       		.byte	0x91
 4290 0595 6C       		.sleb128 -20
 4291 0596 11       		.uleb128 0x11
 4292 0597 F3010000 		.4byte	.LASF71
 4293 059b 02       		.byte	0x2
 4294 059c 5004     		.2byte	0x450
 4295 059e 83000000 		.4byte	0x83
 4296 05a2 02       		.uleb128 0x2
 4297 05a3 91       		.byte	0x91
 4298 05a4 68       		.sleb128 -24
 4299 05a5 12       		.uleb128 0x12
 4300 05a6 BB070000 		.4byte	.LASF68
 4301 05aa 02       		.byte	0x2
 4302 05ab 5204     		.2byte	0x452
 4303 05ad 83000000 		.4byte	0x83
 4304 05b1 02       		.uleb128 0x2
 4305 05b2 91       		.byte	0x91
 4306 05b3 74       		.sleb128 -12
 4307 05b4 00       		.byte	0
 4308 05b5 10       		.uleb128 0x10
 4309 05b6 F8020000 		.4byte	.LASF72
 4310 05ba 02       		.byte	0x2
 4311 05bb 7104     		.2byte	0x471
ARM GAS  C:\Users\akita\AppData\Local\Temp\ccTFmJyh.s 			page 146


 4312 05bd 83000000 		.4byte	0x83
 4313 05c1 00000000 		.4byte	.LFB25
 4314 05c5 40000000 		.4byte	.LFE25-.LFB25
 4315 05c9 01       		.uleb128 0x1
 4316 05ca 9C       		.byte	0x9c
 4317 05cb DF050000 		.4byte	0x5df
 4318 05cf 11       		.uleb128 0x11
 4319 05d0 65000000 		.4byte	.LASF66
 4320 05d4 02       		.byte	0x2
 4321 05d5 7104     		.2byte	0x471
 4322 05d7 83000000 		.4byte	0x83
 4323 05db 02       		.uleb128 0x2
 4324 05dc 91       		.byte	0x91
 4325 05dd 74       		.sleb128 -12
 4326 05de 00       		.byte	0
 4327 05df 16       		.uleb128 0x16
 4328 05e0 C0020000 		.4byte	.LASF73
 4329 05e4 02       		.byte	0x2
 4330 05e5 9A04     		.2byte	0x49a
 4331 05e7 00000000 		.4byte	.LFB26
 4332 05eb 60000000 		.4byte	.LFE26-.LFB26
 4333 05ef 01       		.uleb128 0x1
 4334 05f0 9C       		.byte	0x9c
 4335 05f1 05060000 		.4byte	0x605
 4336 05f5 11       		.uleb128 0x11
 4337 05f6 EC020000 		.4byte	.LASF74
 4338 05fa 02       		.byte	0x2
 4339 05fb 9A04     		.2byte	0x49a
 4340 05fd 83000000 		.4byte	0x83
 4341 0601 02       		.uleb128 0x2
 4342 0602 91       		.byte	0x91
 4343 0603 74       		.sleb128 -12
 4344 0604 00       		.byte	0
 4345 0605 16       		.uleb128 0x16
 4346 0606 30060000 		.4byte	.LASF75
 4347 060a 02       		.byte	0x2
 4348 060b CA04     		.2byte	0x4ca
 4349 060d 00000000 		.4byte	.LFB27
 4350 0611 68000000 		.4byte	.LFE27-.LFB27
 4351 0615 01       		.uleb128 0x1
 4352 0616 9C       		.byte	0x9c
 4353 0617 2B060000 		.4byte	0x62b
 4354 061b 11       		.uleb128 0x11
 4355 061c EC020000 		.4byte	.LASF74
 4356 0620 02       		.byte	0x2
 4357 0621 CA04     		.2byte	0x4ca
 4358 0623 83000000 		.4byte	0x83
 4359 0627 02       		.uleb128 0x2
 4360 0628 91       		.byte	0x91
 4361 0629 74       		.sleb128 -12
 4362 062a 00       		.byte	0
 4363 062b 16       		.uleb128 0x16
 4364 062c 45070000 		.4byte	.LASF76
 4365 0630 02       		.byte	0x2
 4366 0631 0505     		.2byte	0x505
 4367 0633 00000000 		.4byte	.LFB28
 4368 0637 58000000 		.4byte	.LFE28-.LFB28
ARM GAS  C:\Users\akita\AppData\Local\Temp\ccTFmJyh.s 			page 147


 4369 063b 01       		.uleb128 0x1
 4370 063c 9C       		.byte	0x9c
 4371 063d 6F060000 		.4byte	0x66f
 4372 0641 11       		.uleb128 0x11
 4373 0642 E6070000 		.4byte	.LASF77
 4374 0646 02       		.byte	0x2
 4375 0647 0505     		.2byte	0x505
 4376 0649 83000000 		.4byte	0x83
 4377 064d 02       		.uleb128 0x2
 4378 064e 91       		.byte	0x91
 4379 064f 64       		.sleb128 -28
 4380 0650 12       		.uleb128 0x12
 4381 0651 BB070000 		.4byte	.LASF68
 4382 0655 02       		.byte	0x2
 4383 0656 0705     		.2byte	0x507
 4384 0658 83000000 		.4byte	0x83
 4385 065c 02       		.uleb128 0x2
 4386 065d 91       		.byte	0x91
 4387 065e 68       		.sleb128 -24
 4388 065f 12       		.uleb128 0x12
 4389 0660 A0020000 		.4byte	.LASF78
 4390 0664 02       		.byte	0x2
 4391 0665 0805     		.2byte	0x508
 4392 0667 83000000 		.4byte	0x83
 4393 066b 02       		.uleb128 0x2
 4394 066c 91       		.byte	0x91
 4395 066d 6C       		.sleb128 -20
 4396 066e 00       		.byte	0
 4397 066f 18       		.uleb128 0x18
 4398 0670 8A000000 		.4byte	.LASF80
 4399 0674 02       		.byte	0x2
 4400 0675 2405     		.2byte	0x524
 4401 0677 83000000 		.4byte	0x83
 4402 067b 00000000 		.4byte	.LFB29
 4403 067f 1C000000 		.4byte	.LFE29-.LFB29
 4404 0683 01       		.uleb128 0x1
 4405 0684 9C       		.byte	0x9c
 4406 0685 16       		.uleb128 0x16
 4407 0686 8F020000 		.4byte	.LASF81
 4408 068a 02       		.byte	0x2
 4409 068b 3805     		.2byte	0x538
 4410 068d 00000000 		.4byte	.LFB30
 4411 0691 90000000 		.4byte	.LFE30-.LFB30
 4412 0695 01       		.uleb128 0x1
 4413 0696 9C       		.byte	0x9c
 4414 0697 C9060000 		.4byte	0x6c9
 4415 069b 11       		.uleb128 0x11
 4416 069c 65000000 		.4byte	.LASF66
 4417 06a0 02       		.byte	0x2
 4418 06a1 3805     		.2byte	0x538
 4419 06a3 83000000 		.4byte	0x83
 4420 06a7 02       		.uleb128 0x2
 4421 06a8 91       		.byte	0x91
 4422 06a9 6C       		.sleb128 -20
 4423 06aa 11       		.uleb128 0x11
 4424 06ab 02050000 		.4byte	.LASF82
 4425 06af 02       		.byte	0x2
ARM GAS  C:\Users\akita\AppData\Local\Temp\ccTFmJyh.s 			page 148


 4426 06b0 3805     		.2byte	0x538
 4427 06b2 83000000 		.4byte	0x83
 4428 06b6 02       		.uleb128 0x2
 4429 06b7 91       		.byte	0x91
 4430 06b8 68       		.sleb128 -24
 4431 06b9 12       		.uleb128 0x12
 4432 06ba DB010000 		.4byte	.LASF83
 4433 06be 02       		.byte	0x2
 4434 06bf 3A05     		.2byte	0x53a
 4435 06c1 83000000 		.4byte	0x83
 4436 06c5 02       		.uleb128 0x2
 4437 06c6 91       		.byte	0x91
 4438 06c7 74       		.sleb128 -12
 4439 06c8 00       		.byte	0
 4440 06c9 16       		.uleb128 0x16
 4441 06ca 5D040000 		.4byte	.LASF84
 4442 06ce 02       		.byte	0x2
 4443 06cf 5F05     		.2byte	0x55f
 4444 06d1 00000000 		.4byte	.LFB31
 4445 06d5 44000000 		.4byte	.LFE31-.LFB31
 4446 06d9 01       		.uleb128 0x1
 4447 06da 9C       		.byte	0x9c
 4448 06db FE060000 		.4byte	0x6fe
 4449 06df 11       		.uleb128 0x11
 4450 06e0 CD010000 		.4byte	.LASF85
 4451 06e4 02       		.byte	0x2
 4452 06e5 5F05     		.2byte	0x55f
 4453 06e7 83000000 		.4byte	0x83
 4454 06eb 02       		.uleb128 0x2
 4455 06ec 91       		.byte	0x91
 4456 06ed 6C       		.sleb128 -20
 4457 06ee 12       		.uleb128 0x12
 4458 06ef BB070000 		.4byte	.LASF68
 4459 06f3 02       		.byte	0x2
 4460 06f4 6105     		.2byte	0x561
 4461 06f6 83000000 		.4byte	0x83
 4462 06fa 02       		.uleb128 0x2
 4463 06fb 91       		.byte	0x91
 4464 06fc 74       		.sleb128 -12
 4465 06fd 00       		.byte	0
 4466 06fe 18       		.uleb128 0x18
 4467 06ff 95080000 		.4byte	.LASF86
 4468 0703 02       		.byte	0x2
 4469 0704 7605     		.2byte	0x576
 4470 0706 83000000 		.4byte	0x83
 4471 070a 00000000 		.4byte	.LFB32
 4472 070e 18000000 		.4byte	.LFE32-.LFB32
 4473 0712 01       		.uleb128 0x1
 4474 0713 9C       		.byte	0x9c
 4475 0714 10       		.uleb128 0x10
 4476 0715 F1040000 		.4byte	.LASF87
 4477 0719 02       		.byte	0x2
 4478 071a 8805     		.2byte	0x588
 4479 071c 83000000 		.4byte	0x83
 4480 0720 00000000 		.4byte	.LFB33
 4481 0724 40000000 		.4byte	.LFE33-.LFB33
 4482 0728 01       		.uleb128 0x1
ARM GAS  C:\Users\akita\AppData\Local\Temp\ccTFmJyh.s 			page 149


 4483 0729 9C       		.byte	0x9c
 4484 072a 3E070000 		.4byte	0x73e
 4485 072e 11       		.uleb128 0x11
 4486 072f 65000000 		.4byte	.LASF66
 4487 0733 02       		.byte	0x2
 4488 0734 8805     		.2byte	0x588
 4489 0736 83000000 		.4byte	0x83
 4490 073a 02       		.uleb128 0x2
 4491 073b 91       		.byte	0x91
 4492 073c 74       		.sleb128 -12
 4493 073d 00       		.byte	0
 4494 073e 10       		.uleb128 0x10
 4495 073f FC060000 		.4byte	.LASF88
 4496 0743 02       		.byte	0x2
 4497 0744 9E05     		.2byte	0x59e
 4498 0746 83000000 		.4byte	0x83
 4499 074a 00000000 		.4byte	.LFB34
 4500 074e 54000000 		.4byte	.LFE34-.LFB34
 4501 0752 01       		.uleb128 0x1
 4502 0753 9C       		.byte	0x9c
 4503 0754 77070000 		.4byte	0x777
 4504 0758 11       		.uleb128 0x11
 4505 0759 65000000 		.4byte	.LASF66
 4506 075d 02       		.byte	0x2
 4507 075e 9E05     		.2byte	0x59e
 4508 0760 83000000 		.4byte	0x83
 4509 0764 02       		.uleb128 0x2
 4510 0765 91       		.byte	0x91
 4511 0766 6C       		.sleb128 -20
 4512 0767 12       		.uleb128 0x12
 4513 0768 DB010000 		.4byte	.LASF83
 4514 076c 02       		.byte	0x2
 4515 076d A005     		.2byte	0x5a0
 4516 076f 83000000 		.4byte	0x83
 4517 0773 02       		.uleb128 0x2
 4518 0774 91       		.byte	0x91
 4519 0775 74       		.sleb128 -12
 4520 0776 00       		.byte	0
 4521 0777 18       		.uleb128 0x18
 4522 0778 63060000 		.4byte	.LASF89
 4523 077c 02       		.byte	0x2
 4524 077d C905     		.2byte	0x5c9
 4525 077f 83000000 		.4byte	0x83
 4526 0783 00000000 		.4byte	.LFB35
 4527 0787 1C000000 		.4byte	.LFE35-.LFB35
 4528 078b 01       		.uleb128 0x1
 4529 078c 9C       		.byte	0x9c
 4530 078d 16       		.uleb128 0x16
 4531 078e 7C050000 		.4byte	.LASF90
 4532 0792 02       		.byte	0x2
 4533 0793 E605     		.2byte	0x5e6
 4534 0795 00000000 		.4byte	.LFB36
 4535 0799 70000000 		.4byte	.LFE36-.LFB36
 4536 079d 01       		.uleb128 0x1
 4537 079e 9C       		.byte	0x9c
 4538 079f D1070000 		.4byte	0x7d1
 4539 07a3 11       		.uleb128 0x11
ARM GAS  C:\Users\akita\AppData\Local\Temp\ccTFmJyh.s 			page 150


 4540 07a4 EC020000 		.4byte	.LASF74
 4541 07a8 02       		.byte	0x2
 4542 07a9 E605     		.2byte	0x5e6
 4543 07ab 83000000 		.4byte	0x83
 4544 07af 02       		.uleb128 0x2
 4545 07b0 91       		.byte	0x91
 4546 07b1 64       		.sleb128 -28
 4547 07b2 12       		.uleb128 0x12
 4548 07b3 7D010000 		.4byte	.LASF27
 4549 07b7 02       		.byte	0x2
 4550 07b8 E805     		.2byte	0x5e8
 4551 07ba 6B000000 		.4byte	0x6b
 4552 07be 02       		.uleb128 0x2
 4553 07bf 91       		.byte	0x91
 4554 07c0 6B       		.sleb128 -21
 4555 07c1 12       		.uleb128 0x12
 4556 07c2 AE070000 		.4byte	.LASF91
 4557 07c6 02       		.byte	0x2
 4558 07c7 E905     		.2byte	0x5e9
 4559 07c9 83000000 		.4byte	0x83
 4560 07cd 02       		.uleb128 0x2
 4561 07ce 91       		.byte	0x91
 4562 07cf 6C       		.sleb128 -20
 4563 07d0 00       		.byte	0
 4564 07d1 19       		.uleb128 0x19
 4565 07d2 52050000 		.4byte	.LASF92
 4566 07d6 02       		.byte	0x2
 4567 07d7 2006     		.2byte	0x620
 4568 07d9 00000000 		.4byte	.LFB37
 4569 07dd 34000000 		.4byte	.LFE37-.LFB37
 4570 07e1 01       		.uleb128 0x1
 4571 07e2 9C       		.byte	0x9c
 4572 07e3 F7070000 		.4byte	0x7f7
 4573 07e7 11       		.uleb128 0x11
 4574 07e8 38020000 		.4byte	.LASF93
 4575 07ec 02       		.byte	0x2
 4576 07ed 2006     		.2byte	0x620
 4577 07ef 83000000 		.4byte	0x83
 4578 07f3 02       		.uleb128 0x2
 4579 07f4 91       		.byte	0x91
 4580 07f5 74       		.sleb128 -12
 4581 07f6 00       		.byte	0
 4582 07f7 10       		.uleb128 0x10
 4583 07f8 CF020000 		.4byte	.LASF94
 4584 07fc 02       		.byte	0x2
 4585 07fd 3A06     		.2byte	0x63a
 4586 07ff F9000000 		.4byte	0xf9
 4587 0803 00000000 		.4byte	.LFB38
 4588 0807 40000000 		.4byte	.LFE38-.LFB38
 4589 080b 01       		.uleb128 0x1
 4590 080c 9C       		.byte	0x9c
 4591 080d 3F080000 		.4byte	0x83f
 4592 0811 11       		.uleb128 0x11
 4593 0812 65000000 		.4byte	.LASF66
 4594 0816 02       		.byte	0x2
 4595 0817 3A06     		.2byte	0x63a
 4596 0819 83000000 		.4byte	0x83
ARM GAS  C:\Users\akita\AppData\Local\Temp\ccTFmJyh.s 			page 151


 4597 081d 02       		.uleb128 0x2
 4598 081e 91       		.byte	0x91
 4599 081f 6C       		.sleb128 -20
 4600 0820 11       		.uleb128 0x11
 4601 0821 74010000 		.4byte	.LASF95
 4602 0825 02       		.byte	0x2
 4603 0826 3A06     		.2byte	0x63a
 4604 0828 F9000000 		.4byte	0xf9
 4605 082c 02       		.uleb128 0x2
 4606 082d 91       		.byte	0x91
 4607 082e 68       		.sleb128 -24
 4608 082f 12       		.uleb128 0x12
 4609 0830 82020000 		.4byte	.LASF96
 4610 0834 02       		.byte	0x2
 4611 0835 3C06     		.2byte	0x63c
 4612 0837 F9000000 		.4byte	0xf9
 4613 083b 02       		.uleb128 0x2
 4614 083c 91       		.byte	0x91
 4615 083d 74       		.sleb128 -12
 4616 083e 00       		.byte	0
 4617 083f 10       		.uleb128 0x10
 4618 0840 0A040000 		.4byte	.LASF97
 4619 0844 02       		.byte	0x2
 4620 0845 5806     		.2byte	0x658
 4621 0847 F9000000 		.4byte	0xf9
 4622 084b 00000000 		.4byte	.LFB39
 4623 084f 34000000 		.4byte	.LFE39-.LFB39
 4624 0853 01       		.uleb128 0x1
 4625 0854 9C       		.byte	0x9c
 4626 0855 78080000 		.4byte	0x878
 4627 0859 11       		.uleb128 0x11
 4628 085a 65000000 		.4byte	.LASF66
 4629 085e 02       		.byte	0x2
 4630 085f 5806     		.2byte	0x658
 4631 0861 83000000 		.4byte	0x83
 4632 0865 02       		.uleb128 0x2
 4633 0866 91       		.byte	0x91
 4634 0867 6C       		.sleb128 -20
 4635 0868 12       		.uleb128 0x12
 4636 0869 3F030000 		.4byte	.LASF98
 4637 086d 02       		.byte	0x2
 4638 086e 5A06     		.2byte	0x65a
 4639 0870 F9000000 		.4byte	0xf9
 4640 0874 02       		.uleb128 0x2
 4641 0875 91       		.byte	0x91
 4642 0876 74       		.sleb128 -12
 4643 0877 00       		.byte	0
 4644 0878 16       		.uleb128 0x16
 4645 0879 91030000 		.4byte	.LASF99
 4646 087d 02       		.byte	0x2
 4647 087e 7506     		.2byte	0x675
 4648 0880 00000000 		.4byte	.LFB40
 4649 0884 50000000 		.4byte	.LFE40-.LFB40
 4650 0888 01       		.uleb128 0x1
 4651 0889 9C       		.byte	0x9c
 4652 088a 9E080000 		.4byte	0x89e
 4653 088e 11       		.uleb128 0x11
ARM GAS  C:\Users\akita\AppData\Local\Temp\ccTFmJyh.s 			page 152


 4654 088f 65000000 		.4byte	.LASF66
 4655 0893 02       		.byte	0x2
 4656 0894 7506     		.2byte	0x675
 4657 0896 83000000 		.4byte	0x83
 4658 089a 02       		.uleb128 0x2
 4659 089b 91       		.byte	0x91
 4660 089c 74       		.sleb128 -12
 4661 089d 00       		.byte	0
 4662 089e 16       		.uleb128 0x16
 4663 089f D8060000 		.4byte	.LASF100
 4664 08a3 02       		.byte	0x2
 4665 08a4 8C06     		.2byte	0x68c
 4666 08a6 00000000 		.4byte	.LFB41
 4667 08aa 38000000 		.4byte	.LFE41-.LFB41
 4668 08ae 01       		.uleb128 0x1
 4669 08af 9C       		.byte	0x9c
 4670 08b0 C4080000 		.4byte	0x8c4
 4671 08b4 11       		.uleb128 0x11
 4672 08b5 65000000 		.4byte	.LASF66
 4673 08b9 02       		.byte	0x2
 4674 08ba 8C06     		.2byte	0x68c
 4675 08bc 83000000 		.4byte	0x83
 4676 08c0 02       		.uleb128 0x2
 4677 08c1 91       		.byte	0x91
 4678 08c2 74       		.sleb128 -12
 4679 08c3 00       		.byte	0
 4680 08c4 17       		.uleb128 0x17
 4681 08c5 89080000 		.4byte	.LASF101
 4682 08c9 02       		.byte	0x2
 4683 08ca AD06     		.2byte	0x6ad
 4684 08cc 00000000 		.4byte	.LFB42
 4685 08d0 E8000000 		.4byte	.LFE42-.LFB42
 4686 08d4 01       		.uleb128 0x1
 4687 08d5 9C       		.byte	0x9c
 4688 08d6 16       		.uleb128 0x16
 4689 08d7 82040000 		.4byte	.LASF102
 4690 08db 02       		.byte	0x2
 4691 08dc EE06     		.2byte	0x6ee
 4692 08de 00000000 		.4byte	.LFB43
 4693 08e2 88000000 		.4byte	.LFE43-.LFB43
 4694 08e6 01       		.uleb128 0x1
 4695 08e7 9C       		.byte	0x9c
 4696 08e8 FC080000 		.4byte	0x8fc
 4697 08ec 11       		.uleb128 0x11
 4698 08ed 65000000 		.4byte	.LASF66
 4699 08f1 02       		.byte	0x2
 4700 08f2 EE06     		.2byte	0x6ee
 4701 08f4 83000000 		.4byte	0x83
 4702 08f8 02       		.uleb128 0x2
 4703 08f9 91       		.byte	0x91
 4704 08fa 74       		.sleb128 -12
 4705 08fb 00       		.byte	0
 4706 08fc 1A       		.uleb128 0x1a
 4707 08fd 70000000 		.4byte	.LASF123
 4708 0901 02       		.byte	0x2
 4709 0902 3007     		.2byte	0x730
 4710 0904 00000000 		.4byte	.LFB44
ARM GAS  C:\Users\akita\AppData\Local\Temp\ccTFmJyh.s 			page 153


 4711 0908 98000000 		.4byte	.LFE44-.LFB44
 4712 090c 01       		.uleb128 0x1
 4713 090d 9C       		.byte	0x9c
 4714 090e 34090000 		.4byte	0x934
 4715 0912 12       		.uleb128 0x12
 4716 0913 34030000 		.4byte	.LASF103
 4717 0917 02       		.byte	0x2
 4718 0918 3207     		.2byte	0x732
 4719 091a 83000000 		.4byte	0x83
 4720 091e 02       		.uleb128 0x2
 4721 091f 91       		.byte	0x91
 4722 0920 74       		.sleb128 -12
 4723 0921 12       		.uleb128 0x12
 4724 0922 F8050000 		.4byte	.LASF104
 4725 0926 02       		.byte	0x2
 4726 0927 3307     		.2byte	0x733
 4727 0929 83000000 		.4byte	0x83
 4728 092d 05       		.uleb128 0x5
 4729 092e 03       		.byte	0x3
 4730 092f 24000000 		.4byte	lfclkPosedgeEnabledWdtCounter.4941
 4731 0933 00       		.byte	0
 4732 0934 1B       		.uleb128 0x1b
 4733 0935 75030000 		.4byte	.LASF105
 4734 0939 02       		.byte	0x2
 4735 093a 6607     		.2byte	0x766
 4736 093c 00000000 		.4byte	.LFB45
 4737 0940 3C000000 		.4byte	.LFE45-.LFB45
 4738 0944 01       		.uleb128 0x1
 4739 0945 9C       		.byte	0x9c
 4740 0946 16       		.uleb128 0x16
 4741 0947 B3050000 		.4byte	.LASF106
 4742 094b 02       		.byte	0x2
 4743 094c D70B     		.2byte	0xbd7
 4744 094e 00000000 		.4byte	.LFB46
 4745 0952 6C000000 		.4byte	.LFE46-.LFB46
 4746 0956 01       		.uleb128 0x1
 4747 0957 9C       		.byte	0x9c
 4748 0958 A8090000 		.4byte	0x9a8
 4749 095c 11       		.uleb128 0x11
 4750 095d 65000000 		.4byte	.LASF66
 4751 0961 02       		.byte	0x2
 4752 0962 D70B     		.2byte	0xbd7
 4753 0964 83000000 		.4byte	0x83
 4754 0968 02       		.uleb128 0x2
 4755 0969 91       		.byte	0x91
 4756 096a 6C       		.sleb128 -20
 4757 096b 11       		.uleb128 0x11
 4758 096c 26060000 		.4byte	.LASF107
 4759 0970 02       		.byte	0x2
 4760 0971 D70B     		.2byte	0xbd7
 4761 0973 EE000000 		.4byte	0xee
 4762 0977 02       		.uleb128 0x2
 4763 0978 91       		.byte	0x91
 4764 0979 6B       		.sleb128 -21
 4765 097a 11       		.uleb128 0x11
 4766 097b 16060000 		.4byte	.LASF108
 4767 097f 02       		.byte	0x2
ARM GAS  C:\Users\akita\AppData\Local\Temp\ccTFmJyh.s 			page 154


 4768 0980 D70B     		.2byte	0xbd7
 4769 0982 83000000 		.4byte	0x83
 4770 0986 02       		.uleb128 0x2
 4771 0987 91       		.byte	0x91
 4772 0988 64       		.sleb128 -28
 4773 0989 12       		.uleb128 0x12
 4774 098a DB010000 		.4byte	.LASF83
 4775 098e 02       		.byte	0x2
 4776 098f D90B     		.2byte	0xbd9
 4777 0991 83000000 		.4byte	0x83
 4778 0995 02       		.uleb128 0x2
 4779 0996 91       		.byte	0x91
 4780 0997 74       		.sleb128 -12
 4781 0998 12       		.uleb128 0x12
 4782 0999 6A030000 		.4byte	.LASF109
 4783 099d 02       		.byte	0x2
 4784 099e DA0B     		.2byte	0xbda
 4785 09a0 83000000 		.4byte	0x83
 4786 09a4 02       		.uleb128 0x2
 4787 09a5 91       		.byte	0x91
 4788 09a6 70       		.sleb128 -16
 4789 09a7 00       		.byte	0
 4790 09a8 16       		.uleb128 0x16
 4791 09a9 99050000 		.4byte	.LASF110
 4792 09ad 02       		.byte	0x2
 4793 09ae 580C     		.2byte	0xc58
 4794 09b0 00000000 		.4byte	.LFB47
 4795 09b4 AC000000 		.4byte	.LFE47-.LFB47
 4796 09b8 01       		.uleb128 0x1
 4797 09b9 9C       		.byte	0x9c
 4798 09ba FB090000 		.4byte	0x9fb
 4799 09be 11       		.uleb128 0x11
 4800 09bf 65000000 		.4byte	.LASF66
 4801 09c3 02       		.byte	0x2
 4802 09c4 580C     		.2byte	0xc58
 4803 09c6 83000000 		.4byte	0x83
 4804 09ca 02       		.uleb128 0x2
 4805 09cb 91       		.byte	0x91
 4806 09cc 6C       		.sleb128 -20
 4807 09cd 11       		.uleb128 0x11
 4808 09ce 26060000 		.4byte	.LASF107
 4809 09d2 02       		.byte	0x2
 4810 09d3 580C     		.2byte	0xc58
 4811 09d5 EE000000 		.4byte	0xee
 4812 09d9 02       		.uleb128 0x2
 4813 09da 91       		.byte	0x91
 4814 09db 6B       		.sleb128 -21
 4815 09dc 11       		.uleb128 0x11
 4816 09dd 02050000 		.4byte	.LASF82
 4817 09e1 02       		.byte	0x2
 4818 09e2 580C     		.2byte	0xc58
 4819 09e4 83000000 		.4byte	0x83
 4820 09e8 02       		.uleb128 0x2
 4821 09e9 91       		.byte	0x91
 4822 09ea 64       		.sleb128 -28
 4823 09eb 12       		.uleb128 0x12
 4824 09ec B1040000 		.4byte	.LASF111
ARM GAS  C:\Users\akita\AppData\Local\Temp\ccTFmJyh.s 			page 155


 4825 09f0 02       		.byte	0x2
 4826 09f1 5A0C     		.2byte	0xc5a
 4827 09f3 83000000 		.4byte	0x83
 4828 09f7 02       		.uleb128 0x2
 4829 09f8 91       		.byte	0x91
 4830 09f9 74       		.sleb128 -12
 4831 09fa 00       		.byte	0
 4832 09fb 0E       		.uleb128 0xe
 4833 09fc 9A040000 		.4byte	.LASF112
 4834 0a00 02       		.byte	0x2
 4835 0a01 1D       		.byte	0x1d
 4836 0a02 BC000000 		.4byte	0xbc
 4837 0a06 05       		.uleb128 0x5
 4838 0a07 03       		.byte	0x3
 4839 0a08 00000000 		.4byte	defaultIloTrimRegValue
 4840 0a0c 0E       		.uleb128 0xe
 4841 0a0d D0000000 		.4byte	.LASF113
 4842 0a11 02       		.byte	0x2
 4843 0a12 22       		.byte	0x22
 4844 0a13 83000000 		.4byte	0x83
 4845 0a17 05       		.uleb128 0x5
 4846 0a18 03       		.byte	0x3
 4847 0a19 00000000 		.4byte	lfclkPosedgeWdtCounter0Enabled
 4848 0a1d 0E       		.uleb128 0xe
 4849 0a1e CA070000 		.4byte	.LASF114
 4850 0a22 02       		.byte	0x2
 4851 0a23 23       		.byte	0x23
 4852 0a24 83000000 		.4byte	0x83
 4853 0a28 05       		.uleb128 0x5
 4854 0a29 03       		.byte	0x3
 4855 0a2a 04000000 		.4byte	lfclkPosedgeWdtCounter0Mode
 4856 0a2e 0E       		.uleb128 0xe
 4857 0a2f 1A070000 		.4byte	.LASF115
 4858 0a33 02       		.byte	0x2
 4859 0a34 25       		.byte	0x25
 4860 0a35 CD000000 		.4byte	0xcd
 4861 0a39 05       		.uleb128 0x5
 4862 0a3a 03       		.byte	0x3
 4863 0a3b 08000000 		.4byte	disableServicedIsr
 4864 0a3f 0E       		.uleb128 0xe
 4865 0a40 B5020000 		.4byte	.LASF116
 4866 0a44 02       		.byte	0x2
 4867 0a45 26       		.byte	0x26
 4868 0a46 CD000000 		.4byte	0xcd
 4869 0a4a 05       		.uleb128 0x5
 4870 0a4b 03       		.byte	0x3
 4871 0a4c 04000000 		.4byte	wdtIsrMask
 4872 0a50 1C       		.uleb128 0x1c
 4873 0a51 83000000 		.4byte	0x83
 4874 0a55 600A0000 		.4byte	0xa60
 4875 0a59 1D       		.uleb128 0x1d
 4876 0a5a 04010000 		.4byte	0x104
 4877 0a5e 02       		.byte	0x2
 4878 0a5f 00       		.byte	0
 4879 0a60 0E       		.uleb128 0xe
 4880 0a61 13000000 		.4byte	.LASF117
 4881 0a65 02       		.byte	0x2
ARM GAS  C:\Users\akita\AppData\Local\Temp\ccTFmJyh.s 			page 156


 4882 0a66 2A       		.byte	0x2a
 4883 0a67 710A0000 		.4byte	0xa71
 4884 0a6b 05       		.uleb128 0x5
 4885 0a6c 03       		.byte	0x3
 4886 0a6d 00000000 		.4byte	counterIntMaskTbl
 4887 0a71 1E       		.uleb128 0x1e
 4888 0a72 500A0000 		.4byte	0xa50
 4889 0a76 1C       		.uleb128 0x1c
 4890 0a77 F9000000 		.4byte	0xf9
 4891 0a7b 860A0000 		.4byte	0xa86
 4892 0a7f 1D       		.uleb128 0x1d
 4893 0a80 04010000 		.4byte	0x104
 4894 0a84 02       		.byte	0x2
 4895 0a85 00       		.byte	0
 4896 0a86 0E       		.uleb128 0xe
 4897 0a87 25000000 		.4byte	.LASF118
 4898 0a8b 02       		.byte	0x2
 4899 0a8c 44       		.byte	0x44
 4900 0a8d 760A0000 		.4byte	0xa76
 4901 0a91 05       		.uleb128 0x5
 4902 0a92 03       		.byte	0x3
 4903 0a93 0C000000 		.4byte	cySysWdtCallback
 4904 0a97 1F       		.uleb128 0x1f
 4905 0a98 44050000 		.4byte	.LASF124
 4906 0a9c 04       		.byte	0x4
 4907 0a9d D4       		.byte	0xd4
 4908 0a9e 83000000 		.4byte	0x83
 4909 0aa2 00       		.byte	0
 4910              		.section	.debug_abbrev,"",%progbits
 4911              	.Ldebug_abbrev0:
 4912 0000 01       		.uleb128 0x1
 4913 0001 11       		.uleb128 0x11
 4914 0002 01       		.byte	0x1
 4915 0003 25       		.uleb128 0x25
 4916 0004 0E       		.uleb128 0xe
 4917 0005 13       		.uleb128 0x13
 4918 0006 0B       		.uleb128 0xb
 4919 0007 03       		.uleb128 0x3
 4920 0008 0E       		.uleb128 0xe
 4921 0009 1B       		.uleb128 0x1b
 4922 000a 0E       		.uleb128 0xe
 4923 000b 55       		.uleb128 0x55
 4924 000c 17       		.uleb128 0x17
 4925 000d 11       		.uleb128 0x11
 4926 000e 01       		.uleb128 0x1
 4927 000f 10       		.uleb128 0x10
 4928 0010 17       		.uleb128 0x17
 4929 0011 00       		.byte	0
 4930 0012 00       		.byte	0
 4931 0013 02       		.uleb128 0x2
 4932 0014 24       		.uleb128 0x24
 4933 0015 00       		.byte	0
 4934 0016 0B       		.uleb128 0xb
 4935 0017 0B       		.uleb128 0xb
 4936 0018 3E       		.uleb128 0x3e
 4937 0019 0B       		.uleb128 0xb
 4938 001a 03       		.uleb128 0x3
ARM GAS  C:\Users\akita\AppData\Local\Temp\ccTFmJyh.s 			page 157


 4939 001b 0E       		.uleb128 0xe
 4940 001c 00       		.byte	0
 4941 001d 00       		.byte	0
 4942 001e 03       		.uleb128 0x3
 4943 001f 24       		.uleb128 0x24
 4944 0020 00       		.byte	0
 4945 0021 0B       		.uleb128 0xb
 4946 0022 0B       		.uleb128 0xb
 4947 0023 3E       		.uleb128 0x3e
 4948 0024 0B       		.uleb128 0xb
 4949 0025 03       		.uleb128 0x3
 4950 0026 08       		.uleb128 0x8
 4951 0027 00       		.byte	0
 4952 0028 00       		.byte	0
 4953 0029 04       		.uleb128 0x4
 4954 002a 16       		.uleb128 0x16
 4955 002b 00       		.byte	0
 4956 002c 03       		.uleb128 0x3
 4957 002d 0E       		.uleb128 0xe
 4958 002e 3A       		.uleb128 0x3a
 4959 002f 0B       		.uleb128 0xb
 4960 0030 3B       		.uleb128 0x3b
 4961 0031 05       		.uleb128 0x5
 4962 0032 49       		.uleb128 0x49
 4963 0033 13       		.uleb128 0x13
 4964 0034 00       		.byte	0
 4965 0035 00       		.byte	0
 4966 0036 05       		.uleb128 0x5
 4967 0037 35       		.uleb128 0x35
 4968 0038 00       		.byte	0
 4969 0039 49       		.uleb128 0x49
 4970 003a 13       		.uleb128 0x13
 4971 003b 00       		.byte	0
 4972 003c 00       		.byte	0
 4973 003d 06       		.uleb128 0x6
 4974 003e 0F       		.uleb128 0xf
 4975 003f 00       		.byte	0
 4976 0040 0B       		.uleb128 0xb
 4977 0041 0B       		.uleb128 0xb
 4978 0042 49       		.uleb128 0x49
 4979 0043 13       		.uleb128 0x13
 4980 0044 00       		.byte	0
 4981 0045 00       		.byte	0
 4982 0046 07       		.uleb128 0x7
 4983 0047 15       		.uleb128 0x15
 4984 0048 00       		.byte	0
 4985 0049 27       		.uleb128 0x27
 4986 004a 19       		.uleb128 0x19
 4987 004b 00       		.byte	0
 4988 004c 00       		.byte	0
 4989 004d 08       		.uleb128 0x8
 4990 004e 04       		.uleb128 0x4
 4991 004f 01       		.byte	0x1
 4992 0050 0B       		.uleb128 0xb
 4993 0051 0B       		.uleb128 0xb
 4994 0052 3A       		.uleb128 0x3a
 4995 0053 0B       		.uleb128 0xb
ARM GAS  C:\Users\akita\AppData\Local\Temp\ccTFmJyh.s 			page 158


 4996 0054 3B       		.uleb128 0x3b
 4997 0055 0B       		.uleb128 0xb
 4998 0056 01       		.uleb128 0x1
 4999 0057 13       		.uleb128 0x13
 5000 0058 00       		.byte	0
 5001 0059 00       		.byte	0
 5002 005a 09       		.uleb128 0x9
 5003 005b 28       		.uleb128 0x28
 5004 005c 00       		.byte	0
 5005 005d 03       		.uleb128 0x3
 5006 005e 0E       		.uleb128 0xe
 5007 005f 1C       		.uleb128 0x1c
 5008 0060 0D       		.uleb128 0xd
 5009 0061 00       		.byte	0
 5010 0062 00       		.byte	0
 5011 0063 0A       		.uleb128 0xa
 5012 0064 16       		.uleb128 0x16
 5013 0065 00       		.byte	0
 5014 0066 03       		.uleb128 0x3
 5015 0067 0E       		.uleb128 0xe
 5016 0068 3A       		.uleb128 0x3a
 5017 0069 0B       		.uleb128 0xb
 5018 006a 3B       		.uleb128 0x3b
 5019 006b 0B       		.uleb128 0xb
 5020 006c 49       		.uleb128 0x49
 5021 006d 13       		.uleb128 0x13
 5022 006e 00       		.byte	0
 5023 006f 00       		.byte	0
 5024 0070 0B       		.uleb128 0xb
 5025 0071 2E       		.uleb128 0x2e
 5026 0072 00       		.byte	0
 5027 0073 03       		.uleb128 0x3
 5028 0074 0E       		.uleb128 0xe
 5029 0075 3A       		.uleb128 0x3a
 5030 0076 0B       		.uleb128 0xb
 5031 0077 3B       		.uleb128 0x3b
 5032 0078 05       		.uleb128 0x5
 5033 0079 27       		.uleb128 0x27
 5034 007a 19       		.uleb128 0x19
 5035 007b 11       		.uleb128 0x11
 5036 007c 01       		.uleb128 0x1
 5037 007d 12       		.uleb128 0x12
 5038 007e 06       		.uleb128 0x6
 5039 007f 40       		.uleb128 0x40
 5040 0080 18       		.uleb128 0x18
 5041 0081 9742     		.uleb128 0x2117
 5042 0083 19       		.uleb128 0x19
 5043 0084 00       		.byte	0
 5044 0085 00       		.byte	0
 5045 0086 0C       		.uleb128 0xc
 5046 0087 2E       		.uleb128 0x2e
 5047 0088 00       		.byte	0
 5048 0089 3F       		.uleb128 0x3f
 5049 008a 19       		.uleb128 0x19
 5050 008b 03       		.uleb128 0x3
 5051 008c 0E       		.uleb128 0xe
 5052 008d 3A       		.uleb128 0x3a
ARM GAS  C:\Users\akita\AppData\Local\Temp\ccTFmJyh.s 			page 159


 5053 008e 0B       		.uleb128 0xb
 5054 008f 3B       		.uleb128 0x3b
 5055 0090 0B       		.uleb128 0xb
 5056 0091 27       		.uleb128 0x27
 5057 0092 19       		.uleb128 0x19
 5058 0093 11       		.uleb128 0x11
 5059 0094 01       		.uleb128 0x1
 5060 0095 12       		.uleb128 0x12
 5061 0096 06       		.uleb128 0x6
 5062 0097 40       		.uleb128 0x40
 5063 0098 18       		.uleb128 0x18
 5064 0099 9742     		.uleb128 0x2117
 5065 009b 19       		.uleb128 0x19
 5066 009c 00       		.byte	0
 5067 009d 00       		.byte	0
 5068 009e 0D       		.uleb128 0xd
 5069 009f 2E       		.uleb128 0x2e
 5070 00a0 01       		.byte	0x1
 5071 00a1 3F       		.uleb128 0x3f
 5072 00a2 19       		.uleb128 0x19
 5073 00a3 03       		.uleb128 0x3
 5074 00a4 0E       		.uleb128 0xe
 5075 00a5 3A       		.uleb128 0x3a
 5076 00a6 0B       		.uleb128 0xb
 5077 00a7 3B       		.uleb128 0x3b
 5078 00a8 0B       		.uleb128 0xb
 5079 00a9 27       		.uleb128 0x27
 5080 00aa 19       		.uleb128 0x19
 5081 00ab 11       		.uleb128 0x11
 5082 00ac 01       		.uleb128 0x1
 5083 00ad 12       		.uleb128 0x12
 5084 00ae 06       		.uleb128 0x6
 5085 00af 40       		.uleb128 0x40
 5086 00b0 18       		.uleb128 0x18
 5087 00b1 9642     		.uleb128 0x2116
 5088 00b3 19       		.uleb128 0x19
 5089 00b4 01       		.uleb128 0x1
 5090 00b5 13       		.uleb128 0x13
 5091 00b6 00       		.byte	0
 5092 00b7 00       		.byte	0
 5093 00b8 0E       		.uleb128 0xe
 5094 00b9 34       		.uleb128 0x34
 5095 00ba 00       		.byte	0
 5096 00bb 03       		.uleb128 0x3
 5097 00bc 0E       		.uleb128 0xe
 5098 00bd 3A       		.uleb128 0x3a
 5099 00be 0B       		.uleb128 0xb
 5100 00bf 3B       		.uleb128 0x3b
 5101 00c0 0B       		.uleb128 0xb
 5102 00c1 49       		.uleb128 0x49
 5103 00c2 13       		.uleb128 0x13
 5104 00c3 02       		.uleb128 0x2
 5105 00c4 18       		.uleb128 0x18
 5106 00c5 00       		.byte	0
 5107 00c6 00       		.byte	0
 5108 00c7 0F       		.uleb128 0xf
 5109 00c8 2E       		.uleb128 0x2e
ARM GAS  C:\Users\akita\AppData\Local\Temp\ccTFmJyh.s 			page 160


 5110 00c9 01       		.byte	0x1
 5111 00ca 3F       		.uleb128 0x3f
 5112 00cb 19       		.uleb128 0x19
 5113 00cc 03       		.uleb128 0x3
 5114 00cd 0E       		.uleb128 0xe
 5115 00ce 3A       		.uleb128 0x3a
 5116 00cf 0B       		.uleb128 0xb
 5117 00d0 3B       		.uleb128 0x3b
 5118 00d1 0B       		.uleb128 0xb
 5119 00d2 27       		.uleb128 0x27
 5120 00d3 19       		.uleb128 0x19
 5121 00d4 11       		.uleb128 0x11
 5122 00d5 01       		.uleb128 0x1
 5123 00d6 12       		.uleb128 0x12
 5124 00d7 06       		.uleb128 0x6
 5125 00d8 40       		.uleb128 0x40
 5126 00d9 18       		.uleb128 0x18
 5127 00da 9742     		.uleb128 0x2117
 5128 00dc 19       		.uleb128 0x19
 5129 00dd 01       		.uleb128 0x1
 5130 00de 13       		.uleb128 0x13
 5131 00df 00       		.byte	0
 5132 00e0 00       		.byte	0
 5133 00e1 10       		.uleb128 0x10
 5134 00e2 2E       		.uleb128 0x2e
 5135 00e3 01       		.byte	0x1
 5136 00e4 3F       		.uleb128 0x3f
 5137 00e5 19       		.uleb128 0x19
 5138 00e6 03       		.uleb128 0x3
 5139 00e7 0E       		.uleb128 0xe
 5140 00e8 3A       		.uleb128 0x3a
 5141 00e9 0B       		.uleb128 0xb
 5142 00ea 3B       		.uleb128 0x3b
 5143 00eb 05       		.uleb128 0x5
 5144 00ec 27       		.uleb128 0x27
 5145 00ed 19       		.uleb128 0x19
 5146 00ee 49       		.uleb128 0x49
 5147 00ef 13       		.uleb128 0x13
 5148 00f0 11       		.uleb128 0x11
 5149 00f1 01       		.uleb128 0x1
 5150 00f2 12       		.uleb128 0x12
 5151 00f3 06       		.uleb128 0x6
 5152 00f4 40       		.uleb128 0x40
 5153 00f5 18       		.uleb128 0x18
 5154 00f6 9642     		.uleb128 0x2116
 5155 00f8 19       		.uleb128 0x19
 5156 00f9 01       		.uleb128 0x1
 5157 00fa 13       		.uleb128 0x13
 5158 00fb 00       		.byte	0
 5159 00fc 00       		.byte	0
 5160 00fd 11       		.uleb128 0x11
 5161 00fe 05       		.uleb128 0x5
 5162 00ff 00       		.byte	0
 5163 0100 03       		.uleb128 0x3
 5164 0101 0E       		.uleb128 0xe
 5165 0102 3A       		.uleb128 0x3a
 5166 0103 0B       		.uleb128 0xb
ARM GAS  C:\Users\akita\AppData\Local\Temp\ccTFmJyh.s 			page 161


 5167 0104 3B       		.uleb128 0x3b
 5168 0105 05       		.uleb128 0x5
 5169 0106 49       		.uleb128 0x49
 5170 0107 13       		.uleb128 0x13
 5171 0108 02       		.uleb128 0x2
 5172 0109 18       		.uleb128 0x18
 5173 010a 00       		.byte	0
 5174 010b 00       		.byte	0
 5175 010c 12       		.uleb128 0x12
 5176 010d 34       		.uleb128 0x34
 5177 010e 00       		.byte	0
 5178 010f 03       		.uleb128 0x3
 5179 0110 0E       		.uleb128 0xe
 5180 0111 3A       		.uleb128 0x3a
 5181 0112 0B       		.uleb128 0xb
 5182 0113 3B       		.uleb128 0x3b
 5183 0114 05       		.uleb128 0x5
 5184 0115 49       		.uleb128 0x49
 5185 0116 13       		.uleb128 0x13
 5186 0117 02       		.uleb128 0x2
 5187 0118 18       		.uleb128 0x18
 5188 0119 00       		.byte	0
 5189 011a 00       		.byte	0
 5190 011b 13       		.uleb128 0x13
 5191 011c 2E       		.uleb128 0x2e
 5192 011d 00       		.byte	0
 5193 011e 03       		.uleb128 0x3
 5194 011f 0E       		.uleb128 0xe
 5195 0120 3A       		.uleb128 0x3a
 5196 0121 0B       		.uleb128 0xb
 5197 0122 3B       		.uleb128 0x3b
 5198 0123 05       		.uleb128 0x5
 5199 0124 27       		.uleb128 0x27
 5200 0125 19       		.uleb128 0x19
 5201 0126 49       		.uleb128 0x49
 5202 0127 13       		.uleb128 0x13
 5203 0128 11       		.uleb128 0x11
 5204 0129 01       		.uleb128 0x1
 5205 012a 12       		.uleb128 0x12
 5206 012b 06       		.uleb128 0x6
 5207 012c 40       		.uleb128 0x40
 5208 012d 18       		.uleb128 0x18
 5209 012e 9742     		.uleb128 0x2117
 5210 0130 19       		.uleb128 0x19
 5211 0131 00       		.byte	0
 5212 0132 00       		.byte	0
 5213 0133 14       		.uleb128 0x14
 5214 0134 2E       		.uleb128 0x2e
 5215 0135 01       		.byte	0x1
 5216 0136 3F       		.uleb128 0x3f
 5217 0137 19       		.uleb128 0x19
 5218 0138 03       		.uleb128 0x3
 5219 0139 0E       		.uleb128 0xe
 5220 013a 3A       		.uleb128 0x3a
 5221 013b 0B       		.uleb128 0xb
 5222 013c 3B       		.uleb128 0x3b
 5223 013d 05       		.uleb128 0x5
ARM GAS  C:\Users\akita\AppData\Local\Temp\ccTFmJyh.s 			page 162


 5224 013e 27       		.uleb128 0x27
 5225 013f 19       		.uleb128 0x19
 5226 0140 49       		.uleb128 0x49
 5227 0141 13       		.uleb128 0x13
 5228 0142 11       		.uleb128 0x11
 5229 0143 01       		.uleb128 0x1
 5230 0144 12       		.uleb128 0x12
 5231 0145 06       		.uleb128 0x6
 5232 0146 40       		.uleb128 0x40
 5233 0147 18       		.uleb128 0x18
 5234 0148 9742     		.uleb128 0x2117
 5235 014a 19       		.uleb128 0x19
 5236 014b 01       		.uleb128 0x1
 5237 014c 13       		.uleb128 0x13
 5238 014d 00       		.byte	0
 5239 014e 00       		.byte	0
 5240 014f 15       		.uleb128 0x15
 5241 0150 2E       		.uleb128 0x2e
 5242 0151 01       		.byte	0x1
 5243 0152 03       		.uleb128 0x3
 5244 0153 0E       		.uleb128 0xe
 5245 0154 3A       		.uleb128 0x3a
 5246 0155 0B       		.uleb128 0xb
 5247 0156 3B       		.uleb128 0x3b
 5248 0157 05       		.uleb128 0x5
 5249 0158 27       		.uleb128 0x27
 5250 0159 19       		.uleb128 0x19
 5251 015a 49       		.uleb128 0x49
 5252 015b 13       		.uleb128 0x13
 5253 015c 11       		.uleb128 0x11
 5254 015d 01       		.uleb128 0x1
 5255 015e 12       		.uleb128 0x12
 5256 015f 06       		.uleb128 0x6
 5257 0160 40       		.uleb128 0x40
 5258 0161 18       		.uleb128 0x18
 5259 0162 9742     		.uleb128 0x2117
 5260 0164 19       		.uleb128 0x19
 5261 0165 01       		.uleb128 0x1
 5262 0166 13       		.uleb128 0x13
 5263 0167 00       		.byte	0
 5264 0168 00       		.byte	0
 5265 0169 16       		.uleb128 0x16
 5266 016a 2E       		.uleb128 0x2e
 5267 016b 01       		.byte	0x1
 5268 016c 3F       		.uleb128 0x3f
 5269 016d 19       		.uleb128 0x19
 5270 016e 03       		.uleb128 0x3
 5271 016f 0E       		.uleb128 0xe
 5272 0170 3A       		.uleb128 0x3a
 5273 0171 0B       		.uleb128 0xb
 5274 0172 3B       		.uleb128 0x3b
 5275 0173 05       		.uleb128 0x5
 5276 0174 27       		.uleb128 0x27
 5277 0175 19       		.uleb128 0x19
 5278 0176 11       		.uleb128 0x11
 5279 0177 01       		.uleb128 0x1
 5280 0178 12       		.uleb128 0x12
ARM GAS  C:\Users\akita\AppData\Local\Temp\ccTFmJyh.s 			page 163


 5281 0179 06       		.uleb128 0x6
 5282 017a 40       		.uleb128 0x40
 5283 017b 18       		.uleb128 0x18
 5284 017c 9642     		.uleb128 0x2116
 5285 017e 19       		.uleb128 0x19
 5286 017f 01       		.uleb128 0x1
 5287 0180 13       		.uleb128 0x13
 5288 0181 00       		.byte	0
 5289 0182 00       		.byte	0
 5290 0183 17       		.uleb128 0x17
 5291 0184 2E       		.uleb128 0x2e
 5292 0185 00       		.byte	0
 5293 0186 3F       		.uleb128 0x3f
 5294 0187 19       		.uleb128 0x19
 5295 0188 03       		.uleb128 0x3
 5296 0189 0E       		.uleb128 0xe
 5297 018a 3A       		.uleb128 0x3a
 5298 018b 0B       		.uleb128 0xb
 5299 018c 3B       		.uleb128 0x3b
 5300 018d 05       		.uleb128 0x5
 5301 018e 27       		.uleb128 0x27
 5302 018f 19       		.uleb128 0x19
 5303 0190 11       		.uleb128 0x11
 5304 0191 01       		.uleb128 0x1
 5305 0192 12       		.uleb128 0x12
 5306 0193 06       		.uleb128 0x6
 5307 0194 40       		.uleb128 0x40
 5308 0195 18       		.uleb128 0x18
 5309 0196 9642     		.uleb128 0x2116
 5310 0198 19       		.uleb128 0x19
 5311 0199 00       		.byte	0
 5312 019a 00       		.byte	0
 5313 019b 18       		.uleb128 0x18
 5314 019c 2E       		.uleb128 0x2e
 5315 019d 00       		.byte	0
 5316 019e 3F       		.uleb128 0x3f
 5317 019f 19       		.uleb128 0x19
 5318 01a0 03       		.uleb128 0x3
 5319 01a1 0E       		.uleb128 0xe
 5320 01a2 3A       		.uleb128 0x3a
 5321 01a3 0B       		.uleb128 0xb
 5322 01a4 3B       		.uleb128 0x3b
 5323 01a5 05       		.uleb128 0x5
 5324 01a6 27       		.uleb128 0x27
 5325 01a7 19       		.uleb128 0x19
 5326 01a8 49       		.uleb128 0x49
 5327 01a9 13       		.uleb128 0x13
 5328 01aa 11       		.uleb128 0x11
 5329 01ab 01       		.uleb128 0x1
 5330 01ac 12       		.uleb128 0x12
 5331 01ad 06       		.uleb128 0x6
 5332 01ae 40       		.uleb128 0x40
 5333 01af 18       		.uleb128 0x18
 5334 01b0 9742     		.uleb128 0x2117
 5335 01b2 19       		.uleb128 0x19
 5336 01b3 00       		.byte	0
 5337 01b4 00       		.byte	0
ARM GAS  C:\Users\akita\AppData\Local\Temp\ccTFmJyh.s 			page 164


 5338 01b5 19       		.uleb128 0x19
 5339 01b6 2E       		.uleb128 0x2e
 5340 01b7 01       		.byte	0x1
 5341 01b8 3F       		.uleb128 0x3f
 5342 01b9 19       		.uleb128 0x19
 5343 01ba 03       		.uleb128 0x3
 5344 01bb 0E       		.uleb128 0xe
 5345 01bc 3A       		.uleb128 0x3a
 5346 01bd 0B       		.uleb128 0xb
 5347 01be 3B       		.uleb128 0x3b
 5348 01bf 05       		.uleb128 0x5
 5349 01c0 27       		.uleb128 0x27
 5350 01c1 19       		.uleb128 0x19
 5351 01c2 11       		.uleb128 0x11
 5352 01c3 01       		.uleb128 0x1
 5353 01c4 12       		.uleb128 0x12
 5354 01c5 06       		.uleb128 0x6
 5355 01c6 40       		.uleb128 0x40
 5356 01c7 18       		.uleb128 0x18
 5357 01c8 9742     		.uleb128 0x2117
 5358 01ca 19       		.uleb128 0x19
 5359 01cb 01       		.uleb128 0x1
 5360 01cc 13       		.uleb128 0x13
 5361 01cd 00       		.byte	0
 5362 01ce 00       		.byte	0
 5363 01cf 1A       		.uleb128 0x1a
 5364 01d0 2E       		.uleb128 0x2e
 5365 01d1 01       		.byte	0x1
 5366 01d2 03       		.uleb128 0x3
 5367 01d3 0E       		.uleb128 0xe
 5368 01d4 3A       		.uleb128 0x3a
 5369 01d5 0B       		.uleb128 0xb
 5370 01d6 3B       		.uleb128 0x3b
 5371 01d7 05       		.uleb128 0x5
 5372 01d8 27       		.uleb128 0x27
 5373 01d9 19       		.uleb128 0x19
 5374 01da 11       		.uleb128 0x11
 5375 01db 01       		.uleb128 0x1
 5376 01dc 12       		.uleb128 0x12
 5377 01dd 06       		.uleb128 0x6
 5378 01de 40       		.uleb128 0x40
 5379 01df 18       		.uleb128 0x18
 5380 01e0 9642     		.uleb128 0x2116
 5381 01e2 19       		.uleb128 0x19
 5382 01e3 01       		.uleb128 0x1
 5383 01e4 13       		.uleb128 0x13
 5384 01e5 00       		.byte	0
 5385 01e6 00       		.byte	0
 5386 01e7 1B       		.uleb128 0x1b
 5387 01e8 2E       		.uleb128 0x2e
 5388 01e9 00       		.byte	0
 5389 01ea 03       		.uleb128 0x3
 5390 01eb 0E       		.uleb128 0xe
 5391 01ec 3A       		.uleb128 0x3a
 5392 01ed 0B       		.uleb128 0xb
 5393 01ee 3B       		.uleb128 0x3b
 5394 01ef 05       		.uleb128 0x5
ARM GAS  C:\Users\akita\AppData\Local\Temp\ccTFmJyh.s 			page 165


 5395 01f0 27       		.uleb128 0x27
 5396 01f1 19       		.uleb128 0x19
 5397 01f2 11       		.uleb128 0x11
 5398 01f3 01       		.uleb128 0x1
 5399 01f4 12       		.uleb128 0x12
 5400 01f5 06       		.uleb128 0x6
 5401 01f6 40       		.uleb128 0x40
 5402 01f7 18       		.uleb128 0x18
 5403 01f8 9642     		.uleb128 0x2116
 5404 01fa 19       		.uleb128 0x19
 5405 01fb 00       		.byte	0
 5406 01fc 00       		.byte	0
 5407 01fd 1C       		.uleb128 0x1c
 5408 01fe 01       		.uleb128 0x1
 5409 01ff 01       		.byte	0x1
 5410 0200 49       		.uleb128 0x49
 5411 0201 13       		.uleb128 0x13
 5412 0202 01       		.uleb128 0x1
 5413 0203 13       		.uleb128 0x13
 5414 0204 00       		.byte	0
 5415 0205 00       		.byte	0
 5416 0206 1D       		.uleb128 0x1d
 5417 0207 21       		.uleb128 0x21
 5418 0208 00       		.byte	0
 5419 0209 49       		.uleb128 0x49
 5420 020a 13       		.uleb128 0x13
 5421 020b 2F       		.uleb128 0x2f
 5422 020c 0B       		.uleb128 0xb
 5423 020d 00       		.byte	0
 5424 020e 00       		.byte	0
 5425 020f 1E       		.uleb128 0x1e
 5426 0210 26       		.uleb128 0x26
 5427 0211 00       		.byte	0
 5428 0212 49       		.uleb128 0x49
 5429 0213 13       		.uleb128 0x13
 5430 0214 00       		.byte	0
 5431 0215 00       		.byte	0
 5432 0216 1F       		.uleb128 0x1f
 5433 0217 34       		.uleb128 0x34
 5434 0218 00       		.byte	0
 5435 0219 03       		.uleb128 0x3
 5436 021a 0E       		.uleb128 0xe
 5437 021b 3A       		.uleb128 0x3a
 5438 021c 0B       		.uleb128 0xb
 5439 021d 3B       		.uleb128 0x3b
 5440 021e 0B       		.uleb128 0xb
 5441 021f 49       		.uleb128 0x49
 5442 0220 13       		.uleb128 0x13
 5443 0221 3F       		.uleb128 0x3f
 5444 0222 19       		.uleb128 0x19
 5445 0223 3C       		.uleb128 0x3c
 5446 0224 19       		.uleb128 0x19
 5447 0225 00       		.byte	0
 5448 0226 00       		.byte	0
 5449 0227 00       		.byte	0
 5450              		.section	.debug_aranges,"",%progbits
 5451 0000 94010000 		.4byte	0x194
ARM GAS  C:\Users\akita\AppData\Local\Temp\ccTFmJyh.s 			page 166


 5452 0004 0200     		.2byte	0x2
 5453 0006 00000000 		.4byte	.Ldebug_info0
 5454 000a 04       		.byte	0x4
 5455 000b 00       		.byte	0
 5456 000c 0000     		.2byte	0
 5457 000e 0000     		.2byte	0
 5458 0010 00000000 		.4byte	.LFB0
 5459 0014 48000000 		.4byte	.LFE0-.LFB0
 5460 0018 00000000 		.4byte	.LFB1
 5461 001c 48000000 		.4byte	.LFE1-.LFB1
 5462 0020 00000000 		.4byte	.LFB2
 5463 0024 1C000000 		.4byte	.LFE2-.LFB2
 5464 0028 00000000 		.4byte	.LFB3
 5465 002c 60000000 		.4byte	.LFE3-.LFB3
 5466 0030 00000000 		.4byte	.LFB4
 5467 0034 6C000000 		.4byte	.LFE4-.LFB4
 5468 0038 00000000 		.4byte	.LFB5
 5469 003c 1C000000 		.4byte	.LFE5-.LFB5
 5470 0040 00000000 		.4byte	.LFB6
 5471 0044 5C010000 		.4byte	.LFE6-.LFB6
 5472 0048 00000000 		.4byte	.LFB7
 5473 004c 1C000000 		.4byte	.LFE7-.LFB7
 5474 0050 00000000 		.4byte	.LFB8
 5475 0054 24010000 		.4byte	.LFE8-.LFB8
 5476 0058 00000000 		.4byte	.LFB9
 5477 005c FC000000 		.4byte	.LFE9-.LFB9
 5478 0060 00000000 		.4byte	.LFB10
 5479 0064 4C000000 		.4byte	.LFE10-.LFB10
 5480 0068 00000000 		.4byte	.LFB11
 5481 006c 20000000 		.4byte	.LFE11-.LFB11
 5482 0070 00000000 		.4byte	.LFB12
 5483 0074 54000000 		.4byte	.LFE12-.LFB12
 5484 0078 00000000 		.4byte	.LFB13
 5485 007c 20000000 		.4byte	.LFE13-.LFB13
 5486 0080 00000000 		.4byte	.LFB14
 5487 0084 5C000000 		.4byte	.LFE14-.LFB14
 5488 0088 00000000 		.4byte	.LFB15
 5489 008c 1C000000 		.4byte	.LFE15-.LFB15
 5490 0090 00000000 		.4byte	.LFB16
 5491 0094 40000000 		.4byte	.LFE16-.LFB16
 5492 0098 00000000 		.4byte	.LFB17
 5493 009c 3C000000 		.4byte	.LFE17-.LFB17
 5494 00a0 00000000 		.4byte	.LFB18
 5495 00a4 34000000 		.4byte	.LFE18-.LFB18
 5496 00a8 00000000 		.4byte	.LFB19
 5497 00ac 20000000 		.4byte	.LFE19-.LFB19
 5498 00b0 00000000 		.4byte	.LFB20
 5499 00b4 4C000000 		.4byte	.LFE20-.LFB20
 5500 00b8 00000000 		.4byte	.LFB21
 5501 00bc 30000000 		.4byte	.LFE21-.LFB21
 5502 00c0 00000000 		.4byte	.LFB22
 5503 00c4 58000000 		.4byte	.LFE22-.LFB22
 5504 00c8 00000000 		.4byte	.LFB23
 5505 00cc 24000000 		.4byte	.LFE23-.LFB23
 5506 00d0 00000000 		.4byte	.LFB24
 5507 00d4 6C000000 		.4byte	.LFE24-.LFB24
 5508 00d8 00000000 		.4byte	.LFB25
ARM GAS  C:\Users\akita\AppData\Local\Temp\ccTFmJyh.s 			page 167


 5509 00dc 40000000 		.4byte	.LFE25-.LFB25
 5510 00e0 00000000 		.4byte	.LFB26
 5511 00e4 60000000 		.4byte	.LFE26-.LFB26
 5512 00e8 00000000 		.4byte	.LFB27
 5513 00ec 68000000 		.4byte	.LFE27-.LFB27
 5514 00f0 00000000 		.4byte	.LFB28
 5515 00f4 58000000 		.4byte	.LFE28-.LFB28
 5516 00f8 00000000 		.4byte	.LFB29
 5517 00fc 1C000000 		.4byte	.LFE29-.LFB29
 5518 0100 00000000 		.4byte	.LFB30
 5519 0104 90000000 		.4byte	.LFE30-.LFB30
 5520 0108 00000000 		.4byte	.LFB31
 5521 010c 44000000 		.4byte	.LFE31-.LFB31
 5522 0110 00000000 		.4byte	.LFB32
 5523 0114 18000000 		.4byte	.LFE32-.LFB32
 5524 0118 00000000 		.4byte	.LFB33
 5525 011c 40000000 		.4byte	.LFE33-.LFB33
 5526 0120 00000000 		.4byte	.LFB34
 5527 0124 54000000 		.4byte	.LFE34-.LFB34
 5528 0128 00000000 		.4byte	.LFB35
 5529 012c 1C000000 		.4byte	.LFE35-.LFB35
 5530 0130 00000000 		.4byte	.LFB36
 5531 0134 70000000 		.4byte	.LFE36-.LFB36
 5532 0138 00000000 		.4byte	.LFB37
 5533 013c 34000000 		.4byte	.LFE37-.LFB37
 5534 0140 00000000 		.4byte	.LFB38
 5535 0144 40000000 		.4byte	.LFE38-.LFB38
 5536 0148 00000000 		.4byte	.LFB39
 5537 014c 34000000 		.4byte	.LFE39-.LFB39
 5538 0150 00000000 		.4byte	.LFB40
 5539 0154 50000000 		.4byte	.LFE40-.LFB40
 5540 0158 00000000 		.4byte	.LFB41
 5541 015c 38000000 		.4byte	.LFE41-.LFB41
 5542 0160 00000000 		.4byte	.LFB42
 5543 0164 E8000000 		.4byte	.LFE42-.LFB42
 5544 0168 00000000 		.4byte	.LFB43
 5545 016c 88000000 		.4byte	.LFE43-.LFB43
 5546 0170 00000000 		.4byte	.LFB44
 5547 0174 98000000 		.4byte	.LFE44-.LFB44
 5548 0178 00000000 		.4byte	.LFB45
 5549 017c 3C000000 		.4byte	.LFE45-.LFB45
 5550 0180 00000000 		.4byte	.LFB46
 5551 0184 6C000000 		.4byte	.LFE46-.LFB46
 5552 0188 00000000 		.4byte	.LFB47
 5553 018c AC000000 		.4byte	.LFE47-.LFB47
 5554 0190 00000000 		.4byte	0
 5555 0194 00000000 		.4byte	0
 5556              		.section	.debug_ranges,"",%progbits
 5557              	.Ldebug_ranges0:
 5558 0000 00000000 		.4byte	.LFB0
 5559 0004 48000000 		.4byte	.LFE0
 5560 0008 00000000 		.4byte	.LFB1
 5561 000c 48000000 		.4byte	.LFE1
 5562 0010 00000000 		.4byte	.LFB2
 5563 0014 1C000000 		.4byte	.LFE2
 5564 0018 00000000 		.4byte	.LFB3
 5565 001c 60000000 		.4byte	.LFE3
ARM GAS  C:\Users\akita\AppData\Local\Temp\ccTFmJyh.s 			page 168


 5566 0020 00000000 		.4byte	.LFB4
 5567 0024 6C000000 		.4byte	.LFE4
 5568 0028 00000000 		.4byte	.LFB5
 5569 002c 1C000000 		.4byte	.LFE5
 5570 0030 00000000 		.4byte	.LFB6
 5571 0034 5C010000 		.4byte	.LFE6
 5572 0038 00000000 		.4byte	.LFB7
 5573 003c 1C000000 		.4byte	.LFE7
 5574 0040 00000000 		.4byte	.LFB8
 5575 0044 24010000 		.4byte	.LFE8
 5576 0048 00000000 		.4byte	.LFB9
 5577 004c FC000000 		.4byte	.LFE9
 5578 0050 00000000 		.4byte	.LFB10
 5579 0054 4C000000 		.4byte	.LFE10
 5580 0058 00000000 		.4byte	.LFB11
 5581 005c 20000000 		.4byte	.LFE11
 5582 0060 00000000 		.4byte	.LFB12
 5583 0064 54000000 		.4byte	.LFE12
 5584 0068 00000000 		.4byte	.LFB13
 5585 006c 20000000 		.4byte	.LFE13
 5586 0070 00000000 		.4byte	.LFB14
 5587 0074 5C000000 		.4byte	.LFE14
 5588 0078 00000000 		.4byte	.LFB15
 5589 007c 1C000000 		.4byte	.LFE15
 5590 0080 00000000 		.4byte	.LFB16
 5591 0084 40000000 		.4byte	.LFE16
 5592 0088 00000000 		.4byte	.LFB17
 5593 008c 3C000000 		.4byte	.LFE17
 5594 0090 00000000 		.4byte	.LFB18
 5595 0094 34000000 		.4byte	.LFE18
 5596 0098 00000000 		.4byte	.LFB19
 5597 009c 20000000 		.4byte	.LFE19
 5598 00a0 00000000 		.4byte	.LFB20
 5599 00a4 4C000000 		.4byte	.LFE20
 5600 00a8 00000000 		.4byte	.LFB21
 5601 00ac 30000000 		.4byte	.LFE21
 5602 00b0 00000000 		.4byte	.LFB22
 5603 00b4 58000000 		.4byte	.LFE22
 5604 00b8 00000000 		.4byte	.LFB23
 5605 00bc 24000000 		.4byte	.LFE23
 5606 00c0 00000000 		.4byte	.LFB24
 5607 00c4 6C000000 		.4byte	.LFE24
 5608 00c8 00000000 		.4byte	.LFB25
 5609 00cc 40000000 		.4byte	.LFE25
 5610 00d0 00000000 		.4byte	.LFB26
 5611 00d4 60000000 		.4byte	.LFE26
 5612 00d8 00000000 		.4byte	.LFB27
 5613 00dc 68000000 		.4byte	.LFE27
 5614 00e0 00000000 		.4byte	.LFB28
 5615 00e4 58000000 		.4byte	.LFE28
 5616 00e8 00000000 		.4byte	.LFB29
 5617 00ec 1C000000 		.4byte	.LFE29
 5618 00f0 00000000 		.4byte	.LFB30
 5619 00f4 90000000 		.4byte	.LFE30
 5620 00f8 00000000 		.4byte	.LFB31
 5621 00fc 44000000 		.4byte	.LFE31
 5622 0100 00000000 		.4byte	.LFB32
ARM GAS  C:\Users\akita\AppData\Local\Temp\ccTFmJyh.s 			page 169


 5623 0104 18000000 		.4byte	.LFE32
 5624 0108 00000000 		.4byte	.LFB33
 5625 010c 40000000 		.4byte	.LFE33
 5626 0110 00000000 		.4byte	.LFB34
 5627 0114 54000000 		.4byte	.LFE34
 5628 0118 00000000 		.4byte	.LFB35
 5629 011c 1C000000 		.4byte	.LFE35
 5630 0120 00000000 		.4byte	.LFB36
 5631 0124 70000000 		.4byte	.LFE36
 5632 0128 00000000 		.4byte	.LFB37
 5633 012c 34000000 		.4byte	.LFE37
 5634 0130 00000000 		.4byte	.LFB38
 5635 0134 40000000 		.4byte	.LFE38
 5636 0138 00000000 		.4byte	.LFB39
 5637 013c 34000000 		.4byte	.LFE39
 5638 0140 00000000 		.4byte	.LFB40
 5639 0144 50000000 		.4byte	.LFE40
 5640 0148 00000000 		.4byte	.LFB41
 5641 014c 38000000 		.4byte	.LFE41
 5642 0150 00000000 		.4byte	.LFB42
 5643 0154 E8000000 		.4byte	.LFE42
 5644 0158 00000000 		.4byte	.LFB43
 5645 015c 88000000 		.4byte	.LFE43
 5646 0160 00000000 		.4byte	.LFB44
 5647 0164 98000000 		.4byte	.LFE44
 5648 0168 00000000 		.4byte	.LFB45
 5649 016c 3C000000 		.4byte	.LFE45
 5650 0170 00000000 		.4byte	.LFB46
 5651 0174 6C000000 		.4byte	.LFE46
 5652 0178 00000000 		.4byte	.LFB47
 5653 017c AC000000 		.4byte	.LFE47
 5654 0180 00000000 		.4byte	0
 5655 0184 00000000 		.4byte	0
 5656              		.section	.debug_line,"",%progbits
 5657              	.Ldebug_line0:
 5658 0000 E8060000 		.section	.debug_str,"MS",%progbits,1
 5658      02005C00 
 5658      00000201 
 5658      FB0E0D00 
 5658      01010101 
 5659              	.LASF10:
 5660 0000 75696E74 		.ascii	"uint16\000"
 5660      313600
 5661              	.LASF52:
 5662 0007 6C66636C 		.ascii	"lfclkSource\000"
 5662      6B536F75 
 5662      72636500 
 5663              	.LASF117:
 5664 0013 636F756E 		.ascii	"counterIntMaskTbl\000"
 5664      74657249 
 5664      6E744D61 
 5664      736B5462 
 5664      6C00
 5665              	.LASF118:
 5666 0025 63795379 		.ascii	"cySysWdtCallback\000"
 5666      73576474 
 5666      43616C6C 
ARM GAS  C:\Users\akita\AppData\Local\Temp\ccTFmJyh.s 			page 170


 5666      6261636B 
 5666      00
 5667              	.LASF67:
 5668 0036 43795379 		.ascii	"CySysWdtSetMode\000"
 5668      73576474 
 5668      5365744D 
 5668      6F646500 
 5669              	.LASF64:
 5670 0046 43795379 		.ascii	"CySysWdtUnlock\000"
 5670      73576474 
 5670      556E6C6F 
 5670      636B00
 5671              	.LASF46:
 5672 0055 6D656173 		.ascii	"measuredIloFreq\000"
 5672      75726564 
 5672      496C6F46 
 5672      72657100 
 5673              	.LASF66:
 5674 0065 636F756E 		.ascii	"counterNum\000"
 5674      7465724E 
 5674      756D00
 5675              	.LASF123:
 5676 0070 43795379 		.ascii	"CySysClkLfclkPosedgeCatch\000"
 5676      73436C6B 
 5676      4C66636C 
 5676      6B506F73 
 5676      65646765 
 5677              	.LASF80:
 5678 008a 43795379 		.ascii	"CySysWdtGetCascade\000"
 5678      73576474 
 5678      47657443 
 5678      61736361 
 5678      646500
 5679              	.LASF122:
 5680 009d 43795379 		.ascii	"CySysClkGetLfclkSource\000"
 5680      73436C6B 
 5680      4765744C 
 5680      66636C6B 
 5680      536F7572 
 5681              	.LASF26:
 5682 00b4 43795379 		.ascii	"CySysClkIloStartMeasurement\000"
 5682      73436C6B 
 5682      496C6F53 
 5682      74617274 
 5682      4D656173 
 5683              	.LASF113:
 5684 00d0 6C66636C 		.ascii	"lfclkPosedgeWdtCounter0Enabled\000"
 5684      6B506F73 
 5684      65646765 
 5684      57647443 
 5684      6F756E74 
 5685              	.LASF7:
 5686 00ef 6C6F6E67 		.ascii	"long long unsigned int\000"
 5686      206C6F6E 
 5686      6720756E 
 5686      7369676E 
 5686      65642069 
ARM GAS  C:\Users\akita\AppData\Local\Temp\ccTFmJyh.s 			page 171


 5687              	.LASF47:
 5688 0106 63757272 		.ascii	"currentIloTrimValue\000"
 5688      656E7449 
 5688      6C6F5472 
 5688      696D5661 
 5688      6C756500 
 5689              	.LASF79:
 5690 011a 43795379 		.ascii	"CySysClkWcoEnabled\000"
 5690      73436C6B 
 5690      57636F45 
 5690      6E61626C 
 5690      656400
 5691              	.LASF50:
 5692 012d 6572726F 		.ascii	"errorRangeStatus\000"
 5692      7252616E 
 5692      67655374 
 5692      61747573 
 5692      00
 5693              	.LASF23:
 5694 013e 43795379 		.ascii	"CySysClkWcoSetHighPowerMode\000"
 5694      73436C6B 
 5694      57636F53 
 5694      65744869 
 5694      6768506F 
 5695              	.LASF6:
 5696 015a 6C6F6E67 		.ascii	"long long int\000"
 5696      206C6F6E 
 5696      6720696E 
 5696      7400
 5697              	.LASF0:
 5698 0168 7369676E 		.ascii	"signed char\000"
 5698      65642063 
 5698      68617200 
 5699              	.LASF95:
 5700 0174 66756E63 		.ascii	"function\000"
 5700      74696F6E 
 5700      00
 5701              	.LASF27:
 5702 017d 696E7465 		.ascii	"interruptState\000"
 5702      72727570 
 5702      74537461 
 5702      746500
 5703              	.LASF21:
 5704 018c 63795764 		.ascii	"cyWdtCallback\000"
 5704      7443616C 
 5704      6C626163 
 5704      6B00
 5705              	.LASF12:
 5706 019a 696E7433 		.ascii	"int32\000"
 5706      3200
 5707              	.LASF48:
 5708 01a0 696C6F41 		.ascii	"iloAccuracyValue\000"
 5708      63637572 
 5708      61637956 
 5708      616C7565 
 5708      00
 5709              	.LASF20:
ARM GAS  C:\Users\akita\AppData\Local\Temp\ccTFmJyh.s 			page 172


 5710 01b1 63795F73 		.ascii	"cy_sys_timer_delaytype_enum\000"
 5710      79735F74 
 5710      696D6572 
 5710      5F64656C 
 5710      61797479 
 5711              	.LASF85:
 5712 01cd 62697473 		.ascii	"bits\000"
 5712      00
 5713              	.LASF4:
 5714 01d2 6C6F6E67 		.ascii	"long int\000"
 5714      20696E74 
 5714      00
 5715              	.LASF83:
 5716 01db 72656756 		.ascii	"regValue\000"
 5716      616C7565 
 5716      00
 5717              	.LASF60:
 5718 01e4 636C6F63 		.ascii	"clockSel\000"
 5718      6B53656C 
 5718      00
 5719              	.LASF9:
 5720 01ed 75696E74 		.ascii	"uint8\000"
 5720      3800
 5721              	.LASF71:
 5722 01f3 656E6162 		.ascii	"enable\000"
 5722      6C6500
 5723              	.LASF14:
 5724 01fa 646F7562 		.ascii	"double\000"
 5724      6C6500
 5725              	.LASF32:
 5726 0201 636F6D70 		.ascii	"compensatedCycles\000"
 5726      656E7361 
 5726      74656443 
 5726      79636C65 
 5726      7300
 5727              	.LASF25:
 5728 0213 43795379 		.ascii	"CySysClkIloStop\000"
 5728      73436C6B 
 5728      496C6F53 
 5728      746F7000 
 5729              	.LASF33:
 5730 0223 696C6F43 		.ascii	"iloCompensatedCycles\000"
 5730      6F6D7065 
 5730      6E736174 
 5730      65644379 
 5730      636C6573 
 5731              	.LASF93:
 5732 0238 636F756E 		.ascii	"countersMask\000"
 5732      74657273 
 5732      4D61736B 
 5732      00
 5733              	.LASF11:
 5734 0245 75696E74 		.ascii	"uint32\000"
 5734      333200
 5735              	.LASF30:
 5736 024c 43795379 		.ascii	"CySysClkIloStopMeasurement\000"
 5736      73436C6B 
ARM GAS  C:\Users\akita\AppData\Local\Temp\ccTFmJyh.s 			page 173


 5736      496C6F53 
 5736      746F704D 
 5736      65617375 
 5737              	.LASF24:
 5738 0267 43795379 		.ascii	"CySysClkWcoSetLowPowerMode\000"
 5738      73436C6B 
 5738      57636F53 
 5738      65744C6F 
 5738      77506F77 
 5739              	.LASF96:
 5740 0282 70726576 		.ascii	"prevCallback\000"
 5740      43616C6C 
 5740      6261636B 
 5740      00
 5741              	.LASF81:
 5742 028f 43795379 		.ascii	"CySysWdtSetMatch\000"
 5742      73576474 
 5742      5365744D 
 5742      61746368 
 5742      00
 5743              	.LASF78:
 5744 02a0 636F756E 		.ascii	"countersEnableStatus\000"
 5744      74657273 
 5744      456E6162 
 5744      6C655374 
 5744      61747573 
 5745              	.LASF116:
 5746 02b5 77647449 		.ascii	"wdtIsrMask\000"
 5746      73724D61 
 5746      736B00
 5747              	.LASF73:
 5748 02c0 43795379 		.ascii	"CySysWdtEnable\000"
 5748      73576474 
 5748      456E6162 
 5748      6C6500
 5749              	.LASF94:
 5750 02cf 43795379 		.ascii	"CySysWdtSetInterruptCallback\000"
 5750      73576474 
 5750      53657449 
 5750      6E746572 
 5750      72757074 
 5751              	.LASF74:
 5752 02ec 636F756E 		.ascii	"counterMask\000"
 5752      7465724D 
 5752      61736B00 
 5753              	.LASF72:
 5754 02f8 43795379 		.ascii	"CySysWdtGetClearOnMatch\000"
 5754      73576474 
 5754      47657443 
 5754      6C656172 
 5754      4F6E4D61 
 5755              	.LASF8:
 5756 0310 756E7369 		.ascii	"unsigned int\000"
 5756      676E6564 
 5756      20696E74 
 5756      00
 5757              	.LASF53:
ARM GAS  C:\Users\akita\AppData\Local\Temp\ccTFmJyh.s 			page 174


 5758 031d 43795379 		.ascii	"CySysClkSetLfclkSource\000"
 5758      73436C6B 
 5758      5365744C 
 5758      66636C6B 
 5758      536F7572 
 5759              	.LASF103:
 5760 0334 66697273 		.ascii	"firstCount\000"
 5760      74436F75 
 5760      6E7400
 5761              	.LASF98:
 5762 033f 72657443 		.ascii	"retCallback\000"
 5762      616C6C62 
 5762      61636B00 
 5763              	.LASF31:
 5764 034b 64657369 		.ascii	"desiredDelay\000"
 5764      72656444 
 5764      656C6179 
 5764      00
 5765              	.LASF5:
 5766 0358 6C6F6E67 		.ascii	"long unsigned int\000"
 5766      20756E73 
 5766      69676E65 
 5766      6420696E 
 5766      7400
 5767              	.LASF109:
 5768 036a 6D617463 		.ascii	"matchValue\000"
 5768      6856616C 
 5768      756500
 5769              	.LASF105:
 5770 0375 43795379 		.ascii	"CySysClkLfclkPosedgeRestore\000"
 5770      73436C6B 
 5770      4C66636C 
 5770      6B506F73 
 5770      65646765 
 5771              	.LASF99:
 5772 0391 43795379 		.ascii	"CySysWdtEnableCounterIsr\000"
 5772      73576474 
 5772      456E6162 
 5772      6C65436F 
 5772      756E7465 
 5773              	.LASF121:
 5774 03aa 433A5C55 		.ascii	"C:\\Users\\akita\\Documents\\TPT02\\TPT02.cydsn\000"
 5774      73657273 
 5774      5C616B69 
 5774      74615C44 
 5774      6F63756D 
 5775              	.LASF49:
 5776 03d5 7472696D 		.ascii	"trimStep\000"
 5776      53746570 
 5776      00
 5777              	.LASF3:
 5778 03de 73686F72 		.ascii	"short unsigned int\000"
 5778      7420756E 
 5778      7369676E 
 5778      65642069 
 5778      6E7400
 5779              	.LASF65:
ARM GAS  C:\Users\akita\AppData\Local\Temp\ccTFmJyh.s 			page 175


 5780 03f1 43795379 		.ascii	"CySysWdtGetEnabledStatus\000"
 5780      73576474 
 5780      47657445 
 5780      6E61626C 
 5780      65645374 
 5781              	.LASF97:
 5782 040a 43795379 		.ascii	"CySysWdtGetInterruptCallback\000"
 5782      73576474 
 5782      47657449 
 5782      6E746572 
 5782      72757074 
 5783              	.LASF28:
 5784 0427 696C6F54 		.ascii	"iloTrimTrig\000"
 5784      72696D54 
 5784      72696700 
 5785              	.LASF45:
 5786 0433 43795379 		.ascii	"CySysClkIloUpdateTrimReg\000"
 5786      73436C6B 
 5786      496C6F55 
 5786      70646174 
 5786      65547269 
 5787              	.LASF29:
 5788 044c 43795379 		.ascii	"CySysClkIloStart\000"
 5788      73436C6B 
 5788      496C6F53 
 5788      74617274 
 5788      00
 5789              	.LASF84:
 5790 045d 43795379 		.ascii	"CySysWdtSetToggleBit\000"
 5790      73576474 
 5790      53657454 
 5790      6F67676C 
 5790      65426974 
 5791              	.LASF58:
 5792 0472 706F7765 		.ascii	"powerModeStatus\000"
 5792      724D6F64 
 5792      65537461 
 5792      74757300 
 5793              	.LASF102:
 5794 0482 43795379 		.ascii	"CySysWatchdogFeed\000"
 5794      73576174 
 5794      6368646F 
 5794      67466565 
 5794      6400
 5795              	.LASF17:
 5796 0494 72656733 		.ascii	"reg32\000"
 5796      3200
 5797              	.LASF112:
 5798 049a 64656661 		.ascii	"defaultIloTrimRegValue\000"
 5798      756C7449 
 5798      6C6F5472 
 5798      696D5265 
 5798      6756616C 
 5799              	.LASF111:
 5800 04b1 746D7056 		.ascii	"tmpValue\000"
 5800      616C7565 
 5800      00
ARM GAS  C:\Users\akita\AppData\Local\Temp\ccTFmJyh.s 			page 176


 5801              	.LASF37:
 5802 04ba 72657475 		.ascii	"returnStatus\000"
 5802      726E5374 
 5802      61747573 
 5802      00
 5803              	.LASF54:
 5804 04c7 736F7572 		.ascii	"source\000"
 5804      636500
 5805              	.LASF59:
 5806 04ce 43795379 		.ascii	"CySysClkWcoClockOutSelect\000"
 5806      73436C6B 
 5806      57636F43 
 5806      6C6F636B 
 5806      4F757453 
 5807              	.LASF22:
 5808 04e8 73697A65 		.ascii	"sizetype\000"
 5808      74797065 
 5808      00
 5809              	.LASF87:
 5810 04f1 43795379 		.ascii	"CySysWdtGetMatch\000"
 5810      73576474 
 5810      4765744D 
 5810      61746368 
 5810      00
 5811              	.LASF82:
 5812 0502 6D617463 		.ascii	"match\000"
 5812      6800
 5813              	.LASF51:
 5814 0508 43795379 		.ascii	"CySysClkIloRestoreFactoryTrim\000"
 5814      73436C6B 
 5814      496C6F52 
 5814      6573746F 
 5814      72654661 
 5815              	.LASF18:
 5816 0526 43595F53 		.ascii	"CY_SYS_TIMER_WAIT\000"
 5816      59535F54 
 5816      494D4552 
 5816      5F574149 
 5816      5400
 5817              	.LASF36:
 5818 0538 63686563 		.ascii	"checkStatus\000"
 5818      6B537461 
 5818      74757300 
 5819              	.LASF124:
 5820 0544 63796465 		.ascii	"cydelayFreqHz\000"
 5820      6C617946 
 5820      72657148 
 5820      7A00
 5821              	.LASF92:
 5822 0552 43795379 		.ascii	"CySysWdtResetCounters\000"
 5822      73576474 
 5822      52657365 
 5822      74436F75 
 5822      6E746572 
 5823              	.LASF43:
 5824 0568 77616974 		.ascii	"waitUntilCntr1Stops\000"
 5824      556E7469 
ARM GAS  C:\Users\akita\AppData\Local\Temp\ccTFmJyh.s 			page 177


 5824      6C436E74 
 5824      72315374 
 5824      6F707300 
 5825              	.LASF90:
 5826 057c 43795379 		.ascii	"CySysWdtClearInterrupt\000"
 5826      73576474 
 5826      436C6561 
 5826      72496E74 
 5826      65727275 
 5827              	.LASF13:
 5828 0593 666C6F61 		.ascii	"float\000"
 5828      7400
 5829              	.LASF110:
 5830 0599 43795379 		.ascii	"CySysTimerDelayUntilMatch\000"
 5830      7354696D 
 5830      65724465 
 5830      6C617955 
 5830      6E74696C 
 5831              	.LASF106:
 5832 05b3 43795379 		.ascii	"CySysTimerDelay\000"
 5832      7354696D 
 5832      65724465 
 5832      6C617900 
 5833              	.LASF63:
 5834 05c3 43795379 		.ascii	"CySysWdtLocked\000"
 5834      73576474 
 5834      4C6F636B 
 5834      656400
 5835              	.LASF1:
 5836 05d2 756E7369 		.ascii	"unsigned char\000"
 5836      676E6564 
 5836      20636861 
 5836      7200
 5837              	.LASF35:
 5838 05e0 636F6D70 		.ascii	"compensateRunningStatus\000"
 5838      656E7361 
 5838      74655275 
 5838      6E6E696E 
 5838      67537461 
 5839              	.LASF104:
 5840 05f8 6C66636C 		.ascii	"lfclkPosedgeEnabledWdtCounter\000"
 5840      6B506F73 
 5840      65646765 
 5840      456E6162 
 5840      6C656457 
 5841              	.LASF108:
 5842 0616 64656C61 		.ascii	"delay\000"
 5842      7900
 5843              	.LASF2:
 5844 061c 73686F72 		.ascii	"short int\000"
 5844      7420696E 
 5844      7400
 5845              	.LASF107:
 5846 0626 64656C61 		.ascii	"delayType\000"
 5846      79547970 
 5846      6500
 5847              	.LASF75:
ARM GAS  C:\Users\akita\AppData\Local\Temp\ccTFmJyh.s 			page 178


 5848 0630 43795379 		.ascii	"CySysWdtDisable\000"
 5848      73576474 
 5848      44697361 
 5848      626C6500 
 5849              	.LASF39:
 5850 0640 43795379 		.ascii	"CySysClkIloTrim\000"
 5850      73436C6B 
 5850      496C6F54 
 5850      72696D00 
 5851              	.LASF62:
 5852 0650 43795379 		.ascii	"CySysClkIloEnabled\000"
 5852      73436C6B 
 5852      496C6F45 
 5852      6E61626C 
 5852      656400
 5853              	.LASF89:
 5854 0663 43795379 		.ascii	"CySysWdtGetInterruptSource\000"
 5854      73576474 
 5854      47657449 
 5854      6E746572 
 5854      72757074 
 5855              	.LASF120:
 5856 067e 47656E65 		.ascii	"Generated_Source\\PSoC4\\CyLFClk.c\000"
 5856      72617465 
 5856      645F536F 
 5856      75726365 
 5856      5C50536F 
 5857              	.LASF41:
 5858 069f 696C6F41 		.ascii	"iloAccuracyInPPT\000"
 5858      63637572 
 5858      61637949 
 5858      6E505054 
 5858      00
 5859              	.LASF56:
 5860 06b0 43795379 		.ascii	"CySysClkWcoStop\000"
 5860      73436C6B 
 5860      57636F53 
 5860      746F7000 
 5861              	.LASF57:
 5862 06c0 43795379 		.ascii	"CySysClkWcoSetPowerMode\000"
 5862      73436C6B 
 5862      57636F53 
 5862      6574506F 
 5862      7765724D 
 5863              	.LASF100:
 5864 06d8 43795379 		.ascii	"CySysWdtDisableCounterIsr\000"
 5864      73576474 
 5864      44697361 
 5864      626C6543 
 5864      6F756E74 
 5865              	.LASF15:
 5866 06f2 63686172 		.ascii	"char\000"
 5866      00
 5867              	.LASF40:
 5868 06f7 6D6F6465 		.ascii	"mode\000"
 5868      00
 5869              	.LASF88:
ARM GAS  C:\Users\akita\AppData\Local\Temp\ccTFmJyh.s 			page 179


 5870 06fc 43795379 		.ascii	"CySysWdtGetCount\000"
 5870      73576474 
 5870      47657443 
 5870      6F756E74 
 5870      00
 5871              	.LASF61:
 5872 070d 43795379 		.ascii	"CySysWdtLock\000"
 5872      73576474 
 5872      4C6F636B 
 5872      00
 5873              	.LASF115:
 5874 071a 64697361 		.ascii	"disableServicedIsr\000"
 5874      626C6553 
 5874      65727669 
 5874      63656449 
 5874      737200
 5875              	.LASF70:
 5876 072d 43795379 		.ascii	"CySysWdtSetClearOnMatch\000"
 5876      73576474 
 5876      53657443 
 5876      6C656172 
 5876      4F6E4D61 
 5877              	.LASF76:
 5878 0745 43795379 		.ascii	"CySysWdtSetCascade\000"
 5878      73576474 
 5878      53657443 
 5878      61736361 
 5878      646500
 5879              	.LASF42:
 5880 0758 74696D65 		.ascii	"timeOutClocks\000"
 5880      4F757443 
 5880      6C6F636B 
 5880      7300
 5881              	.LASF44:
 5882 0766 7472696D 		.ascii	"trimRunningStatus\000"
 5882      52756E6E 
 5882      696E6753 
 5882      74617475 
 5882      7300
 5883              	.LASF69:
 5884 0778 43795379 		.ascii	"CySysWdtGetMode\000"
 5884      73576474 
 5884      4765744D 
 5884      6F646500 
 5885              	.LASF34:
 5886 0788 64657369 		.ascii	"desiredDelayInCounts\000"
 5886      72656444 
 5886      656C6179 
 5886      496E436F 
 5886      756E7473 
 5887              	.LASF55:
 5888 079d 43795379 		.ascii	"CySysClkWcoStart\000"
 5888      73436C6B 
 5888      57636F53 
 5888      74617274 
 5888      00
 5889              	.LASF91:
ARM GAS  C:\Users\akita\AppData\Local\Temp\ccTFmJyh.s 			page 180


 5890 07ae 7764744C 		.ascii	"wdtLockState\000"
 5890      6F636B53 
 5890      74617465 
 5890      00
 5891              	.LASF68:
 5892 07bb 636F6E66 		.ascii	"configRegValue\000"
 5892      69675265 
 5892      6756616C 
 5892      756500
 5893              	.LASF114:
 5894 07ca 6C66636C 		.ascii	"lfclkPosedgeWdtCounter0Mode\000"
 5894      6B506F73 
 5894      65646765 
 5894      57647443 
 5894      6F756E74 
 5895              	.LASF77:
 5896 07e6 63617363 		.ascii	"cascadeMask\000"
 5896      6164654D 
 5896      61736B00 
 5897              	.LASF16:
 5898 07f2 63797374 		.ascii	"cystatus\000"
 5898      61747573 
 5898      00
 5899              	.LASF119:
 5900 07fb 474E5520 		.ascii	"GNU C 4.9.3 20150303 (release) [ARM/embedded-4_9-br"
 5900      4320342E 
 5900      392E3320 
 5900      32303135 
 5900      30333033 
 5901 082e 616E6368 		.ascii	"anch revision 221220] -mcpu=cortex-m0 -mthumb -g -O"
 5901      20726576 
 5901      6973696F 
 5901      6E203232 
 5901      31323230 
 5902 0861 30202D66 		.ascii	"0 -ffunction-sections -ffat-lto-objects\000"
 5902      66756E63 
 5902      74696F6E 
 5902      2D736563 
 5902      74696F6E 
 5903              	.LASF101:
 5904 0889 43795379 		.ascii	"CySysWdtIsr\000"
 5904      73576474 
 5904      49737200 
 5905              	.LASF86:
 5906 0895 43795379 		.ascii	"CySysWdtGetToggleBit\000"
 5906      73576474 
 5906      47657454 
 5906      6F67676C 
 5906      65426974 
 5907              	.LASF38:
 5908 08aa 43795379 		.ascii	"CySysClkIloCompensate\000"
 5908      73436C6B 
 5908      496C6F43 
 5908      6F6D7065 
 5908      6E736174 
 5909              	.LASF19:
 5910 08c0 43595F53 		.ascii	"CY_SYS_TIMER_INTERRUPT\000"
ARM GAS  C:\Users\akita\AppData\Local\Temp\ccTFmJyh.s 			page 181


 5910      59535F54 
 5910      494D4552 
 5910      5F494E54 
 5910      45525255 
 5911              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 4.9.3 20150303 (release) [ARM/embedded-4_9-br
