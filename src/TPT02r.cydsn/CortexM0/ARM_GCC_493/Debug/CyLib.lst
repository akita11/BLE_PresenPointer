ARM GAS  C:\Users\akita\AppData\Local\Temp\ccaIVzD4.s 			page 1


   1              		.cpu cortex-m0
   2              		.fpu softvfp
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 6
  10              		.eabi_attribute 34, 0
  11              		.eabi_attribute 18, 4
  12              		.code	16
  13              		.file	"CyLib.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.global	cydelayFreqHz
  18              		.data
  19              		.align	2
  20              		.type	cydelayFreqHz, %object
  21              		.size	cydelayFreqHz, 4
  22              	cydelayFreqHz:
  23 0000 00366E01 		.word	24000000
  24              		.global	cydelayFreqKhz
  25              		.align	2
  26              		.type	cydelayFreqKhz, %object
  27              		.size	cydelayFreqKhz, 4
  28              	cydelayFreqKhz:
  29 0004 C05D0000 		.word	24000
  30              		.global	cydelayFreqMhz
  31              		.type	cydelayFreqMhz, %object
  32              		.size	cydelayFreqMhz, 1
  33              	cydelayFreqMhz:
  34 0008 18       		.byte	24
  35              		.global	cydelay32kMs
  36 0009 000000   		.align	2
  37              		.type	cydelay32kMs, %object
  38              		.size	cydelay32kMs, 4
  39              	cydelay32kMs:
  40 000c 0000E02E 		.word	786432000
  41              		.bss
  42              		.align	2
  43              	CySysTickCallbacks:
  44 0000 00000000 		.space	20
  44      00000000 
  44      00000000 
  44      00000000 
  44      00000000 
  45              		.global	CySysTickInitVar
  46              		.align	2
  47              		.type	CySysTickInitVar, %object
  48              		.size	CySysTickInitVar, 4
  49              	CySysTickInitVar:
  50 0014 00000000 		.space	4
  51              		.global	cyImoFreqMhz2Reg
  52              		.section	.rodata
  53              		.align	2
ARM GAS  C:\Users\akita\AppData\Local\Temp\ccaIVzD4.s 			page 2


  54              		.type	cyImoFreqMhz2Reg, %object
  55              		.size	cyImoFreqMhz2Reg, 46
  56              	cyImoFreqMhz2Reg:
  57 0000 03       		.byte	3
  58 0001 04       		.byte	4
  59 0002 05       		.byte	5
  60 0003 06       		.byte	6
  61 0004 07       		.byte	7
  62 0005 08       		.byte	8
  63 0006 09       		.byte	9
  64 0007 0A       		.byte	10
  65 0008 0B       		.byte	11
  66 0009 0C       		.byte	12
  67 000a 0E       		.byte	14
  68 000b 0F       		.byte	15
  69 000c 10       		.byte	16
  70 000d 11       		.byte	17
  71 000e 12       		.byte	18
  72 000f 13       		.byte	19
  73 0010 14       		.byte	20
  74 0011 15       		.byte	21
  75 0012 16       		.byte	22
  76 0013 17       		.byte	23
  77 0014 18       		.byte	24
  78 0015 19       		.byte	25
  79 0016 1B       		.byte	27
  80 0017 1C       		.byte	28
  81 0018 1D       		.byte	29
  82 0019 1E       		.byte	30
  83 001a 1F       		.byte	31
  84 001b 20       		.byte	32
  85 001c 21       		.byte	33
  86 001d 22       		.byte	34
  87 001e 23       		.byte	35
  88 001f 25       		.byte	37
  89 0020 26       		.byte	38
  90 0021 27       		.byte	39
  91 0022 28       		.byte	40
  92 0023 29       		.byte	41
  93 0024 2A       		.byte	42
  94 0025 2B       		.byte	43
  95 0026 2E       		.byte	46
  96 0027 2F       		.byte	47
  97 0028 30       		.byte	48
  98 0029 31       		.byte	49
  99 002a 32       		.byte	50
 100 002b 33       		.byte	51
 101 002c 34       		.byte	52
 102 002d 35       		.byte	53
 103              		.global	CySysClkPumpConfig
 104 002e 0000     		.data
 105              		.align	2
 106              		.type	CySysClkPumpConfig, %object
 107              		.size	CySysClkPumpConfig, 4
 108              	CySysClkPumpConfig:
 109 0010 01000000 		.word	1
 110              		.section	.text.CySysClkImoStart,"ax",%progbits
ARM GAS  C:\Users\akita\AppData\Local\Temp\ccaIVzD4.s 			page 3


 111              		.align	2
 112              		.global	CySysClkImoStart
 113              		.code	16
 114              		.thumb_func
 115              		.type	CySysClkImoStart, %function
 116              	CySysClkImoStart:
 117              	.LFB2:
 118              		.file 1 "Generated_Source\\PSoC4\\CyLib.c"
   1:Generated_Source\PSoC4/CyLib.c **** /***************************************************************************//**
   2:Generated_Source\PSoC4/CyLib.c **** * \file CyLib.c
   3:Generated_Source\PSoC4/CyLib.c **** * \version 5.50
   4:Generated_Source\PSoC4/CyLib.c **** *
   5:Generated_Source\PSoC4/CyLib.c **** * \brief Provides a system API for the Clocking, Interrupts, SysTick, and
   6:Generated_Source\PSoC4/CyLib.c **** * Voltage Detect.
   7:Generated_Source\PSoC4/CyLib.c **** *
   8:Generated_Source\PSoC4/CyLib.c **** * \note Documentation of the API's in this file is located in the PSoC 4 System
   9:Generated_Source\PSoC4/CyLib.c **** * Reference Guide provided with PSoC Creator.
  10:Generated_Source\PSoC4/CyLib.c **** *
  11:Generated_Source\PSoC4/CyLib.c **** ********************************************************************************
  12:Generated_Source\PSoC4/CyLib.c **** * \copyright
  13:Generated_Source\PSoC4/CyLib.c **** * Copyright 2010-2016, Cypress Semiconductor Corporation.  All rights reserved.
  14:Generated_Source\PSoC4/CyLib.c **** * You may use this file only in accordance with the license, terms, conditions,
  15:Generated_Source\PSoC4/CyLib.c **** * disclaimers, and limitations in the end user license agreement accompanying
  16:Generated_Source\PSoC4/CyLib.c **** * the software package with which this file was provided.
  17:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
  18:Generated_Source\PSoC4/CyLib.c **** 
  19:Generated_Source\PSoC4/CyLib.c **** #include "CyLib.h"
  20:Generated_Source\PSoC4/CyLib.c **** 
  21:Generated_Source\PSoC4/CyLib.c **** /* CySysClkWriteImoFreq() || CySysClkImoEnableWcoLock() */
  22:Generated_Source\PSoC4/CyLib.c **** #if ((CY_IP_SRSSV2 && CY_IP_FMLT) || CY_IP_IMO_TRIMMABLE_BY_WCO)
  23:Generated_Source\PSoC4/CyLib.c ****     #include "CyFlash.h"
  24:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_SRSSV2 && CY_IP_FMLT) */
  25:Generated_Source\PSoC4/CyLib.c **** 
  26:Generated_Source\PSoC4/CyLib.c **** /* Do not use these definitions directly in your application */
  27:Generated_Source\PSoC4/CyLib.c **** uint32 cydelayFreqHz  = CYDEV_BCLK__SYSCLK__HZ;
  28:Generated_Source\PSoC4/CyLib.c **** uint32 cydelayFreqKhz = (CYDEV_BCLK__SYSCLK__HZ + CY_DELAY_1K_MINUS_1_THRESHOLD) / CY_DELAY_1K_THRE
  29:Generated_Source\PSoC4/CyLib.c **** uint8  cydelayFreqMhz = (uint8)((CYDEV_BCLK__SYSCLK__HZ + CY_DELAY_1M_MINUS_1_THRESHOLD) / CY_DELAY
  30:Generated_Source\PSoC4/CyLib.c **** uint32 cydelay32kMs   = CY_DELAY_MS_OVERFLOW * ((CYDEV_BCLK__SYSCLK__HZ + CY_DELAY_1K_MINUS_1_THRES
  31:Generated_Source\PSoC4/CyLib.c ****                         CY_DELAY_1K_THRESHOLD);
  32:Generated_Source\PSoC4/CyLib.c **** 
  33:Generated_Source\PSoC4/CyLib.c **** 
  34:Generated_Source\PSoC4/CyLib.c **** static cySysTickCallback CySysTickCallbacks[CY_SYS_SYST_NUM_OF_CALLBACKS];
  35:Generated_Source\PSoC4/CyLib.c **** static void CySysTickServiceCallbacks(void);
  36:Generated_Source\PSoC4/CyLib.c **** 
  37:Generated_Source\PSoC4/CyLib.c **** #if (CY_IP_SRSSV2 && CY_IP_PLL)
  38:Generated_Source\PSoC4/CyLib.c ****     static uint32 CySysClkPllGetBypassMode(uint32 pll);
  39:Generated_Source\PSoC4/CyLib.c ****     static cystatus CySysClkPllConfigChangeAllowed(uint32 pll);
  40:Generated_Source\PSoC4/CyLib.c **** #endif /* #if (CY_IP_SRSSV2 && CY_IP_PLL) */
  41:Generated_Source\PSoC4/CyLib.c **** 
  42:Generated_Source\PSoC4/CyLib.c **** 
  43:Generated_Source\PSoC4/CyLib.c **** /***************************************************************************//**
  44:Generated_Source\PSoC4/CyLib.c **** * Indicates whether or not the SysTick has been initialized. The variable is
  45:Generated_Source\PSoC4/CyLib.c **** * initialized to 0 and set to 1 the first time CySysTickStart() is called.
  46:Generated_Source\PSoC4/CyLib.c **** *
  47:Generated_Source\PSoC4/CyLib.c **** * This allows the component to restart without reinitialization after the first
  48:Generated_Source\PSoC4/CyLib.c **** * call to the CySysTickStart() routine.
  49:Generated_Source\PSoC4/CyLib.c **** *
ARM GAS  C:\Users\akita\AppData\Local\Temp\ccaIVzD4.s 			page 4


  50:Generated_Source\PSoC4/CyLib.c **** * If reinitialization of the SysTick is required, call CySysTickInit() before
  51:Generated_Source\PSoC4/CyLib.c **** * calling CySysTickStart(). Alternatively, the SysTick can be reinitialized by
  52:Generated_Source\PSoC4/CyLib.c **** * calling the CySysTickInit() and CySysTickEnable() functions.
  53:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
  54:Generated_Source\PSoC4/CyLib.c **** uint32 CySysTickInitVar = 0u;
  55:Generated_Source\PSoC4/CyLib.c **** 
  56:Generated_Source\PSoC4/CyLib.c **** 
  57:Generated_Source\PSoC4/CyLib.c **** #if(CY_IP_SRSSV2)
  58:Generated_Source\PSoC4/CyLib.c ****         /* Conversion between CySysClkWriteImoFreq() parameter and register's value */
  59:Generated_Source\PSoC4/CyLib.c ****         const uint8 cyImoFreqMhz2Reg[CY_SYS_CLK_IMO_FREQ_TABLE_SIZE] = {
  60:Generated_Source\PSoC4/CyLib.c ****             /*  3 MHz */ 0x03u,  /*  4 MHz */ 0x04u,  /*  5 MHz */ 0x05u,  /*  6 MHz */ 0x06u,
  61:Generated_Source\PSoC4/CyLib.c ****             /*  7 MHz */ 0x07u,  /*  8 MHz */ 0x08u,  /*  9 MHz */ 0x09u,  /* 10 MHz */ 0x0Au,
  62:Generated_Source\PSoC4/CyLib.c ****             /* 11 MHz */ 0x0Bu,  /* 12 MHz */ 0x0Cu,  /* 13 MHz */ 0x0Eu,  /* 14 MHz */ 0x0Fu,
  63:Generated_Source\PSoC4/CyLib.c ****             /* 15 MHz */ 0x10u,  /* 16 MHz */ 0x11u,  /* 17 MHz */ 0x12u,  /* 18 MHz */ 0x13u,
  64:Generated_Source\PSoC4/CyLib.c ****             /* 19 MHz */ 0x14u,  /* 20 MHz */ 0x15u,  /* 21 MHz */ 0x16u,  /* 22 MHz */ 0x17u,
  65:Generated_Source\PSoC4/CyLib.c ****             /* 23 MHz */ 0x18u,  /* 24 MHz */ 0x19u,  /* 25 MHz */ 0x1Bu,  /* 26 MHz */ 0x1Cu,
  66:Generated_Source\PSoC4/CyLib.c ****             /* 27 MHz */ 0x1Du,  /* 28 MHz */ 0x1Eu,  /* 29 MHz */ 0x1Fu,  /* 30 MHz */ 0x20u,
  67:Generated_Source\PSoC4/CyLib.c ****             /* 31 MHz */ 0x21u,  /* 32 MHz */ 0x22u,  /* 33 MHz */ 0x23u,  /* 34 MHz */ 0x25u,
  68:Generated_Source\PSoC4/CyLib.c ****             /* 35 MHz */ 0x26u,  /* 36 MHz */ 0x27u,  /* 37 MHz */ 0x28u,  /* 38 MHz */ 0x29u,
  69:Generated_Source\PSoC4/CyLib.c ****             /* 39 MHz */ 0x2Au,  /* 40 MHz */ 0x2Bu,  /* 41 MHz */ 0x2Eu,  /* 42 MHz */ 0x2Fu,
  70:Generated_Source\PSoC4/CyLib.c ****             /* 43 MHz */ 0x30u,  /* 44 MHz */ 0x31u,  /* 45 MHz */ 0x32u,  /* 46 MHz */ 0x33u,
  71:Generated_Source\PSoC4/CyLib.c ****             /* 47 MHz */ 0x34u,  /* 48 MHz */ 0x35u };
  72:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_SRSSV2) */
  73:Generated_Source\PSoC4/CyLib.c **** 
  74:Generated_Source\PSoC4/CyLib.c **** #if (CY_IP_IMO_TRIMMABLE_BY_WCO)
  75:Generated_Source\PSoC4/CyLib.c ****         /* Conversion between IMO frequency and WCO DPLL max offset steps */
  76:Generated_Source\PSoC4/CyLib.c ****         const uint8 cyImoFreqMhz2DpllOffset[CY_SYS_CLK_IMO_FREQ_WCO_DPLL_TABLE_SIZE] = {
  77:Generated_Source\PSoC4/CyLib.c ****             /* 26 MHz */  238u, /* 27 MHz */  219u, /* 28 MHz */  201u, /* 29 MHz */  185u,
  78:Generated_Source\PSoC4/CyLib.c ****             /* 30 MHz */  170u, /* 31 MHz */  155u, /* 32 MHz */  142u, /* 33 MHz */  130u,
  79:Generated_Source\PSoC4/CyLib.c ****             /* 34 MHz */  118u, /* 35 MHz */  107u, /* 36 MHz */   96u, /* 37 MHz */  86u,
  80:Generated_Source\PSoC4/CyLib.c ****             /* 38 MHz */   77u, /* 39 MHz */   68u, /* 40 MHz */   59u, /* 41 MHz */  51u,
  81:Generated_Source\PSoC4/CyLib.c ****             /* 42 MHz */   44u, /* 43 MHz */   36u, /* 44 MHz */   29u, /* 45 MHz */  23u,
  82:Generated_Source\PSoC4/CyLib.c ****             /* 46 MHz */   16u, /* 47 MHz */   10u, /* 48 MHz */   4u };
  83:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_IMO_TRIMMABLE_BY_WCO) */
  84:Generated_Source\PSoC4/CyLib.c **** 
  85:Generated_Source\PSoC4/CyLib.c **** /* Stored CY_SYS_CLK_IMO_TRIM4_REG when modified for USB lock */
  86:Generated_Source\PSoC4/CyLib.c **** #if (CY_IP_IMO_TRIMMABLE_BY_USB && CY_IP_SRSSV2)
  87:Generated_Source\PSoC4/CyLib.c ****     uint32 CySysClkImoTrim4 = 0u;
  88:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_IMO_TRIMMABLE_BY_USB && CY_IP_SRSSV2) */
  89:Generated_Source\PSoC4/CyLib.c **** 
  90:Generated_Source\PSoC4/CyLib.c **** /* Stored PUMP_SEL configuration during disable (IMO output by default) */
  91:Generated_Source\PSoC4/CyLib.c **** uint32 CySysClkPumpConfig = CY_SYS_CLK_PUMP_ENABLE;
  92:Generated_Source\PSoC4/CyLib.c **** 
  93:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
  94:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysClkImoStart
  95:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
  96:Generated_Source\PSoC4/CyLib.c **** *
  97:Generated_Source\PSoC4/CyLib.c **** * Enables the IMO.
  98:Generated_Source\PSoC4/CyLib.c **** *
  99:Generated_Source\PSoC4/CyLib.c **** * For PSoC 4100M / PSoC 4200M / PSoC 4000S / PSoC 4100S / PSoC 4400 devices,
 100:Generated_Source\PSoC4/CyLib.c **** * this function will also enable WCO lock if selected in the Design Wide
 101:Generated_Source\PSoC4/CyLib.c **** * Resources tab.
 102:Generated_Source\PSoC4/CyLib.c **** *
 103:Generated_Source\PSoC4/CyLib.c **** * For PSoC 4200L / devices, this function will also enable USB lock if selected
 104:Generated_Source\PSoC4/CyLib.c **** * in the Design Wide Resources tab.
 105:Generated_Source\PSoC4/CyLib.c **** *
 106:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
ARM GAS  C:\Users\akita\AppData\Local\Temp\ccaIVzD4.s 			page 5


 107:Generated_Source\PSoC4/CyLib.c **** void CySysClkImoStart(void)
 108:Generated_Source\PSoC4/CyLib.c **** {
 119              		.loc 1 108 0
 120              		.cfi_startproc
 121 0000 80B5     		push	{r7, lr}
 122              		.cfi_def_cfa_offset 8
 123              		.cfi_offset 7, -8
 124              		.cfi_offset 14, -4
 125 0002 00AF     		add	r7, sp, #0
 126              		.cfi_def_cfa_register 7
 109:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_CLK_IMO_CONFIG_REG |= CY_SYS_CLK_IMO_CONFIG_ENABLE;
 127              		.loc 1 109 0
 128 0004 044B     		ldr	r3, .L2
 129 0006 044A     		ldr	r2, .L2
 130 0008 1268     		ldr	r2, [r2]
 131 000a 8021     		mov	r1, #128
 132 000c 0906     		lsl	r1, r1, #24
 133 000e 0A43     		orr	r2, r1
 134 0010 1A60     		str	r2, [r3]
 110:Generated_Source\PSoC4/CyLib.c **** 
 111:Generated_Source\PSoC4/CyLib.c ****     #if (CY_IP_IMO_TRIMMABLE_BY_WCO)
 112:Generated_Source\PSoC4/CyLib.c ****         #if (CYDEV_IMO_TRIMMED_BY_WCO == 1u)
 113:Generated_Source\PSoC4/CyLib.c ****             CySysClkImoEnableWcoLock();
 114:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CYDEV_IMO_TRIMMED_BY_WCO == 1u) */
 115:Generated_Source\PSoC4/CyLib.c ****     #endif  /* (CY_IP_IMO_TRIMMABLE_BY_WCO) */
 116:Generated_Source\PSoC4/CyLib.c **** 
 117:Generated_Source\PSoC4/CyLib.c **** 
 118:Generated_Source\PSoC4/CyLib.c ****     #if (CY_IP_IMO_TRIMMABLE_BY_USB)
 119:Generated_Source\PSoC4/CyLib.c ****         #if (CYDEV_IMO_TRIMMED_BY_USB == 1u)
 120:Generated_Source\PSoC4/CyLib.c ****             CySysClkImoEnableUsbLock();
 121:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CYDEV_IMO_TRIMMED_BY_USB == 1u) */
 122:Generated_Source\PSoC4/CyLib.c ****     #endif  /* (CY_IP_IMO_TRIMMABLE_BY_USB) */
 123:Generated_Source\PSoC4/CyLib.c **** 
 124:Generated_Source\PSoC4/CyLib.c **** }
 135              		.loc 1 124 0
 136 0012 BD46     		mov	sp, r7
 137              		@ sp needed
 138 0014 80BD     		pop	{r7, pc}
 139              	.L3:
 140 0016 C046     		.align	2
 141              	.L2:
 142 0018 08010B40 		.word	1074462984
 143              		.cfi_endproc
 144              	.LFE2:
 145              		.size	CySysClkImoStart, .-CySysClkImoStart
 146              		.section	.text.CySysClkImoStop,"ax",%progbits
 147              		.align	2
 148              		.global	CySysClkImoStop
 149              		.code	16
 150              		.thumb_func
 151              		.type	CySysClkImoStop, %function
 152              	CySysClkImoStop:
 153              	.LFB3:
 125:Generated_Source\PSoC4/CyLib.c **** 
 126:Generated_Source\PSoC4/CyLib.c **** 
 127:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
 128:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysClkImoStop
ARM GAS  C:\Users\akita\AppData\Local\Temp\ccaIVzD4.s 			page 6


 129:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
 130:Generated_Source\PSoC4/CyLib.c **** *
 131:Generated_Source\PSoC4/CyLib.c **** * Disables the IMO.
 132:Generated_Source\PSoC4/CyLib.c **** *
 133:Generated_Source\PSoC4/CyLib.c **** * For PSoC 4100M / PSoC 4200M / PSoC 4000S / PSoC 4100S / PSoC 4400 devices,
 134:Generated_Source\PSoC4/CyLib.c **** * this function will also disable WCO lock.
 135:Generated_Source\PSoC4/CyLib.c **** *
 136:Generated_Source\PSoC4/CyLib.c **** * For PSoC PSoC 4200L devices, this function will also disable USB lock.
 137:Generated_Source\PSoC4/CyLib.c **** *
 138:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
 139:Generated_Source\PSoC4/CyLib.c **** void CySysClkImoStop(void)
 140:Generated_Source\PSoC4/CyLib.c **** {
 154              		.loc 1 140 0
 155              		.cfi_startproc
 156 0000 80B5     		push	{r7, lr}
 157              		.cfi_def_cfa_offset 8
 158              		.cfi_offset 7, -8
 159              		.cfi_offset 14, -4
 160 0002 00AF     		add	r7, sp, #0
 161              		.cfi_def_cfa_register 7
 141:Generated_Source\PSoC4/CyLib.c ****     #if (CY_IP_IMO_TRIMMABLE_BY_WCO)
 142:Generated_Source\PSoC4/CyLib.c ****         CySysClkImoDisableWcoLock();
 143:Generated_Source\PSoC4/CyLib.c ****     #endif  /* (CY_IP_IMO_TRIMMABLE_BY_WCO) */
 144:Generated_Source\PSoC4/CyLib.c **** 
 145:Generated_Source\PSoC4/CyLib.c ****     #if (CY_IP_IMO_TRIMMABLE_BY_USB)
 146:Generated_Source\PSoC4/CyLib.c ****         CySysClkImoDisableUsbLock();
 147:Generated_Source\PSoC4/CyLib.c ****     #endif  /* (CY_IP_IMO_TRIMMABLE_BY_USB) */
 148:Generated_Source\PSoC4/CyLib.c **** 
 149:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_CLK_IMO_CONFIG_REG &= ( uint32 ) ( ~( uint32 )CY_SYS_CLK_IMO_CONFIG_ENABLE);
 162              		.loc 1 149 0
 163 0004 034B     		ldr	r3, .L5
 164 0006 034A     		ldr	r2, .L5
 165 0008 1268     		ldr	r2, [r2]
 166 000a 5200     		lsl	r2, r2, #1
 167 000c 5208     		lsr	r2, r2, #1
 168 000e 1A60     		str	r2, [r3]
 150:Generated_Source\PSoC4/CyLib.c **** }
 169              		.loc 1 150 0
 170 0010 BD46     		mov	sp, r7
 171              		@ sp needed
 172 0012 80BD     		pop	{r7, pc}
 173              	.L6:
 174              		.align	2
 175              	.L5:
 176 0014 08010B40 		.word	1074462984
 177              		.cfi_endproc
 178              	.LFE3:
 179              		.size	CySysClkImoStop, .-CySysClkImoStop
 180              		.section	.text.CySysClkWriteHfclkDirect,"ax",%progbits
 181              		.align	2
 182              		.global	CySysClkWriteHfclkDirect
 183              		.code	16
 184              		.thumb_func
 185              		.type	CySysClkWriteHfclkDirect, %function
 186              	CySysClkWriteHfclkDirect:
 187              	.LFB4:
 151:Generated_Source\PSoC4/CyLib.c **** 
ARM GAS  C:\Users\akita\AppData\Local\Temp\ccaIVzD4.s 			page 7


 152:Generated_Source\PSoC4/CyLib.c **** #if (CY_IP_IMO_TRIMMABLE_BY_WCO)
 153:Generated_Source\PSoC4/CyLib.c **** 
 154:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
 155:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkImoEnableWcoLock
 156:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
 157:Generated_Source\PSoC4/CyLib.c ****     *
 158:Generated_Source\PSoC4/CyLib.c ****     * Enables the IMO to WCO lock feature. This function works only if the WCO is
 159:Generated_Source\PSoC4/CyLib.c ****     * already enabled. If the WCO is not enabled then this function returns
 160:Generated_Source\PSoC4/CyLib.c ****     * without enabling the lock feature.
 161:Generated_Source\PSoC4/CyLib.c ****     *
 162:Generated_Source\PSoC4/CyLib.c ****     * It takes up to 20 ms for the IMO to stabilize. The delay is implemented with
 163:Generated_Source\PSoC4/CyLib.c ****     * CyDelay() function. The delay interval is measured based on the system
 164:Generated_Source\PSoC4/CyLib.c ****     * frequency defined by PSoC Creator at build time. If System clock frequency
 165:Generated_Source\PSoC4/CyLib.c ****     * is changed in runtime, the CyDelayFreq() with the appropriate parameter
 166:Generated_Source\PSoC4/CyLib.c ****     * should be called.
 167:Generated_Source\PSoC4/CyLib.c ****     *
 168:Generated_Source\PSoC4/CyLib.c ****     * For PSoC 4200L devices, note that the IMO can lock to either WCO or USB
 169:Generated_Source\PSoC4/CyLib.c ****     * but not both.
 170:Generated_Source\PSoC4/CyLib.c ****     *
 171:Generated_Source\PSoC4/CyLib.c ****     * This function is applicable for PSoC 4100M / PSoC 4200M / PSoC 4000S /
 172:Generated_Source\PSoC4/CyLib.c ****     * PSoC 4100S / PSoC 4400 / PSoC 4200L.
 173:Generated_Source\PSoC4/CyLib.c ****     *
 174:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
 175:Generated_Source\PSoC4/CyLib.c ****     void CySysClkImoEnableWcoLock(void)
 176:Generated_Source\PSoC4/CyLib.c ****     {
 177:Generated_Source\PSoC4/CyLib.c ****         #if(CY_IP_SRSSV2)
 178:Generated_Source\PSoC4/CyLib.c ****             uint32 i;
 179:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_SRSSV2) */
 180:Generated_Source\PSoC4/CyLib.c **** 
 181:Generated_Source\PSoC4/CyLib.c ****         uint32 freq;
 182:Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
 183:Generated_Source\PSoC4/CyLib.c ****         uint32 regTmp;
 184:Generated_Source\PSoC4/CyLib.c ****         uint32 lfLimit = 0u;
 185:Generated_Source\PSoC4/CyLib.c ****         volatile uint32 flashCtlReg;
 186:Generated_Source\PSoC4/CyLib.c **** 
 187:Generated_Source\PSoC4/CyLib.c ****         if (0u != CySysClkWcoEnabled())
 188:Generated_Source\PSoC4/CyLib.c ****         {
 189:Generated_Source\PSoC4/CyLib.c ****             interruptState = CyEnterCriticalSection();
 190:Generated_Source\PSoC4/CyLib.c **** 
 191:Generated_Source\PSoC4/CyLib.c ****             /* Set oscillator interface control port to WCO */
 192:Generated_Source\PSoC4/CyLib.c ****             #if (CY_IP_IMO_TRIMMABLE_BY_WCO && CY_IP_IMO_TRIMMABLE_BY_USB)
 193:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_CLK_OSCINTF_CTL_REG =
 194:Generated_Source\PSoC4/CyLib.c ****                     (CY_SYS_CLK_OSCINTF_CTL_REG & (uint32) ~CY_SYS_CLK_OSCINTF_CTL_PORT_SEL_MASK) |
 195:Generated_Source\PSoC4/CyLib.c ****                     CY_SYS_CLK_OSCINTF_CTL_PORT_SEL_WCO;
 196:Generated_Source\PSoC4/CyLib.c ****             #endif /* (CY_IP_IMO_TRIMMABLE_BY_WCO && CY_IP_IMO_TRIMMABLE_BY_USB) */
 197:Generated_Source\PSoC4/CyLib.c **** 
 198:Generated_Source\PSoC4/CyLib.c ****             /* Get current IMO frequency based on the register value */
 199:Generated_Source\PSoC4/CyLib.c ****             #if(CY_IP_SRSSV2)
 200:Generated_Source\PSoC4/CyLib.c ****                 freq = CY_SYS_CLK_IMO_MIN_FREQ_MHZ;
 201:Generated_Source\PSoC4/CyLib.c ****                 for(i = 0u; i < CY_SYS_CLK_IMO_FREQ_TABLE_SIZE; i++)
 202:Generated_Source\PSoC4/CyLib.c ****                 {
 203:Generated_Source\PSoC4/CyLib.c ****                     if ((uint8) (CY_SYS_CLK_IMO_TRIM2_REG & CY_SYS_CLK_IMO_FREQ_BITS_MASK) == cyImo
 204:Generated_Source\PSoC4/CyLib.c ****                     {
 205:Generated_Source\PSoC4/CyLib.c ****                         freq = i + CY_SYS_CLK_IMO_FREQ_TABLE_OFFSET;
 206:Generated_Source\PSoC4/CyLib.c ****                         break;
 207:Generated_Source\PSoC4/CyLib.c ****                     }
 208:Generated_Source\PSoC4/CyLib.c ****                 }
ARM GAS  C:\Users\akita\AppData\Local\Temp\ccaIVzD4.s 			page 8


 209:Generated_Source\PSoC4/CyLib.c ****             #else
 210:Generated_Source\PSoC4/CyLib.c ****                 /* Calculate frequency by shifting register field value and adding constant. */
 211:Generated_Source\PSoC4/CyLib.c ****                 #if(CY_IP_SRSSLT)
 212:Generated_Source\PSoC4/CyLib.c ****                     freq = (((uint32) ((CY_SYS_CLK_IMO_SELECT_REG & ((uint32) CY_SYS_CLK_IMO_SELECT
 213:Generated_Source\PSoC4/CyLib.c ****                                         CY_SYS_CLK_IMO_SELECT_FREQ_SHIFT) + CY_SYS_CLK_IMO_MIN_FREQ
 214:Generated_Source\PSoC4/CyLib.c ****                                       ((CY_SYS_CLK_SELECT_REG >> CY_SYS_CLK_SELECT_HFCLK_DIV_SHIFT)
 215:Generated_Source\PSoC4/CyLib.c ****                                        (uint32) CY_SYS_CLK_SELECT_HFCLK_DIV_MASK));
 216:Generated_Source\PSoC4/CyLib.c ****                 #else
 217:Generated_Source\PSoC4/CyLib.c ****                     freq = ((uint32) ((CY_SYS_CLK_IMO_SELECT_REG & ((uint32) CY_SYS_CLK_IMO_SELECT_
 218:Generated_Source\PSoC4/CyLib.c ****                                        CY_SYS_CLK_IMO_SELECT_FREQ_SHIFT) + CY_SYS_CLK_IMO_MIN_FREQ_
 219:Generated_Source\PSoC4/CyLib.c ****                 #endif  /* (CY_IP_SRSSLT) */
 220:Generated_Source\PSoC4/CyLib.c **** 
 221:Generated_Source\PSoC4/CyLib.c ****             #endif  /* (CY_IP_SRSSV2) */
 222:Generated_Source\PSoC4/CyLib.c **** 
 223:Generated_Source\PSoC4/CyLib.c ****             /* For the WCO locking mode, the IMO gain needs to be CY_SYS_CLK_IMO_TRIM4_GAIN */
 224:Generated_Source\PSoC4/CyLib.c ****             #if(CY_IP_SRSSV2)
 225:Generated_Source\PSoC4/CyLib.c ****                 if ((CY_SYS_CLK_IMO_TRIM4_REG & CY_SYS_CLK_IMO_TRIM4_GAIN_MASK) == 0u)
 226:Generated_Source\PSoC4/CyLib.c ****                 {
 227:Generated_Source\PSoC4/CyLib.c **** 			         CY_SYS_CLK_IMO_TRIM4_REG = (CY_SYS_CLK_IMO_TRIM4_REG & (uint32) ~CY_SYS_CLK_IMO_TRIM4_G
 228:Generated_Source\PSoC4/CyLib.c **** 			                  				     CY_SYS_CLK_IMO_TRIM4_WCO_GAIN;
 229:Generated_Source\PSoC4/CyLib.c ****                 }
 230:Generated_Source\PSoC4/CyLib.c ****             #endif /* (CY_IP_SRSSV2) */
 231:Generated_Source\PSoC4/CyLib.c **** 
 232:Generated_Source\PSoC4/CyLib.c ****             regTmp  = CY_SYS_CLK_WCO_DPLL_REG & ~(CY_SYS_CLK_WCO_DPLL_MULT_MASK |
 233:Generated_Source\PSoC4/CyLib.c ****                                                   CY_SYS_CLK_WCO_CONFIG_DPLL_LF_IGAIN_MASK |
 234:Generated_Source\PSoC4/CyLib.c ****                                                   CY_SYS_CLK_WCO_CONFIG_DPLL_LF_PGAIN_MASK |
 235:Generated_Source\PSoC4/CyLib.c ****                                                   CY_SYS_CLK_WCO_CONFIG_DPLL_LF_LIMIT_MASK);
 236:Generated_Source\PSoC4/CyLib.c **** 
 237:Generated_Source\PSoC4/CyLib.c ****             /* Set multiplier to determine IMO frequency in multiples of the WCO frequency */
 238:Generated_Source\PSoC4/CyLib.c ****             regTmp |= (CY_SYS_CLK_WCO_DPLL_MULT_VALUE(freq) & CY_SYS_CLK_WCO_DPLL_MULT_MASK);
 239:Generated_Source\PSoC4/CyLib.c **** 
 240:Generated_Source\PSoC4/CyLib.c ****             /* Set DPLL Loop Filter Integral and Proportional Gains Setting */
 241:Generated_Source\PSoC4/CyLib.c ****             regTmp |= (CY_SYS_CLK_WCO_CONFIG_DPLL_LF_IGAIN | CY_SYS_CLK_WCO_CONFIG_DPLL_LF_PGAIN);
 242:Generated_Source\PSoC4/CyLib.c **** 
 243:Generated_Source\PSoC4/CyLib.c ****             /* Set maximum allowed IMO offset */
 244:Generated_Source\PSoC4/CyLib.c ****             if (freq < CY_SYS_CLK_IMO_FREQ_WCO_DPLL_SAFE_POINT)
 245:Generated_Source\PSoC4/CyLib.c ****             {
 246:Generated_Source\PSoC4/CyLib.c ****                 regTmp |= (CY_SYS_CLK_WCO_CONFIG_DPLL_LF_LIMIT_MAX << CY_SYS_CLK_WCO_CONFIG_DPLL_LF
 247:Generated_Source\PSoC4/CyLib.c ****             }
 248:Generated_Source\PSoC4/CyLib.c ****             else
 249:Generated_Source\PSoC4/CyLib.c ****             {
 250:Generated_Source\PSoC4/CyLib.c ****                 lfLimit = (uint32) CY_SFLASH_IMO_TRIM_REG(freq - CY_SYS_CLK_IMO_MIN_FREQ_MHZ) +
 251:Generated_Source\PSoC4/CyLib.c ****                     cyImoFreqMhz2DpllOffset[freq - CY_SYS_CLK_IMO_FREQ_WCO_DPLL_TABLE_OFFSET];
 252:Generated_Source\PSoC4/CyLib.c **** 
 253:Generated_Source\PSoC4/CyLib.c ****                 lfLimit = (lfLimit > CY_SYS_CLK_WCO_CONFIG_DPLL_LF_LIMIT_MAX) ?
 254:Generated_Source\PSoC4/CyLib.c ****                     CY_SYS_CLK_WCO_CONFIG_DPLL_LF_LIMIT_MAX : lfLimit;
 255:Generated_Source\PSoC4/CyLib.c **** 
 256:Generated_Source\PSoC4/CyLib.c ****                 regTmp |= (lfLimit << CY_SYS_CLK_WCO_CONFIG_DPLL_LF_LIMIT_SHIFT);
 257:Generated_Source\PSoC4/CyLib.c ****             }
 258:Generated_Source\PSoC4/CyLib.c **** 
 259:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_WCO_DPLL_REG = regTmp;
 260:Generated_Source\PSoC4/CyLib.c **** 
 261:Generated_Source\PSoC4/CyLib.c ****             flashCtlReg = CY_FLASH_CTL_REG;
 262:Generated_Source\PSoC4/CyLib.c ****             CySysFlashSetWaitCycles(CY_SYS_CLK_IMO_MAX_FREQ_MHZ);
 263:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_WCO_CONFIG_REG |= CY_SYS_CLK_WCO_CONFIG_DPLL_ENABLE;
 264:Generated_Source\PSoC4/CyLib.c ****             CyDelay(CY_SYS_CLK_WCO_IMO_TIMEOUT_MS);
 265:Generated_Source\PSoC4/CyLib.c ****             CY_FLASH_CTL_REG = flashCtlReg;
ARM GAS  C:\Users\akita\AppData\Local\Temp\ccaIVzD4.s 			page 9


 266:Generated_Source\PSoC4/CyLib.c **** 
 267:Generated_Source\PSoC4/CyLib.c ****             CyExitCriticalSection(interruptState);
 268:Generated_Source\PSoC4/CyLib.c ****         }
 269:Generated_Source\PSoC4/CyLib.c ****     }
 270:Generated_Source\PSoC4/CyLib.c **** 
 271:Generated_Source\PSoC4/CyLib.c **** 
 272:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
 273:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkImoDisableWcoLock
 274:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
 275:Generated_Source\PSoC4/CyLib.c ****     *
 276:Generated_Source\PSoC4/CyLib.c ****     * Disables the IMO to WCO lock feature.
 277:Generated_Source\PSoC4/CyLib.c ****     *
 278:Generated_Source\PSoC4/CyLib.c ****     * For PSoC 4200L devices, note that the IMO can lock to either WCO or USB
 279:Generated_Source\PSoC4/CyLib.c ****     * but not both.
 280:Generated_Source\PSoC4/CyLib.c ****     *
 281:Generated_Source\PSoC4/CyLib.c ****     * This function is applicable for PSoC 4100M / PSoC 4200M / PSoC 4000S /
 282:Generated_Source\PSoC4/CyLib.c ****     * PSoC 4100S / PSoC 4400 / PSoC 4200L.
 283:Generated_Source\PSoC4/CyLib.c ****     *
 284:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
 285:Generated_Source\PSoC4/CyLib.c ****     void CySysClkImoDisableWcoLock(void)
 286:Generated_Source\PSoC4/CyLib.c ****     {
 287:Generated_Source\PSoC4/CyLib.c ****         CY_SYS_CLK_WCO_CONFIG_REG &= (uint32) ~CY_SYS_CLK_WCO_CONFIG_DPLL_ENABLE;
 288:Generated_Source\PSoC4/CyLib.c ****     }
 289:Generated_Source\PSoC4/CyLib.c **** 
 290:Generated_Source\PSoC4/CyLib.c **** 
 291:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
 292:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkImoGetWcoLock
 293:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
 294:Generated_Source\PSoC4/CyLib.c ****     *
 295:Generated_Source\PSoC4/CyLib.c ****     * Reports the IMO to WCO lock enable state.
 296:Generated_Source\PSoC4/CyLib.c ****     *
 297:Generated_Source\PSoC4/CyLib.c ****     * This function is applicable for PSoC 4100M / PSoC 4200M / PSoC 4000S /
 298:Generated_Source\PSoC4/CyLib.c ****     * PSoC 4100S / PSoC 4400 / PSoC 4200L.
 299:Generated_Source\PSoC4/CyLib.c ****     *
 300:Generated_Source\PSoC4/CyLib.c ****     * \return 1 if IMO to WCO lock is enabled.
 301:Generated_Source\PSoC4/CyLib.c ****     * \return 0 if IMO to WCO lock is disabled.
 302:Generated_Source\PSoC4/CyLib.c ****     *
 303:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
 304:Generated_Source\PSoC4/CyLib.c ****     uint32 CySysClkImoGetWcoLock(void)
 305:Generated_Source\PSoC4/CyLib.c ****     {
 306:Generated_Source\PSoC4/CyLib.c ****         return ((0u != (CY_SYS_CLK_WCO_CONFIG_REG & CY_SYS_CLK_WCO_CONFIG_DPLL_ENABLE)) ?
 307:Generated_Source\PSoC4/CyLib.c ****                 (uint32) 1u :
 308:Generated_Source\PSoC4/CyLib.c ****                 (uint32) 0u);
 309:Generated_Source\PSoC4/CyLib.c ****     }
 310:Generated_Source\PSoC4/CyLib.c **** 
 311:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_IMO_TRIMMABLE_BY_WCO) */
 312:Generated_Source\PSoC4/CyLib.c **** 
 313:Generated_Source\PSoC4/CyLib.c **** 
 314:Generated_Source\PSoC4/CyLib.c **** #if (CY_IP_IMO_TRIMMABLE_BY_USB)
 315:Generated_Source\PSoC4/CyLib.c **** 
 316:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
 317:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkImoEnableUsbLock
 318:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
 319:Generated_Source\PSoC4/CyLib.c ****     *
 320:Generated_Source\PSoC4/CyLib.c ****     * Enables the IMO to USB lock feature.
 321:Generated_Source\PSoC4/CyLib.c ****     *
 322:Generated_Source\PSoC4/CyLib.c ****     * This function must be called before CySysClkWriteImoFreq().
ARM GAS  C:\Users\akita\AppData\Local\Temp\ccaIVzD4.s 			page 10


 323:Generated_Source\PSoC4/CyLib.c ****     *
 324:Generated_Source\PSoC4/CyLib.c ****     * This function is called from CySysClkImoStart() function if USB lock
 325:Generated_Source\PSoC4/CyLib.c ****     * selected in the Design Wide Resources tab.
 326:Generated_Source\PSoC4/CyLib.c ****     *
 327:Generated_Source\PSoC4/CyLib.c ****     * This is applicable for PSoC 4200L family of devices only. For PSoC 4200L
 328:Generated_Source\PSoC4/CyLib.c ****     * devices, the IMO can lock to either WCO or USB, but not both.
 329:Generated_Source\PSoC4/CyLib.c ****     *
 330:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
 331:Generated_Source\PSoC4/CyLib.c ****     void CySysClkImoEnableUsbLock(void)
 332:Generated_Source\PSoC4/CyLib.c ****     {
 333:Generated_Source\PSoC4/CyLib.c ****         /* Set oscillator interface control port to USB */
 334:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_IMO_TRIMMABLE_BY_WCO && CY_IP_IMO_TRIMMABLE_BY_USB)
 335:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_OSCINTF_CTL_REG = (CY_SYS_CLK_OSCINTF_CTL_REG & (uint32) ~CY_SYS_CLK_OSCINTF
 336:Generated_Source\PSoC4/CyLib.c ****                                           CY_SYS_CLK_OSCINTF_CTL_PORT_SEL_USB;
 337:Generated_Source\PSoC4/CyLib.c ****         #endif /* (CY_IP_IMO_TRIMMABLE_BY_WCO && CY_IP_IMO_TRIMMABLE_BY_USB) */
 338:Generated_Source\PSoC4/CyLib.c **** 
 339:Generated_Source\PSoC4/CyLib.c ****         #if(CY_IP_SRSSV2)
 340:Generated_Source\PSoC4/CyLib.c ****             /* Save CY_SYS_CLK_IMO_TRIM4_REG and set IMO gain for USB lock */
 341:Generated_Source\PSoC4/CyLib.c ****             CySysClkImoTrim4 = CY_SYS_CLK_IMO_TRIM4_REG & (uint32) ~CY_SYS_CLK_IMO_TRIM4_GAIN_MASK;
 342:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_IMO_TRIM4_REG = (CY_SYS_CLK_IMO_TRIM4_REG & (uint32) ~CY_SYS_CLK_IMO_TRIM4_G
 343:Generated_Source\PSoC4/CyLib.c ****                                         CY_SYS_CLK_IMO_TRIM4_USB_GAIN;
 344:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_SRSSV2) */
 345:Generated_Source\PSoC4/CyLib.c **** 
 346:Generated_Source\PSoC4/CyLib.c ****         CY_SYS_CLK_USBDEVv2_CR1_REG |= CY_SYS_CLK_USBDEVv2_CR1_ENABLE_LOCK;
 347:Generated_Source\PSoC4/CyLib.c ****     }
 348:Generated_Source\PSoC4/CyLib.c **** 
 349:Generated_Source\PSoC4/CyLib.c **** 
 350:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
 351:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkImoDisableUsbLock
 352:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
 353:Generated_Source\PSoC4/CyLib.c ****     *
 354:Generated_Source\PSoC4/CyLib.c ****     * Disables the IMO to USB lock feature.
 355:Generated_Source\PSoC4/CyLib.c ****     *
 356:Generated_Source\PSoC4/CyLib.c ****     * This function is called from CySysClkImoStop() function if USB lock selected
 357:Generated_Source\PSoC4/CyLib.c ****     * in the Design Wide Resources tab.
 358:Generated_Source\PSoC4/CyLib.c ****     *
 359:Generated_Source\PSoC4/CyLib.c ****     * This is applicable for PSoC 4200L family of devices only. For PSoC 4200L
 360:Generated_Source\PSoC4/CyLib.c ****     * devices, the IMO can lock to either WCO or USB, but not both.
 361:Generated_Source\PSoC4/CyLib.c ****     *
 362:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
 363:Generated_Source\PSoC4/CyLib.c ****     void CySysClkImoDisableUsbLock(void)
 364:Generated_Source\PSoC4/CyLib.c ****     {
 365:Generated_Source\PSoC4/CyLib.c ****         CY_SYS_CLK_USBDEVv2_CR1_REG &= (uint32) ~CY_SYS_CLK_USBDEVv2_CR1_ENABLE_LOCK;
 366:Generated_Source\PSoC4/CyLib.c **** 
 367:Generated_Source\PSoC4/CyLib.c ****         #if(CY_IP_SRSSV2)
 368:Generated_Source\PSoC4/CyLib.c ****             /* Restore CY_SYS_CLK_IMO_TRIM4_REG */
 369:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_IMO_TRIM4_REG = (CY_SYS_CLK_IMO_TRIM4_REG & (uint32) ~CY_SYS_CLK_IMO_TRIM4_G
 370:Generated_Source\PSoC4/CyLib.c ****                                     CySysClkImoTrim4;
 371:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_SRSSV2) */
 372:Generated_Source\PSoC4/CyLib.c ****     }
 373:Generated_Source\PSoC4/CyLib.c **** 
 374:Generated_Source\PSoC4/CyLib.c **** 
 375:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
 376:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkImoGetUsbLock
 377:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
 378:Generated_Source\PSoC4/CyLib.c ****     *
 379:Generated_Source\PSoC4/CyLib.c ****     * Reports the IMO to USB lock enable state.
ARM GAS  C:\Users\akita\AppData\Local\Temp\ccaIVzD4.s 			page 11


 380:Generated_Source\PSoC4/CyLib.c ****     *
 381:Generated_Source\PSoC4/CyLib.c ****     * This is applicable for PSoC 4200L family of devices only. For PSoC 4200L
 382:Generated_Source\PSoC4/CyLib.c ****     * devices, the IMO can lock to either WCO or USB, but not both.
 383:Generated_Source\PSoC4/CyLib.c ****     *
 384:Generated_Source\PSoC4/CyLib.c ****     * \return 1 if IMO to USB lock is enabled.
 385:Generated_Source\PSoC4/CyLib.c ****     * \return 0 if IMO to USB lock is disabled.
 386:Generated_Source\PSoC4/CyLib.c ****     *
 387:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
 388:Generated_Source\PSoC4/CyLib.c ****     uint32 CySysClkImoGetUsbLock(void)
 389:Generated_Source\PSoC4/CyLib.c ****     {
 390:Generated_Source\PSoC4/CyLib.c ****         return ((0u != (CY_SYS_CLK_USBDEVv2_CR1_REG & CY_SYS_CLK_USBDEVv2_CR1_ENABLE_LOCK)) ?
 391:Generated_Source\PSoC4/CyLib.c ****                 (uint32) 1u :
 392:Generated_Source\PSoC4/CyLib.c ****                 (uint32) 0u);
 393:Generated_Source\PSoC4/CyLib.c ****     }
 394:Generated_Source\PSoC4/CyLib.c **** #endif  /* (CY_IP_IMO_TRIMMABLE_BY_USB) */
 395:Generated_Source\PSoC4/CyLib.c **** 
 396:Generated_Source\PSoC4/CyLib.c **** 
 397:Generated_Source\PSoC4/CyLib.c **** 
 398:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
 399:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysClkWriteHfclkDirect
 400:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
 401:Generated_Source\PSoC4/CyLib.c **** *
 402:Generated_Source\PSoC4/CyLib.c **** * Selects the direct source for the HFCLK.
 403:Generated_Source\PSoC4/CyLib.c **** *
 404:Generated_Source\PSoC4/CyLib.c **** * The new source must be running and stable before calling this function.
 405:Generated_Source\PSoC4/CyLib.c **** *
 406:Generated_Source\PSoC4/CyLib.c **** * PSoC 4000:
 407:Generated_Source\PSoC4/CyLib.c **** * The SYSCLK has a maximum speed of 16 MHz, so HFCLK and SYSCLK dividers should
 408:Generated_Source\PSoC4/CyLib.c **** * be selected in a way to not to exceed 16 MHz for the System clock.
 409:Generated_Source\PSoC4/CyLib.c **** *
 410:Generated_Source\PSoC4/CyLib.c **** * If the SYSCLK clock frequency increases during device operation, call
 411:Generated_Source\PSoC4/CyLib.c **** * CySysFlashSetWaitCycles() with the appropriate parameter to adjust the number
 412:Generated_Source\PSoC4/CyLib.c **** * of clock cycles the cache will wait before sampling data comes back from
 413:Generated_Source\PSoC4/CyLib.c **** * Flash. If the SYSCLK clock frequency decreases, you can call
 414:Generated_Source\PSoC4/CyLib.c **** * CySysFlashSetWaitCycles() to improve the CPU performance. See
 415:Generated_Source\PSoC4/CyLib.c **** * CySysFlashSetWaitCycles() description for more information.
 416:Generated_Source\PSoC4/CyLib.c **** *
 417:Generated_Source\PSoC4/CyLib.c **** * Do not select PLL as the source for HFCLK if PLL output frequency exceeds
 418:Generated_Source\PSoC4/CyLib.c **** * maximum permissible value for HFCLK.
 419:Generated_Source\PSoC4/CyLib.c **** *
 420:Generated_Source\PSoC4/CyLib.c **** * \param clkSelect One of the available HFCLK direct sources.
 421:Generated_Source\PSoC4/CyLib.c **** * CY_SYS_CLK_HFCLK_IMO     IMO.
 422:Generated_Source\PSoC4/CyLib.c **** * CY_SYS_CLK_HFCLK_EXTCLK  External clock pin.
 423:Generated_Source\PSoC4/CyLib.c **** * CY_SYS_CLK_HFCLK_ECO     External crystal oscillator. Applicable for
 424:Generated_Source\PSoC4/CyLib.c **** *                          PSoC 4100 BLE / PSoC 4200 BLE / PSoC 4200L.
 425:Generated_Source\PSoC4/CyLib.c **** * CY_SYS_CLK_HFCLK_PLL0    PLL#0. Applicable for PSoC 4200L.
 426:Generated_Source\PSoC4/CyLib.c **** * CY_SYS_CLK_HFCLK_PLL1    PLL#1. Applicable for PSoC 4200L.
 427:Generated_Source\PSoC4/CyLib.c **** *
 428:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
 429:Generated_Source\PSoC4/CyLib.c **** void CySysClkWriteHfclkDirect(uint32 clkSelect)
 430:Generated_Source\PSoC4/CyLib.c **** {
 188              		.loc 1 430 0
 189              		.cfi_startproc
 190 0000 90B5     		push	{r4, r7, lr}
 191              		.cfi_def_cfa_offset 12
 192              		.cfi_offset 4, -12
 193              		.cfi_offset 7, -8
ARM GAS  C:\Users\akita\AppData\Local\Temp\ccaIVzD4.s 			page 12


 194              		.cfi_offset 14, -4
 195 0002 85B0     		sub	sp, sp, #20
 196              		.cfi_def_cfa_offset 32
 197 0004 00AF     		add	r7, sp, #0
 198              		.cfi_def_cfa_register 7
 199 0006 7860     		str	r0, [r7, #4]
 431:Generated_Source\PSoC4/CyLib.c ****     uint8  interruptState;
 432:Generated_Source\PSoC4/CyLib.c ****     uint32 tmpReg;
 433:Generated_Source\PSoC4/CyLib.c **** 
 434:Generated_Source\PSoC4/CyLib.c ****     interruptState = CyEnterCriticalSection();
 200              		.loc 1 434 0
 201 0008 0F23     		mov	r3, #15
 202 000a FC18     		add	r4, r7, r3
 203 000c FFF7FEFF 		bl	CyEnterCriticalSection
 204 0010 031C     		mov	r3, r0
 205 0012 2370     		strb	r3, [r4]
 435:Generated_Source\PSoC4/CyLib.c **** 
 436:Generated_Source\PSoC4/CyLib.c **** 
 437:Generated_Source\PSoC4/CyLib.c ****     tmpReg = CY_SYS_CLK_SELECT_REG & ~(CY_SYS_CLK_SELECT_DIRECT_SEL_MASK |
 206              		.loc 1 437 0
 207 0014 0B4B     		ldr	r3, .L8
 208 0016 1B68     		ldr	r3, [r3]
 209 0018 0722     		mov	r2, #7
 210 001a 9343     		bic	r3, r2
 211 001c BB60     		str	r3, [r7, #8]
 438:Generated_Source\PSoC4/CyLib.c ****                                        CY_SYS_CLK_SELECT_HFCLK_SEL_MASK);
 439:Generated_Source\PSoC4/CyLib.c **** 
 440:Generated_Source\PSoC4/CyLib.c **** #if (CY_IP_SRSSV2 && CY_IP_PLL)
 441:Generated_Source\PSoC4/CyLib.c ****     if ((CY_SYS_CLK_HFCLK_PLL0 == clkSelect) || (CY_SYS_CLK_HFCLK_PLL1 == clkSelect))
 442:Generated_Source\PSoC4/CyLib.c ****     {
 443:Generated_Source\PSoC4/CyLib.c ****         tmpReg |= (clkSelect & CY_SYS_CLK_SELECT_HFCLK_SEL_MASK);
 444:Generated_Source\PSoC4/CyLib.c ****     }
 445:Generated_Source\PSoC4/CyLib.c ****     else
 446:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_SRSSV2 && CY_IP_PLL) */
 447:Generated_Source\PSoC4/CyLib.c ****     {
 448:Generated_Source\PSoC4/CyLib.c ****         tmpReg |= (clkSelect & CY_SYS_CLK_SELECT_DIRECT_SEL_MASK);
 212              		.loc 1 448 0
 213 001e 7B68     		ldr	r3, [r7, #4]
 214 0020 0722     		mov	r2, #7
 215 0022 1340     		and	r3, r2
 216 0024 BA68     		ldr	r2, [r7, #8]
 217 0026 1343     		orr	r3, r2
 218 0028 BB60     		str	r3, [r7, #8]
 449:Generated_Source\PSoC4/CyLib.c ****     }
 450:Generated_Source\PSoC4/CyLib.c **** 
 451:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_CLK_SELECT_REG = tmpReg;
 219              		.loc 1 451 0
 220 002a 064B     		ldr	r3, .L8
 221 002c BA68     		ldr	r2, [r7, #8]
 222 002e 1A60     		str	r2, [r3]
 452:Generated_Source\PSoC4/CyLib.c **** 
 453:Generated_Source\PSoC4/CyLib.c ****     CyExitCriticalSection(interruptState);
 223              		.loc 1 453 0
 224 0030 0F23     		mov	r3, #15
 225 0032 FB18     		add	r3, r7, r3
 226 0034 1B78     		ldrb	r3, [r3]
 227 0036 181C     		mov	r0, r3
ARM GAS  C:\Users\akita\AppData\Local\Temp\ccaIVzD4.s 			page 13


 228 0038 FFF7FEFF 		bl	CyExitCriticalSection
 454:Generated_Source\PSoC4/CyLib.c **** }
 229              		.loc 1 454 0
 230 003c BD46     		mov	sp, r7
 231 003e 05B0     		add	sp, sp, #20
 232              		@ sp needed
 233 0040 90BD     		pop	{r4, r7, pc}
 234              	.L9:
 235 0042 C046     		.align	2
 236              	.L8:
 237 0044 00010B40 		.word	1074462976
 238              		.cfi_endproc
 239              	.LFE4:
 240              		.size	CySysClkWriteHfclkDirect, .-CySysClkWriteHfclkDirect
 241              		.section	.text.CySysEnablePumpClock,"ax",%progbits
 242              		.align	2
 243              		.global	CySysEnablePumpClock
 244              		.code	16
 245              		.thumb_func
 246              		.type	CySysEnablePumpClock, %function
 247              	CySysEnablePumpClock:
 248              	.LFB5:
 455:Generated_Source\PSoC4/CyLib.c **** 
 456:Generated_Source\PSoC4/CyLib.c **** 
 457:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
 458:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysEnablePumpClock
 459:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
 460:Generated_Source\PSoC4/CyLib.c **** *
 461:Generated_Source\PSoC4/CyLib.c **** * Enables / disables the pump clock.
 462:Generated_Source\PSoC4/CyLib.c **** *
 463:Generated_Source\PSoC4/CyLib.c **** * \param enable  
 464:Generated_Source\PSoC4/CyLib.c **** * CY_SYS_CLK_PUMP_DISABLE - Disables the pump clock
 465:Generated_Source\PSoC4/CyLib.c **** * CY_SYS_CLK_PUMP_ENABLE - Enables and restores the operating source of 
 466:Generated_Source\PSoC4/CyLib.c **** * the pump clock.
 467:Generated_Source\PSoC4/CyLib.c **** *
 468:Generated_Source\PSoC4/CyLib.c **** * \sideeffect
 469:Generated_Source\PSoC4/CyLib.c **** *  Enabling/disabling the pump clock does not guarantee glitch free operation 
 470:Generated_Source\PSoC4/CyLib.c **** *  when changing the IMO parameters or clock divider settings.
 471:Generated_Source\PSoC4/CyLib.c **** *
 472:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
 473:Generated_Source\PSoC4/CyLib.c **** void CySysEnablePumpClock(uint32 enable)
 474:Generated_Source\PSoC4/CyLib.c **** {
 249              		.loc 1 474 0
 250              		.cfi_startproc
 251 0000 80B5     		push	{r7, lr}
 252              		.cfi_def_cfa_offset 8
 253              		.cfi_offset 7, -8
 254              		.cfi_offset 14, -4
 255 0002 82B0     		sub	sp, sp, #8
 256              		.cfi_def_cfa_offset 16
 257 0004 00AF     		add	r7, sp, #0
 258              		.cfi_def_cfa_register 7
 259 0006 7860     		str	r0, [r7, #4]
 475:Generated_Source\PSoC4/CyLib.c ****     #if(CY_IP_SRSSV2)
 476:Generated_Source\PSoC4/CyLib.c ****         if (0u != (CY_SYS_CLK_PUMP_ENABLE & enable))
 260              		.loc 1 476 0
 261 0008 7B68     		ldr	r3, [r7, #4]
ARM GAS  C:\Users\akita\AppData\Local\Temp\ccaIVzD4.s 			page 14


 262 000a 0122     		mov	r2, #1
 263 000c 1340     		and	r3, r2
 264 000e 08D0     		beq	.L11
 477:Generated_Source\PSoC4/CyLib.c ****         {
 478:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_IMO_CONFIG_REG |= (CySysClkPumpConfig << CY_SYS_CLK_IMO_CONFIG_PUMP_SEL_SHIF
 265              		.loc 1 478 0
 266 0010 0C4A     		ldr	r2, .L13
 267 0012 0C4B     		ldr	r3, .L13
 268 0014 1968     		ldr	r1, [r3]
 269 0016 0C4B     		ldr	r3, .L13+4
 270 0018 1B68     		ldr	r3, [r3]
 271 001a 5B06     		lsl	r3, r3, #25
 272 001c 0B43     		orr	r3, r1
 273 001e 1360     		str	r3, [r2]
 274 0020 0CE0     		b	.L10
 275              	.L11:
 479:Generated_Source\PSoC4/CyLib.c ****         }
 480:Generated_Source\PSoC4/CyLib.c ****         else
 481:Generated_Source\PSoC4/CyLib.c ****         {
 482:Generated_Source\PSoC4/CyLib.c ****             CySysClkPumpConfig = (CY_SYS_CLK_IMO_CONFIG_REG >> CY_SYS_CLK_IMO_CONFIG_PUMP_SEL_SHIFT
 276              		.loc 1 482 0
 277 0022 084B     		ldr	r3, .L13
 278 0024 1B68     		ldr	r3, [r3]
 279 0026 5B0E     		lsr	r3, r3, #25
 280 0028 0722     		mov	r2, #7
 281 002a 1A40     		and	r2, r3
 282 002c 064B     		ldr	r3, .L13+4
 283 002e 1A60     		str	r2, [r3]
 483:Generated_Source\PSoC4/CyLib.c ****                                   CY_SYS_CLK_IMO_CONFIG_PUMP_SEL_MASK;
 484:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_IMO_CONFIG_REG &= ~(CY_SYS_CLK_IMO_CONFIG_PUMP_SEL_MASK << CY_SYS_CLK_IMO_CO
 284              		.loc 1 484 0
 285 0030 044B     		ldr	r3, .L13
 286 0032 044A     		ldr	r2, .L13
 287 0034 1268     		ldr	r2, [r2]
 288 0036 0549     		ldr	r1, .L13+8
 289 0038 0A40     		and	r2, r1
 290 003a 1A60     		str	r2, [r3]
 291              	.L10:
 485:Generated_Source\PSoC4/CyLib.c ****         }
 486:Generated_Source\PSoC4/CyLib.c ****     #else /* CY_IP_SRSSLT */
 487:Generated_Source\PSoC4/CyLib.c ****         if (0u != (CY_SYS_CLK_PUMP_ENABLE & enable))
 488:Generated_Source\PSoC4/CyLib.c ****         {
 489:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_SELECT_REG |= (CySysClkPumpConfig << CY_SYS_CLK_SELECT_PUMP_SEL_SHIFT);
 490:Generated_Source\PSoC4/CyLib.c ****         }
 491:Generated_Source\PSoC4/CyLib.c ****         else
 492:Generated_Source\PSoC4/CyLib.c ****         {
 493:Generated_Source\PSoC4/CyLib.c ****             CySysClkPumpConfig = (CY_SYS_CLK_SELECT_REG >> CY_SYS_CLK_SELECT_PUMP_SEL_SHIFT) & 
 494:Generated_Source\PSoC4/CyLib.c ****                                   CY_SYS_CLK_SELECT_PUMP_SEL_MASK;
 495:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_SELECT_REG &= ~(CY_SYS_CLK_SELECT_PUMP_SEL_MASK << CY_SYS_CLK_SELECT_PUMP_SE
 496:Generated_Source\PSoC4/CyLib.c ****         }
 497:Generated_Source\PSoC4/CyLib.c ****     #endif  /* (CY_IP_SRSSV2) */
 498:Generated_Source\PSoC4/CyLib.c **** }
 292              		.loc 1 498 0
 293 003c BD46     		mov	sp, r7
 294 003e 02B0     		add	sp, sp, #8
 295              		@ sp needed
 296 0040 80BD     		pop	{r7, pc}
ARM GAS  C:\Users\akita\AppData\Local\Temp\ccaIVzD4.s 			page 15


 297              	.L14:
 298 0042 C046     		.align	2
 299              	.L13:
 300 0044 08010B40 		.word	1074462984
 301 0048 00000000 		.word	CySysClkPumpConfig
 302 004c FFFFFFF1 		.word	-234881025
 303              		.cfi_endproc
 304              	.LFE5:
 305              		.size	CySysEnablePumpClock, .-CySysEnablePumpClock
 306              		.section	.text.CySysClkGetSysclkSource,"ax",%progbits
 307              		.align	2
 308              		.global	CySysClkGetSysclkSource
 309              		.code	16
 310              		.thumb_func
 311              		.type	CySysClkGetSysclkSource, %function
 312              	CySysClkGetSysclkSource:
 313              	.LFB6:
 499:Generated_Source\PSoC4/CyLib.c **** 
 500:Generated_Source\PSoC4/CyLib.c **** 
 501:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
 502:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysClkGetSysclkSource
 503:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
 504:Generated_Source\PSoC4/CyLib.c **** *
 505:Generated_Source\PSoC4/CyLib.c **** * Returns the source of the System clock.
 506:Generated_Source\PSoC4/CyLib.c **** *
 507:Generated_Source\PSoC4/CyLib.c **** * \return The same as \ref CySysClkWriteHfclkDirect() function parameters.
 508:Generated_Source\PSoC4/CyLib.c **** *
 509:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
 510:Generated_Source\PSoC4/CyLib.c **** uint32 CySysClkGetSysclkSource(void)
 511:Generated_Source\PSoC4/CyLib.c **** {
 314              		.loc 1 511 0
 315              		.cfi_startproc
 316 0000 90B5     		push	{r4, r7, lr}
 317              		.cfi_def_cfa_offset 12
 318              		.cfi_offset 4, -12
 319              		.cfi_offset 7, -8
 320              		.cfi_offset 14, -4
 321 0002 83B0     		sub	sp, sp, #12
 322              		.cfi_def_cfa_offset 24
 323 0004 00AF     		add	r7, sp, #0
 324              		.cfi_def_cfa_register 7
 512:Generated_Source\PSoC4/CyLib.c ****     uint8  interruptState;
 513:Generated_Source\PSoC4/CyLib.c ****     uint32 sysclkSource;
 514:Generated_Source\PSoC4/CyLib.c **** 
 515:Generated_Source\PSoC4/CyLib.c ****     interruptState = CyEnterCriticalSection();
 325              		.loc 1 515 0
 326 0006 FC1D     		add	r4, r7, #7
 327 0008 FFF7FEFF 		bl	CyEnterCriticalSection
 328 000c 031C     		mov	r3, r0
 329 000e 2370     		strb	r3, [r4]
 516:Generated_Source\PSoC4/CyLib.c **** 
 517:Generated_Source\PSoC4/CyLib.c **** #if (CY_IP_SRSSV2 && CY_IP_PLL)
 518:Generated_Source\PSoC4/CyLib.c ****     if ((CY_SYS_CLK_SELECT_REG & CY_SYS_CLK_SELECT_HFCLK_SEL_MASK) != 0u)
 519:Generated_Source\PSoC4/CyLib.c ****     {
 520:Generated_Source\PSoC4/CyLib.c ****         sysclkSource = (CY_SYS_CLK_SELECT_REG & CY_SYS_CLK_SELECT_HFCLK_SEL_MASK);
 521:Generated_Source\PSoC4/CyLib.c ****     }
 522:Generated_Source\PSoC4/CyLib.c ****     else
ARM GAS  C:\Users\akita\AppData\Local\Temp\ccaIVzD4.s 			page 16


 523:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_SRSSV2 && CY_IP_PLL) */
 524:Generated_Source\PSoC4/CyLib.c ****     {
 525:Generated_Source\PSoC4/CyLib.c ****         sysclkSource = (CY_SYS_CLK_SELECT_REG & CY_SYS_CLK_SELECT_DIRECT_SEL_MASK);
 330              		.loc 1 525 0
 331 0010 074B     		ldr	r3, .L17
 332 0012 1B68     		ldr	r3, [r3]
 333 0014 0722     		mov	r2, #7
 334 0016 1340     		and	r3, r2
 335 0018 3B60     		str	r3, [r7]
 526:Generated_Source\PSoC4/CyLib.c ****     }
 527:Generated_Source\PSoC4/CyLib.c **** 
 528:Generated_Source\PSoC4/CyLib.c ****     CyExitCriticalSection(interruptState);
 336              		.loc 1 528 0
 337 001a FB1D     		add	r3, r7, #7
 338 001c 1B78     		ldrb	r3, [r3]
 339 001e 181C     		mov	r0, r3
 340 0020 FFF7FEFF 		bl	CyExitCriticalSection
 529:Generated_Source\PSoC4/CyLib.c **** 
 530:Generated_Source\PSoC4/CyLib.c ****     return (sysclkSource);
 341              		.loc 1 530 0
 342 0024 3B68     		ldr	r3, [r7]
 531:Generated_Source\PSoC4/CyLib.c **** }
 343              		.loc 1 531 0
 344 0026 181C     		mov	r0, r3
 345 0028 BD46     		mov	sp, r7
 346 002a 03B0     		add	sp, sp, #12
 347              		@ sp needed
 348 002c 90BD     		pop	{r4, r7, pc}
 349              	.L18:
 350 002e C046     		.align	2
 351              	.L17:
 352 0030 00010B40 		.word	1074462976
 353              		.cfi_endproc
 354              	.LFE6:
 355              		.size	CySysClkGetSysclkSource, .-CySysClkGetSysclkSource
 356              		.section	.text.CySysClkWriteSysclkDiv,"ax",%progbits
 357              		.align	2
 358              		.global	CySysClkWriteSysclkDiv
 359              		.code	16
 360              		.thumb_func
 361              		.type	CySysClkWriteSysclkDiv, %function
 362              	CySysClkWriteSysclkDiv:
 363              	.LFB7:
 532:Generated_Source\PSoC4/CyLib.c **** 
 533:Generated_Source\PSoC4/CyLib.c **** 
 534:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
 535:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysClkWriteSysclkDiv
 536:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
 537:Generated_Source\PSoC4/CyLib.c **** *
 538:Generated_Source\PSoC4/CyLib.c **** * Selects the prescaler divide amount for SYSCLK from HFCLK.
 539:Generated_Source\PSoC4/CyLib.c **** *
 540:Generated_Source\PSoC4/CyLib.c **** * PSoC 4000: The SYSCLK has the speed of 16 MHz, so HFCLK and SYSCLK dividers
 541:Generated_Source\PSoC4/CyLib.c **** * should be selected in a way, not to exceed 16 MHz for SYSCLK.
 542:Generated_Source\PSoC4/CyLib.c **** *
 543:Generated_Source\PSoC4/CyLib.c **** * PSoC 4100 \ PSoC 4100 BLE \ PSoC 4100M: The SYSCLK has the speed of 24 MHz,
 544:Generated_Source\PSoC4/CyLib.c **** * so HFCLK and SYSCLK dividers should be selected in a way, not to exceed 24 MHz
 545:Generated_Source\PSoC4/CyLib.c **** * for SYSCLK.
ARM GAS  C:\Users\akita\AppData\Local\Temp\ccaIVzD4.s 			page 17


 546:Generated_Source\PSoC4/CyLib.c **** *
 547:Generated_Source\PSoC4/CyLib.c **** * If the SYSCLK clock frequency increases during the device operation, call
 548:Generated_Source\PSoC4/CyLib.c **** * \ref CySysFlashSetWaitCycles() with the appropriate parameter to adjust the
 549:Generated_Source\PSoC4/CyLib.c **** * number of clock cycles the cache will wait before sampling data comes back
 550:Generated_Source\PSoC4/CyLib.c **** * from Flash. If the SYSCLK clock frequency decreases, you can call
 551:Generated_Source\PSoC4/CyLib.c **** * \ref CySysFlashSetWaitCycles() to improve the CPU performance. See
 552:Generated_Source\PSoC4/CyLib.c **** * \ref CySysFlashSetWaitCycles() description for more information.
 553:Generated_Source\PSoC4/CyLib.c **** *
 554:Generated_Source\PSoC4/CyLib.c **** * \param divider Power of 2 prescaler selection
 555:Generated_Source\PSoC4/CyLib.c **** *  CY_SYS_CLK_SYSCLK_DIV1        SYSCLK = HFCLK / 1
 556:Generated_Source\PSoC4/CyLib.c **** *  CY_SYS_CLK_SYSCLK_DIV2        SYSCLK = HFCLK / 2
 557:Generated_Source\PSoC4/CyLib.c **** *  CY_SYS_CLK_SYSCLK_DIV4        SYSCLK = HFCLK / 4
 558:Generated_Source\PSoC4/CyLib.c **** *  CY_SYS_CLK_SYSCLK_DIV8        SYSCLK = HFCLK / 8
 559:Generated_Source\PSoC4/CyLib.c **** *  CY_SYS_CLK_SYSCLK_DIV16       SYSCLK = HFCLK / 16  (N/A for 4000 Family)
 560:Generated_Source\PSoC4/CyLib.c **** *  CY_SYS_CLK_SYSCLK_DIV32       SYSCLK = HFCLK / 32  (N/A for 4000 Family)
 561:Generated_Source\PSoC4/CyLib.c **** *  CY_SYS_CLK_SYSCLK_DIV64       SYSCLK = HFCLK / 64  (N/A for 4000 Family)
 562:Generated_Source\PSoC4/CyLib.c **** *  CY_SYS_CLK_SYSCLK_DIV128      SYSCLK = HFCLK / 128 (N/A for 4000 Family)
 563:Generated_Source\PSoC4/CyLib.c **** *
 564:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
 565:Generated_Source\PSoC4/CyLib.c **** void CySysClkWriteSysclkDiv(uint32 divider)
 566:Generated_Source\PSoC4/CyLib.c **** {
 364              		.loc 1 566 0
 365              		.cfi_startproc
 366 0000 90B5     		push	{r4, r7, lr}
 367              		.cfi_def_cfa_offset 12
 368              		.cfi_offset 4, -12
 369              		.cfi_offset 7, -8
 370              		.cfi_offset 14, -4
 371 0002 85B0     		sub	sp, sp, #20
 372              		.cfi_def_cfa_offset 32
 373 0004 00AF     		add	r7, sp, #0
 374              		.cfi_def_cfa_register 7
 375 0006 7860     		str	r0, [r7, #4]
 567:Generated_Source\PSoC4/CyLib.c ****     uint8  interruptState;
 568:Generated_Source\PSoC4/CyLib.c **** 
 569:Generated_Source\PSoC4/CyLib.c ****     interruptState = CyEnterCriticalSection();
 376              		.loc 1 569 0
 377 0008 0F23     		mov	r3, #15
 378 000a FC18     		add	r4, r7, r3
 379 000c FFF7FEFF 		bl	CyEnterCriticalSection
 380 0010 031C     		mov	r3, r0
 381 0012 2370     		strb	r3, [r4]
 570:Generated_Source\PSoC4/CyLib.c **** 
 571:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_CLK_SELECT_REG = ((uint32)(((uint32)divider & CY_SYS_CLK_SELECT_SYSCLK_DIV_MASK) <<
 382              		.loc 1 571 0
 383 0014 094B     		ldr	r3, .L20
 384 0016 7A68     		ldr	r2, [r7, #4]
 385 0018 0721     		mov	r1, #7
 386 001a 0A40     		and	r2, r1
 387 001c D104     		lsl	r1, r2, #19
 572:Generated_Source\PSoC4/CyLib.c ****                                     CY_SYS_CLK_SELECT_SYSCLK_DIV_SHIFT)) |
 573:Generated_Source\PSoC4/CyLib.c ****                             (CY_SYS_CLK_SELECT_REG & ((uint32)(~(uint32)(CY_SYS_CLK_SELECT_SYSCLK_D
 388              		.loc 1 573 0
 389 001e 074A     		ldr	r2, .L20
 390 0020 1268     		ldr	r2, [r2]
 391 0022 0748     		ldr	r0, .L20+4
 392 0024 0240     		and	r2, r0
ARM GAS  C:\Users\akita\AppData\Local\Temp\ccaIVzD4.s 			page 18


 572:Generated_Source\PSoC4/CyLib.c ****                                     CY_SYS_CLK_SELECT_SYSCLK_DIV_SHIFT)) |
 393              		.loc 1 572 0
 394 0026 0A43     		orr	r2, r1
 571:Generated_Source\PSoC4/CyLib.c ****                                     CY_SYS_CLK_SELECT_SYSCLK_DIV_SHIFT)) |
 395              		.loc 1 571 0
 396 0028 1A60     		str	r2, [r3]
 574:Generated_Source\PSoC4/CyLib.c ****                                     CY_SYS_CLK_SELECT_SYSCLK_DIV_SHIFT))));
 575:Generated_Source\PSoC4/CyLib.c **** 
 576:Generated_Source\PSoC4/CyLib.c ****     CyExitCriticalSection(interruptState);
 397              		.loc 1 576 0
 398 002a 0F23     		mov	r3, #15
 399 002c FB18     		add	r3, r7, r3
 400 002e 1B78     		ldrb	r3, [r3]
 401 0030 181C     		mov	r0, r3
 402 0032 FFF7FEFF 		bl	CyExitCriticalSection
 577:Generated_Source\PSoC4/CyLib.c **** }
 403              		.loc 1 577 0
 404 0036 BD46     		mov	sp, r7
 405 0038 05B0     		add	sp, sp, #20
 406              		@ sp needed
 407 003a 90BD     		pop	{r4, r7, pc}
 408              	.L21:
 409              		.align	2
 410              	.L20:
 411 003c 00010B40 		.word	1074462976
 412 0040 FFFFC7FF 		.word	-3670017
 413              		.cfi_endproc
 414              	.LFE7:
 415              		.size	CySysClkWriteSysclkDiv, .-CySysClkWriteSysclkDiv
 416              		.section	.text.CySysClkWriteImoFreq,"ax",%progbits
 417              		.align	2
 418              		.global	CySysClkWriteImoFreq
 419              		.code	16
 420              		.thumb_func
 421              		.type	CySysClkWriteImoFreq, %function
 422              	CySysClkWriteImoFreq:
 423              	.LFB8:
 578:Generated_Source\PSoC4/CyLib.c **** 
 579:Generated_Source\PSoC4/CyLib.c **** 
 580:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
 581:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysClkWriteImoFreq
 582:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
 583:Generated_Source\PSoC4/CyLib.c **** *
 584:Generated_Source\PSoC4/CyLib.c **** * Sets the frequency of the IMO.
 585:Generated_Source\PSoC4/CyLib.c **** *
 586:Generated_Source\PSoC4/CyLib.c **** * PSoC 4000: The SYSCLK has the speed of 16 MHz, so HFCLK and SYSCLK dividers
 587:Generated_Source\PSoC4/CyLib.c **** * should be selected in a way, not to exceed 16 MHz for SYSCLK.
 588:Generated_Source\PSoC4/CyLib.c **** *
 589:Generated_Source\PSoC4/CyLib.c **** * PSoC 4100 \ PSoC 4100 BLE \ PSoC 4100M: The SYSCLK has the speed of 24 MHz,
 590:Generated_Source\PSoC4/CyLib.c **** * so HFCLK and SYSCLK dividers should be selected in a way, not to exceed 24 MHz
 591:Generated_Source\PSoC4/CyLib.c **** * for SYSCLK.
 592:Generated_Source\PSoC4/CyLib.c **** *
 593:Generated_Source\PSoC4/CyLib.c **** * For PSoC 4200M and PSoC 4200L device families, if WCO lock feature is enabled
 594:Generated_Source\PSoC4/CyLib.c **** * then this API will disable the lock, write the new IMO frequency and then
 595:Generated_Source\PSoC4/CyLib.c **** * re-enable the lock.
 596:Generated_Source\PSoC4/CyLib.c **** *
 597:Generated_Source\PSoC4/CyLib.c **** * For PSoC 4200L device families, this function enables the USB lock when 24 or
ARM GAS  C:\Users\akita\AppData\Local\Temp\ccaIVzD4.s 			page 19


 598:Generated_Source\PSoC4/CyLib.c **** * 48 MHz passed as a parameter if the USB lock option is enabled in Design Wide
 599:Generated_Source\PSoC4/CyLib.c **** * Resources tab or CySysClkImoEnableUsbLock() was called before. Note the USB
 600:Generated_Source\PSoC4/CyLib.c **** * lock is disabled during IMO frequency change.
 601:Generated_Source\PSoC4/CyLib.c **** *
 602:Generated_Source\PSoC4/CyLib.c **** * The CPU is halted if new frequency is invalid and project is compiled
 603:Generated_Source\PSoC4/CyLib.c **** * in debug mode.
 604:Generated_Source\PSoC4/CyLib.c **** *
 605:Generated_Source\PSoC4/CyLib.c **** * If the SYSCLK clock frequency increases during the device operation, call
 606:Generated_Source\PSoC4/CyLib.c **** * \ref CySysFlashSetWaitCycles() with the appropriate parameter to adjust the
 607:Generated_Source\PSoC4/CyLib.c **** * number of clock cycles the cache will wait before sampling data comes back
 608:Generated_Source\PSoC4/CyLib.c **** * from Flash. If the SYSCLK clock frequency decreases, you can call
 609:Generated_Source\PSoC4/CyLib.c **** * \ref CySysFlashSetWaitCycles() to improve the CPU performance. See
 610:Generated_Source\PSoC4/CyLib.c **** * \ref CySysFlashSetWaitCycles() description for more information.
 611:Generated_Source\PSoC4/CyLib.c **** *
 612:Generated_Source\PSoC4/CyLib.c **** * PSoC 4000: The System Clock (SYSCLK) has maximum speed of 16 MHz, so HFCLK
 613:Generated_Source\PSoC4/CyLib.c **** * and SYSCLK dividers should be selected in a way, to not to exceed 16 MHz for
 614:Generated_Source\PSoC4/CyLib.c **** * the System clock.
 615:Generated_Source\PSoC4/CyLib.c **** *
 616:Generated_Source\PSoC4/CyLib.c **** * \param freq All PSoC 4 families excluding the following: Valid range [3-48]
 617:Generated_Source\PSoC4/CyLib.c **** * with step size equals 1. PSoC 4000: Valid values are 24, 32, and 48.
 618:Generated_Source\PSoC4/CyLib.c **** * PSoC 4000S / PSoC 4100S / PSoC 4400: Valid range [24-48] with step size equals
 619:Generated_Source\PSoC4/CyLib.c **** * 4.
 620:Generated_Source\PSoC4/CyLib.c **** *
 621:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
 622:Generated_Source\PSoC4/CyLib.c **** #if(CY_IP_SRSSV2)
 623:Generated_Source\PSoC4/CyLib.c ****     void CySysClkWriteImoFreq(uint32 freq)
 624:Generated_Source\PSoC4/CyLib.c ****     {
 424              		.loc 1 624 0
 425              		.cfi_startproc
 426 0000 90B5     		push	{r4, r7, lr}
 427              		.cfi_def_cfa_offset 12
 428              		.cfi_offset 4, -12
 429              		.cfi_offset 7, -8
 430              		.cfi_offset 14, -4
 431 0002 8BB0     		sub	sp, sp, #44
 432              		.cfi_def_cfa_offset 56
 433 0004 00AF     		add	r7, sp, #0
 434              		.cfi_def_cfa_register 7
 435 0006 7860     		str	r0, [r7, #4]
 625:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_FMLT)
 626:Generated_Source\PSoC4/CyLib.c ****             volatile uint32   parameters[2u];
 627:Generated_Source\PSoC4/CyLib.c ****             volatile uint32   regValues[4u];
 628:Generated_Source\PSoC4/CyLib.c ****         #else
 629:Generated_Source\PSoC4/CyLib.c ****             uint8  bgTrim4;
 630:Generated_Source\PSoC4/CyLib.c ****             uint8  bgTrim5;
 631:Generated_Source\PSoC4/CyLib.c ****             uint8  newImoTrim2Value;
 632:Generated_Source\PSoC4/CyLib.c ****             uint8  currentImoTrim2Value;
 633:Generated_Source\PSoC4/CyLib.c ****             uint8  imoTrim1Value;
 634:Generated_Source\PSoC4/CyLib.c ****         #endif /* (CY_IP_FM) */
 635:Generated_Source\PSoC4/CyLib.c **** 
 636:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_IMO_TRIMMABLE_BY_WCO)
 637:Generated_Source\PSoC4/CyLib.c ****             uint32 wcoLock = 0u;
 638:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_IMO_TRIMMABLE_BY_WCO) */
 639:Generated_Source\PSoC4/CyLib.c **** 
 640:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_IMO_TRIMMABLE_BY_USB)
 641:Generated_Source\PSoC4/CyLib.c ****             uint32 usbLock = 0u;
 642:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_IMO_TRIMMABLE_BY_USB) */
ARM GAS  C:\Users\akita\AppData\Local\Temp\ccaIVzD4.s 			page 20


 643:Generated_Source\PSoC4/CyLib.c **** 
 644:Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
 645:Generated_Source\PSoC4/CyLib.c **** 
 646:Generated_Source\PSoC4/CyLib.c **** 
 647:Generated_Source\PSoC4/CyLib.c ****         interruptState = CyEnterCriticalSection();
 436              		.loc 1 647 0
 437 0008 2723     		mov	r3, #39
 438 000a FC18     		add	r4, r7, r3
 439 000c FFF7FEFF 		bl	CyEnterCriticalSection
 440 0010 031C     		mov	r3, r0
 441 0012 2370     		strb	r3, [r4]
 648:Generated_Source\PSoC4/CyLib.c **** 
 649:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_IMO_TRIMMABLE_BY_WCO)
 650:Generated_Source\PSoC4/CyLib.c ****             if(0u != CySysClkImoGetWcoLock())
 651:Generated_Source\PSoC4/CyLib.c ****             {
 652:Generated_Source\PSoC4/CyLib.c ****                 wcoLock = 1u;
 653:Generated_Source\PSoC4/CyLib.c ****                 CySysClkImoDisableWcoLock();
 654:Generated_Source\PSoC4/CyLib.c ****             }
 655:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_IMO_TRIMMABLE_BY_WCO) */
 656:Generated_Source\PSoC4/CyLib.c **** 
 657:Generated_Source\PSoC4/CyLib.c **** 
 658:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_IMO_TRIMMABLE_BY_USB)
 659:Generated_Source\PSoC4/CyLib.c **** 
 660:Generated_Source\PSoC4/CyLib.c ****             #if (CYDEV_IMO_TRIMMED_BY_USB == 0u)
 661:Generated_Source\PSoC4/CyLib.c ****                 if(0u != CySysClkImoGetUsbLock())
 662:Generated_Source\PSoC4/CyLib.c ****                 {
 663:Generated_Source\PSoC4/CyLib.c ****             #endif  /* (CYDEV_IMO_TRIMMED_BY_USB == 0u) */
 664:Generated_Source\PSoC4/CyLib.c **** 
 665:Generated_Source\PSoC4/CyLib.c ****                 if ((24u == freq) || (48u == freq))
 666:Generated_Source\PSoC4/CyLib.c ****                 {
 667:Generated_Source\PSoC4/CyLib.c ****                     usbLock = 1u;
 668:Generated_Source\PSoC4/CyLib.c ****                     CySysClkImoDisableUsbLock();
 669:Generated_Source\PSoC4/CyLib.c ****                 }
 670:Generated_Source\PSoC4/CyLib.c **** 
 671:Generated_Source\PSoC4/CyLib.c ****             #if (CYDEV_IMO_TRIMMED_BY_USB == 0u)
 672:Generated_Source\PSoC4/CyLib.c ****                 }
 673:Generated_Source\PSoC4/CyLib.c ****             #endif  /* (CYDEV_IMO_TRIMMED_BY_USB == 0u) */
 674:Generated_Source\PSoC4/CyLib.c **** 
 675:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CYDEV_IMO_TRIMMED_BY_USB == 0u) */
 676:Generated_Source\PSoC4/CyLib.c **** 
 677:Generated_Source\PSoC4/CyLib.c **** 
 678:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_FMLT)
 679:Generated_Source\PSoC4/CyLib.c **** 
 680:Generated_Source\PSoC4/CyLib.c ****             /* FM-Lite Clock Restore */
 681:Generated_Source\PSoC4/CyLib.c ****             regValues[0u] = CY_SYS_CLK_IMO_CONFIG_REG;
 442              		.loc 1 681 0
 443 0014 184B     		ldr	r3, .L23
 444 0016 1A68     		ldr	r2, [r3]
 445 0018 0C23     		mov	r3, #12
 446 001a FB18     		add	r3, r7, r3
 447 001c 1A60     		str	r2, [r3]
 682:Generated_Source\PSoC4/CyLib.c ****             regValues[1u] = CY_SYS_CLK_SELECT_REG;
 448              		.loc 1 682 0
 449 001e 174B     		ldr	r3, .L23+4
 450 0020 1A68     		ldr	r2, [r3]
 451 0022 0C23     		mov	r3, #12
 452 0024 FB18     		add	r3, r7, r3
ARM GAS  C:\Users\akita\AppData\Local\Temp\ccaIVzD4.s 			page 21


 453 0026 5A60     		str	r2, [r3, #4]
 683:Generated_Source\PSoC4/CyLib.c ****             regValues[2u] = cyImoFreqMhz2Reg[freq - CY_SYS_CLK_IMO_FREQ_TABLE_OFFSET];
 454              		.loc 1 683 0
 455 0028 7B68     		ldr	r3, [r7, #4]
 456 002a 033B     		sub	r3, r3, #3
 457 002c 144A     		ldr	r2, .L23+8
 458 002e D35C     		ldrb	r3, [r2, r3]
 459 0030 1A1C     		mov	r2, r3
 460 0032 0C23     		mov	r3, #12
 461 0034 FB18     		add	r3, r7, r3
 462 0036 9A60     		str	r2, [r3, #8]
 684:Generated_Source\PSoC4/CyLib.c ****             regValues[3u] = CY_FLASH_CTL_REG;
 463              		.loc 1 684 0
 464 0038 124B     		ldr	r3, .L23+12
 465 003a 1A68     		ldr	r2, [r3]
 466 003c 0C23     		mov	r3, #12
 467 003e FB18     		add	r3, r7, r3
 468 0040 DA60     		str	r2, [r3, #12]
 685:Generated_Source\PSoC4/CyLib.c **** 
 686:Generated_Source\PSoC4/CyLib.c ****             parameters[0u] =
 469              		.loc 1 686 0
 470 0042 1C23     		mov	r3, #28
 471 0044 FB18     		add	r3, r7, r3
 472 0046 104A     		ldr	r2, .L23+16
 473 0048 1A60     		str	r2, [r3]
 687:Generated_Source\PSoC4/CyLib.c ****                 (uint32) ((CY_FLASH_KEY_TWO(CY_FLASH_API_OPCODE_CLK_RESTORE) <<  CY_FLASH_PARAM_KEY
 688:Generated_Source\PSoC4/CyLib.c ****                             CY_FLASH_KEY_ONE);
 689:Generated_Source\PSoC4/CyLib.c ****             parameters[1u] = (uint32) &regValues[0u];
 474              		.loc 1 689 0
 475 004a 0C23     		mov	r3, #12
 476 004c FA18     		add	r2, r7, r3
 477 004e 1C23     		mov	r3, #28
 478 0050 FB18     		add	r3, r7, r3
 479 0052 5A60     		str	r2, [r3, #4]
 690:Generated_Source\PSoC4/CyLib.c **** 
 691:Generated_Source\PSoC4/CyLib.c ****             CY_FLASH_CPUSS_SYSARG_REG = (uint32) &parameters[0u];
 480              		.loc 1 691 0
 481 0054 0D4B     		ldr	r3, .L23+20
 482 0056 1C22     		mov	r2, #28
 483 0058 BA18     		add	r2, r7, r2
 484 005a 1A60     		str	r2, [r3]
 692:Generated_Source\PSoC4/CyLib.c ****             CY_FLASH_CPUSS_SYSREQ_REG = CY_FLASH_CPUSS_REQ_START | CY_FLASH_API_OPCODE_CLK_RESTORE;
 485              		.loc 1 692 0
 486 005c 0C4B     		ldr	r3, .L23+24
 487 005e 0D4A     		ldr	r2, .L23+28
 488 0060 1A60     		str	r2, [r3]
 693:Generated_Source\PSoC4/CyLib.c ****             (void) CY_FLASH_CPUSS_SYSARG_REG;
 489              		.loc 1 693 0
 490 0062 0A4B     		ldr	r3, .L23+20
 491 0064 1B68     		ldr	r3, [r3]
 694:Generated_Source\PSoC4/CyLib.c **** 
 695:Generated_Source\PSoC4/CyLib.c ****         #else /* (CY_IP_FM) */
 696:Generated_Source\PSoC4/CyLib.c **** 
 697:Generated_Source\PSoC4/CyLib.c ****         if ((freq >= CY_SYS_CLK_IMO_MIN_FREQ_MHZ) && (freq <= CY_SYS_CLK_IMO_MAX_FREQ_MHZ))
 698:Generated_Source\PSoC4/CyLib.c ****         {
 699:Generated_Source\PSoC4/CyLib.c ****             if(freq <= CY_SFLASH_IMO_MAXF0_REG)
 700:Generated_Source\PSoC4/CyLib.c ****             {
ARM GAS  C:\Users\akita\AppData\Local\Temp\ccaIVzD4.s 			page 22


 701:Generated_Source\PSoC4/CyLib.c ****                 bgTrim4 = CY_SFLASH_IMO_ABS0_REG;
 702:Generated_Source\PSoC4/CyLib.c ****                 bgTrim5 = CY_SFLASH_IMO_TMPCO0_REG;
 703:Generated_Source\PSoC4/CyLib.c ****             }
 704:Generated_Source\PSoC4/CyLib.c ****             else if(freq <= CY_SFLASH_IMO_MAXF1_REG)
 705:Generated_Source\PSoC4/CyLib.c ****             {
 706:Generated_Source\PSoC4/CyLib.c ****                 bgTrim4 = CY_SFLASH_IMO_ABS1_REG;
 707:Generated_Source\PSoC4/CyLib.c ****                 bgTrim5 = CY_SFLASH_IMO_TMPCO1_REG;
 708:Generated_Source\PSoC4/CyLib.c ****             }
 709:Generated_Source\PSoC4/CyLib.c ****             else if(freq <= CY_SFLASH_IMO_MAXF2_REG)
 710:Generated_Source\PSoC4/CyLib.c ****             {
 711:Generated_Source\PSoC4/CyLib.c ****                 bgTrim4 = CY_SFLASH_IMO_ABS2_REG;
 712:Generated_Source\PSoC4/CyLib.c ****                 bgTrim5 = CY_SFLASH_IMO_TMPCO2_REG;
 713:Generated_Source\PSoC4/CyLib.c ****             }
 714:Generated_Source\PSoC4/CyLib.c ****             else if(freq <= CY_SFLASH_IMO_MAXF3_REG)
 715:Generated_Source\PSoC4/CyLib.c ****             {
 716:Generated_Source\PSoC4/CyLib.c ****                 bgTrim4 = CY_SFLASH_IMO_ABS3_REG;
 717:Generated_Source\PSoC4/CyLib.c ****                 bgTrim5 = CY_SFLASH_IMO_TMPCO3_REG;
 718:Generated_Source\PSoC4/CyLib.c ****             }
 719:Generated_Source\PSoC4/CyLib.c ****             else
 720:Generated_Source\PSoC4/CyLib.c ****             {
 721:Generated_Source\PSoC4/CyLib.c ****                 bgTrim4 = CY_SFLASH_IMO_ABS4_REG;
 722:Generated_Source\PSoC4/CyLib.c ****                 bgTrim5 = CY_SFLASH_IMO_TMPCO4_REG;
 723:Generated_Source\PSoC4/CyLib.c ****             }
 724:Generated_Source\PSoC4/CyLib.c **** 
 725:Generated_Source\PSoC4/CyLib.c ****             /* Get IMO_TRIM2 value for the new frequency */
 726:Generated_Source\PSoC4/CyLib.c ****             newImoTrim2Value = cyImoFreqMhz2Reg[freq - CY_SYS_CLK_IMO_FREQ_TABLE_OFFSET];
 727:Generated_Source\PSoC4/CyLib.c **** 
 728:Generated_Source\PSoC4/CyLib.c **** 
 729:Generated_Source\PSoC4/CyLib.c ****             /****************************************************************************
 730:Generated_Source\PSoC4/CyLib.c ****             * The IMO can have a different trim per frequency. To avoid possible corner
 731:Generated_Source\PSoC4/CyLib.c ****             * cases where a trim change can exceed the maximum frequency, the trim must
 732:Generated_Source\PSoC4/CyLib.c ****             * be applied at a frequency that is low enough.
 733:Generated_Source\PSoC4/CyLib.c ****             *
 734:Generated_Source\PSoC4/CyLib.c ****             * Comparing IMO_TRIM2 values for the current and new frequencies, since
 735:Generated_Source\PSoC4/CyLib.c ****             * IMO_TRIM2 value as a function of IMO frequency is a strictly increasing
 736:Generated_Source\PSoC4/CyLib.c ****             * function and is time-invariant.
 737:Generated_Source\PSoC4/CyLib.c ****             ***************************************************************************/
 738:Generated_Source\PSoC4/CyLib.c ****             if ((newImoTrim2Value >= CY_SYS_CLK_IMO_BOUNDARY_FREQ_TRIM2) && (freq >= CY_SYS_CLK_IMO
 739:Generated_Source\PSoC4/CyLib.c ****             {
 740:Generated_Source\PSoC4/CyLib.c ****                 /* Set boundary IMO frequency: safe for IMO above 48 MHZ trimming */
 741:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_CLK_IMO_TRIM2_REG = (uint32) cyImoFreqMhz2Reg[CY_SYS_CLK_IMO_TEMP_FREQ_MHZ -
 742:Generated_Source\PSoC4/CyLib.c ****                                                                      CY_SYS_CLK_IMO_FREQ_TABLE_OFFS
 743:Generated_Source\PSoC4/CyLib.c **** 
 744:Generated_Source\PSoC4/CyLib.c ****                 CyDelayCycles(CY_SYS_CLK_IMO_FREQ_TIMEOUT_CYCLES);
 745:Generated_Source\PSoC4/CyLib.c **** 
 746:Generated_Source\PSoC4/CyLib.c ****                 currentImoTrim2Value = CY_SYS_CLK_IMO_TEMP_FREQ_TRIM2;
 747:Generated_Source\PSoC4/CyLib.c ****             }
 748:Generated_Source\PSoC4/CyLib.c ****             else
 749:Generated_Source\PSoC4/CyLib.c ****             {
 750:Generated_Source\PSoC4/CyLib.c ****                 currentImoTrim2Value = (uint8) (CY_SYS_CLK_IMO_TRIM2_REG & CY_SYS_CLK_IMO_FREQ_BITS
 751:Generated_Source\PSoC4/CyLib.c ****             }
 752:Generated_Source\PSoC4/CyLib.c **** 
 753:Generated_Source\PSoC4/CyLib.c **** 
 754:Generated_Source\PSoC4/CyLib.c ****             /***************************************************************************
 755:Generated_Source\PSoC4/CyLib.c ****             * A trim change needs to be allowed to settle (within 5us) before the Freq
 756:Generated_Source\PSoC4/CyLib.c ****             * can be changed to a new frequency.
 757:Generated_Source\PSoC4/CyLib.c ****             *
ARM GAS  C:\Users\akita\AppData\Local\Temp\ccaIVzD4.s 			page 23


 758:Generated_Source\PSoC4/CyLib.c ****             * Comparing IMO_TRIM2 values for the current and new frequencies, since
 759:Generated_Source\PSoC4/CyLib.c ****             * IMO_TRIM2 value as a function of IMO frequency is a strictly increasing
 760:Generated_Source\PSoC4/CyLib.c ****             * function and is time-invariant.
 761:Generated_Source\PSoC4/CyLib.c ****             ***************************************************************************/
 762:Generated_Source\PSoC4/CyLib.c ****             if (newImoTrim2Value < currentImoTrim2Value)
 763:Generated_Source\PSoC4/CyLib.c ****             {
 764:Generated_Source\PSoC4/CyLib.c ****                 /* Set new IMO frequency */
 765:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_CLK_IMO_TRIM2_REG = cyImoFreqMhz2Reg[freq - CY_SYS_CLK_IMO_FREQ_TABLE_OFFSET
 766:Generated_Source\PSoC4/CyLib.c ****                 CyDelayCycles(CY_SYS_CLK_IMO_FREQ_TIMEOUT_CYCLES);
 767:Generated_Source\PSoC4/CyLib.c ****             }
 768:Generated_Source\PSoC4/CyLib.c **** 
 769:Generated_Source\PSoC4/CyLib.c ****             /* Set trims for the new IMO frequency */
 770:Generated_Source\PSoC4/CyLib.c **** 
 771:Generated_Source\PSoC4/CyLib.c ****             #if (CY_IP_IMO_TRIMMABLE_BY_USB)
 772:Generated_Source\PSoC4/CyLib.c ****                 if ((1u == usbLock) && (48u == freq))
 773:Generated_Source\PSoC4/CyLib.c ****                 {
 774:Generated_Source\PSoC4/CyLib.c ****                     imoTrim1Value = CY_SFLASH_IMO_TRIM_USBMODE_48_REG;
 775:Generated_Source\PSoC4/CyLib.c ****                 }
 776:Generated_Source\PSoC4/CyLib.c ****                 else if ((1u == usbLock) && (24u == freq))
 777:Generated_Source\PSoC4/CyLib.c ****                 {
 778:Generated_Source\PSoC4/CyLib.c ****                     imoTrim1Value = CY_SFLASH_IMO_TRIM_USBMODE_24_REG;
 779:Generated_Source\PSoC4/CyLib.c ****                 }
 780:Generated_Source\PSoC4/CyLib.c ****                 else
 781:Generated_Source\PSoC4/CyLib.c ****                 {
 782:Generated_Source\PSoC4/CyLib.c ****                     imoTrim1Value = (uint8) CY_SFLASH_IMO_TRIM_REG(freq - CY_SYS_CLK_IMO_FREQ_TABLE
 783:Generated_Source\PSoC4/CyLib.c ****                 }
 784:Generated_Source\PSoC4/CyLib.c ****             #else
 785:Generated_Source\PSoC4/CyLib.c ****                 imoTrim1Value = (uint8) CY_SFLASH_IMO_TRIM_REG(freq - CY_SYS_CLK_IMO_FREQ_TABLE_OFF
 786:Generated_Source\PSoC4/CyLib.c ****             #endif  /* (CY_IP_IMO_TRIMMABLE_BY_USB) */
 787:Generated_Source\PSoC4/CyLib.c **** 
 788:Generated_Source\PSoC4/CyLib.c **** 
 789:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_IMO_TRIM1_REG = (uint32) imoTrim1Value;
 790:Generated_Source\PSoC4/CyLib.c ****             CY_PWR_BG_TRIM4_REG  = bgTrim4;
 791:Generated_Source\PSoC4/CyLib.c ****             CY_PWR_BG_TRIM5_REG  = bgTrim5;
 792:Generated_Source\PSoC4/CyLib.c ****             CyDelayUs(CY_SYS_CLK_IMO_TRIM_TIMEOUT_US);
 793:Generated_Source\PSoC4/CyLib.c **** 
 794:Generated_Source\PSoC4/CyLib.c ****             if (newImoTrim2Value > currentImoTrim2Value)
 795:Generated_Source\PSoC4/CyLib.c ****             {
 796:Generated_Source\PSoC4/CyLib.c ****                 /* Set new IMO frequency */
 797:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_CLK_IMO_TRIM2_REG = cyImoFreqMhz2Reg[freq - CY_SYS_CLK_IMO_FREQ_TABLE_OFFSET
 798:Generated_Source\PSoC4/CyLib.c ****                 CyDelayCycles(CY_SYS_CLK_IMO_FREQ_TIMEOUT_CYCLES);
 799:Generated_Source\PSoC4/CyLib.c ****             }
 800:Generated_Source\PSoC4/CyLib.c ****         }
 801:Generated_Source\PSoC4/CyLib.c ****         else
 802:Generated_Source\PSoC4/CyLib.c ****         {
 803:Generated_Source\PSoC4/CyLib.c ****             /* Halt CPU in debug mode if new frequency is invalid */
 804:Generated_Source\PSoC4/CyLib.c ****             CYASSERT(0u != 0u);
 805:Generated_Source\PSoC4/CyLib.c ****         }
 806:Generated_Source\PSoC4/CyLib.c **** 
 807:Generated_Source\PSoC4/CyLib.c ****         #endif /* (CY_IP_FMLT) */
 808:Generated_Source\PSoC4/CyLib.c **** 
 809:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_IMO_TRIMMABLE_BY_WCO)
 810:Generated_Source\PSoC4/CyLib.c ****             if (1u == wcoLock)
 811:Generated_Source\PSoC4/CyLib.c ****             {
 812:Generated_Source\PSoC4/CyLib.c ****                 CySysClkImoEnableWcoLock();
 813:Generated_Source\PSoC4/CyLib.c ****             }
 814:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_IMO_TRIMMABLE_BY_WCO) */
ARM GAS  C:\Users\akita\AppData\Local\Temp\ccaIVzD4.s 			page 24


 815:Generated_Source\PSoC4/CyLib.c **** 
 816:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_IMO_TRIMMABLE_BY_USB)
 817:Generated_Source\PSoC4/CyLib.c ****             if (1u == usbLock)
 818:Generated_Source\PSoC4/CyLib.c ****             {
 819:Generated_Source\PSoC4/CyLib.c ****                 CySysClkImoEnableUsbLock();
 820:Generated_Source\PSoC4/CyLib.c ****             }
 821:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_IMO_TRIMMABLE_BY_USB) */
 822:Generated_Source\PSoC4/CyLib.c **** 
 823:Generated_Source\PSoC4/CyLib.c ****         CyExitCriticalSection(interruptState);
 492              		.loc 1 823 0
 493 0066 2723     		mov	r3, #39
 494 0068 FB18     		add	r3, r7, r3
 495 006a 1B78     		ldrb	r3, [r3]
 496 006c 181C     		mov	r0, r3
 497 006e FFF7FEFF 		bl	CyExitCriticalSection
 824:Generated_Source\PSoC4/CyLib.c ****     }
 498              		.loc 1 824 0
 499 0072 BD46     		mov	sp, r7
 500 0074 0BB0     		add	sp, sp, #44
 501              		@ sp needed
 502 0076 90BD     		pop	{r4, r7, pc}
 503              	.L24:
 504              		.align	2
 505              	.L23:
 506 0078 08010B40 		.word	1074462984
 507 007c 00010B40 		.word	1074462976
 508 0080 00000000 		.word	cyImoFreqMhz2Reg
 509 0084 30001040 		.word	1074790448
 510 0088 B6EA0000 		.word	60086
 511 008c 08001040 		.word	1074790408
 512 0090 04001040 		.word	1074790404
 513 0094 17000080 		.word	-2147483625
 514              		.cfi_endproc
 515              	.LFE8:
 516              		.size	CySysClkWriteImoFreq, .-CySysClkWriteImoFreq
 517              		.section	.text.CySysClkEcoStart,"ax",%progbits
 518              		.align	2
 519              		.global	CySysClkEcoStart
 520              		.code	16
 521              		.thumb_func
 522              		.type	CySysClkEcoStart, %function
 523              	CySysClkEcoStart:
 524              	.LFB9:
 825:Generated_Source\PSoC4/CyLib.c **** 
 826:Generated_Source\PSoC4/CyLib.c **** #else
 827:Generated_Source\PSoC4/CyLib.c **** 
 828:Generated_Source\PSoC4/CyLib.c ****     void CySysClkWriteImoFreq(uint32 freq)
 829:Generated_Source\PSoC4/CyLib.c ****     {
 830:Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
 831:Generated_Source\PSoC4/CyLib.c ****         uint8  imoTrim1Value;
 832:Generated_Source\PSoC4/CyLib.c **** 
 833:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_IMO_TRIMMABLE_BY_WCO)
 834:Generated_Source\PSoC4/CyLib.c ****             uint32 wcoLock = 0u;
 835:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_IMO_TRIMMABLE_BY_WCO) */        
 836:Generated_Source\PSoC4/CyLib.c ****         
 837:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_IMO_TRIMMABLE_BY_USB)
 838:Generated_Source\PSoC4/CyLib.c ****             uint32 usbLock = 0u;
ARM GAS  C:\Users\akita\AppData\Local\Temp\ccaIVzD4.s 			page 25


 839:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_IMO_TRIMMABLE_BY_USB) */
 840:Generated_Source\PSoC4/CyLib.c **** 
 841:Generated_Source\PSoC4/CyLib.c ****         #if (CY_PSOC4_4000)
 842:Generated_Source\PSoC4/CyLib.c ****             if ((freq == 24u) || (freq == 32u) || (freq == 48u))
 843:Generated_Source\PSoC4/CyLib.c ****         #elif (CY_CCG3)
 844:Generated_Source\PSoC4/CyLib.c ****             if ((freq == 24u) || (freq == 36u) || (freq == 48u))
 845:Generated_Source\PSoC4/CyLib.c ****         #else
 846:Generated_Source\PSoC4/CyLib.c ****             if ((freq == 24u) || (freq == 28u) || (freq == 32u) ||
 847:Generated_Source\PSoC4/CyLib.c ****                 (freq == 36u) || (freq == 40u) || (freq == 44u) ||
 848:Generated_Source\PSoC4/CyLib.c ****                 (freq == 48u))
 849:Generated_Source\PSoC4/CyLib.c ****         #endif /* (CY_PSOC4_4000) */
 850:Generated_Source\PSoC4/CyLib.c ****         {
 851:Generated_Source\PSoC4/CyLib.c ****             interruptState = CyEnterCriticalSection();
 852:Generated_Source\PSoC4/CyLib.c **** 
 853:Generated_Source\PSoC4/CyLib.c ****             #if (CY_IP_IMO_TRIMMABLE_BY_WCO)
 854:Generated_Source\PSoC4/CyLib.c ****                 if(0u != CySysClkImoGetWcoLock())
 855:Generated_Source\PSoC4/CyLib.c ****                 {
 856:Generated_Source\PSoC4/CyLib.c ****                     wcoLock = 1u;
 857:Generated_Source\PSoC4/CyLib.c ****                     CySysClkImoDisableWcoLock();
 858:Generated_Source\PSoC4/CyLib.c ****                 }
 859:Generated_Source\PSoC4/CyLib.c ****             #endif  /* (CY_IP_IMO_TRIMMABLE_BY_WCO) */
 860:Generated_Source\PSoC4/CyLib.c **** 
 861:Generated_Source\PSoC4/CyLib.c ****             #if (CY_IP_IMO_TRIMMABLE_BY_USB)
 862:Generated_Source\PSoC4/CyLib.c **** 
 863:Generated_Source\PSoC4/CyLib.c ****                 #if (CYDEV_IMO_TRIMMED_BY_USB == 0u)
 864:Generated_Source\PSoC4/CyLib.c ****                     if(0u != CySysClkImoGetUsbLock())
 865:Generated_Source\PSoC4/CyLib.c ****                     {
 866:Generated_Source\PSoC4/CyLib.c ****                 #endif  /* (CYDEV_IMO_TRIMMED_BY_USB == 0u) */
 867:Generated_Source\PSoC4/CyLib.c **** 
 868:Generated_Source\PSoC4/CyLib.c ****                     if (48u == freq)
 869:Generated_Source\PSoC4/CyLib.c ****                     {
 870:Generated_Source\PSoC4/CyLib.c ****                         usbLock = 1u;
 871:Generated_Source\PSoC4/CyLib.c ****                         CySysClkImoDisableUsbLock();
 872:Generated_Source\PSoC4/CyLib.c ****                     }
 873:Generated_Source\PSoC4/CyLib.c **** 
 874:Generated_Source\PSoC4/CyLib.c ****                 #if (CYDEV_IMO_TRIMMED_BY_USB == 0u)
 875:Generated_Source\PSoC4/CyLib.c ****                     }
 876:Generated_Source\PSoC4/CyLib.c ****                 #endif  /* (CYDEV_IMO_TRIMMED_BY_USB == 0u) */
 877:Generated_Source\PSoC4/CyLib.c **** 
 878:Generated_Source\PSoC4/CyLib.c ****             #endif  /* (CYDEV_IMO_TRIMMED_BY_USB == 0u) */
 879:Generated_Source\PSoC4/CyLib.c **** 
 880:Generated_Source\PSoC4/CyLib.c **** 
 881:Generated_Source\PSoC4/CyLib.c ****             /* Set IMO to 24 MHz - CLK_IMO_SELECT.FREQ = 0 */
 882:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_IMO_SELECT_REG &= ((uint32) ~CY_SYS_CLK_IMO_SELECT_FREQ_MASK);
 883:Generated_Source\PSoC4/CyLib.c **** 
 884:Generated_Source\PSoC4/CyLib.c **** 
 885:Generated_Source\PSoC4/CyLib.c ****             /* Apply coarse trim */
 886:Generated_Source\PSoC4/CyLib.c ****             #if (CY_IP_IMO_TRIMMABLE_BY_USB)
 887:Generated_Source\PSoC4/CyLib.c ****                 if ((1u == usbLock) && (48u == freq))
 888:Generated_Source\PSoC4/CyLib.c ****                 {
 889:Generated_Source\PSoC4/CyLib.c ****                     imoTrim1Value = CY_SFLASH_IMO_TRIM_USBMODE_48_REG;
 890:Generated_Source\PSoC4/CyLib.c ****                 }
 891:Generated_Source\PSoC4/CyLib.c ****                 else if ((1u == usbLock) && (24u == freq))
 892:Generated_Source\PSoC4/CyLib.c ****                 {
 893:Generated_Source\PSoC4/CyLib.c ****                     imoTrim1Value = CY_SFLASH_IMO_TRIM_USBMODE_24_REG;
 894:Generated_Source\PSoC4/CyLib.c ****                 }
 895:Generated_Source\PSoC4/CyLib.c ****                 else
ARM GAS  C:\Users\akita\AppData\Local\Temp\ccaIVzD4.s 			page 26


 896:Generated_Source\PSoC4/CyLib.c ****                 {
 897:Generated_Source\PSoC4/CyLib.c ****                     imoTrim1Value = (uint8) CY_SFLASH_IMO_TRIM_REG(freq - CY_SYS_CLK_IMO_MIN_FREQ_M
 898:Generated_Source\PSoC4/CyLib.c ****                 }
 899:Generated_Source\PSoC4/CyLib.c ****             #else
 900:Generated_Source\PSoC4/CyLib.c ****                 imoTrim1Value = (uint8) CY_SFLASH_IMO_TRIM_REG(freq - CY_SYS_CLK_IMO_MIN_FREQ_MHZ);
 901:Generated_Source\PSoC4/CyLib.c ****             #endif  /* (CY_IP_IMO_TRIMMABLE_BY_USB) */
 902:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_IMO_TRIM1_REG = (uint32) imoTrim1Value;
 903:Generated_Source\PSoC4/CyLib.c **** 
 904:Generated_Source\PSoC4/CyLib.c ****             /* Zero out fine trim */
 905:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_IMO_TRIM2_REG = CY_SYS_CLK_IMO_TRIM2_REG & ((uint32) ~CY_SYS_CLK_IMO_TRIM2_F
 906:Generated_Source\PSoC4/CyLib.c **** 
 907:Generated_Source\PSoC4/CyLib.c ****             /* Apply TC trim */
 908:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_IMO_TRIM3_REG = (CY_SYS_CLK_IMO_TRIM3_REG & ((uint32) ~CY_SYS_CLK_IMO_TRIM3_
 909:Generated_Source\PSoC4/CyLib.c ****                 (CY_SFLASH_IMO_TCTRIM_REG(freq - CY_SYS_CLK_IMO_MIN_FREQ_MHZ) & CY_SYS_CLK_IMO_TRIM
 910:Generated_Source\PSoC4/CyLib.c **** 
 911:Generated_Source\PSoC4/CyLib.c ****             CyDelayCycles(CY_SYS_CLK_IMO_TRIM_DELAY_CYCLES);
 912:Generated_Source\PSoC4/CyLib.c **** 
 913:Generated_Source\PSoC4/CyLib.c ****             if (freq > CY_SYS_CLK_IMO_MIN_FREQ_MHZ)
 914:Generated_Source\PSoC4/CyLib.c ****             {
 915:Generated_Source\PSoC4/CyLib.c ****                 /* Select nearby intermediate frequency */
 916:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_CLK_IMO_SELECT_REG = (CY_SYS_CLK_IMO_SELECT_REG & ((uint32) ~CY_SYS_CLK_IMO_
 917:Generated_Source\PSoC4/CyLib.c ****                     (((freq - 4u - CY_SYS_CLK_IMO_MIN_FREQ_MHZ) >> 2u) & CY_SYS_CLK_IMO_SELECT_FREQ
 918:Generated_Source\PSoC4/CyLib.c **** 
 919:Generated_Source\PSoC4/CyLib.c ****                 CyDelayCycles(CY_SYS_CLK_IMO_TRIM_DELAY_CYCLES);
 920:Generated_Source\PSoC4/CyLib.c **** 
 921:Generated_Source\PSoC4/CyLib.c ****                 /* Make small step to final frequency */
 922:Generated_Source\PSoC4/CyLib.c ****                 /* Select nearby intermediate frequency */
 923:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_CLK_IMO_SELECT_REG = (CY_SYS_CLK_IMO_SELECT_REG & ((uint32) ~CY_SYS_CLK_IMO_
 924:Generated_Source\PSoC4/CyLib.c ****                     (((freq - CY_SYS_CLK_IMO_MIN_FREQ_MHZ) >> 2u) & CY_SYS_CLK_IMO_SELECT_FREQ_MASK
 925:Generated_Source\PSoC4/CyLib.c ****             }
 926:Generated_Source\PSoC4/CyLib.c **** 
 927:Generated_Source\PSoC4/CyLib.c ****             #if (CY_IP_IMO_TRIMMABLE_BY_WCO)
 928:Generated_Source\PSoC4/CyLib.c ****                 if (1u == wcoLock)
 929:Generated_Source\PSoC4/CyLib.c ****                 {
 930:Generated_Source\PSoC4/CyLib.c ****                     CySysClkImoEnableWcoLock();
 931:Generated_Source\PSoC4/CyLib.c ****                 }
 932:Generated_Source\PSoC4/CyLib.c ****             #endif  /* (CY_IP_IMO_TRIMMABLE_BY_WCO) */
 933:Generated_Source\PSoC4/CyLib.c ****         
 934:Generated_Source\PSoC4/CyLib.c ****         
 935:Generated_Source\PSoC4/CyLib.c ****             #if (CY_IP_IMO_TRIMMABLE_BY_USB)
 936:Generated_Source\PSoC4/CyLib.c ****                 if (1u == usbLock)
 937:Generated_Source\PSoC4/CyLib.c ****                 {
 938:Generated_Source\PSoC4/CyLib.c ****                     CySysClkImoEnableUsbLock();
 939:Generated_Source\PSoC4/CyLib.c ****                 }
 940:Generated_Source\PSoC4/CyLib.c ****             #endif  /* (CY_IP_IMO_TRIMMABLE_BY_USB) */
 941:Generated_Source\PSoC4/CyLib.c **** 
 942:Generated_Source\PSoC4/CyLib.c ****             CyExitCriticalSection(interruptState);
 943:Generated_Source\PSoC4/CyLib.c ****         }
 944:Generated_Source\PSoC4/CyLib.c ****         else
 945:Generated_Source\PSoC4/CyLib.c ****         {
 946:Generated_Source\PSoC4/CyLib.c ****             /* Halt CPU in debug mode if new frequency is invalid */
 947:Generated_Source\PSoC4/CyLib.c ****             CYASSERT(0u != 0u);
 948:Generated_Source\PSoC4/CyLib.c ****         }
 949:Generated_Source\PSoC4/CyLib.c ****     }
 950:Generated_Source\PSoC4/CyLib.c **** 
 951:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_SRSSV2) */
 952:Generated_Source\PSoC4/CyLib.c **** 
ARM GAS  C:\Users\akita\AppData\Local\Temp\ccaIVzD4.s 			page 27


 953:Generated_Source\PSoC4/CyLib.c **** 
 954:Generated_Source\PSoC4/CyLib.c **** #if(CY_IP_SRSSLT)
 955:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
 956:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkWriteHfclkDiv
 957:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
 958:Generated_Source\PSoC4/CyLib.c ****     *
 959:Generated_Source\PSoC4/CyLib.c ****     * Selects the pre-scaler divider value for HFCLK from IMO.
 960:Generated_Source\PSoC4/CyLib.c ****     *
 961:Generated_Source\PSoC4/CyLib.c ****     * The HFCLK predivider allows the device to divide the HFCLK selection mux
 962:Generated_Source\PSoC4/CyLib.c ****     * input before use as HFCLK. The predivider is capable of dividing the HFCLK by
 963:Generated_Source\PSoC4/CyLib.c ****     * powers of 2 between 1 and 8.
 964:Generated_Source\PSoC4/CyLib.c ****     *
 965:Generated_Source\PSoC4/CyLib.c ****     * PSoC 4000: The SYSCLK has the speed of 16 MHz, so HFCLK and SYSCLK dividers
 966:Generated_Source\PSoC4/CyLib.c ****     * should be selected in a way, not to exceed 16 MHz for SYSCLK.
 967:Generated_Source\PSoC4/CyLib.c ****     *
 968:Generated_Source\PSoC4/CyLib.c ****     * If the SYSCLK clock frequency increases during the device operation, call
 969:Generated_Source\PSoC4/CyLib.c ****     * \ref CySysFlashSetWaitCycles() with the appropriate parameter to adjust the
 970:Generated_Source\PSoC4/CyLib.c ****     * number of clock cycles the cache will wait before sampling data comes back
 971:Generated_Source\PSoC4/CyLib.c ****     * from Flash. If the SYSCLK clock frequency decreases, you can call
 972:Generated_Source\PSoC4/CyLib.c ****     * \ref CySysFlashSetWaitCycles() to improve the CPU performance. See
 973:Generated_Source\PSoC4/CyLib.c ****     * \ref CySysFlashSetWaitCycles() description for more information.
 974:Generated_Source\PSoC4/CyLib.c ****     *
 975:Generated_Source\PSoC4/CyLib.c ****     * \param \ref CY_SYS_CLK_HFCLK_DIV_NODIV    Transparent mode (w/o dividing)
 976:Generated_Source\PSoC4/CyLib.c ****     * \param \ref CY_SYS_CLK_HFCLK_DIV_2        Divide selected clock source by 2
 977:Generated_Source\PSoC4/CyLib.c ****     * \param \ref CY_SYS_CLK_HFCLK_DIV_4        Divide selected clock source by 4
 978:Generated_Source\PSoC4/CyLib.c ****     * \param \ref CY_SYS_CLK_HFCLK_DIV_8        Divide selected clock source by 8
 979:Generated_Source\PSoC4/CyLib.c ****     *
 980:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
 981:Generated_Source\PSoC4/CyLib.c ****     void CySysClkWriteHfclkDiv(uint32 divider)
 982:Generated_Source\PSoC4/CyLib.c ****     {
 983:Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
 984:Generated_Source\PSoC4/CyLib.c **** 
 985:Generated_Source\PSoC4/CyLib.c ****         interruptState = CyEnterCriticalSection();
 986:Generated_Source\PSoC4/CyLib.c **** 
 987:Generated_Source\PSoC4/CyLib.c ****         CY_SYS_CLK_SELECT_REG = ((CY_SYS_CLK_SELECT_REG & ((uint32) (~(CY_SYS_CLK_SELECT_HFCLK_DIV_
 988:Generated_Source\PSoC4/CyLib.c ****                                         CY_SYS_CLK_SELECT_HFCLK_DIV_SHIFT)))) |
 989:Generated_Source\PSoC4/CyLib.c ****                     ((uint32)((divider & CY_SYS_CLK_SELECT_HFCLK_DIV_MASK) << CY_SYS_CLK_SELECT_HFC
 990:Generated_Source\PSoC4/CyLib.c **** 
 991:Generated_Source\PSoC4/CyLib.c ****         CyExitCriticalSection(interruptState);
 992:Generated_Source\PSoC4/CyLib.c ****     }
 993:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_SRSSLT) */
 994:Generated_Source\PSoC4/CyLib.c **** 
 995:Generated_Source\PSoC4/CyLib.c **** 
 996:Generated_Source\PSoC4/CyLib.c **** #if (CY_IP_ECO)
 997:Generated_Source\PSoC4/CyLib.c **** 
 998:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
 999:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkEcoStart
1000:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1001:Generated_Source\PSoC4/CyLib.c ****     *
1002:Generated_Source\PSoC4/CyLib.c ****     * Starts the External Crystal Oscillator (ECO). Refer to the device datasheet
1003:Generated_Source\PSoC4/CyLib.c ****     * for the ECO startup time.
1004:Generated_Source\PSoC4/CyLib.c ****     *
1005:Generated_Source\PSoC4/CyLib.c ****     * The timeout interval is measured based on the system frequency defined by
1006:Generated_Source\PSoC4/CyLib.c ****     * PSoC Creator at build time. If System clock frequency is changed in
1007:Generated_Source\PSoC4/CyLib.c ****     * runtime, the \ref CyDelayFreq() with the appropriate parameter should be
1008:Generated_Source\PSoC4/CyLib.c ****     * called.
1009:Generated_Source\PSoC4/CyLib.c ****     *
ARM GAS  C:\Users\akita\AppData\Local\Temp\ccaIVzD4.s 			page 28


1010:Generated_Source\PSoC4/CyLib.c ****     * PSoC 4100 BLE / PSoC 4200 BLE: The WCO must be enabled prior to enabling ECO.
1011:Generated_Source\PSoC4/CyLib.c ****     *
1012:Generated_Source\PSoC4/CyLib.c ****     * \param timeoutUs Timeout in microseconds.
1013:Generated_Source\PSoC4/CyLib.c ****     *
1014:Generated_Source\PSoC4/CyLib.c ****     * If zero is specified, the function does not wait for timeout and returns
1015:Generated_Source\PSoC4/CyLib.c ****     * CYRET_SUCCESS. If non-zero is specified, the function waits for the timeout.
1016:Generated_Source\PSoC4/CyLib.c ****     *
1017:Generated_Source\PSoC4/CyLib.c ****     * \return \ref CYRET_SUCCESS Completed successfully. The ECO is oscillating and
1018:Generated_Source\PSoC4/CyLib.c ****     * amplitude reached 60% and it does not mean 24 MHz crystal is within 50 ppm.
1019:Generated_Source\PSoC4/CyLib.c ****     *
1020:Generated_Source\PSoC4/CyLib.c ****     * \return \ref CYRET_TIMEOUT Timeout occurred. If the crystal is not oscillating
1021:Generated_Source\PSoC4/CyLib.c ****     * or amplitude didn't reach 60% after specified amount of time, CYRET_TIMEOUT
1022:Generated_Source\PSoC4/CyLib.c ****     * is returned.
1023:Generated_Source\PSoC4/CyLib.c ****     *
1024:Generated_Source\PSoC4/CyLib.c ****     * \return \ref CYRET_BAD_PARAM One or more invalid parameters.
1025:Generated_Source\PSoC4/CyLib.c ****     *
1026:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1027:Generated_Source\PSoC4/CyLib.c ****     cystatus CySysClkEcoStart(uint32 timeoutUs)
1028:Generated_Source\PSoC4/CyLib.c ****     {
 525              		.loc 1 1028 0
 526              		.cfi_startproc
 527 0000 80B5     		push	{r7, lr}
 528              		.cfi_def_cfa_offset 8
 529              		.cfi_offset 7, -8
 530              		.cfi_offset 14, -4
 531 0002 84B0     		sub	sp, sp, #16
 532              		.cfi_def_cfa_offset 24
 533 0004 00AF     		add	r7, sp, #0
 534              		.cfi_def_cfa_register 7
 535 0006 7860     		str	r0, [r7, #4]
1029:Generated_Source\PSoC4/CyLib.c ****         cystatus returnStatus = CYRET_SUCCESS;
 536              		.loc 1 1029 0
 537 0008 0023     		mov	r3, #0
 538 000a FB60     		str	r3, [r7, #12]
1030:Generated_Source\PSoC4/CyLib.c **** 
1031:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_ECO_BLESS)
1032:Generated_Source\PSoC4/CyLib.c ****             /* Enable the RF oscillator band gap */
1033:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_XTAL_BLESS_RF_CONFIG_REG |= CY_SYS_XTAL_BLESS_RF_CONFIG_RF_ENABLE;
 539              		.loc 1 1033 0
 540 000c 154B     		ldr	r3, .L31
 541 000e 154A     		ldr	r2, .L31
 542 0010 1268     		ldr	r2, [r2]
 543 0012 0121     		mov	r1, #1
 544 0014 0A43     		orr	r2, r1
 545 0016 1A60     		str	r2, [r3]
1034:Generated_Source\PSoC4/CyLib.c **** 
1035:Generated_Source\PSoC4/CyLib.c ****             /* Update trimming register */
1036:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_XTAL_BLERD_BB_XO_REG = CY_SYS_XTAL_BLERD_BB_XO_TRIM;
 546              		.loc 1 1036 0
 547 0018 134B     		ldr	r3, .L31+4
 548 001a 144A     		ldr	r2, .L31+8
 549 001c 1A60     		str	r2, [r3]
1037:Generated_Source\PSoC4/CyLib.c **** 
1038:Generated_Source\PSoC4/CyLib.c ****             /* Enable the Crystal */
1039:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_XTAL_BLERD_DBUS_REG |= CY_SYS_XTAL_BLERD_DBUS_XTAL_ENABLE;
 550              		.loc 1 1039 0
 551 001e 144B     		ldr	r3, .L31+12
ARM GAS  C:\Users\akita\AppData\Local\Temp\ccaIVzD4.s 			page 29


 552 0020 134A     		ldr	r2, .L31+12
 553 0022 1268     		ldr	r2, [r2]
 554 0024 8021     		mov	r1, #128
 555 0026 0902     		lsl	r1, r1, #8
 556 0028 0A43     		orr	r2, r1
 557 002a 1A60     		str	r2, [r3]
1040:Generated_Source\PSoC4/CyLib.c ****         
1041:Generated_Source\PSoC4/CyLib.c ****         #elif (CY_IP_ECO_BLESSV3)
1042:Generated_Source\PSoC4/CyLib.c ****             uint32 regConfig;
1043:Generated_Source\PSoC4/CyLib.c ****             uint32 intrRegMaskStore = 0u;
1044:Generated_Source\PSoC4/CyLib.c ****             
1045:Generated_Source\PSoC4/CyLib.c ****             if (0u != (CY_SYS_BLESS_MT_CFG_REG & (CY_SYS_BLESS_MT_CFG_ENABLE_BLERD <<  CYFLD_BLE_BL
1046:Generated_Source\PSoC4/CyLib.c ****             {
1047:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_BLESS_MT_CFG_REG |= (CY_SYS_BLESS_MT_CFG_DPSLP_ECO_ON  <<  CYFLD_BLE_BLESS_D
1048:Generated_Source\PSoC4/CyLib.c ****             }
1049:Generated_Source\PSoC4/CyLib.c ****             else
1050:Generated_Source\PSoC4/CyLib.c ****             {
1051:Generated_Source\PSoC4/CyLib.c ****                 /* Init BLE core */
1052:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_BLESS_MT_DELAY_CFG_REG = CY_SYS_BLESS_MT_DELAY_CFG_INIT;
1053:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_BLESS_MT_DELAY_CFG2_REG = CY_SYS_BLESS_MT_DELAY_CFG2_INIT;
1054:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_BLESS_MT_DELAY_CFG3_REG = CY_SYS_BLESS_MT_DELAY_CFG3_INIT;
1055:Generated_Source\PSoC4/CyLib.c ****             
1056:Generated_Source\PSoC4/CyLib.c ****                 /* RCB init */
1057:Generated_Source\PSoC4/CyLib.c ****                 regConfig = CY_SYS_RCB_CTRL_REG;
1058:Generated_Source\PSoC4/CyLib.c ****                 regConfig &= CY_SYS_RCB_CTRL_CLEAR;
1059:Generated_Source\PSoC4/CyLib.c ****                 regConfig |= CY_SYS_RCB_CTRL_INIT;
1060:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_RCB_CTRL_REG = regConfig;
1061:Generated_Source\PSoC4/CyLib.c ****                 
1062:Generated_Source\PSoC4/CyLib.c ****                 intrRegMaskStore = CY_SYS_BLESS_INTR_MASK_REG;
1063:Generated_Source\PSoC4/CyLib.c ****                 if(0u != (CY_SYS_BLESS_BLERD_ACTIVE_INTR_MASK & intrRegMaskStore))
1064:Generated_Source\PSoC4/CyLib.c ****                 {
1065:Generated_Source\PSoC4/CyLib.c ****                     CY_SYS_BLESS_INTR_MASK_REG &= ~CY_SYS_BLESS_BLERD_ACTIVE_INTR_MASK;
1066:Generated_Source\PSoC4/CyLib.c ****                 }
1067:Generated_Source\PSoC4/CyLib.c ****                 
1068:Generated_Source\PSoC4/CyLib.c ****                 /* Enable BLE core */
1069:Generated_Source\PSoC4/CyLib.c ****                 regConfig = CY_SYS_BLESS_MT_CFG_REG;
1070:Generated_Source\PSoC4/CyLib.c ****                 regConfig &= CY_SYS_BLESS_MT_CFG_CLEAR;
1071:Generated_Source\PSoC4/CyLib.c ****                 regConfig |= CY_SYS_BLESS_MT_CFG_INIT;
1072:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_BLESS_MT_CFG_REG = regConfig;
1073:Generated_Source\PSoC4/CyLib.c **** 
1074:Generated_Source\PSoC4/CyLib.c ****                 while(0u == ((CY_SYS_BLESS_BLERD_ACTIVE_INTR_STAT & CY_SYS_BLESS_INTR_STAT_REG)))
1075:Generated_Source\PSoC4/CyLib.c ****                 {
1076:Generated_Source\PSoC4/CyLib.c ****                     /* Wait until BLERD55 moves to active state */
1077:Generated_Source\PSoC4/CyLib.c ****                 }
1078:Generated_Source\PSoC4/CyLib.c **** 
1079:Generated_Source\PSoC4/CyLib.c ****                 if(0u != (CY_SYS_BLESS_BLERD_ACTIVE_INTR_MASK & intrRegMaskStore))
1080:Generated_Source\PSoC4/CyLib.c ****                 {
1081:Generated_Source\PSoC4/CyLib.c ****                     CY_SYS_BLESS_INTR_MASK_REG |= CY_SYS_BLESS_BLERD_ACTIVE_INTR_MASK;
1082:Generated_Source\PSoC4/CyLib.c ****                 }
1083:Generated_Source\PSoC4/CyLib.c ****                 
1084:Generated_Source\PSoC4/CyLib.c ****                 /* Send write commands to RBUS */
1085:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_RCB_TX_FIFO_WR_REG = CY_SYS_RCB_RBUS_FREQ_NRST_SET;
1086:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_RCB_TX_FIFO_WR_REG = CY_SYS_RCB_RBUS_DIG_CLK_SET;
1087:Generated_Source\PSoC4/CyLib.c ****                 
1088:Generated_Source\PSoC4/CyLib.c ****                 #if (CY_SYS_BLE_CLK_ECO_FREQ_32MHZ == CYDEV_ECO_CLK_MHZ)
1089:Generated_Source\PSoC4/CyLib.c ****                     CY_SYS_RCB_TX_FIFO_WR_REG = CY_SYS_RCB_RBUS_FREQ_XTAL_DIV_SET;
1090:Generated_Source\PSoC4/CyLib.c ****                     CY_SYS_RCB_TX_FIFO_WR_REG = (CY_SYS_RCB_RBUS_RF_DCXO_CFG_SET | CY_SYS_RCB_RBUS_
ARM GAS  C:\Users\akita\AppData\Local\Temp\ccaIVzD4.s 			page 30


1091:Generated_Source\PSoC4/CyLib.c ****                 #else
1092:Generated_Source\PSoC4/CyLib.c ****                     CY_SYS_RCB_TX_FIFO_WR_REG = CY_SYS_RCB_RBUS_FREQ_XTAL_NODIV_SET;
1093:Generated_Source\PSoC4/CyLib.c ****                 #endif
1094:Generated_Source\PSoC4/CyLib.c ****                 
1095:Generated_Source\PSoC4/CyLib.c ****                 intrRegMaskStore = CY_SYS_BLESS_INTR_MASK_REG;
1096:Generated_Source\PSoC4/CyLib.c ****                 if(0u != (CY_SYS_RCB_INTR_RCB_DONE & intrRegMaskStore))
1097:Generated_Source\PSoC4/CyLib.c ****                 {
1098:Generated_Source\PSoC4/CyLib.c ****                     CY_SYS_BLESS_INTR_MASK_REG &= ~(CY_SYS_RCB_INTR_RCB_DONE | CY_SYS_RCB_INTR_RCB_
1099:Generated_Source\PSoC4/CyLib.c ****                 }
1100:Generated_Source\PSoC4/CyLib.c ****                 
1101:Generated_Source\PSoC4/CyLib.c ****                 /* Send read commands to RBUS */
1102:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_RCB_TX_FIFO_WR_REG = (CY_SYS_RCB_RBUS_RD_CMD | 
1103:Generated_Source\PSoC4/CyLib.c ****                                             (CY_SYS_RCB_RBUS_RF_DCXO_CFG_SET & ~CY_SYS_RCB_RBUS_VAL
1104:Generated_Source\PSoC4/CyLib.c ****                                             
1105:Generated_Source\PSoC4/CyLib.c ****                 while (0u == (CY_SYS_RCB_INTR_RCB_RX_FIFO_NOT_EMPTY & CY_SYS_RCB_INTR_REG))
1106:Generated_Source\PSoC4/CyLib.c ****                 {
1107:Generated_Source\PSoC4/CyLib.c ****                     /* Wait until RX_FIFO_NOT_EMPTY state */
1108:Generated_Source\PSoC4/CyLib.c ****                 }
1109:Generated_Source\PSoC4/CyLib.c **** 
1110:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_RCB_INTR_REG |= CY_SYS_RCB_INTR_RCB_DONE;
1111:Generated_Source\PSoC4/CyLib.c ****                 
1112:Generated_Source\PSoC4/CyLib.c ****                 regConfig = CY_SYS_RCB_RX_FIFO_RD_REG & CY_SYS_RCB_RBUS_TRIM_MASK;
1113:Generated_Source\PSoC4/CyLib.c ****                 
1114:Generated_Source\PSoC4/CyLib.c ****                 /* Send write commands to RBUS */
1115:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_RCB_TX_FIFO_WR_REG = (CY_SYS_RCB_RBUS_RF_DCXO_CFG_SET | regConfig | CY_SYS_R
1116:Generated_Source\PSoC4/CyLib.c ****                 
1117:Generated_Source\PSoC4/CyLib.c ****                 while (0u == (CY_SYS_RCB_INTR_RCB_DONE & CY_SYS_RCB_INTR_REG))
1118:Generated_Source\PSoC4/CyLib.c ****                 {
1119:Generated_Source\PSoC4/CyLib.c ****                     /* Wait until RCB_DONE state */
1120:Generated_Source\PSoC4/CyLib.c ****                 }
1121:Generated_Source\PSoC4/CyLib.c ****                 
1122:Generated_Source\PSoC4/CyLib.c ****                 /* Clear Interrupt */
1123:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_RCB_INTR_REG = CY_SYS_RCB_INTR_CLEAR;
1124:Generated_Source\PSoC4/CyLib.c ****                 
1125:Generated_Source\PSoC4/CyLib.c ****                 if(0u != ((CY_SYS_RCB_INTR_RCB_DONE | CY_SYS_RCB_INTR_RCB_RX_FIFO_NOT_EMPTY) & intr
1126:Generated_Source\PSoC4/CyLib.c ****                 {
1127:Generated_Source\PSoC4/CyLib.c ****                     CY_SYS_BLESS_INTR_MASK_REG |= intrRegMaskStore;
1128:Generated_Source\PSoC4/CyLib.c ****                 }
1129:Generated_Source\PSoC4/CyLib.c ****                 
1130:Generated_Source\PSoC4/CyLib.c ****             }
1131:Generated_Source\PSoC4/CyLib.c ****         #else /* CY_IP_ECO_SRSSV2 */
1132:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_ECO_CONFIG_REG |= CY_SYS_CLK_ECO_CONFIG_ENABLE;
1133:Generated_Source\PSoC4/CyLib.c ****             CyDelayUs(CY_SYS_CLK_ECO_CONFIG_CLK_EN_TIMEOUT_US);
1134:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_ECO_CONFIG_REG |= CY_SYS_CLK_ECO_CONFIG_CLK_EN;
1135:Generated_Source\PSoC4/CyLib.c ****         #endif /* (CY_IP_ECO_BLESS) */
1136:Generated_Source\PSoC4/CyLib.c **** 
1137:Generated_Source\PSoC4/CyLib.c ****         if(timeoutUs > 0u)
 558              		.loc 1 1137 0
 559 002c 7B68     		ldr	r3, [r7, #4]
 560 002e 002B     		cmp	r3, #0
 561 0030 12D0     		beq	.L26
1138:Generated_Source\PSoC4/CyLib.c ****         {
1139:Generated_Source\PSoC4/CyLib.c ****             returnStatus = CYRET_TIMEOUT;
 562              		.loc 1 1139 0
 563 0032 1023     		mov	r3, #16
 564 0034 FB60     		str	r3, [r7, #12]
1140:Generated_Source\PSoC4/CyLib.c **** 
ARM GAS  C:\Users\akita\AppData\Local\Temp\ccaIVzD4.s 			page 31


1141:Generated_Source\PSoC4/CyLib.c ****             for( ; timeoutUs > 0u; timeoutUs--)
 565              		.loc 1 1141 0
 566 0036 0CE0     		b	.L27
 567              	.L29:
1142:Generated_Source\PSoC4/CyLib.c ****             {
1143:Generated_Source\PSoC4/CyLib.c ****                 CyDelayUs(1u);
 568              		.loc 1 1143 0
 569 0038 0120     		mov	r0, #1
 570 003a FFF7FEFF 		bl	CyDelayUs
1144:Generated_Source\PSoC4/CyLib.c **** 
1145:Generated_Source\PSoC4/CyLib.c ****                 if(0u != CySysClkEcoReadStatus())
 571              		.loc 1 1145 0
 572 003e FFF7FEFF 		bl	CySysClkEcoReadStatus
 573 0042 031E     		sub	r3, r0, #0
 574 0044 02D0     		beq	.L28
1146:Generated_Source\PSoC4/CyLib.c ****                 {
1147:Generated_Source\PSoC4/CyLib.c ****                     returnStatus = CYRET_SUCCESS;
 575              		.loc 1 1147 0
 576 0046 0023     		mov	r3, #0
 577 0048 FB60     		str	r3, [r7, #12]
1148:Generated_Source\PSoC4/CyLib.c ****                     break;
 578              		.loc 1 1148 0
 579 004a 05E0     		b	.L26
 580              	.L28:
1141:Generated_Source\PSoC4/CyLib.c ****             {
 581              		.loc 1 1141 0
 582 004c 7B68     		ldr	r3, [r7, #4]
 583 004e 013B     		sub	r3, r3, #1
 584 0050 7B60     		str	r3, [r7, #4]
 585              	.L27:
1141:Generated_Source\PSoC4/CyLib.c ****             {
 586              		.loc 1 1141 0 is_stmt 0 discriminator 1
 587 0052 7B68     		ldr	r3, [r7, #4]
 588 0054 002B     		cmp	r3, #0
 589 0056 EFD1     		bne	.L29
 590              	.L26:
1149:Generated_Source\PSoC4/CyLib.c ****                 }
1150:Generated_Source\PSoC4/CyLib.c ****             }
1151:Generated_Source\PSoC4/CyLib.c **** 
1152:Generated_Source\PSoC4/CyLib.c ****         }
1153:Generated_Source\PSoC4/CyLib.c **** 
1154:Generated_Source\PSoC4/CyLib.c ****         return(returnStatus);
 591              		.loc 1 1154 0 is_stmt 1
 592 0058 FB68     		ldr	r3, [r7, #12]
1155:Generated_Source\PSoC4/CyLib.c ****     }
 593              		.loc 1 1155 0
 594 005a 181C     		mov	r0, r3
 595 005c BD46     		mov	sp, r7
 596 005e 04B0     		add	sp, sp, #16
 597              		@ sp needed
 598 0060 80BD     		pop	{r7, pc}
 599              	.L32:
 600 0062 C046     		.align	2
 601              	.L31:
 602 0064 60F02E40 		.word	1076818016
 603 0068 78002E40 		.word	1076756600
 604 006c 02200000 		.word	8194
ARM GAS  C:\Users\akita\AppData\Local\Temp\ccaIVzD4.s 			page 32


 605 0070 10002E40 		.word	1076756496
 606              		.cfi_endproc
 607              	.LFE9:
 608              		.size	CySysClkEcoStart, .-CySysClkEcoStart
 609              		.section	.text.CySysClkEcoStop,"ax",%progbits
 610              		.align	2
 611              		.global	CySysClkEcoStop
 612              		.code	16
 613              		.thumb_func
 614              		.type	CySysClkEcoStop, %function
 615              	CySysClkEcoStop:
 616              	.LFB10:
1156:Generated_Source\PSoC4/CyLib.c **** 
1157:Generated_Source\PSoC4/CyLib.c **** 
1158:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1159:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkEcoStop
1160:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1161:Generated_Source\PSoC4/CyLib.c ****     *
1162:Generated_Source\PSoC4/CyLib.c ****     * Stops the megahertz crystal.
1163:Generated_Source\PSoC4/CyLib.c ****     *
1164:Generated_Source\PSoC4/CyLib.c ****     * If ECO is disabled when it is sourcing HFCLK, the CPU will halt. In addition,
1165:Generated_Source\PSoC4/CyLib.c ****     * for PSoC 4100 BLE / PSoC 4200 BLE devices, the BLE sub-system will stop
1166:Generated_Source\PSoC4/CyLib.c ****     * functioning.
1167:Generated_Source\PSoC4/CyLib.c ****     *
1168:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1169:Generated_Source\PSoC4/CyLib.c ****     void CySysClkEcoStop(void)
1170:Generated_Source\PSoC4/CyLib.c ****     {
 617              		.loc 1 1170 0
 618              		.cfi_startproc
 619 0000 80B5     		push	{r7, lr}
 620              		.cfi_def_cfa_offset 8
 621              		.cfi_offset 7, -8
 622              		.cfi_offset 14, -4
 623 0002 00AF     		add	r7, sp, #0
 624              		.cfi_def_cfa_register 7
1171:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_WCO_BLESS)
1172:Generated_Source\PSoC4/CyLib.c ****             /* Disable the RF oscillator band gap */
1173:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_XTAL_BLESS_RF_CONFIG_REG &= (uint32) ~CY_SYS_XTAL_BLESS_RF_CONFIG_RF_ENABLE;
 625              		.loc 1 1173 0
 626 0004 064B     		ldr	r3, .L34
 627 0006 064A     		ldr	r2, .L34
 628 0008 1268     		ldr	r2, [r2]
 629 000a 0121     		mov	r1, #1
 630 000c 8A43     		bic	r2, r1
 631 000e 1A60     		str	r2, [r3]
1174:Generated_Source\PSoC4/CyLib.c **** 
1175:Generated_Source\PSoC4/CyLib.c ****             /* Disable the Crystal */
1176:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_XTAL_BLERD_DBUS_REG &= (uint32) ~CY_SYS_XTAL_BLERD_DBUS_XTAL_ENABLE;
 632              		.loc 1 1176 0
 633 0010 044B     		ldr	r3, .L34+4
 634 0012 044A     		ldr	r2, .L34+4
 635 0014 1268     		ldr	r2, [r2]
 636 0016 0449     		ldr	r1, .L34+8
 637 0018 0A40     		and	r2, r1
 638 001a 1A60     		str	r2, [r3]
1177:Generated_Source\PSoC4/CyLib.c ****         #elif (CY_IP_ECO_BLESSV3)
1178:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_BLESS_MT_CFG_REG &= ~(CY_SYS_BLESS_MT_CFG_DPSLP_ECO_ON  <<  CYFLD_BLE_BLESS_DPSL
ARM GAS  C:\Users\akita\AppData\Local\Temp\ccaIVzD4.s 			page 33


1179:Generated_Source\PSoC4/CyLib.c ****         #else
1180:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_ECO_CONFIG_REG &= (uint32) ~(CY_SYS_CLK_ECO_CONFIG_ENABLE | CY_SYS_CLK_ECO_C
1181:Generated_Source\PSoC4/CyLib.c ****         #endif /* (CY_IP_WCO_BLESS) */
1182:Generated_Source\PSoC4/CyLib.c ****     }
 639              		.loc 1 1182 0
 640 001c BD46     		mov	sp, r7
 641              		@ sp needed
 642 001e 80BD     		pop	{r7, pc}
 643              	.L35:
 644              		.align	2
 645              	.L34:
 646 0020 60F02E40 		.word	1076818016
 647 0024 10002E40 		.word	1076756496
 648 0028 FF7FFFFF 		.word	-32769
 649              		.cfi_endproc
 650              	.LFE10:
 651              		.size	CySysClkEcoStop, .-CySysClkEcoStop
 652              		.section	.text.CySysClkEcoReadStatus,"ax",%progbits
 653              		.align	2
 654              		.global	CySysClkEcoReadStatus
 655              		.code	16
 656              		.thumb_func
 657              		.type	CySysClkEcoReadStatus, %function
 658              	CySysClkEcoReadStatus:
 659              	.LFB11:
1183:Generated_Source\PSoC4/CyLib.c **** 
1184:Generated_Source\PSoC4/CyLib.c **** 
1185:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1186:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkEcoReadStatus
1187:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1188:Generated_Source\PSoC4/CyLib.c ****     *
1189:Generated_Source\PSoC4/CyLib.c ****     * Reads the status bit for the megahertz crystal.
1190:Generated_Source\PSoC4/CyLib.c ****     *
1191:Generated_Source\PSoC4/CyLib.c ****     * For PSoC 4100 BLE / PSoC 4200 BLE devices, the status bit is the
1192:Generated_Source\PSoC4/CyLib.c ****     * XO_AMP_DETECT bit in FSM register.
1193:Generated_Source\PSoC4/CyLib.c ****     *
1194:Generated_Source\PSoC4/CyLib.c ****     * For PSoC 4200L devices, the error status bit is the WATCHDOG_ERROR bit in
1195:Generated_Source\PSoC4/CyLib.c ****     * ECO_STATUS register.
1196:Generated_Source\PSoC4/CyLib.c ****     *
1197:Generated_Source\PSoC4/CyLib.c ****     * \return PSoC 4100 BLE/PSoC 4200 BLE: Non-zero indicates that ECO output
1198:Generated_Source\PSoC4/CyLib.c ****     * reached 50 ppm and is oscillating in valid range.
1199:Generated_Source\PSoC4/CyLib.c ****     *
1200:Generated_Source\PSoC4/CyLib.c ****     * \return PSoC 4200L: Non-zero indicates that ECO is running.
1201:Generated_Source\PSoC4/CyLib.c ****     *
1202:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1203:Generated_Source\PSoC4/CyLib.c ****     uint32 CySysClkEcoReadStatus(void)
1204:Generated_Source\PSoC4/CyLib.c ****     {
 660              		.loc 1 1204 0
 661              		.cfi_startproc
 662 0000 80B5     		push	{r7, lr}
 663              		.cfi_def_cfa_offset 8
 664              		.cfi_offset 7, -8
 665              		.cfi_offset 14, -4
 666 0002 82B0     		sub	sp, sp, #8
 667              		.cfi_def_cfa_offset 16
 668 0004 00AF     		add	r7, sp, #0
 669              		.cfi_def_cfa_register 7
ARM GAS  C:\Users\akita\AppData\Local\Temp\ccaIVzD4.s 			page 34


1205:Generated_Source\PSoC4/CyLib.c ****         uint32 returnValue;
1206:Generated_Source\PSoC4/CyLib.c **** 
1207:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_WCO_BLESS)
1208:Generated_Source\PSoC4/CyLib.c ****             returnValue = CY_SYS_XTAL_BLERD_FSM_REG & CY_SYS_XTAL_BLERD_FSM_XO_AMP_DETECT;
 670              		.loc 1 1208 0
 671 0006 054B     		ldr	r3, .L38
 672 0008 1B68     		ldr	r3, [r3]
 673 000a 0122     		mov	r2, #1
 674 000c 1340     		and	r3, r2
 675 000e 7B60     		str	r3, [r7, #4]
1209:Generated_Source\PSoC4/CyLib.c ****         #elif (CY_IP_ECO_BLESSV3)
1210:Generated_Source\PSoC4/CyLib.c ****             returnValue = (CY_SYS_BLESS_MT_STATUS_REG & CY_SYS_BLESS_MT_STATUS_CURR_STATE_MASK) >> 
1211:Generated_Source\PSoC4/CyLib.c **** 
1212:Generated_Source\PSoC4/CyLib.c ****             returnValue =  ((CY_SYS_BLESS_MT_STATUS_BLERD_IDLE == returnValue) || 
1213:Generated_Source\PSoC4/CyLib.c ****                             (CY_SYS_BLESS_MT_STATUS_SWITCH_EN  == returnValue) ||
1214:Generated_Source\PSoC4/CyLib.c ****                             (CY_SYS_BLESS_MT_STATUS_ACTIVE  ==  returnValue) ||
1215:Generated_Source\PSoC4/CyLib.c ****                             (CY_SYS_BLESS_MT_STATUS_ISOLATE == returnValue));
1216:Generated_Source\PSoC4/CyLib.c ****         #else
1217:Generated_Source\PSoC4/CyLib.c ****             returnValue = (0u != (CY_SYS_CLK_ECO_STATUS_REG & CY_SYS_CLK_ECO_STATUS_WATCHDOG_ERROR)
1218:Generated_Source\PSoC4/CyLib.c ****         #endif /* (CY_IP_WCO_BLESS) */
1219:Generated_Source\PSoC4/CyLib.c **** 
1220:Generated_Source\PSoC4/CyLib.c ****         return (returnValue);
 676              		.loc 1 1220 0
 677 0010 7B68     		ldr	r3, [r7, #4]
1221:Generated_Source\PSoC4/CyLib.c ****     }
 678              		.loc 1 1221 0
 679 0012 181C     		mov	r0, r3
 680 0014 BD46     		mov	sp, r7
 681 0016 02B0     		add	sp, sp, #8
 682              		@ sp needed
 683 0018 80BD     		pop	{r7, pc}
 684              	.L39:
 685 001a C046     		.align	2
 686              	.L38:
 687 001c 0C002E40 		.word	1076756492
 688              		.cfi_endproc
 689              	.LFE11:
 690              		.size	CySysClkEcoReadStatus, .-CySysClkEcoReadStatus
 691              		.section	.text.CySysClkWriteEcoDiv,"ax",%progbits
 692              		.align	2
 693              		.global	CySysClkWriteEcoDiv
 694              		.code	16
 695              		.thumb_func
 696              		.type	CySysClkWriteEcoDiv, %function
 697              	CySysClkWriteEcoDiv:
 698              	.LFB12:
1222:Generated_Source\PSoC4/CyLib.c **** 
1223:Generated_Source\PSoC4/CyLib.c ****     #if (CY_IP_ECO_BLESS || CY_IP_ECO_BLESSV3)
1224:Generated_Source\PSoC4/CyLib.c ****         /*******************************************************************************
1225:Generated_Source\PSoC4/CyLib.c ****         * Function Name: CySysClkWriteEcoDiv
1226:Generated_Source\PSoC4/CyLib.c ****         ****************************************************************************//**
1227:Generated_Source\PSoC4/CyLib.c ****         *
1228:Generated_Source\PSoC4/CyLib.c ****         * Selects value for the ECO divider.
1229:Generated_Source\PSoC4/CyLib.c ****         *
1230:Generated_Source\PSoC4/CyLib.c ****         * The ECO must not be the HFCLK clock source when this function is called.
1231:Generated_Source\PSoC4/CyLib.c ****         * The HFCLK source can be changed to the other clock source by call to the
1232:Generated_Source\PSoC4/CyLib.c ****         * CySysClkWriteHfclkDirect() function. If the ECO sources the HFCLK this
ARM GAS  C:\Users\akita\AppData\Local\Temp\ccaIVzD4.s 			page 35


1233:Generated_Source\PSoC4/CyLib.c ****         * function will not have any effect if compiler in release mode, and halt the
1234:Generated_Source\PSoC4/CyLib.c ****         * CPU when compiler in debug mode.
1235:Generated_Source\PSoC4/CyLib.c ****         *
1236:Generated_Source\PSoC4/CyLib.c ****         * If the SYSCLK clock frequency increases during the device operation, call
1237:Generated_Source\PSoC4/CyLib.c ****         * CySysFlashSetWaitCycles() with the appropriate parameter to adjust the number
1238:Generated_Source\PSoC4/CyLib.c ****         * of clock cycles the cache will wait before sampling data comes back from
1239:Generated_Source\PSoC4/CyLib.c ****         * Flash. If the SYSCLK clock frequency decreases, you can call
1240:Generated_Source\PSoC4/CyLib.c ****         * CySysFlashSetWaitCycles() to improve the CPU performance. See
1241:Generated_Source\PSoC4/CyLib.c ****         * CySysFlashSetWaitCycles() description for more information.
1242:Generated_Source\PSoC4/CyLib.c ****         *
1243:Generated_Source\PSoC4/CyLib.c ****         * \param divider Power of 2 divider selection.
1244:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_DIV1
1245:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_DIV2
1246:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_DIV4
1247:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_DIV8
1248:Generated_Source\PSoC4/CyLib.c ****         *
1249:Generated_Source\PSoC4/CyLib.c ****         *******************************************************************************/
1250:Generated_Source\PSoC4/CyLib.c ****         void CySysClkWriteEcoDiv(uint32 divider)
1251:Generated_Source\PSoC4/CyLib.c ****         {
 699              		.loc 1 1251 0
 700              		.cfi_startproc
 701 0000 90B5     		push	{r4, r7, lr}
 702              		.cfi_def_cfa_offset 12
 703              		.cfi_offset 4, -12
 704              		.cfi_offset 7, -8
 705              		.cfi_offset 14, -4
 706 0002 85B0     		sub	sp, sp, #20
 707              		.cfi_def_cfa_offset 32
 708 0004 00AF     		add	r7, sp, #0
 709              		.cfi_def_cfa_register 7
 710 0006 7860     		str	r0, [r7, #4]
1252:Generated_Source\PSoC4/CyLib.c ****             uint8  interruptState;
1253:Generated_Source\PSoC4/CyLib.c **** 
1254:Generated_Source\PSoC4/CyLib.c ****             if (CY_SYS_CLK_HFCLK_ECO != (CY_SYS_CLK_SELECT_REG & CY_SYS_CLK_SELECT_DIRECT_SEL_MASK)
 711              		.loc 1 1254 0
 712 0008 114B     		ldr	r3, .L43
 713 000a 1B68     		ldr	r3, [r3]
 714 000c 0722     		mov	r2, #7
 715 000e 1340     		and	r3, r2
 716 0010 022B     		cmp	r3, #2
 717 0012 16D0     		beq	.L41
1255:Generated_Source\PSoC4/CyLib.c ****             {
1256:Generated_Source\PSoC4/CyLib.c ****                 interruptState = CyEnterCriticalSection();
 718              		.loc 1 1256 0
 719 0014 0F23     		mov	r3, #15
 720 0016 FC18     		add	r4, r7, r3
 721 0018 FFF7FEFF 		bl	CyEnterCriticalSection
 722 001c 031C     		mov	r3, r0
 723 001e 2370     		strb	r3, [r4]
1257:Generated_Source\PSoC4/CyLib.c **** 
1258:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_CLK_XTAL_CLK_DIV_CONFIG_REG =  (divider & CY_SYS_CLK_XTAL_CLK_DIV_MASK) |
 724              		.loc 1 1258 0
 725 0020 0C4B     		ldr	r3, .L43+4
 726 0022 7A68     		ldr	r2, [r7, #4]
 727 0024 0321     		mov	r1, #3
 728 0026 1140     		and	r1, r2
1259:Generated_Source\PSoC4/CyLib.c ****                                                       (CY_SYS_CLK_XTAL_CLK_DIV_CONFIG_REG & ((uint3
ARM GAS  C:\Users\akita\AppData\Local\Temp\ccaIVzD4.s 			page 36


 729              		.loc 1 1259 0
 730 0028 0A4A     		ldr	r2, .L43+4
 731 002a 1268     		ldr	r2, [r2]
 732 002c 0320     		mov	r0, #3
 733 002e 8243     		bic	r2, r0
1258:Generated_Source\PSoC4/CyLib.c ****                                                       (CY_SYS_CLK_XTAL_CLK_DIV_CONFIG_REG & ((uint3
 734              		.loc 1 1258 0
 735 0030 0A43     		orr	r2, r1
 736 0032 1A60     		str	r2, [r3]
1260:Generated_Source\PSoC4/CyLib.c **** 
1261:Generated_Source\PSoC4/CyLib.c ****                 CyExitCriticalSection(interruptState);
 737              		.loc 1 1261 0
 738 0034 0F23     		mov	r3, #15
 739 0036 FB18     		add	r3, r7, r3
 740 0038 1B78     		ldrb	r3, [r3]
 741 003a 181C     		mov	r0, r3
 742 003c FFF7FEFF 		bl	CyExitCriticalSection
 743 0040 02E0     		b	.L40
 744              	.L41:
1262:Generated_Source\PSoC4/CyLib.c ****             }
1263:Generated_Source\PSoC4/CyLib.c ****             else
1264:Generated_Source\PSoC4/CyLib.c ****             {
1265:Generated_Source\PSoC4/CyLib.c ****                 /* Halt CPU in debug mode if ECO sources HFCLK */
1266:Generated_Source\PSoC4/CyLib.c ****                 CYASSERT(0u != 0u);
 745              		.loc 1 1266 0 discriminator 1
 746 0042 0020     		mov	r0, #0
 747 0044 FFF7FEFF 		bl	CyHalt
 748              	.L40:
1267:Generated_Source\PSoC4/CyLib.c ****             }
1268:Generated_Source\PSoC4/CyLib.c ****         }
 749              		.loc 1 1268 0
 750 0048 BD46     		mov	sp, r7
 751 004a 05B0     		add	sp, sp, #20
 752              		@ sp needed
 753 004c 90BD     		pop	{r4, r7, pc}
 754              	.L44:
 755 004e C046     		.align	2
 756              	.L43:
 757 0050 00010B40 		.word	1074462976
 758 0054 64F02E40 		.word	1076818020
 759              		.cfi_endproc
 760              	.LFE12:
 761              		.size	CySysClkWriteEcoDiv, .-CySysClkWriteEcoDiv
 762              		.section	.text.CySysLvdEnable,"ax",%progbits
 763              		.align	2
 764              		.global	CySysLvdEnable
 765              		.code	16
 766              		.thumb_func
 767              		.type	CySysLvdEnable, %function
 768              	CySysLvdEnable:
 769              	.LFB13:
1269:Generated_Source\PSoC4/CyLib.c **** 
1270:Generated_Source\PSoC4/CyLib.c ****     #else
1271:Generated_Source\PSoC4/CyLib.c **** 
1272:Generated_Source\PSoC4/CyLib.c ****         /*******************************************************************************
1273:Generated_Source\PSoC4/CyLib.c ****         * Function Name: CySysClkConfigureEcoTrim
1274:Generated_Source\PSoC4/CyLib.c ****         ****************************************************************************//**
ARM GAS  C:\Users\akita\AppData\Local\Temp\ccaIVzD4.s 			page 37


1275:Generated_Source\PSoC4/CyLib.c ****         *
1276:Generated_Source\PSoC4/CyLib.c ****         * Selects trim setting values for ECO. This API is available only for PSoC
1277:Generated_Source\PSoC4/CyLib.c ****         * 4200L devices only.
1278:Generated_Source\PSoC4/CyLib.c ****         *
1279:Generated_Source\PSoC4/CyLib.c ****         * The following parameters can be trimmed for ECO. The affected registers are
1280:Generated_Source\PSoC4/CyLib.c ****         * ECO_TRIM0 and ECO_TRIM1.
1281:Generated_Source\PSoC4/CyLib.c ****         *
1282:Generated_Source\PSoC4/CyLib.c ****         * Watchdog trim - This bit field sets the error threshold below the steady
1283:Generated_Source\PSoC4/CyLib.c ****         * state amplitude level.
1284:Generated_Source\PSoC4/CyLib.c ****         *
1285:Generated_Source\PSoC4/CyLib.c ****         * Amplitude trim - This bit field is to set the crystal drive level when
1286:Generated_Source\PSoC4/CyLib.c ****         * ECO_CONFIG.AGC_EN = 1. WARNING: use care when setting this field because
1287:Generated_Source\PSoC4/CyLib.c ****         * driving a crystal beyond its rated limit can permanently damage the crystal.
1288:Generated_Source\PSoC4/CyLib.c ****         *
1289:Generated_Source\PSoC4/CyLib.c ****         * Filter frequency trim - This bit field sets LPF frequency trim and affects
1290:Generated_Source\PSoC4/CyLib.c ****         * the 3rd harmonic content.
1291:Generated_Source\PSoC4/CyLib.c ****         *
1292:Generated_Source\PSoC4/CyLib.c ****         * Feedback resistor trim - This bit field sets the feedback resistor trim and
1293:Generated_Source\PSoC4/CyLib.c ****         * impacts the oscillation amplitude.
1294:Generated_Source\PSoC4/CyLib.c ****         *
1295:Generated_Source\PSoC4/CyLib.c ****         * Amplifier gain trim - This bit field sets the amplifier gain trim and affects
1296:Generated_Source\PSoC4/CyLib.c ****         * the startup time of the crystal.
1297:Generated_Source\PSoC4/CyLib.c ****         *
1298:Generated_Source\PSoC4/CyLib.c ****         * Use care when setting the amplitude trim field because driving a crystal
1299:Generated_Source\PSoC4/CyLib.c ****         * beyond its rated limit can permanently damage the crystal.
1300:Generated_Source\PSoC4/CyLib.c ****         *
1301:Generated_Source\PSoC4/CyLib.c ****         * \param wDTrim: Watchdog trim
1302:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_WDTRIM0      Error threshold is 0.05 V
1303:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_WDTRIM1      Error threshold is 0.10 V
1304:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_WDTRIM2      Error threshold is 0.15 V
1305:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_WDTRIM3      Error threshold is 0.20 V
1306:Generated_Source\PSoC4/CyLib.c ****         *
1307:Generated_Source\PSoC4/CyLib.c ****         * \param aTrim: Amplitude trim
1308:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_ATRIM0       Amplitude is 0.3 Vpp
1309:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_ATRIM1       Amplitude is 0.4 Vpp
1310:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_ATRIM2       Amplitude is 0.5 Vpp
1311:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_ATRIM3       Amplitude is 0.6 Vpp
1312:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_ATRIM4       Amplitude is 0.7 Vpp
1313:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_ATRIM5       Amplitude is 0.8 Vpp
1314:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_ATRIM6       Amplitude is 0.9 Vpp
1315:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_ATRIM7       Amplitude is 1.0 Vpp
1316:Generated_Source\PSoC4/CyLib.c ****         *
1317:Generated_Source\PSoC4/CyLib.c ****         * \param fTrim: Filter frequency trim
1318:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_FTRIM0       Crystal frequency > 30 MHz
1319:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_FTRIM1       24 MHz < Crystal frequency <= 30 MHz
1320:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_FTRIM2       17 MHz < Crystal frequency <= 24 MHz
1321:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_FTRIM3       Crystal frequency <= 17 MHz
1322:Generated_Source\PSoC4/CyLib.c ****         *
1323:Generated_Source\PSoC4/CyLib.c ****         * \param rTrim: Feedback resistor trim
1324:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_RTRIM0       Crystal frequency > 30 MHz
1325:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_RTRIM1       24 MHz < Crystal frequency <= 30 MHz
1326:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_RTRIM2       17 MHz < Crystal frequency <= 24 MHz
1327:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_RTRIM3       Crystal frequency <= 17 MHz
1328:Generated_Source\PSoC4/CyLib.c ****         *
1329:Generated_Source\PSoC4/CyLib.c ****         * \param gTrim: Amplifier gain trim. Calculate the minimum required gm
1330:Generated_Source\PSoC4/CyLib.c ****         * (trans-conductance value). Divide the calculated gm value by 4.5 to
1331:Generated_Source\PSoC4/CyLib.c ****         * obtain an integer value 'result'. For more information please refer
ARM GAS  C:\Users\akita\AppData\Local\Temp\ccaIVzD4.s 			page 38


1332:Generated_Source\PSoC4/CyLib.c ****         * to the device TRM.
1333:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_GTRIM0       If result = 1
1334:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_GTRIM1       If result = 0
1335:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_GTRIM2       If result = 2
1336:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_GTRIM2       If result = 3
1337:Generated_Source\PSoC4/CyLib.c ****         *
1338:Generated_Source\PSoC4/CyLib.c ****         *******************************************************************************/
1339:Generated_Source\PSoC4/CyLib.c ****         void CySysClkConfigureEcoTrim(uint32 wDTrim, uint32 aTrim, uint32 fTrim, uint32 rTrim, uint
1340:Generated_Source\PSoC4/CyLib.c ****         {
1341:Generated_Source\PSoC4/CyLib.c ****             uint8  interruptState;
1342:Generated_Source\PSoC4/CyLib.c ****             uint32 regTmp;
1343:Generated_Source\PSoC4/CyLib.c **** 
1344:Generated_Source\PSoC4/CyLib.c ****             interruptState = CyEnterCriticalSection();
1345:Generated_Source\PSoC4/CyLib.c **** 
1346:Generated_Source\PSoC4/CyLib.c ****             regTmp  = CY_SYS_CLK_ECO_TRIM0_REG & ~(CY_SYS_CLK_ECO_TRIM0_WDTRIM_MASK | CY_SYS_CLK_EC
1347:Generated_Source\PSoC4/CyLib.c ****             regTmp |= ((uint32) (wDTrim << CY_SYS_CLK_ECO_TRIM0_WDTRIM_SHIFT) & CY_SYS_CLK_ECO_TRIM
1348:Generated_Source\PSoC4/CyLib.c ****             regTmp |= ((uint32) (aTrim << CY_SYS_CLK_ECO_TRIM0_ATRIM_SHIFT) & CY_SYS_CLK_ECO_TRIM0_
1349:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_ECO_TRIM0_REG = regTmp;
1350:Generated_Source\PSoC4/CyLib.c **** 
1351:Generated_Source\PSoC4/CyLib.c ****             regTmp  = CY_SYS_CLK_ECO_TRIM1_REG & ~(CY_SYS_CLK_ECO_TRIM1_FTRIM_MASK |
1352:Generated_Source\PSoC4/CyLib.c ****                                                    CY_SYS_CLK_ECO_TRIM1_RTRIM_MASK |
1353:Generated_Source\PSoC4/CyLib.c ****                                                    CY_SYS_CLK_ECO_TRIM1_GTRIM_MASK);
1354:Generated_Source\PSoC4/CyLib.c ****             regTmp |= ((uint32) (fTrim << CY_SYS_CLK_ECO_TRIM1_FTRIM_SHIFT) & CY_SYS_CLK_ECO_TRIM1_
1355:Generated_Source\PSoC4/CyLib.c ****             regTmp |= ((uint32) (rTrim << CY_SYS_CLK_ECO_TRIM1_RTRIM_SHIFT) & CY_SYS_CLK_ECO_TRIM1_
1356:Generated_Source\PSoC4/CyLib.c ****             regTmp |= ((uint32) (gTrim << CY_SYS_CLK_ECO_TRIM1_GTRIM_SHIFT) & CY_SYS_CLK_ECO_TRIM1_
1357:Generated_Source\PSoC4/CyLib.c **** 
1358:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_ECO_TRIM1_REG = regTmp;
1359:Generated_Source\PSoC4/CyLib.c **** 
1360:Generated_Source\PSoC4/CyLib.c ****             CyExitCriticalSection(interruptState);
1361:Generated_Source\PSoC4/CyLib.c ****         }
1362:Generated_Source\PSoC4/CyLib.c **** 
1363:Generated_Source\PSoC4/CyLib.c **** 
1364:Generated_Source\PSoC4/CyLib.c ****         /*******************************************************************************
1365:Generated_Source\PSoC4/CyLib.c ****         * Function Name: CySysClkConfigureEcoDrive
1366:Generated_Source\PSoC4/CyLib.c ****         ****************************************************************************//**
1367:Generated_Source\PSoC4/CyLib.c ****         *
1368:Generated_Source\PSoC4/CyLib.c ****         * Selects trim setting values for ECO based on crystal parameters. Use care
1369:Generated_Source\PSoC4/CyLib.c ****         * when setting the driveLevel parameter because driving a crystal beyond its
1370:Generated_Source\PSoC4/CyLib.c ****         * rated limit can permanently damage the crystal.
1371:Generated_Source\PSoC4/CyLib.c ****         *
1372:Generated_Source\PSoC4/CyLib.c ****         * This API is available only for PSoC 4200L devices only.
1373:Generated_Source\PSoC4/CyLib.c ****         *
1374:Generated_Source\PSoC4/CyLib.c ****         * \param freq Frequency of the crystal in kHz.
1375:Generated_Source\PSoC4/CyLib.c ****         * \param cLoad Crystal load capacitance in pF.
1376:Generated_Source\PSoC4/CyLib.c ****         * \param esr Equivalent series resistance of the crystal in ohm.
1377:Generated_Source\PSoC4/CyLib.c ****         *  maxAmplitude: maximum amplitude level in mV. Calculate as
1378:Generated_Source\PSoC4/CyLib.c ****         *  ((sqrt(driveLevel in uW / 2 / esr))/(3.14 * freq * cLoad)) * 10^9.
1379:Generated_Source\PSoC4/CyLib.c ****         *
1380:Generated_Source\PSoC4/CyLib.c ****         *  The Automatic Gain Control (AGC) is disabled when the specified maximum
1381:Generated_Source\PSoC4/CyLib.c ****         *  amplitude level equals or above 2. In this case the amplitude is not
1382:Generated_Source\PSoC4/CyLib.c ****         *  explicitly controlled and will grow until it saturates to the supply rail
1383:Generated_Source\PSoC4/CyLib.c ****         *  (1.8V nom). WARNING: use care when disabling AGC because driving a crystal
1384:Generated_Source\PSoC4/CyLib.c ****         *  beyond its rated limit can permanently damage the crystal.
1385:Generated_Source\PSoC4/CyLib.c ****         *
1386:Generated_Source\PSoC4/CyLib.c ****         * \return \ref CYRET_SUCCESS ECO configuration completed successfully.
1387:Generated_Source\PSoC4/CyLib.c ****         * \return \ref CYRET_BAD_PARAM One or more invalid parameters.
1388:Generated_Source\PSoC4/CyLib.c ****         *
ARM GAS  C:\Users\akita\AppData\Local\Temp\ccaIVzD4.s 			page 39


1389:Generated_Source\PSoC4/CyLib.c ****         *******************************************************************************/
1390:Generated_Source\PSoC4/CyLib.c ****         cystatus CySysClkConfigureEcoDrive(uint32 freq, uint32 cLoad, uint32 esr, uint32 maxAmplitu
1391:Generated_Source\PSoC4/CyLib.c ****         {
1392:Generated_Source\PSoC4/CyLib.c ****             cystatus returnStatus = CYRET_SUCCESS;
1393:Generated_Source\PSoC4/CyLib.c **** 
1394:Generated_Source\PSoC4/CyLib.c ****             uint32 wDTrim;
1395:Generated_Source\PSoC4/CyLib.c ****             uint32 aTrim;
1396:Generated_Source\PSoC4/CyLib.c ****             uint32 fTrim;
1397:Generated_Source\PSoC4/CyLib.c ****             uint32 rTrim;
1398:Generated_Source\PSoC4/CyLib.c ****             uint32 gTrim;
1399:Generated_Source\PSoC4/CyLib.c **** 
1400:Generated_Source\PSoC4/CyLib.c ****             uint32 gmMin;
1401:Generated_Source\PSoC4/CyLib.c **** 
1402:Generated_Source\PSoC4/CyLib.c **** 
1403:Generated_Source\PSoC4/CyLib.c ****             if ((maxAmplitude < CY_SYS_CLK_ECO_MAX_AMPL_MIN_mV) ||
1404:Generated_Source\PSoC4/CyLib.c ****                 (freq < CY_SYS_CLK_ECO_FREQ_KHZ_MIN) || (freq > CY_SYS_CLK_ECO_FREQ_KHZ_MAX))
1405:Generated_Source\PSoC4/CyLib.c ****             {
1406:Generated_Source\PSoC4/CyLib.c ****                 returnStatus = CYRET_BAD_PARAM;
1407:Generated_Source\PSoC4/CyLib.c ****             }
1408:Generated_Source\PSoC4/CyLib.c ****             else
1409:Generated_Source\PSoC4/CyLib.c ****             {
1410:Generated_Source\PSoC4/CyLib.c ****                 /* Calculate amplitude trim */
1411:Generated_Source\PSoC4/CyLib.c ****                 aTrim = (maxAmplitude < CY_SYS_CLK_ECO_TRIM_BOUNDARY) ? ((maxAmplitude/100u) - 4u) 
1412:Generated_Source\PSoC4/CyLib.c **** 
1413:Generated_Source\PSoC4/CyLib.c ****                 if (maxAmplitude < CY_SYS_CLK_ECO_AMPL_FOR_ATRIM0)
1414:Generated_Source\PSoC4/CyLib.c ****                 {
1415:Generated_Source\PSoC4/CyLib.c ****                     aTrim = CY_SYS_CLK_ECO_ATRIM0;
1416:Generated_Source\PSoC4/CyLib.c ****                 }
1417:Generated_Source\PSoC4/CyLib.c ****                 else if (maxAmplitude < CY_SYS_CLK_ECO_AMPL_FOR_ATRIM1)
1418:Generated_Source\PSoC4/CyLib.c ****                 {
1419:Generated_Source\PSoC4/CyLib.c ****                     aTrim = CY_SYS_CLK_ECO_ATRIM1;
1420:Generated_Source\PSoC4/CyLib.c ****                 }
1421:Generated_Source\PSoC4/CyLib.c ****                 else if (maxAmplitude < CY_SYS_CLK_ECO_AMPL_FOR_ATRIM2)
1422:Generated_Source\PSoC4/CyLib.c ****                 {
1423:Generated_Source\PSoC4/CyLib.c ****                     aTrim = CY_SYS_CLK_ECO_ATRIM2;
1424:Generated_Source\PSoC4/CyLib.c ****                 }
1425:Generated_Source\PSoC4/CyLib.c ****                 else if (maxAmplitude < CY_SYS_CLK_ECO_AMPL_FOR_ATRIM3)
1426:Generated_Source\PSoC4/CyLib.c ****                 {
1427:Generated_Source\PSoC4/CyLib.c ****                     aTrim = CY_SYS_CLK_ECO_ATRIM3;
1428:Generated_Source\PSoC4/CyLib.c ****                 }
1429:Generated_Source\PSoC4/CyLib.c ****                 else if (maxAmplitude < CY_SYS_CLK_ECO_AMPL_FOR_ATRIM4)
1430:Generated_Source\PSoC4/CyLib.c ****                 {
1431:Generated_Source\PSoC4/CyLib.c ****                     aTrim = CY_SYS_CLK_ECO_ATRIM4;
1432:Generated_Source\PSoC4/CyLib.c ****                 }
1433:Generated_Source\PSoC4/CyLib.c ****                 else if (maxAmplitude < CY_SYS_CLK_ECO_AMPL_FOR_ATRIM5)
1434:Generated_Source\PSoC4/CyLib.c ****                 {
1435:Generated_Source\PSoC4/CyLib.c ****                     aTrim = CY_SYS_CLK_ECO_ATRIM5;
1436:Generated_Source\PSoC4/CyLib.c ****                 }
1437:Generated_Source\PSoC4/CyLib.c ****                 else if (maxAmplitude < CY_SYS_CLK_ECO_AMPL_FOR_ATRIM6)
1438:Generated_Source\PSoC4/CyLib.c ****                 {
1439:Generated_Source\PSoC4/CyLib.c ****                     aTrim = CY_SYS_CLK_ECO_ATRIM6;
1440:Generated_Source\PSoC4/CyLib.c ****                 }
1441:Generated_Source\PSoC4/CyLib.c ****                 else
1442:Generated_Source\PSoC4/CyLib.c ****                 {
1443:Generated_Source\PSoC4/CyLib.c ****                     aTrim = CY_SYS_CLK_ECO_ATRIM7;
1444:Generated_Source\PSoC4/CyLib.c ****                 }
1445:Generated_Source\PSoC4/CyLib.c **** 
ARM GAS  C:\Users\akita\AppData\Local\Temp\ccaIVzD4.s 			page 40


1446:Generated_Source\PSoC4/CyLib.c ****                 /* Calculate Watchdog trim. */
1447:Generated_Source\PSoC4/CyLib.c ****                 wDTrim = (maxAmplitude < CY_SYS_CLK_ECO_TRIM_BOUNDARY) ? ((maxAmplitude/200u) - 2u)
1448:Generated_Source\PSoC4/CyLib.c **** 
1449:Generated_Source\PSoC4/CyLib.c ****                 /* Calculate amplifier gain trim. */
1450:Generated_Source\PSoC4/CyLib.c ****                 gmMin = (uint32) (((((CY_SYS_CLK_ECO_GMMIN_COEFFICIENT * freq * cLoad) / 1000) * ((
1451:Generated_Source\PSoC4/CyLib.c ****                 if (gmMin > 3u)
1452:Generated_Source\PSoC4/CyLib.c ****                 {
1453:Generated_Source\PSoC4/CyLib.c ****                     returnStatus = CYRET_BAD_PARAM;
1454:Generated_Source\PSoC4/CyLib.c ****                     gTrim = 0u;
1455:Generated_Source\PSoC4/CyLib.c ****                 }
1456:Generated_Source\PSoC4/CyLib.c ****                 else if (gmMin > 1u)
1457:Generated_Source\PSoC4/CyLib.c ****                 {
1458:Generated_Source\PSoC4/CyLib.c ****                     gTrim = gmMin;
1459:Generated_Source\PSoC4/CyLib.c ****                 }
1460:Generated_Source\PSoC4/CyLib.c ****                 else
1461:Generated_Source\PSoC4/CyLib.c ****                 {
1462:Generated_Source\PSoC4/CyLib.c ****                     gTrim = (gmMin == 1u) ? 0u : 1u;
1463:Generated_Source\PSoC4/CyLib.c ****                 }
1464:Generated_Source\PSoC4/CyLib.c **** 
1465:Generated_Source\PSoC4/CyLib.c ****                 /* Calculate feedback resistor trim */
1466:Generated_Source\PSoC4/CyLib.c ****                 if (freq > CY_SYS_CLK_ECO_FREQ_FOR_FTRIM0)
1467:Generated_Source\PSoC4/CyLib.c ****                 {
1468:Generated_Source\PSoC4/CyLib.c ****                     rTrim = CY_SYS_CLK_ECO_FTRIM0;
1469:Generated_Source\PSoC4/CyLib.c ****                 }
1470:Generated_Source\PSoC4/CyLib.c ****                 else if (freq > CY_SYS_CLK_ECO_FREQ_FOR_FTRIM1)
1471:Generated_Source\PSoC4/CyLib.c ****                 {
1472:Generated_Source\PSoC4/CyLib.c ****                     rTrim = CY_SYS_CLK_ECO_FTRIM1;
1473:Generated_Source\PSoC4/CyLib.c ****                 }
1474:Generated_Source\PSoC4/CyLib.c ****                 else if (freq > CY_SYS_CLK_ECO_FREQ_FOR_FTRIM2)
1475:Generated_Source\PSoC4/CyLib.c ****                 {
1476:Generated_Source\PSoC4/CyLib.c ****                     rTrim = CY_SYS_CLK_ECO_FTRIM2;
1477:Generated_Source\PSoC4/CyLib.c ****                 }
1478:Generated_Source\PSoC4/CyLib.c ****                 else
1479:Generated_Source\PSoC4/CyLib.c ****                 {
1480:Generated_Source\PSoC4/CyLib.c ****                     rTrim = CY_SYS_CLK_ECO_FTRIM3;
1481:Generated_Source\PSoC4/CyLib.c ****                 }
1482:Generated_Source\PSoC4/CyLib.c **** 
1483:Generated_Source\PSoC4/CyLib.c ****                 /* Calculate filter frequency trim */
1484:Generated_Source\PSoC4/CyLib.c ****                 fTrim = rTrim;
1485:Generated_Source\PSoC4/CyLib.c **** 
1486:Generated_Source\PSoC4/CyLib.c ****                 CySysClkConfigureEcoTrim(wDTrim, aTrim, fTrim, rTrim, gTrim);
1487:Generated_Source\PSoC4/CyLib.c **** 
1488:Generated_Source\PSoC4/CyLib.c ****                 /* Automatic Gain Control (AGC) enable */
1489:Generated_Source\PSoC4/CyLib.c ****                 if (maxAmplitude < 2u)
1490:Generated_Source\PSoC4/CyLib.c ****                 {
1491:Generated_Source\PSoC4/CyLib.c ****                     /* The oscillation amplitude is controlled to the level selected by amplitude t
1492:Generated_Source\PSoC4/CyLib.c ****                     CY_SYS_CLK_ECO_CONFIG_REG |= CY_SYS_CLK_ECO_CONFIG_AGC_EN;
1493:Generated_Source\PSoC4/CyLib.c ****                 }
1494:Generated_Source\PSoC4/CyLib.c ****                 else
1495:Generated_Source\PSoC4/CyLib.c ****                 {
1496:Generated_Source\PSoC4/CyLib.c ****                     /* The amplitude is not explicitly controlled and will grow until it saturates 
1497:Generated_Source\PSoC4/CyLib.c ****                     * supply rail (1.8V nom).
1498:Generated_Source\PSoC4/CyLib.c ****                     */
1499:Generated_Source\PSoC4/CyLib.c ****                     CY_SYS_CLK_ECO_CONFIG_REG &= (uint32) ~CY_SYS_CLK_ECO_CONFIG_AGC_EN;
1500:Generated_Source\PSoC4/CyLib.c ****                 }
1501:Generated_Source\PSoC4/CyLib.c ****             }
1502:Generated_Source\PSoC4/CyLib.c **** 
ARM GAS  C:\Users\akita\AppData\Local\Temp\ccaIVzD4.s 			page 41


1503:Generated_Source\PSoC4/CyLib.c ****             return (returnStatus);
1504:Generated_Source\PSoC4/CyLib.c ****         }
1505:Generated_Source\PSoC4/CyLib.c **** 
1506:Generated_Source\PSoC4/CyLib.c ****     #endif /* CY_IP_ECO_BLESS */
1507:Generated_Source\PSoC4/CyLib.c **** 
1508:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_ECO) */
1509:Generated_Source\PSoC4/CyLib.c **** 
1510:Generated_Source\PSoC4/CyLib.c **** 
1511:Generated_Source\PSoC4/CyLib.c **** #if (CY_IP_SRSSV2 && CY_IP_PLL)
1512:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1513:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkPllStart
1514:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1515:Generated_Source\PSoC4/CyLib.c ****     *
1516:Generated_Source\PSoC4/CyLib.c ****     * Enables the PLL. Optionally waits for it to become stable. Waits at least
1517:Generated_Source\PSoC4/CyLib.c ****     * 250 us or until it is detected that the PLL is stable.
1518:Generated_Source\PSoC4/CyLib.c ****     *
1519:Generated_Source\PSoC4/CyLib.c ****     * Clears the unlock occurred status bit by calling CySysClkPllGetUnlockStatus(),
1520:Generated_Source\PSoC4/CyLib.c ****     * once the PLL is locked if the wait parameter is 1).
1521:Generated_Source\PSoC4/CyLib.c ****     *
1522:Generated_Source\PSoC4/CyLib.c ****     * This API is available only for PSoC 4200L devices.
1523:Generated_Source\PSoC4/CyLib.c ****     *
1524:Generated_Source\PSoC4/CyLib.c ****     * \param PLL:
1525:Generated_Source\PSoC4/CyLib.c ****     * 0   PLL#0
1526:Generated_Source\PSoC4/CyLib.c ****     * 1   PLL#1
1527:Generated_Source\PSoC4/CyLib.c ****     *
1528:Generated_Source\PSoC4/CyLib.c ****     * \param wait:
1529:Generated_Source\PSoC4/CyLib.c ****     * 0 - Return immediately after configuration.
1530:Generated_Source\PSoC4/CyLib.c ****     * 1 - Wait for PLL lock or timeout. This API shall use the CyDelayUs() to
1531:Generated_Source\PSoC4/CyLib.c ****     * implement the timeout feature.
1532:Generated_Source\PSoC4/CyLib.c ****     *
1533:Generated_Source\PSoC4/CyLib.c ****     * \return CYRET_SUCCESS Completed successfully.
1534:Generated_Source\PSoC4/CyLib.c ****     * \return CYRET_TIMEOUT The timeout occurred without detecting a stable clock.
1535:Generated_Source\PSoC4/CyLib.c ****     * If the input source of the clock is jittery, then the lock indication may
1536:Generated_Source\PSoC4/CyLib.c ****     * not occur. However, after the timeout has expired, the generated PLL clock can
1537:Generated_Source\PSoC4/CyLib.c ****     * still be used.
1538:Generated_Source\PSoC4/CyLib.c ****     * \return CYRET_BAD_PARAM - Either the PLL or wait parameter is invalid.
1539:Generated_Source\PSoC4/CyLib.c ****     *
1540:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1541:Generated_Source\PSoC4/CyLib.c ****     cystatus CySysClkPllStart(uint32 pll, uint32 wait)
1542:Generated_Source\PSoC4/CyLib.c ****     {
1543:Generated_Source\PSoC4/CyLib.c ****         uint32 counts = CY_SYS_CLK_PLL_MAX_STARTUP_US;
1544:Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
1545:Generated_Source\PSoC4/CyLib.c ****         cystatus returnStatus = CYRET_SUCCESS;
1546:Generated_Source\PSoC4/CyLib.c **** 
1547:Generated_Source\PSoC4/CyLib.c ****         if((pll < CY_IP_PLL_NR) && (wait <= 1u))
1548:Generated_Source\PSoC4/CyLib.c ****         {
1549:Generated_Source\PSoC4/CyLib.c ****             interruptState = CyEnterCriticalSection();
1550:Generated_Source\PSoC4/CyLib.c **** 
1551:Generated_Source\PSoC4/CyLib.c ****             /* Isolate PLL outputs */
1552:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_PLL_BASE.pll[pll].config &= (uint32) ~CY_SYS_CLK_PLL_CONFIG_ISOLATE;
1553:Generated_Source\PSoC4/CyLib.c **** 
1554:Generated_Source\PSoC4/CyLib.c ****             /* Enable PLL */
1555:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_PLL_BASE.pll[pll].config |= CY_SYS_CLK_PLL_CONFIG_ENABLE;
1556:Generated_Source\PSoC4/CyLib.c **** 
1557:Generated_Source\PSoC4/CyLib.c ****             CyExitCriticalSection(interruptState);
1558:Generated_Source\PSoC4/CyLib.c **** 
1559:Generated_Source\PSoC4/CyLib.c ****             /* De-isolate >= CY_SYS_CLK_PLL_MIN_STARTUP_US after PLL enabled */
ARM GAS  C:\Users\akita\AppData\Local\Temp\ccaIVzD4.s 			page 42


1560:Generated_Source\PSoC4/CyLib.c ****             CyDelayUs(CY_SYS_CLK_PLL_MIN_STARTUP_US);
1561:Generated_Source\PSoC4/CyLib.c ****             interruptState = CyEnterCriticalSection();
1562:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_PLL_BASE.pll[pll].config |= CY_SYS_CLK_PLL_CONFIG_ISOLATE;
1563:Generated_Source\PSoC4/CyLib.c ****             CyExitCriticalSection(interruptState);
1564:Generated_Source\PSoC4/CyLib.c **** 
1565:Generated_Source\PSoC4/CyLib.c ****             if(wait != 0u)
1566:Generated_Source\PSoC4/CyLib.c ****             {
1567:Generated_Source\PSoC4/CyLib.c ****                 returnStatus = CYRET_TIMEOUT;
1568:Generated_Source\PSoC4/CyLib.c **** 
1569:Generated_Source\PSoC4/CyLib.c ****                 while(0u != counts)
1570:Generated_Source\PSoC4/CyLib.c ****                 {
1571:Generated_Source\PSoC4/CyLib.c **** 
1572:Generated_Source\PSoC4/CyLib.c ****                     if(0u != CySysClkPllGetLockStatus(pll))
1573:Generated_Source\PSoC4/CyLib.c ****                     {
1574:Generated_Source\PSoC4/CyLib.c ****                         returnStatus = CYRET_SUCCESS;
1575:Generated_Source\PSoC4/CyLib.c ****                         (void) CySysClkPllGetUnlockStatus(pll);
1576:Generated_Source\PSoC4/CyLib.c ****                         break;
1577:Generated_Source\PSoC4/CyLib.c ****                     }
1578:Generated_Source\PSoC4/CyLib.c **** 
1579:Generated_Source\PSoC4/CyLib.c ****                     CyDelayUs(1u);
1580:Generated_Source\PSoC4/CyLib.c ****                     counts--;
1581:Generated_Source\PSoC4/CyLib.c ****                 }
1582:Generated_Source\PSoC4/CyLib.c ****             }
1583:Generated_Source\PSoC4/CyLib.c ****         }
1584:Generated_Source\PSoC4/CyLib.c ****         else
1585:Generated_Source\PSoC4/CyLib.c ****         {
1586:Generated_Source\PSoC4/CyLib.c ****             returnStatus = CYRET_BAD_PARAM;
1587:Generated_Source\PSoC4/CyLib.c ****         }
1588:Generated_Source\PSoC4/CyLib.c **** 
1589:Generated_Source\PSoC4/CyLib.c ****         return (returnStatus);
1590:Generated_Source\PSoC4/CyLib.c ****     }
1591:Generated_Source\PSoC4/CyLib.c **** 
1592:Generated_Source\PSoC4/CyLib.c **** 
1593:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1594:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkPllGetLockStatus
1595:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1596:Generated_Source\PSoC4/CyLib.c ****     *
1597:Generated_Source\PSoC4/CyLib.c ****     * Returns non-zero if the output of the specified PLL output is locked.
1598:Generated_Source\PSoC4/CyLib.c ****     *
1599:Generated_Source\PSoC4/CyLib.c ****     * This API is available only for PSoC 4200L devices.
1600:Generated_Source\PSoC4/CyLib.c ****     *
1601:Generated_Source\PSoC4/CyLib.c ****     * PLL:
1602:Generated_Source\PSoC4/CyLib.c ****     *  0   PLL#0
1603:Generated_Source\PSoC4/CyLib.c ****     *  1   PLL#1
1604:Generated_Source\PSoC4/CyLib.c ****     *
1605:Generated_Source\PSoC4/CyLib.c ****     * \return A non-zero value when the specified PLL is locked.
1606:Generated_Source\PSoC4/CyLib.c ****     *
1607:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1608:Generated_Source\PSoC4/CyLib.c ****     uint32 CySysClkPllGetLockStatus(uint32 pll)
1609:Generated_Source\PSoC4/CyLib.c ****     {
1610:Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
1611:Generated_Source\PSoC4/CyLib.c ****         uint32 returnStatus;
1612:Generated_Source\PSoC4/CyLib.c **** 
1613:Generated_Source\PSoC4/CyLib.c ****         CYASSERT(pll < CY_IP_PLL_NR);
1614:Generated_Source\PSoC4/CyLib.c **** 
1615:Generated_Source\PSoC4/CyLib.c ****         interruptState = CyEnterCriticalSection();
1616:Generated_Source\PSoC4/CyLib.c **** 
ARM GAS  C:\Users\akita\AppData\Local\Temp\ccaIVzD4.s 			page 43


1617:Generated_Source\PSoC4/CyLib.c ****         /* PLL is locked if reported so for two consecutive read. */
1618:Generated_Source\PSoC4/CyLib.c ****         returnStatus = CY_SYS_CLK_PLL_BASE.pll[pll].status & CY_SYS_CLK_PLL_STATUS_LOCKED;
1619:Generated_Source\PSoC4/CyLib.c ****         if(0u != returnStatus)
1620:Generated_Source\PSoC4/CyLib.c ****         {
1621:Generated_Source\PSoC4/CyLib.c ****             returnStatus = CY_SYS_CLK_PLL_BASE.pll[pll].status & CY_SYS_CLK_PLL_STATUS_LOCKED;
1622:Generated_Source\PSoC4/CyLib.c ****         }
1623:Generated_Source\PSoC4/CyLib.c **** 
1624:Generated_Source\PSoC4/CyLib.c ****         CyExitCriticalSection(interruptState);
1625:Generated_Source\PSoC4/CyLib.c **** 
1626:Generated_Source\PSoC4/CyLib.c ****         return (returnStatus);
1627:Generated_Source\PSoC4/CyLib.c ****     }
1628:Generated_Source\PSoC4/CyLib.c **** 
1629:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1630:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkPllStop
1631:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1632:Generated_Source\PSoC4/CyLib.c ****     *
1633:Generated_Source\PSoC4/CyLib.c ****     * Disables the PLL.
1634:Generated_Source\PSoC4/CyLib.c ****     *
1635:Generated_Source\PSoC4/CyLib.c ****     * Ensures that either PLL is not the source of HFCLK before it is disabled,
1636:Generated_Source\PSoC4/CyLib.c ****     * otherwise, the CPU will halt.
1637:Generated_Source\PSoC4/CyLib.c ****     *
1638:Generated_Source\PSoC4/CyLib.c ****     * This API is available only for PSoC 4200L devices.
1639:Generated_Source\PSoC4/CyLib.c ****     *
1640:Generated_Source\PSoC4/CyLib.c ****     * PLL:
1641:Generated_Source\PSoC4/CyLib.c ****     *  0   PLL#0
1642:Generated_Source\PSoC4/CyLib.c ****     *  1   PLL#1
1643:Generated_Source\PSoC4/CyLib.c ****     *
1644:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1645:Generated_Source\PSoC4/CyLib.c ****     void CySysClkPllStop(uint32 pll)
1646:Generated_Source\PSoC4/CyLib.c ****     {
1647:Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
1648:Generated_Source\PSoC4/CyLib.c **** 
1649:Generated_Source\PSoC4/CyLib.c ****         if (pll < CY_IP_PLL_NR)
1650:Generated_Source\PSoC4/CyLib.c ****         {
1651:Generated_Source\PSoC4/CyLib.c ****             interruptState = CyEnterCriticalSection();
1652:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_PLL_BASE.pll[pll].config &= (uint32) ~(CY_SYS_CLK_PLL_CONFIG_ISOLATE | CY_SY
1653:Generated_Source\PSoC4/CyLib.c ****             CyExitCriticalSection(interruptState);
1654:Generated_Source\PSoC4/CyLib.c ****         }
1655:Generated_Source\PSoC4/CyLib.c ****     }
1656:Generated_Source\PSoC4/CyLib.c **** 
1657:Generated_Source\PSoC4/CyLib.c **** 
1658:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1659:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkPllSetPQ
1660:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1661:Generated_Source\PSoC4/CyLib.c ****     *
1662:Generated_Source\PSoC4/CyLib.c ****     * Sets feedback (P) and reference the (Q) divider value. This API also sets the
1663:Generated_Source\PSoC4/CyLib.c ****     * programmable charge pump current value. Note that the PLL has to be disabled
1664:Generated_Source\PSoC4/CyLib.c ****     * before calling this API. If this function is called while any PLL is sourcing,
1665:Generated_Source\PSoC4/CyLib.c ****     * the SYSCLK will return an error.
1666:Generated_Source\PSoC4/CyLib.c ****     *
1667:Generated_Source\PSoC4/CyLib.c ****     * The PLL must not be the system clock source when calling this function. The
1668:Generated_Source\PSoC4/CyLib.c ****     * PLL output will glitch during this function call.
1669:Generated_Source\PSoC4/CyLib.c ****     *
1670:Generated_Source\PSoC4/CyLib.c ****     * This API is available only for PSoC 4200L devices.
1671:Generated_Source\PSoC4/CyLib.c ****     *
1672:Generated_Source\PSoC4/CyLib.c ****     * \param PLL:
1673:Generated_Source\PSoC4/CyLib.c ****     *  0   PLL#0
ARM GAS  C:\Users\akita\AppData\Local\Temp\ccaIVzD4.s 			page 44


1674:Generated_Source\PSoC4/CyLib.c ****     *  1   PLL#1
1675:Generated_Source\PSoC4/CyLib.c ****     *
1676:Generated_Source\PSoC4/CyLib.c ****     * \param feedback The P divider. Range 4 - 259. Control bits for the feedback
1677:Generated_Source\PSoC4/CyLib.c ****     * divider.
1678:Generated_Source\PSoC4/CyLib.c ****     *
1679:Generated_Source\PSoC4/CyLib.c ****     * \param reference The Q divider. Range 1 - 64. Divide by the reference.
1680:Generated_Source\PSoC4/CyLib.c ****     *
1681:Generated_Source\PSoC4/CyLib.c ****     * \param current Charge the pump current in uA. The 2 uA for output frequencies
1682:Generated_Source\PSoC4/CyLib.c ****     * of 67 MHz or less, and 3 uA for higher output frequencies. The default
1683:Generated_Source\PSoC4/CyLib.c ****     * value is 2 uA.
1684:Generated_Source\PSoC4/CyLib.c ****     *
1685:Generated_Source\PSoC4/CyLib.c ****     * \return CYRET_SUCCESS Completed successfully.
1686:Generated_Source\PSoC4/CyLib.c ****     * \return CYRET_BAD_PARAM The parameters are out of range or the specified PLL
1687:Generated_Source\PSoC4/CyLib.c ****     * sources the system clock.
1688:Generated_Source\PSoC4/CyLib.c ****     *
1689:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1690:Generated_Source\PSoC4/CyLib.c ****     cystatus CySysClkPllSetPQ(uint32 pll, uint32 feedback, uint32 reference, uint32 current)
1691:Generated_Source\PSoC4/CyLib.c ****     {
1692:Generated_Source\PSoC4/CyLib.c ****         uint32   regTmp;
1693:Generated_Source\PSoC4/CyLib.c ****         cystatus tmp;
1694:Generated_Source\PSoC4/CyLib.c ****         uint8    interruptState;
1695:Generated_Source\PSoC4/CyLib.c ****         cystatus returnStatus = CYRET_BAD_PARAM;
1696:Generated_Source\PSoC4/CyLib.c **** 
1697:Generated_Source\PSoC4/CyLib.c ****         interruptState = CyEnterCriticalSection();
1698:Generated_Source\PSoC4/CyLib.c **** 
1699:Generated_Source\PSoC4/CyLib.c ****         tmp = CySysClkPllConfigChangeAllowed(pll);
1700:Generated_Source\PSoC4/CyLib.c **** 
1701:Generated_Source\PSoC4/CyLib.c ****         if ((pll < CY_IP_PLL_NR) &&
1702:Generated_Source\PSoC4/CyLib.c ****             (feedback  >= CY_SYS_CLK_PLL_CONFIG_FEEDBACK_DIV_MIN)  && (feedback  <= CY_SYS_CLK_PLL_
1703:Generated_Source\PSoC4/CyLib.c ****             (reference >= CY_SYS_CLK_PLL_CONFIG_REFERENCE_DIV_MIN) && (reference <= CY_SYS_CLK_PLL_
1704:Generated_Source\PSoC4/CyLib.c ****             (current   >= CY_SYS_CLK_PLL_CONFIG_ICP_SEL_MIN )      && (current   <= CY_SYS_CLK_PLL_
1705:Generated_Source\PSoC4/CyLib.c ****             (CYRET_SUCCESS == tmp))
1706:Generated_Source\PSoC4/CyLib.c ****         {
1707:Generated_Source\PSoC4/CyLib.c ****             /* Set new feedback, reference and current values */
1708:Generated_Source\PSoC4/CyLib.c ****             regTmp  = CY_SYS_CLK_PLL_BASE.pll[pll].config & (uint32) ~(CY_SYS_CLK_PLL_CONFIG_FEEDBA
1709:Generated_Source\PSoC4/CyLib.c ****                                                                        CY_SYS_CLK_PLL_CONFIG_REFERE
1710:Generated_Source\PSoC4/CyLib.c ****                                                                        CY_SYS_CLK_PLL_CONFIG_ICP_SE
1711:Generated_Source\PSoC4/CyLib.c **** 
1712:Generated_Source\PSoC4/CyLib.c ****             regTmp |= ((feedback << CY_SYS_CLK_PLL_CONFIG_FEEDBACK_DIV_SHIFT) & CY_SYS_CLK_PLL_CONF
1713:Generated_Source\PSoC4/CyLib.c ****             regTmp |= (((reference - 1u) << CY_SYS_CLK_PLL_CONFIG_REFERENCE_DIV_SHIFT) & CY_SYS_CLK
1714:Generated_Source\PSoC4/CyLib.c ****             regTmp |= ((current << CY_SYS_CLK_PLL_CONFIG_ICP_SEL_SHIFT) & CY_SYS_CLK_PLL_CONFIG_ICP
1715:Generated_Source\PSoC4/CyLib.c **** 
1716:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_PLL_BASE.pll[pll].config = regTmp;
1717:Generated_Source\PSoC4/CyLib.c **** 
1718:Generated_Source\PSoC4/CyLib.c ****             returnStatus = CYRET_SUCCESS;
1719:Generated_Source\PSoC4/CyLib.c ****         }
1720:Generated_Source\PSoC4/CyLib.c **** 
1721:Generated_Source\PSoC4/CyLib.c ****         CyExitCriticalSection(interruptState);
1722:Generated_Source\PSoC4/CyLib.c **** 
1723:Generated_Source\PSoC4/CyLib.c ****         return (returnStatus);
1724:Generated_Source\PSoC4/CyLib.c ****     }
1725:Generated_Source\PSoC4/CyLib.c **** 
1726:Generated_Source\PSoC4/CyLib.c **** 
1727:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1728:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkPllSetBypassMode
1729:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1730:Generated_Source\PSoC4/CyLib.c ****     *
ARM GAS  C:\Users\akita\AppData\Local\Temp\ccaIVzD4.s 			page 45


1731:Generated_Source\PSoC4/CyLib.c ****     * Sets the bypass mode for the specified PLL.
1732:Generated_Source\PSoC4/CyLib.c ****     *
1733:Generated_Source\PSoC4/CyLib.c ****     * The PLL must not be the system clock source when calling this function.
1734:Generated_Source\PSoC4/CyLib.c ****     * The PLL output will glitch during this function call.
1735:Generated_Source\PSoC4/CyLib.c ****     *
1736:Generated_Source\PSoC4/CyLib.c ****     * When the PLL's reference input is higher than HFCLK frequency the device may 
1737:Generated_Source\PSoC4/CyLib.c ****     * lock due to incorrect flash wait cycle configuration and bypass switches from 
1738:Generated_Source\PSoC4/CyLib.c ****     * PLL output to the reference input. See description of 
1739:Generated_Source\PSoC4/CyLib.c ****     * CySysFlashSetWaitCycles() for more information.
1740:Generated_Source\PSoC4/CyLib.c ****     *
1741:Generated_Source\PSoC4/CyLib.c ****     * This API is available only for PSoC 4200L devices.
1742:Generated_Source\PSoC4/CyLib.c ****     *
1743:Generated_Source\PSoC4/CyLib.c ****     * \param PLL:
1744:Generated_Source\PSoC4/CyLib.c ****     *  0   PLL#0
1745:Generated_Source\PSoC4/CyLib.c ****     *  1   PLL#1
1746:Generated_Source\PSoC4/CyLib.c ****     *
1747:Generated_Source\PSoC4/CyLib.c ****     * \param bypass: The bypass mode.
1748:Generated_Source\PSoC4/CyLib.c ****     * CY_SYS_PLL_BYPASS_AUTO - Automatic usage of the lock indicator. When unlocked,
1749:Generated_Source\PSoC4/CyLib.c ****     * automatically selects PLL the reference input (bypass mode). When locked,
1750:Generated_Source\PSoC4/CyLib.c ****     * automatically selects the PLL output.
1751:Generated_Source\PSoC4/CyLib.c ****     *
1752:Generated_Source\PSoC4/CyLib.c ****     * CY_SYS_PLL_BYPASS_PLL_REF - Selects the PLL reference input (bypass mode).
1753:Generated_Source\PSoC4/CyLib.c ****     * Ignores the lock indicator.
1754:Generated_Source\PSoC4/CyLib.c ****     *
1755:Generated_Source\PSoC4/CyLib.c ****     * CY_SYS_PLL_BYPASS_PLL_OUT - Selects the PLL output.  Ignores the lock indicator.
1756:Generated_Source\PSoC4/CyLib.c ****     *
1757:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1758:Generated_Source\PSoC4/CyLib.c ****     void CySysClkPllSetBypassMode(uint32 pll, uint32 bypass)
1759:Generated_Source\PSoC4/CyLib.c ****     {
1760:Generated_Source\PSoC4/CyLib.c ****         uint32 regTmp;
1761:Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
1762:Generated_Source\PSoC4/CyLib.c **** 
1763:Generated_Source\PSoC4/CyLib.c ****         interruptState = CyEnterCriticalSection();
1764:Generated_Source\PSoC4/CyLib.c **** 
1765:Generated_Source\PSoC4/CyLib.c ****         if ((pll < CY_IP_PLL_NR) && (bypass <= CY_SYS_PLL_BYPASS_PLL_OUT))
1766:Generated_Source\PSoC4/CyLib.c ****         {
1767:Generated_Source\PSoC4/CyLib.c ****             regTmp  = CY_SYS_CLK_PLL_BASE.pll[pll].config & (uint32) ~CY_SYS_CLK_PLL_CONFIG_BYPASS_
1768:Generated_Source\PSoC4/CyLib.c ****             regTmp |=  (uint32)(bypass << CY_SYS_CLK_PLL_CONFIG_BYPASS_SEL_SHIFT);
1769:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_PLL_BASE.pll[pll].config = regTmp;
1770:Generated_Source\PSoC4/CyLib.c ****         }
1771:Generated_Source\PSoC4/CyLib.c **** 
1772:Generated_Source\PSoC4/CyLib.c ****         CyExitCriticalSection(interruptState);
1773:Generated_Source\PSoC4/CyLib.c ****     }
1774:Generated_Source\PSoC4/CyLib.c **** 
1775:Generated_Source\PSoC4/CyLib.c **** 
1776:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1777:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkPllGetBypassMode
1778:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1779:Generated_Source\PSoC4/CyLib.c ****     *
1780:Generated_Source\PSoC4/CyLib.c ****     *  Gets the bypass mode for the specified PLL.
1781:Generated_Source\PSoC4/CyLib.c ****     *  This API is available only for PSoC 4200L devices.
1782:Generated_Source\PSoC4/CyLib.c ****     *
1783:Generated_Source\PSoC4/CyLib.c ****     *  \param PLL:
1784:Generated_Source\PSoC4/CyLib.c ****     *   0   PLL#0
1785:Generated_Source\PSoC4/CyLib.c ****     *   1   PLL#1
1786:Generated_Source\PSoC4/CyLib.c ****     *
1787:Generated_Source\PSoC4/CyLib.c ****     *  \param bypass: Bypass mode.
ARM GAS  C:\Users\akita\AppData\Local\Temp\ccaIVzD4.s 			page 46


1788:Generated_Source\PSoC4/CyLib.c ****     *   The same as the parameter of the CySysClkPllSetBypassMode().
1789:Generated_Source\PSoC4/CyLib.c ****     *
1790:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1791:Generated_Source\PSoC4/CyLib.c ****     static uint32 CySysClkPllGetBypassMode(uint32 pll)
1792:Generated_Source\PSoC4/CyLib.c ****     {
1793:Generated_Source\PSoC4/CyLib.c ****         uint32 returnValue;
1794:Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
1795:Generated_Source\PSoC4/CyLib.c **** 
1796:Generated_Source\PSoC4/CyLib.c ****         CYASSERT(pll < CY_IP_PLL_NR);
1797:Generated_Source\PSoC4/CyLib.c **** 
1798:Generated_Source\PSoC4/CyLib.c ****         interruptState = CyEnterCriticalSection();
1799:Generated_Source\PSoC4/CyLib.c **** 
1800:Generated_Source\PSoC4/CyLib.c ****         returnValue = CY_SYS_CLK_PLL_BASE.pll[pll].config & CY_SYS_CLK_PLL_CONFIG_BYPASS_SEL_MASK;
1801:Generated_Source\PSoC4/CyLib.c ****         returnValue =  returnValue >> CY_SYS_CLK_PLL_CONFIG_BYPASS_SEL_SHIFT;
1802:Generated_Source\PSoC4/CyLib.c **** 
1803:Generated_Source\PSoC4/CyLib.c ****         CyExitCriticalSection(interruptState);
1804:Generated_Source\PSoC4/CyLib.c **** 
1805:Generated_Source\PSoC4/CyLib.c ****         return (returnValue);
1806:Generated_Source\PSoC4/CyLib.c ****     }
1807:Generated_Source\PSoC4/CyLib.c **** 
1808:Generated_Source\PSoC4/CyLib.c **** 
1809:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1810:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkPllConfigChangeAllowed
1811:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1812:Generated_Source\PSoC4/CyLib.c ****     *
1813:Generated_Source\PSoC4/CyLib.c ****     *  The function returns non-zero value if the specified PLL sources the System
1814:Generated_Source\PSoC4/CyLib.c ****     *  clock and the PLL is not in the bypass mode.
1815:Generated_Source\PSoC4/CyLib.c ****     *
1816:Generated_Source\PSoC4/CyLib.c ****     *  This API is available only for PSoC 4200L devices.
1817:Generated_Source\PSoC4/CyLib.c ****     *
1818:Generated_Source\PSoC4/CyLib.c ****     *  \param PLL:
1819:Generated_Source\PSoC4/CyLib.c ****     *   0   PLL#0
1820:Generated_Source\PSoC4/CyLib.c ****     *   1   PLL#1
1821:Generated_Source\PSoC4/CyLib.c ****     *
1822:Generated_Source\PSoC4/CyLib.c ****     * \return Non-zero value when the specified PLL sources the System clock and
1823:Generated_Source\PSoC4/CyLib.c ****     * the PLL is not in the bypass mode.
1824:Generated_Source\PSoC4/CyLib.c ****     *
1825:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1826:Generated_Source\PSoC4/CyLib.c ****     static cystatus CySysClkPllConfigChangeAllowed(uint32 pll)
1827:Generated_Source\PSoC4/CyLib.c ****     {
1828:Generated_Source\PSoC4/CyLib.c ****         uint32   pllBypassMode;
1829:Generated_Source\PSoC4/CyLib.c ****         uint32   sysclkSource;
1830:Generated_Source\PSoC4/CyLib.c ****         cystatus returnValue = CYRET_LOCKED;
1831:Generated_Source\PSoC4/CyLib.c **** 
1832:Generated_Source\PSoC4/CyLib.c ****         sysclkSource  = CySysClkGetSysclkSource();
1833:Generated_Source\PSoC4/CyLib.c ****         pllBypassMode = CySysClkPllGetBypassMode(pll);
1834:Generated_Source\PSoC4/CyLib.c **** 
1835:Generated_Source\PSoC4/CyLib.c ****         if ((CY_SYS_PLL_BYPASS_PLL_REF == pllBypassMode)             ||
1836:Generated_Source\PSoC4/CyLib.c ****             ((CY_SYS_CLK_HFCLK_PLL0 != sysclkSource) && (0u == pll)) ||
1837:Generated_Source\PSoC4/CyLib.c ****             ((CY_SYS_CLK_HFCLK_PLL1 != sysclkSource) && (1u == pll)))
1838:Generated_Source\PSoC4/CyLib.c ****         {
1839:Generated_Source\PSoC4/CyLib.c ****             returnValue = CYRET_SUCCESS;
1840:Generated_Source\PSoC4/CyLib.c ****         }
1841:Generated_Source\PSoC4/CyLib.c **** 
1842:Generated_Source\PSoC4/CyLib.c ****         return (returnValue);
1843:Generated_Source\PSoC4/CyLib.c ****     }
1844:Generated_Source\PSoC4/CyLib.c **** 
ARM GAS  C:\Users\akita\AppData\Local\Temp\ccaIVzD4.s 			page 47


1845:Generated_Source\PSoC4/CyLib.c **** 
1846:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1847:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkPllGetUnlockStatus
1848:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1849:Generated_Source\PSoC4/CyLib.c ****     *
1850:Generated_Source\PSoC4/CyLib.c ****     *  Returns a non-zero value if the specified PLL output was unlocked.
1851:Generated_Source\PSoC4/CyLib.c ****     *  The unlock status is an indicator that the PLL has lost a lock at least once
1852:Generated_Source\PSoC4/CyLib.c ****     *  during its operation. The unlock status is cleared once it is read using
1853:Generated_Source\PSoC4/CyLib.c ****     *  this API.
1854:Generated_Source\PSoC4/CyLib.c ****     *
1855:Generated_Source\PSoC4/CyLib.c ****     *  This API is available only for PSoC 4200L devices.
1856:Generated_Source\PSoC4/CyLib.c ****     *
1857:Generated_Source\PSoC4/CyLib.c ****     *  \param PLL:
1858:Generated_Source\PSoC4/CyLib.c ****     *   0   PLL#0
1859:Generated_Source\PSoC4/CyLib.c ****     *   1   PLL#1
1860:Generated_Source\PSoC4/CyLib.c ****     *
1861:Generated_Source\PSoC4/CyLib.c ****     * \return Non-zero value when the specified PLL was unlocked.
1862:Generated_Source\PSoC4/CyLib.c ****     *
1863:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1864:Generated_Source\PSoC4/CyLib.c ****     uint32 CySysClkPllGetUnlockStatus(uint32 pll)
1865:Generated_Source\PSoC4/CyLib.c ****     {
1866:Generated_Source\PSoC4/CyLib.c ****         uint32 returnStatus = 0u;
1867:Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
1868:Generated_Source\PSoC4/CyLib.c **** 
1869:Generated_Source\PSoC4/CyLib.c ****         interruptState = CyEnterCriticalSection();
1870:Generated_Source\PSoC4/CyLib.c **** 
1871:Generated_Source\PSoC4/CyLib.c ****         returnStatus = CY_SYS_CLK_PLL_BASE.pll[pll].test & CY_SYS_CLK_PLL_TEST_UNLOCK_OCCURRED_MASK
1872:Generated_Source\PSoC4/CyLib.c ****         CY_SYS_CLK_PLL_BASE.pll[pll].test |= CY_SYS_CLK_PLL_TEST_UNLOCK_OCCURRED_MASK;
1873:Generated_Source\PSoC4/CyLib.c **** 
1874:Generated_Source\PSoC4/CyLib.c ****         CyExitCriticalSection(interruptState);
1875:Generated_Source\PSoC4/CyLib.c **** 
1876:Generated_Source\PSoC4/CyLib.c ****         return (returnStatus);
1877:Generated_Source\PSoC4/CyLib.c ****     }
1878:Generated_Source\PSoC4/CyLib.c **** 
1879:Generated_Source\PSoC4/CyLib.c **** 
1880:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1881:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkPllSetFrequency
1882:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1883:Generated_Source\PSoC4/CyLib.c ****     *
1884:Generated_Source\PSoC4/CyLib.c ****     * Configures either PLL#0 or PLL#1 for the requested input/output frequencies.
1885:Generated_Source\PSoC4/CyLib.c ****     * The input frequency is the frequency of the source to the PLL. The source is
1886:Generated_Source\PSoC4/CyLib.c ****     * set using the CySysClkPllSetSource() function.
1887:Generated_Source\PSoC4/CyLib.c ****     *
1888:Generated_Source\PSoC4/CyLib.c ****     * The PLL must not be the system clock source when calling this function. The
1889:Generated_Source\PSoC4/CyLib.c ****     * PLL output will glitch during this function call.
1890:Generated_Source\PSoC4/CyLib.c ****     *
1891:Generated_Source\PSoC4/CyLib.c ****     * This API is available only for PSoC 4200L devices.
1892:Generated_Source\PSoC4/CyLib.c ****     *
1893:Generated_Source\PSoC4/CyLib.c ****     * \param pll:
1894:Generated_Source\PSoC4/CyLib.c ****     *  0   PLL#0
1895:Generated_Source\PSoC4/CyLib.c ****     *  1   PLL#1
1896:Generated_Source\PSoC4/CyLib.c ****     *
1897:Generated_Source\PSoC4/CyLib.c ****     * \param inputFreq The reference frequency in KHz. The valid range is from 1000 to 49152 KHz.
1898:Generated_Source\PSoC4/CyLib.c ****     *
1899:Generated_Source\PSoC4/CyLib.c ****     * \param pllFreq The target frequency in KHz. The valid range is from 22500 to 49152 KHz.
1900:Generated_Source\PSoC4/CyLib.c ****     *
1901:Generated_Source\PSoC4/CyLib.c ****     * \param divider The output clock divider for the PLL:
ARM GAS  C:\Users\akita\AppData\Local\Temp\ccaIVzD4.s 			page 48


1902:Generated_Source\PSoC4/CyLib.c ****     * CY_SYS_PLL_OUTPUT_DIVPASS    Pass Through
1903:Generated_Source\PSoC4/CyLib.c ****     * CY_SYS_PLL_OUTPUT_DIV2       Divide by 2
1904:Generated_Source\PSoC4/CyLib.c ****     * CY_SYS_PLL_OUTPUT_DIV4       Divide by 4
1905:Generated_Source\PSoC4/CyLib.c ****     * CY_SYS_PLL_OUTPUT_DIV8       Divide by 8
1906:Generated_Source\PSoC4/CyLib.c ****     *
1907:Generated_Source\PSoC4/CyLib.c ****     * \param freqTol The tolerance in ppm, 10 ppm is equal to 0.001%.
1908:Generated_Source\PSoC4/CyLib.c ****     *
1909:Generated_Source\PSoC4/CyLib.c ****     * \return CYRET_SUCCESS The PLL was successfully configured for the requested
1910:Generated_Source\PSoC4/CyLib.c ****     * frequency.
1911:Generated_Source\PSoC4/CyLib.c ****     *
1912:Generated_Source\PSoC4/CyLib.c ****     * \return CYRET_BAD_PARAM The PLL was not able to successfully configure for the
1913:Generated_Source\PSoC4/CyLib.c ****     * requested frequency.
1914:Generated_Source\PSoC4/CyLib.c ****     *
1915:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1916:Generated_Source\PSoC4/CyLib.c ****     cystatus CySysClkPllSetFrequency(uint32 pll, uint32 inputFreq, uint32 pllFreq, uint32 divider, 
1917:Generated_Source\PSoC4/CyLib.c ****     {
1918:Generated_Source\PSoC4/CyLib.c ****         uint32 qMin;
1919:Generated_Source\PSoC4/CyLib.c ****         uint32 qMax;
1920:Generated_Source\PSoC4/CyLib.c **** 
1921:Generated_Source\PSoC4/CyLib.c ****         uint32 qVal = CY_SYS_CLK_PLL_INVALID;
1922:Generated_Source\PSoC4/CyLib.c ****         uint32 pVal = CY_SYS_CLK_PLL_INVALID;
1923:Generated_Source\PSoC4/CyLib.c **** 
1924:Generated_Source\PSoC4/CyLib.c ****         uint32 q;
1925:Generated_Source\PSoC4/CyLib.c ****         uint32 p;
1926:Generated_Source\PSoC4/CyLib.c **** 
1927:Generated_Source\PSoC4/CyLib.c ****         uint32 fvco;
1928:Generated_Source\PSoC4/CyLib.c ****         int32 ferr;
1929:Generated_Source\PSoC4/CyLib.c **** 
1930:Generated_Source\PSoC4/CyLib.c ****         cystatus tmp;
1931:Generated_Source\PSoC4/CyLib.c ****         cystatus returnStatus = CYRET_BAD_PARAM;
1932:Generated_Source\PSoC4/CyLib.c **** 
1933:Generated_Source\PSoC4/CyLib.c **** 
1934:Generated_Source\PSoC4/CyLib.c ****         tmp = CySysClkPllConfigChangeAllowed(pll);
1935:Generated_Source\PSoC4/CyLib.c **** 
1936:Generated_Source\PSoC4/CyLib.c ****         if ((pll < CY_IP_PLL_NR) &&
1937:Generated_Source\PSoC4/CyLib.c ****             (inputFreq  >= CY_SYS_CLK_PLL_INPUT_FREQ_MIN )  && (inputFreq  <= CY_SYS_CLK_PLL_INPUT_
1938:Generated_Source\PSoC4/CyLib.c ****             (pllFreq >= CY_SYS_CLK_PLL_OUTPUT_FREQ_MIN ) && (pllFreq <= CY_SYS_CLK_PLL_OUTPUT_FREQ_
1939:Generated_Source\PSoC4/CyLib.c ****             (divider <= CY_SYS_PLL_OUTPUT_DIV8) &&
1940:Generated_Source\PSoC4/CyLib.c ****             (CYRET_SUCCESS == tmp))
1941:Generated_Source\PSoC4/CyLib.c ****         {
1942:Generated_Source\PSoC4/CyLib.c **** 
1943:Generated_Source\PSoC4/CyLib.c ****             /* Minimum feed forward loop divisor */
1944:Generated_Source\PSoC4/CyLib.c ****             qMin = (inputFreq + (CY_SYS_CLK_PLL_FPFDMAX - 1u)) / CY_SYS_CLK_PLL_FPFDMAX;
1945:Generated_Source\PSoC4/CyLib.c ****             qMin = (qMin < CY_SYS_CLK_PLL_QMINIP) ? CY_SYS_CLK_PLL_QMINIP : qMin;
1946:Generated_Source\PSoC4/CyLib.c **** 
1947:Generated_Source\PSoC4/CyLib.c ****             /* Maximum feed forward loop divisor */
1948:Generated_Source\PSoC4/CyLib.c ****             qMax = inputFreq / CY_SYS_CLK_PLL_FPFDMIN;
1949:Generated_Source\PSoC4/CyLib.c ****             qMax = (qMax > CY_SYS_CLK_PLL_QMAXIP) ? CY_SYS_CLK_PLL_QMAXIP : qMax;
1950:Generated_Source\PSoC4/CyLib.c **** 
1951:Generated_Source\PSoC4/CyLib.c ****             if (qMin <= qMax)
1952:Generated_Source\PSoC4/CyLib.c ****             {
1953:Generated_Source\PSoC4/CyLib.c ****                 for(q = qMin; q <= qMax; q++)
1954:Generated_Source\PSoC4/CyLib.c ****                 {
1955:Generated_Source\PSoC4/CyLib.c ****                     /* Solve for the feedback divisor value */
1956:Generated_Source\PSoC4/CyLib.c **** 
1957:Generated_Source\PSoC4/CyLib.c ****                     /* INT((pllFreq * q ) / inputFreq), where INT is normal rounding  */
1958:Generated_Source\PSoC4/CyLib.c ****                     p = ((pllFreq * q) + (inputFreq / 2u)) / inputFreq;
ARM GAS  C:\Users\akita\AppData\Local\Temp\ccaIVzD4.s 			page 49


1959:Generated_Source\PSoC4/CyLib.c **** 
1960:Generated_Source\PSoC4/CyLib.c ****                     /* Calculate the actual VCO frequency (FVCO) */
1961:Generated_Source\PSoC4/CyLib.c ****                     fvco = ((inputFreq * p) / q);
1962:Generated_Source\PSoC4/CyLib.c **** 
1963:Generated_Source\PSoC4/CyLib.c ****                     /* Calculate the frequency error (FERR) */
1964:Generated_Source\PSoC4/CyLib.c ****                     ferr = ((1000000 * ((int32) fvco - (int32) pllFreq))/ (int32) pllFreq);
1965:Generated_Source\PSoC4/CyLib.c **** 
1966:Generated_Source\PSoC4/CyLib.c ****                     /* Bound check the frequency error and decide next action */
1967:Generated_Source\PSoC4/CyLib.c ****                     if ((( -1 * (int32) freqTol) <= ferr) && (ferr <= (int32) freqTol))
1968:Generated_Source\PSoC4/CyLib.c ****                     {
1969:Generated_Source\PSoC4/CyLib.c ****                         qVal = q;
1970:Generated_Source\PSoC4/CyLib.c ****                         pVal = p;
1971:Generated_Source\PSoC4/CyLib.c ****                         break;
1972:Generated_Source\PSoC4/CyLib.c ****                     }
1973:Generated_Source\PSoC4/CyLib.c ****                 }
1974:Generated_Source\PSoC4/CyLib.c **** 
1975:Generated_Source\PSoC4/CyLib.c **** 
1976:Generated_Source\PSoC4/CyLib.c ****                 if ((pVal != CY_SYS_CLK_PLL_INVALID) && (qVal != CY_SYS_CLK_PLL_INVALID))
1977:Generated_Source\PSoC4/CyLib.c ****                 {
1978:Generated_Source\PSoC4/CyLib.c ****                     if (CySysClkPllSetPQ(pll, pVal, qVal, CY_SYS_CLK_PLL_CURRENT_DEFAULT) == CYRET_
1979:Generated_Source\PSoC4/CyLib.c ****                     {
1980:Generated_Source\PSoC4/CyLib.c ****                         returnStatus = CySysClkPllSetOutputDivider(pll, divider);
1981:Generated_Source\PSoC4/CyLib.c ****                     }
1982:Generated_Source\PSoC4/CyLib.c ****                 }
1983:Generated_Source\PSoC4/CyLib.c ****             }
1984:Generated_Source\PSoC4/CyLib.c **** 
1985:Generated_Source\PSoC4/CyLib.c ****         }
1986:Generated_Source\PSoC4/CyLib.c **** 
1987:Generated_Source\PSoC4/CyLib.c ****         return (returnStatus);
1988:Generated_Source\PSoC4/CyLib.c ****     }
1989:Generated_Source\PSoC4/CyLib.c **** 
1990:Generated_Source\PSoC4/CyLib.c **** 
1991:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1992:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkPllSetSource
1993:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1994:Generated_Source\PSoC4/CyLib.c ****     *
1995:Generated_Source\PSoC4/CyLib.c ****     *  Sets the input clock source to the PLL. The PLL must be disabled before
1996:Generated_Source\PSoC4/CyLib.c ****     *  calling this function.
1997:Generated_Source\PSoC4/CyLib.c ****     *
1998:Generated_Source\PSoC4/CyLib.c ****     *  This API is available only for PSoC 4200L devices.
1999:Generated_Source\PSoC4/CyLib.c ****     *
2000:Generated_Source\PSoC4/CyLib.c ****     *  \param PLL:
2001:Generated_Source\PSoC4/CyLib.c ****     *  0   PLL#0
2002:Generated_Source\PSoC4/CyLib.c ****     *  1   PLL#1
2003:Generated_Source\PSoC4/CyLib.c ****     *
2004:Generated_Source\PSoC4/CyLib.c ****     * \param source:
2005:Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_SOURCE_IMO        IMO
2006:Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_SOURCE_EXTCLK     External Clock
2007:Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_SOURCE_ECO        ECO
2008:Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_SOURCE_DSI0       DSI_OUT[0]
2009:Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_SOURCE_DSI1       DSI_OUT[1]
2010:Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_SOURCE_DSI2       DSI_OUT[2]
2011:Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_SOURCE_DSI3       DSI_OUT[3]
2012:Generated_Source\PSoC4/CyLib.c ****     *
2013:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
2014:Generated_Source\PSoC4/CyLib.c ****     void CySysClkPllSetSource(uint32 pll, uint32 source)
2015:Generated_Source\PSoC4/CyLib.c ****     {
ARM GAS  C:\Users\akita\AppData\Local\Temp\ccaIVzD4.s 			page 50


2016:Generated_Source\PSoC4/CyLib.c ****         uint32 regTmp;
2017:Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
2018:Generated_Source\PSoC4/CyLib.c **** 
2019:Generated_Source\PSoC4/CyLib.c ****         interruptState = CyEnterCriticalSection();
2020:Generated_Source\PSoC4/CyLib.c **** 
2021:Generated_Source\PSoC4/CyLib.c ****         if (pll < CY_IP_PLL_NR)
2022:Generated_Source\PSoC4/CyLib.c ****         {
2023:Generated_Source\PSoC4/CyLib.c ****             regTmp = CY_SYS_CLK_SELECT_REG & (uint32) ~CY_SYS_CLK_SELECT_PLL_MASK(pll);
2024:Generated_Source\PSoC4/CyLib.c ****             regTmp |= ((source << CY_SYS_CLK_SELECT_PLL_SHIFT(pll)) & CY_SYS_CLK_SELECT_PLL_MASK(pl
2025:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_SELECT_REG = regTmp;
2026:Generated_Source\PSoC4/CyLib.c ****         }
2027:Generated_Source\PSoC4/CyLib.c **** 
2028:Generated_Source\PSoC4/CyLib.c ****         CyExitCriticalSection(interruptState);
2029:Generated_Source\PSoC4/CyLib.c ****     }
2030:Generated_Source\PSoC4/CyLib.c **** 
2031:Generated_Source\PSoC4/CyLib.c **** 
2032:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
2033:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkPllSetOutputDivider
2034:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
2035:Generated_Source\PSoC4/CyLib.c ****     *
2036:Generated_Source\PSoC4/CyLib.c ****     *  Sets the output clock divider for the PLL.
2037:Generated_Source\PSoC4/CyLib.c ****     *
2038:Generated_Source\PSoC4/CyLib.c ****     *  The PLL must not be the System Clock source when calling this function. The
2039:Generated_Source\PSoC4/CyLib.c ****     *  PLL output will glitch during this function call.
2040:Generated_Source\PSoC4/CyLib.c ****     *
2041:Generated_Source\PSoC4/CyLib.c ****     *  This API is available only for PSoC 4200L devices.
2042:Generated_Source\PSoC4/CyLib.c ****     *
2043:Generated_Source\PSoC4/CyLib.c ****     *  \param PLL:
2044:Generated_Source\PSoC4/CyLib.c ****     *   0   PLL#0
2045:Generated_Source\PSoC4/CyLib.c ****     *   1   PLL#1
2046:Generated_Source\PSoC4/CyLib.c ****     *
2047:Generated_Source\PSoC4/CyLib.c ****     * \param divider:
2048:Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_OUTPUT_DIVPASS    Pass through
2049:Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_OUTPUT_DIV2       Divide by 2
2050:Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_OUTPUT_DIV4       Divide by 4
2051:Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_OUTPUT_DIV8       Divide by 8
2052:Generated_Source\PSoC4/CyLib.c ****     *
2053:Generated_Source\PSoC4/CyLib.c ****     * \return \ref CYRET_SUCCESS    Completed successfully.
2054:Generated_Source\PSoC4/CyLib.c ****     * \return \ref CYRET_BAD_PARAM  The parameters are out of range or the
2055:Generated_Source\PSoC4/CyLib.c ****     * specified PLL sources the System clock.
2056:Generated_Source\PSoC4/CyLib.c ****     *
2057:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
2058:Generated_Source\PSoC4/CyLib.c ****     cystatus CySysClkPllSetOutputDivider(uint32 pll, uint32 divider)
2059:Generated_Source\PSoC4/CyLib.c ****     {
2060:Generated_Source\PSoC4/CyLib.c ****         uint32   tmpReg;
2061:Generated_Source\PSoC4/CyLib.c ****         uint8    interruptState;
2062:Generated_Source\PSoC4/CyLib.c ****         cystatus returnStatus = CYRET_BAD_PARAM;
2063:Generated_Source\PSoC4/CyLib.c ****         cystatus tmp;
2064:Generated_Source\PSoC4/CyLib.c **** 
2065:Generated_Source\PSoC4/CyLib.c **** 
2066:Generated_Source\PSoC4/CyLib.c ****         interruptState = CyEnterCriticalSection();
2067:Generated_Source\PSoC4/CyLib.c **** 
2068:Generated_Source\PSoC4/CyLib.c ****         tmp = CySysClkPllConfigChangeAllowed(pll);
2069:Generated_Source\PSoC4/CyLib.c **** 
2070:Generated_Source\PSoC4/CyLib.c ****         if ((pll < CY_IP_PLL_NR) && (CYRET_SUCCESS == tmp) && (divider <= CY_SYS_PLL_OUTPUT_DIV8))
2071:Generated_Source\PSoC4/CyLib.c ****         {
2072:Generated_Source\PSoC4/CyLib.c ****             tmpReg  = CY_SYS_CLK_PLL_BASE.pll[pll].config & (uint32) ~(CY_SYS_CLK_PLL_CONFIG_OUTPUT
ARM GAS  C:\Users\akita\AppData\Local\Temp\ccaIVzD4.s 			page 51


2073:Generated_Source\PSoC4/CyLib.c ****             tmpReg |= ((divider << CY_SYS_CLK_PLL_CONFIG_OUTPUT_DIV_SHIFT) & CY_SYS_CLK_PLL_CONFIG_
2074:Generated_Source\PSoC4/CyLib.c **** 
2075:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_PLL_BASE.pll[pll].config = tmpReg;
2076:Generated_Source\PSoC4/CyLib.c **** 
2077:Generated_Source\PSoC4/CyLib.c ****             returnStatus = CYRET_SUCCESS;
2078:Generated_Source\PSoC4/CyLib.c ****         }
2079:Generated_Source\PSoC4/CyLib.c **** 
2080:Generated_Source\PSoC4/CyLib.c ****         CyExitCriticalSection(interruptState);
2081:Generated_Source\PSoC4/CyLib.c **** 
2082:Generated_Source\PSoC4/CyLib.c ****         return (returnStatus);
2083:Generated_Source\PSoC4/CyLib.c ****     }
2084:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_SRSSV2 && CY_IP_PLL) */
2085:Generated_Source\PSoC4/CyLib.c **** 
2086:Generated_Source\PSoC4/CyLib.c **** 
2087:Generated_Source\PSoC4/CyLib.c **** #if(CY_IP_SRSSV2)
2088:Generated_Source\PSoC4/CyLib.c **** 
2089:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
2090:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysLvdEnable
2091:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
2092:Generated_Source\PSoC4/CyLib.c ****     *
2093:Generated_Source\PSoC4/CyLib.c ****     *  Enables the output of the low-voltage monitor when Vddd is at or below the
2094:Generated_Source\PSoC4/CyLib.c ****     *  trip point, configures the device to generate an interrupt, and sets the
2095:Generated_Source\PSoC4/CyLib.c ****     *  voltage trip level.
2096:Generated_Source\PSoC4/CyLib.c ****     *
2097:Generated_Source\PSoC4/CyLib.c ****     *  \param threshold: Threshold selection for Low Voltage Detect circuit.
2098:Generated_Source\PSoC4/CyLib.c ****     *  Threshold variation is +/- 2.5% from these typical voltage choices.
2099:Generated_Source\PSoC4/CyLib.c ****     *         Define                     Voltage threshold
2100:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_1_75_V       1.7500 V
2101:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_1_80_V       1.8000 V
2102:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_1_90_V       1.9000 V
2103:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_2_00_V       2.0000 V
2104:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_2_10_V       2.1000 V
2105:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_2_20_V       2.2000 V
2106:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_2_30_V       2.3000 V
2107:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_2_40_V       2.4000 V
2108:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_2_50_V       2.5000 V
2109:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_2_60_V       2.6000 V
2110:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_2_70_V       2.7000 V
2111:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_2_80_V       2.8000 V
2112:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_2_90_V       2.9000 V
2113:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_3_00_V       3.0000 V
2114:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_3_20_V       3.2000 V
2115:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_4_50_V       4.5000 V
2116:Generated_Source\PSoC4/CyLib.c ****     *
2117:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
2118:Generated_Source\PSoC4/CyLib.c ****     void CySysLvdEnable(uint32 threshold)
2119:Generated_Source\PSoC4/CyLib.c ****     {
 770              		.loc 1 2119 0
 771              		.cfi_startproc
 772 0000 80B5     		push	{r7, lr}
 773              		.cfi_def_cfa_offset 8
 774              		.cfi_offset 7, -8
 775              		.cfi_offset 14, -4
 776 0002 82B0     		sub	sp, sp, #8
 777              		.cfi_def_cfa_offset 16
 778 0004 00AF     		add	r7, sp, #0
 779              		.cfi_def_cfa_register 7
ARM GAS  C:\Users\akita\AppData\Local\Temp\ccaIVzD4.s 			page 52


 780 0006 7860     		str	r0, [r7, #4]
2120:Generated_Source\PSoC4/CyLib.c ****         /* Prevent propagating a false interrupt */
2121:Generated_Source\PSoC4/CyLib.c ****         CY_LVD_PWR_INTR_MASK_REG   &= (uint32) ~CY_LVD_PROPAGATE_INT_TO_CPU;
 781              		.loc 1 2121 0
 782 0008 134B     		ldr	r3, .L46
 783 000a 134A     		ldr	r2, .L46
 784 000c 1268     		ldr	r2, [r2]
 785 000e 0221     		mov	r1, #2
 786 0010 8A43     		bic	r2, r1
 787 0012 1A60     		str	r2, [r3]
2122:Generated_Source\PSoC4/CyLib.c **** 
2123:Generated_Source\PSoC4/CyLib.c ****         /* Set specified threshold */
2124:Generated_Source\PSoC4/CyLib.c ****         CY_LVD_PWR_VMON_CONFIG_REG = (CY_LVD_PWR_VMON_CONFIG_REG & ~CY_LVD_PWR_VMON_CONFIG_LVD_SEL_
 788              		.loc 1 2124 0
 789 0014 114B     		ldr	r3, .L46+4
 790 0016 114A     		ldr	r2, .L46+4
 791 0018 1268     		ldr	r2, [r2]
 792 001a 1E21     		mov	r1, #30
 793 001c 8A43     		bic	r2, r1
 794 001e 111C     		mov	r1, r2
2125:Generated_Source\PSoC4/CyLib.c ****                 ((threshold << CY_LVD_PWR_VMON_CONFIG_LVD_SEL_SHIFT) & CY_LVD_PWR_VMON_CONFIG_LVD_S
 795              		.loc 1 2125 0
 796 0020 7A68     		ldr	r2, [r7, #4]
 797 0022 5200     		lsl	r2, r2, #1
 798 0024 1E20     		mov	r0, #30
 799 0026 0240     		and	r2, r0
2124:Generated_Source\PSoC4/CyLib.c ****                 ((threshold << CY_LVD_PWR_VMON_CONFIG_LVD_SEL_SHIFT) & CY_LVD_PWR_VMON_CONFIG_LVD_S
 800              		.loc 1 2124 0
 801 0028 0A43     		orr	r2, r1
 802 002a 1A60     		str	r2, [r3]
2126:Generated_Source\PSoC4/CyLib.c **** 
2127:Generated_Source\PSoC4/CyLib.c ****         /* Enable the LVD. This may cause a false LVD event. */
2128:Generated_Source\PSoC4/CyLib.c ****         CY_LVD_PWR_VMON_CONFIG_REG |= CY_LVD_PWR_VMON_CONFIG_LVD_EN;
 803              		.loc 1 2128 0
 804 002c 0B4B     		ldr	r3, .L46+4
 805 002e 0B4A     		ldr	r2, .L46+4
 806 0030 1268     		ldr	r2, [r2]
 807 0032 0121     		mov	r1, #1
 808 0034 0A43     		orr	r2, r1
 809 0036 1A60     		str	r2, [r3]
2129:Generated_Source\PSoC4/CyLib.c **** 
2130:Generated_Source\PSoC4/CyLib.c ****         /* Wait for the circuit to stabilize */
2131:Generated_Source\PSoC4/CyLib.c ****         CyDelayUs(CY_LVD_STABILIZE_TIMEOUT_US);
 810              		.loc 1 2131 0
 811 0038 FA23     		mov	r3, #250
 812 003a 9B00     		lsl	r3, r3, #2
 813 003c 181C     		mov	r0, r3
 814 003e FFF7FEFF 		bl	CyDelayUs
2132:Generated_Source\PSoC4/CyLib.c **** 
2133:Generated_Source\PSoC4/CyLib.c ****         /* Clear the false event */
2134:Generated_Source\PSoC4/CyLib.c ****         CySysLvdClearInterrupt();
 815              		.loc 1 2134 0
 816 0042 FFF7FEFF 		bl	CySysLvdClearInterrupt
2135:Generated_Source\PSoC4/CyLib.c **** 
2136:Generated_Source\PSoC4/CyLib.c ****         /* Unmask the interrupt */
2137:Generated_Source\PSoC4/CyLib.c ****         CY_LVD_PWR_INTR_MASK_REG   |= CY_LVD_PROPAGATE_INT_TO_CPU;
 817              		.loc 1 2137 0
ARM GAS  C:\Users\akita\AppData\Local\Temp\ccaIVzD4.s 			page 53


 818 0046 044B     		ldr	r3, .L46
 819 0048 034A     		ldr	r2, .L46
 820 004a 1268     		ldr	r2, [r2]
 821 004c 0221     		mov	r1, #2
 822 004e 0A43     		orr	r2, r1
 823 0050 1A60     		str	r2, [r3]
2138:Generated_Source\PSoC4/CyLib.c ****     }
 824              		.loc 1 2138 0
 825 0052 BD46     		mov	sp, r7
 826 0054 02B0     		add	sp, sp, #8
 827              		@ sp needed
 828 0056 80BD     		pop	{r7, pc}
 829              	.L47:
 830              		.align	2
 831              	.L46:
 832 0058 08000B40 		.word	1074462728
 833 005c 18000B40 		.word	1074462744
 834              		.cfi_endproc
 835              	.LFE13:
 836              		.size	CySysLvdEnable, .-CySysLvdEnable
 837              		.section	.text.CySysLvdDisable,"ax",%progbits
 838              		.align	2
 839              		.global	CySysLvdDisable
 840              		.code	16
 841              		.thumb_func
 842              		.type	CySysLvdDisable, %function
 843              	CySysLvdDisable:
 844              	.LFB14:
2139:Generated_Source\PSoC4/CyLib.c **** 
2140:Generated_Source\PSoC4/CyLib.c **** 
2141:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
2142:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysLvdDisable
2143:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
2144:Generated_Source\PSoC4/CyLib.c ****     *
2145:Generated_Source\PSoC4/CyLib.c ****     *  Disables the low voltage detection. A low voltage interrupt is disabled.
2146:Generated_Source\PSoC4/CyLib.c ****     *
2147:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
2148:Generated_Source\PSoC4/CyLib.c ****     void CySysLvdDisable(void)
2149:Generated_Source\PSoC4/CyLib.c ****     {
 845              		.loc 1 2149 0
 846              		.cfi_startproc
 847 0000 80B5     		push	{r7, lr}
 848              		.cfi_def_cfa_offset 8
 849              		.cfi_offset 7, -8
 850              		.cfi_offset 14, -4
 851 0002 00AF     		add	r7, sp, #0
 852              		.cfi_def_cfa_register 7
2150:Generated_Source\PSoC4/CyLib.c ****         CY_LVD_PWR_INTR_MASK_REG   &= ~CY_LVD_PROPAGATE_INT_TO_CPU;
 853              		.loc 1 2150 0
 854 0004 064B     		ldr	r3, .L49
 855 0006 064A     		ldr	r2, .L49
 856 0008 1268     		ldr	r2, [r2]
 857 000a 0221     		mov	r1, #2
 858 000c 8A43     		bic	r2, r1
 859 000e 1A60     		str	r2, [r3]
2151:Generated_Source\PSoC4/CyLib.c ****         CY_LVD_PWR_VMON_CONFIG_REG &= ~CY_LVD_PWR_VMON_CONFIG_LVD_EN;
 860              		.loc 1 2151 0
ARM GAS  C:\Users\akita\AppData\Local\Temp\ccaIVzD4.s 			page 54


 861 0010 044B     		ldr	r3, .L49+4
 862 0012 044A     		ldr	r2, .L49+4
 863 0014 1268     		ldr	r2, [r2]
 864 0016 0121     		mov	r1, #1
 865 0018 8A43     		bic	r2, r1
 866 001a 1A60     		str	r2, [r3]
2152:Generated_Source\PSoC4/CyLib.c ****     }
 867              		.loc 1 2152 0
 868 001c BD46     		mov	sp, r7
 869              		@ sp needed
 870 001e 80BD     		pop	{r7, pc}
 871              	.L50:
 872              		.align	2
 873              	.L49:
 874 0020 08000B40 		.word	1074462728
 875 0024 18000B40 		.word	1074462744
 876              		.cfi_endproc
 877              	.LFE14:
 878              		.size	CySysLvdDisable, .-CySysLvdDisable
 879              		.section	.text.CySysLvdGetInterruptSource,"ax",%progbits
 880              		.align	2
 881              		.global	CySysLvdGetInterruptSource
 882              		.code	16
 883              		.thumb_func
 884              		.type	CySysLvdGetInterruptSource, %function
 885              	CySysLvdGetInterruptSource:
 886              	.LFB15:
2153:Generated_Source\PSoC4/CyLib.c **** 
2154:Generated_Source\PSoC4/CyLib.c **** 
2155:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
2156:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysLvdGetInterruptSource
2157:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
2158:Generated_Source\PSoC4/CyLib.c ****     *
2159:Generated_Source\PSoC4/CyLib.c ****     *  Gets the low voltage detection interrupt status (without clearing).
2160:Generated_Source\PSoC4/CyLib.c ****     *
2161:Generated_Source\PSoC4/CyLib.c ****     * \return
2162:Generated_Source\PSoC4/CyLib.c ****     *  Interrupt request value:
2163:Generated_Source\PSoC4/CyLib.c ****     *    CY_SYS_LVD_INT - Indicates an Low Voltage Detect interrupt
2164:Generated_Source\PSoC4/CyLib.c ****     *
2165:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
2166:Generated_Source\PSoC4/CyLib.c ****     uint32 CySysLvdGetInterruptSource(void)
2167:Generated_Source\PSoC4/CyLib.c ****     {
 887              		.loc 1 2167 0
 888              		.cfi_startproc
 889 0000 80B5     		push	{r7, lr}
 890              		.cfi_def_cfa_offset 8
 891              		.cfi_offset 7, -8
 892              		.cfi_offset 14, -4
 893 0002 00AF     		add	r7, sp, #0
 894              		.cfi_def_cfa_register 7
2168:Generated_Source\PSoC4/CyLib.c ****         return (CY_LVD_PWR_INTR_REG & CY_SYS_LVD_INT);
 895              		.loc 1 2168 0
 896 0004 034B     		ldr	r3, .L53
 897 0006 1B68     		ldr	r3, [r3]
 898 0008 0222     		mov	r2, #2
 899 000a 1340     		and	r3, r2
2169:Generated_Source\PSoC4/CyLib.c ****     }
ARM GAS  C:\Users\akita\AppData\Local\Temp\ccaIVzD4.s 			page 55


 900              		.loc 1 2169 0
 901 000c 181C     		mov	r0, r3
 902 000e BD46     		mov	sp, r7
 903              		@ sp needed
 904 0010 80BD     		pop	{r7, pc}
 905              	.L54:
 906 0012 C046     		.align	2
 907              	.L53:
 908 0014 04000B40 		.word	1074462724
 909              		.cfi_endproc
 910              	.LFE15:
 911              		.size	CySysLvdGetInterruptSource, .-CySysLvdGetInterruptSource
 912              		.section	.text.CySysLvdClearInterrupt,"ax",%progbits
 913              		.align	2
 914              		.global	CySysLvdClearInterrupt
 915              		.code	16
 916              		.thumb_func
 917              		.type	CySysLvdClearInterrupt, %function
 918              	CySysLvdClearInterrupt:
 919              	.LFB16:
2170:Generated_Source\PSoC4/CyLib.c **** 
2171:Generated_Source\PSoC4/CyLib.c **** 
2172:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
2173:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysLvdClearInterrupt
2174:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
2175:Generated_Source\PSoC4/CyLib.c ****     *
2176:Generated_Source\PSoC4/CyLib.c ****     *  Clears the low voltage detection interrupt status.
2177:Generated_Source\PSoC4/CyLib.c ****     *
2178:Generated_Source\PSoC4/CyLib.c ****     * \return
2179:Generated_Source\PSoC4/CyLib.c ****     *  None
2180:Generated_Source\PSoC4/CyLib.c ****     *
2181:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
2182:Generated_Source\PSoC4/CyLib.c ****     void CySysLvdClearInterrupt(void)
2183:Generated_Source\PSoC4/CyLib.c ****     {
 920              		.loc 1 2183 0
 921              		.cfi_startproc
 922 0000 80B5     		push	{r7, lr}
 923              		.cfi_def_cfa_offset 8
 924              		.cfi_offset 7, -8
 925              		.cfi_offset 14, -4
 926 0002 00AF     		add	r7, sp, #0
 927              		.cfi_def_cfa_register 7
2184:Generated_Source\PSoC4/CyLib.c ****         CY_LVD_PWR_INTR_REG = CY_SYS_LVD_INT;
 928              		.loc 1 2184 0
 929 0004 024B     		ldr	r3, .L56
 930 0006 0222     		mov	r2, #2
 931 0008 1A60     		str	r2, [r3]
2185:Generated_Source\PSoC4/CyLib.c ****     }
 932              		.loc 1 2185 0
 933 000a BD46     		mov	sp, r7
 934              		@ sp needed
 935 000c 80BD     		pop	{r7, pc}
 936              	.L57:
 937 000e C046     		.align	2
 938              	.L56:
 939 0010 04000B40 		.word	1074462724
 940              		.cfi_endproc
ARM GAS  C:\Users\akita\AppData\Local\Temp\ccaIVzD4.s 			page 56


 941              	.LFE16:
 942              		.size	CySysLvdClearInterrupt, .-CySysLvdClearInterrupt
 943              		.section	.text.CySysGetResetReason,"ax",%progbits
 944              		.align	2
 945              		.global	CySysGetResetReason
 946              		.code	16
 947              		.thumb_func
 948              		.type	CySysGetResetReason, %function
 949              	CySysGetResetReason:
 950              	.LFB17:
2186:Generated_Source\PSoC4/CyLib.c **** 
2187:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_SRSSV2) */
2188:Generated_Source\PSoC4/CyLib.c **** 
2189:Generated_Source\PSoC4/CyLib.c **** 
2190:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2191:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysGetResetReason
2192:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2193:Generated_Source\PSoC4/CyLib.c **** *
2194:Generated_Source\PSoC4/CyLib.c **** *  Reports the cause for the latest reset(s) that occurred in the system. All
2195:Generated_Source\PSoC4/CyLib.c **** *  the bits in the RES_CAUSE register assert when the corresponding reset cause
2196:Generated_Source\PSoC4/CyLib.c **** *  occurs and must be cleared by the firmware. These bits are cleared by the
2197:Generated_Source\PSoC4/CyLib.c **** *  hardware only during XRES, POR, or a detected brown-out.
2198:Generated_Source\PSoC4/CyLib.c **** *
2199:Generated_Source\PSoC4/CyLib.c **** *  \param reason: bits in the RES_CAUSE register to clear.
2200:Generated_Source\PSoC4/CyLib.c **** *   CY_SYS_RESET_WDT       - WDT caused a reset
2201:Generated_Source\PSoC4/CyLib.c **** *   CY_SYS_RESET_PROTFAULT - Occured protection violation that requires reset
2202:Generated_Source\PSoC4/CyLib.c **** *   CY_SYS_RESET_SW        - Cortex-M0 requested a system reset.
2203:Generated_Source\PSoC4/CyLib.c **** *
2204:Generated_Source\PSoC4/CyLib.c **** * \return
2205:Generated_Source\PSoC4/CyLib.c **** *  Status. Same enumerated bit values as used for the reason parameter.
2206:Generated_Source\PSoC4/CyLib.c **** *
2207:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2208:Generated_Source\PSoC4/CyLib.c **** uint32 CySysGetResetReason(uint32 reason)
2209:Generated_Source\PSoC4/CyLib.c **** {
 951              		.loc 1 2209 0
 952              		.cfi_startproc
 953 0000 80B5     		push	{r7, lr}
 954              		.cfi_def_cfa_offset 8
 955              		.cfi_offset 7, -8
 956              		.cfi_offset 14, -4
 957 0002 84B0     		sub	sp, sp, #16
 958              		.cfi_def_cfa_offset 24
 959 0004 00AF     		add	r7, sp, #0
 960              		.cfi_def_cfa_register 7
 961 0006 7860     		str	r0, [r7, #4]
2210:Generated_Source\PSoC4/CyLib.c ****     uint32 returnStatus;
2211:Generated_Source\PSoC4/CyLib.c **** 
2212:Generated_Source\PSoC4/CyLib.c ****     reason &= (CY_SYS_RESET_WDT | CY_SYS_RESET_PROTFAULT | CY_SYS_RESET_SW);
 962              		.loc 1 2212 0
 963 0008 7B68     		ldr	r3, [r7, #4]
 964 000a 1922     		mov	r2, #25
 965 000c 1340     		and	r3, r2
 966 000e 7B60     		str	r3, [r7, #4]
2213:Generated_Source\PSoC4/CyLib.c ****     returnStatus = CY_SYS_RES_CAUSE_REG &
 967              		.loc 1 2213 0
 968 0010 064B     		ldr	r3, .L60
 969 0012 1B68     		ldr	r3, [r3]
ARM GAS  C:\Users\akita\AppData\Local\Temp\ccaIVzD4.s 			page 57


 970 0014 1922     		mov	r2, #25
 971 0016 1340     		and	r3, r2
 972 0018 FB60     		str	r3, [r7, #12]
2214:Generated_Source\PSoC4/CyLib.c ****                   (CY_SYS_RESET_WDT | CY_SYS_RESET_PROTFAULT | CY_SYS_RESET_SW);
2215:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_RES_CAUSE_REG = reason;
 973              		.loc 1 2215 0
 974 001a 044B     		ldr	r3, .L60
 975 001c 7A68     		ldr	r2, [r7, #4]
 976 001e 1A60     		str	r2, [r3]
2216:Generated_Source\PSoC4/CyLib.c **** 
2217:Generated_Source\PSoC4/CyLib.c ****     return (returnStatus);
 977              		.loc 1 2217 0
 978 0020 FB68     		ldr	r3, [r7, #12]
2218:Generated_Source\PSoC4/CyLib.c **** }
 979              		.loc 1 2218 0
 980 0022 181C     		mov	r0, r3
 981 0024 BD46     		mov	sp, r7
 982 0026 04B0     		add	sp, sp, #16
 983              		@ sp needed
 984 0028 80BD     		pop	{r7, pc}
 985              	.L61:
 986 002a C046     		.align	2
 987              	.L60:
 988 002c 00030B40 		.word	1074463488
 989              		.cfi_endproc
 990              	.LFE17:
 991              		.size	CySysGetResetReason, .-CySysGetResetReason
 992              		.section	.text.CyDisableInts,"ax",%progbits
 993              		.align	2
 994              		.global	CyDisableInts
 995              		.code	16
 996              		.thumb_func
 997              		.type	CyDisableInts, %function
 998              	CyDisableInts:
 999              	.LFB18:
2219:Generated_Source\PSoC4/CyLib.c **** 
2220:Generated_Source\PSoC4/CyLib.c **** 
2221:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2222:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyDisableInts
2223:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2224:Generated_Source\PSoC4/CyLib.c **** *
2225:Generated_Source\PSoC4/CyLib.c **** *  Disables all interrupts.
2226:Generated_Source\PSoC4/CyLib.c **** *
2227:Generated_Source\PSoC4/CyLib.c **** * \return
2228:Generated_Source\PSoC4/CyLib.c **** *  32 bit mask of previously enabled interrupts.
2229:Generated_Source\PSoC4/CyLib.c **** *
2230:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2231:Generated_Source\PSoC4/CyLib.c **** uint32 CyDisableInts(void)
2232:Generated_Source\PSoC4/CyLib.c **** {
 1000              		.loc 1 2232 0
 1001              		.cfi_startproc
 1002 0000 80B5     		push	{r7, lr}
 1003              		.cfi_def_cfa_offset 8
 1004              		.cfi_offset 7, -8
 1005              		.cfi_offset 14, -4
 1006 0002 82B0     		sub	sp, sp, #8
 1007              		.cfi_def_cfa_offset 16
ARM GAS  C:\Users\akita\AppData\Local\Temp\ccaIVzD4.s 			page 58


 1008 0004 00AF     		add	r7, sp, #0
 1009              		.cfi_def_cfa_register 7
2233:Generated_Source\PSoC4/CyLib.c ****     uint32 intState;
2234:Generated_Source\PSoC4/CyLib.c **** 
2235:Generated_Source\PSoC4/CyLib.c ****     /* Get current interrupt state. */
2236:Generated_Source\PSoC4/CyLib.c ****     intState = CY_INT_CLEAR_REG;
 1010              		.loc 1 2236 0
 1011 0006 064B     		ldr	r3, .L64
 1012 0008 1B68     		ldr	r3, [r3]
 1013 000a 7B60     		str	r3, [r7, #4]
2237:Generated_Source\PSoC4/CyLib.c **** 
2238:Generated_Source\PSoC4/CyLib.c ****     /* Disable all interrupts. */
2239:Generated_Source\PSoC4/CyLib.c ****     CY_INT_CLEAR_REG = CY_INT_CLEAR_DISABLE_ALL;
 1014              		.loc 1 2239 0
 1015 000c 044B     		ldr	r3, .L64
 1016 000e 0122     		mov	r2, #1
 1017 0010 5242     		neg	r2, r2
 1018 0012 1A60     		str	r2, [r3]
2240:Generated_Source\PSoC4/CyLib.c **** 
2241:Generated_Source\PSoC4/CyLib.c ****     return (intState);
 1019              		.loc 1 2241 0
 1020 0014 7B68     		ldr	r3, [r7, #4]
2242:Generated_Source\PSoC4/CyLib.c **** }
 1021              		.loc 1 2242 0
 1022 0016 181C     		mov	r0, r3
 1023 0018 BD46     		mov	sp, r7
 1024 001a 02B0     		add	sp, sp, #8
 1025              		@ sp needed
 1026 001c 80BD     		pop	{r7, pc}
 1027              	.L65:
 1028 001e C046     		.align	2
 1029              	.L64:
 1030 0020 80E100E0 		.word	-536813184
 1031              		.cfi_endproc
 1032              	.LFE18:
 1033              		.size	CyDisableInts, .-CyDisableInts
 1034              		.section	.text.CyEnableInts,"ax",%progbits
 1035              		.align	2
 1036              		.global	CyEnableInts
 1037              		.code	16
 1038              		.thumb_func
 1039              		.type	CyEnableInts, %function
 1040              	CyEnableInts:
 1041              	.LFB19:
2243:Generated_Source\PSoC4/CyLib.c **** 
2244:Generated_Source\PSoC4/CyLib.c **** 
2245:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2246:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyEnableInts
2247:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2248:Generated_Source\PSoC4/CyLib.c **** *
2249:Generated_Source\PSoC4/CyLib.c **** *  Enables interrupts to a given state.
2250:Generated_Source\PSoC4/CyLib.c **** *
2251:Generated_Source\PSoC4/CyLib.c **** *  \param mask The 32 bit mask of interrupts to enable.
2252:Generated_Source\PSoC4/CyLib.c **** *
2253:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2254:Generated_Source\PSoC4/CyLib.c **** void CyEnableInts(uint32 mask)
2255:Generated_Source\PSoC4/CyLib.c **** {
ARM GAS  C:\Users\akita\AppData\Local\Temp\ccaIVzD4.s 			page 59


 1042              		.loc 1 2255 0
 1043              		.cfi_startproc
 1044 0000 80B5     		push	{r7, lr}
 1045              		.cfi_def_cfa_offset 8
 1046              		.cfi_offset 7, -8
 1047              		.cfi_offset 14, -4
 1048 0002 82B0     		sub	sp, sp, #8
 1049              		.cfi_def_cfa_offset 16
 1050 0004 00AF     		add	r7, sp, #0
 1051              		.cfi_def_cfa_register 7
 1052 0006 7860     		str	r0, [r7, #4]
2256:Generated_Source\PSoC4/CyLib.c ****     CY_INT_ENABLE_REG = mask;
 1053              		.loc 1 2256 0
 1054 0008 024B     		ldr	r3, .L67
 1055 000a 7A68     		ldr	r2, [r7, #4]
 1056 000c 1A60     		str	r2, [r3]
2257:Generated_Source\PSoC4/CyLib.c **** }
 1057              		.loc 1 2257 0
 1058 000e BD46     		mov	sp, r7
 1059 0010 02B0     		add	sp, sp, #8
 1060              		@ sp needed
 1061 0012 80BD     		pop	{r7, pc}
 1062              	.L68:
 1063              		.align	2
 1064              	.L67:
 1065 0014 00E100E0 		.word	-536813312
 1066              		.cfi_endproc
 1067              	.LFE19:
 1068              		.size	CyEnableInts, .-CyEnableInts
 1069              		.section	.text.CyIntSetSysVector,"ax",%progbits
 1070              		.align	2
 1071              		.global	CyIntSetSysVector
 1072              		.code	16
 1073              		.thumb_func
 1074              		.type	CyIntSetSysVector, %function
 1075              	CyIntSetSysVector:
 1076              	.LFB20:
2258:Generated_Source\PSoC4/CyLib.c **** 
2259:Generated_Source\PSoC4/CyLib.c **** 
2260:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2261:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntSetSysVector
2262:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2263:Generated_Source\PSoC4/CyLib.c **** *
2264:Generated_Source\PSoC4/CyLib.c **** *  Sets the interrupt vector of the specified system interrupt number. These
2265:Generated_Source\PSoC4/CyLib.c **** *  interrupts are for SysTick, PendSV and others.
2266:Generated_Source\PSoC4/CyLib.c **** *
2267:Generated_Source\PSoC4/CyLib.c **** *  \param number: System interrupt number:
2268:Generated_Source\PSoC4/CyLib.c **** *    CY_INT_NMI_IRQN        - Non Maskable Interrupt
2269:Generated_Source\PSoC4/CyLib.c **** *    CY_INT_HARD_FAULT_IRQN - Hard Fault Interrupt
2270:Generated_Source\PSoC4/CyLib.c **** *    CY_INT_SVCALL_IRQN     - SV Call Interrupt
2271:Generated_Source\PSoC4/CyLib.c **** *    CY_INT_PEND_SV_IRQN    - Pend SV Interrupt
2272:Generated_Source\PSoC4/CyLib.c **** *    CY_INT_SYSTICK_IRQN    - System Tick Interrupt
2273:Generated_Source\PSoC4/CyLib.c **** *
2274:Generated_Source\PSoC4/CyLib.c **** *  \param address Pointer to an interrupt service routine.
2275:Generated_Source\PSoC4/CyLib.c **** *
2276:Generated_Source\PSoC4/CyLib.c **** * \return The old ISR vector at this location.
2277:Generated_Source\PSoC4/CyLib.c **** *
ARM GAS  C:\Users\akita\AppData\Local\Temp\ccaIVzD4.s 			page 60


2278:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2279:Generated_Source\PSoC4/CyLib.c **** cyisraddress CyIntSetSysVector(uint8 number, cyisraddress address)
2280:Generated_Source\PSoC4/CyLib.c **** {
 1077              		.loc 1 2280 0
 1078              		.cfi_startproc
 1079 0000 80B5     		push	{r7, lr}
 1080              		.cfi_def_cfa_offset 8
 1081              		.cfi_offset 7, -8
 1082              		.cfi_offset 14, -4
 1083 0002 84B0     		sub	sp, sp, #16
 1084              		.cfi_def_cfa_offset 24
 1085 0004 00AF     		add	r7, sp, #0
 1086              		.cfi_def_cfa_register 7
 1087 0006 021C     		mov	r2, r0
 1088 0008 3960     		str	r1, [r7]
 1089 000a FB1D     		add	r3, r7, #7
 1090 000c 1A70     		strb	r2, [r3]
2281:Generated_Source\PSoC4/CyLib.c ****     cyisraddress oldIsr;
2282:Generated_Source\PSoC4/CyLib.c ****     cyisraddress *ramVectorTable = (cyisraddress *) CY_INT_VECT_TABLE;
 1091              		.loc 1 2282 0
 1092 000e 8023     		mov	r3, #128
 1093 0010 9B05     		lsl	r3, r3, #22
 1094 0012 FB60     		str	r3, [r7, #12]
2283:Generated_Source\PSoC4/CyLib.c **** 
2284:Generated_Source\PSoC4/CyLib.c ****     CYASSERT(number < CY_INT_IRQ_BASE);
 1095              		.loc 1 2284 0
 1096 0014 FB1D     		add	r3, r7, #7
 1097 0016 1B78     		ldrb	r3, [r3]
 1098 0018 0F2B     		cmp	r3, #15
 1099 001a 02D9     		bls	.L70
 1100              		.loc 1 2284 0 is_stmt 0 discriminator 1
 1101 001c 0020     		mov	r0, #0
 1102 001e FFF7FEFF 		bl	CyHalt
 1103              	.L70:
2285:Generated_Source\PSoC4/CyLib.c **** 
2286:Generated_Source\PSoC4/CyLib.c ****     /* Save old Interrupt service routine. */
2287:Generated_Source\PSoC4/CyLib.c ****     oldIsr = ramVectorTable[number];
 1104              		.loc 1 2287 0 is_stmt 1
 1105 0022 FB1D     		add	r3, r7, #7
 1106 0024 1B78     		ldrb	r3, [r3]
 1107 0026 9B00     		lsl	r3, r3, #2
 1108 0028 FA68     		ldr	r2, [r7, #12]
 1109 002a D318     		add	r3, r2, r3
 1110 002c 1B68     		ldr	r3, [r3]
 1111 002e BB60     		str	r3, [r7, #8]
2288:Generated_Source\PSoC4/CyLib.c **** 
2289:Generated_Source\PSoC4/CyLib.c ****     /* Set new Interrupt service routine. */
2290:Generated_Source\PSoC4/CyLib.c ****     ramVectorTable[number] = address;
 1112              		.loc 1 2290 0
 1113 0030 FB1D     		add	r3, r7, #7
 1114 0032 1B78     		ldrb	r3, [r3]
 1115 0034 9B00     		lsl	r3, r3, #2
 1116 0036 FA68     		ldr	r2, [r7, #12]
 1117 0038 D318     		add	r3, r2, r3
 1118 003a 3A68     		ldr	r2, [r7]
 1119 003c 1A60     		str	r2, [r3]
2291:Generated_Source\PSoC4/CyLib.c **** 
ARM GAS  C:\Users\akita\AppData\Local\Temp\ccaIVzD4.s 			page 61


2292:Generated_Source\PSoC4/CyLib.c ****     return(oldIsr);
 1120              		.loc 1 2292 0
 1121 003e BB68     		ldr	r3, [r7, #8]
2293:Generated_Source\PSoC4/CyLib.c **** }
 1122              		.loc 1 2293 0
 1123 0040 181C     		mov	r0, r3
 1124 0042 BD46     		mov	sp, r7
 1125 0044 04B0     		add	sp, sp, #16
 1126              		@ sp needed
 1127 0046 80BD     		pop	{r7, pc}
 1128              		.cfi_endproc
 1129              	.LFE20:
 1130              		.size	CyIntSetSysVector, .-CyIntSetSysVector
 1131              		.section	.text.CyIntGetSysVector,"ax",%progbits
 1132              		.align	2
 1133              		.global	CyIntGetSysVector
 1134              		.code	16
 1135              		.thumb_func
 1136              		.type	CyIntGetSysVector, %function
 1137              	CyIntGetSysVector:
 1138              	.LFB21:
2294:Generated_Source\PSoC4/CyLib.c **** 
2295:Generated_Source\PSoC4/CyLib.c **** 
2296:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2297:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntGetSysVector
2298:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2299:Generated_Source\PSoC4/CyLib.c **** *
2300:Generated_Source\PSoC4/CyLib.c **** *   Gets the interrupt vector of the specified system interrupt number. These
2301:Generated_Source\PSoC4/CyLib.c **** *   interrupts are for SysTick, PendSV and others.
2302:Generated_Source\PSoC4/CyLib.c **** *
2303:Generated_Source\PSoC4/CyLib.c **** *  \param number: System interrupt number:
2304:Generated_Source\PSoC4/CyLib.c **** *    CY_INT_NMI_IRQN        - Non Maskable Interrupt
2305:Generated_Source\PSoC4/CyLib.c **** *    CY_INT_HARD_FAULT_IRQN - Hard Fault Interrupt
2306:Generated_Source\PSoC4/CyLib.c **** *    CY_INT_SVCALL_IRQN     - SV Call Interrupt
2307:Generated_Source\PSoC4/CyLib.c **** *    CY_INT_PEND_SV_IRQN    - Pend SV Interrupt
2308:Generated_Source\PSoC4/CyLib.c **** *    CY_INT_SYSTICK_IRQN    - System Tick Interrupt
2309:Generated_Source\PSoC4/CyLib.c **** *
2310:Generated_Source\PSoC4/CyLib.c **** * \return Address of the ISR in the interrupt vector table.
2311:Generated_Source\PSoC4/CyLib.c **** *
2312:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2313:Generated_Source\PSoC4/CyLib.c **** cyisraddress CyIntGetSysVector(uint8 number)
2314:Generated_Source\PSoC4/CyLib.c **** {
 1139              		.loc 1 2314 0
 1140              		.cfi_startproc
 1141 0000 80B5     		push	{r7, lr}
 1142              		.cfi_def_cfa_offset 8
 1143              		.cfi_offset 7, -8
 1144              		.cfi_offset 14, -4
 1145 0002 84B0     		sub	sp, sp, #16
 1146              		.cfi_def_cfa_offset 24
 1147 0004 00AF     		add	r7, sp, #0
 1148              		.cfi_def_cfa_register 7
 1149 0006 021C     		mov	r2, r0
 1150 0008 FB1D     		add	r3, r7, #7
 1151 000a 1A70     		strb	r2, [r3]
2315:Generated_Source\PSoC4/CyLib.c ****     cyisraddress *ramVectorTable = (cyisraddress *) CY_INT_VECT_TABLE;
 1152              		.loc 1 2315 0
ARM GAS  C:\Users\akita\AppData\Local\Temp\ccaIVzD4.s 			page 62


 1153 000c 8023     		mov	r3, #128
 1154 000e 9B05     		lsl	r3, r3, #22
 1155 0010 FB60     		str	r3, [r7, #12]
2316:Generated_Source\PSoC4/CyLib.c **** 
2317:Generated_Source\PSoC4/CyLib.c ****     CYASSERT(number < CY_INT_IRQ_BASE);
 1156              		.loc 1 2317 0
 1157 0012 FB1D     		add	r3, r7, #7
 1158 0014 1B78     		ldrb	r3, [r3]
 1159 0016 0F2B     		cmp	r3, #15
 1160 0018 02D9     		bls	.L73
 1161              		.loc 1 2317 0 is_stmt 0 discriminator 1
 1162 001a 0020     		mov	r0, #0
 1163 001c FFF7FEFF 		bl	CyHalt
 1164              	.L73:
2318:Generated_Source\PSoC4/CyLib.c **** 
2319:Generated_Source\PSoC4/CyLib.c ****     return(ramVectorTable[number]);
 1165              		.loc 1 2319 0 is_stmt 1
 1166 0020 FB1D     		add	r3, r7, #7
 1167 0022 1B78     		ldrb	r3, [r3]
 1168 0024 9B00     		lsl	r3, r3, #2
 1169 0026 FA68     		ldr	r2, [r7, #12]
 1170 0028 D318     		add	r3, r2, r3
 1171 002a 1B68     		ldr	r3, [r3]
2320:Generated_Source\PSoC4/CyLib.c **** }
 1172              		.loc 1 2320 0
 1173 002c 181C     		mov	r0, r3
 1174 002e BD46     		mov	sp, r7
 1175 0030 04B0     		add	sp, sp, #16
 1176              		@ sp needed
 1177 0032 80BD     		pop	{r7, pc}
 1178              		.cfi_endproc
 1179              	.LFE21:
 1180              		.size	CyIntGetSysVector, .-CyIntGetSysVector
 1181              		.section	.text.CyIntSetVector,"ax",%progbits
 1182              		.align	2
 1183              		.global	CyIntSetVector
 1184              		.code	16
 1185              		.thumb_func
 1186              		.type	CyIntSetVector, %function
 1187              	CyIntSetVector:
 1188              	.LFB22:
2321:Generated_Source\PSoC4/CyLib.c **** 
2322:Generated_Source\PSoC4/CyLib.c **** 
2323:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2324:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntSetVector
2325:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2326:Generated_Source\PSoC4/CyLib.c **** *
2327:Generated_Source\PSoC4/CyLib.c **** *  Sets the interrupt vector of the specified interrupt number.
2328:Generated_Source\PSoC4/CyLib.c **** *
2329:Generated_Source\PSoC4/CyLib.c **** *  \param number Valid range [0-31].  Interrupt number
2330:Generated_Source\PSoC4/CyLib.c **** *  \param address Pointer to an interrupt service routine
2331:Generated_Source\PSoC4/CyLib.c **** *
2332:Generated_Source\PSoC4/CyLib.c **** * \return Previous interrupt vector value.
2333:Generated_Source\PSoC4/CyLib.c **** *
2334:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2335:Generated_Source\PSoC4/CyLib.c **** cyisraddress CyIntSetVector(uint8 number, cyisraddress address)
2336:Generated_Source\PSoC4/CyLib.c **** {
ARM GAS  C:\Users\akita\AppData\Local\Temp\ccaIVzD4.s 			page 63


 1189              		.loc 1 2336 0
 1190              		.cfi_startproc
 1191 0000 80B5     		push	{r7, lr}
 1192              		.cfi_def_cfa_offset 8
 1193              		.cfi_offset 7, -8
 1194              		.cfi_offset 14, -4
 1195 0002 84B0     		sub	sp, sp, #16
 1196              		.cfi_def_cfa_offset 24
 1197 0004 00AF     		add	r7, sp, #0
 1198              		.cfi_def_cfa_register 7
 1199 0006 021C     		mov	r2, r0
 1200 0008 3960     		str	r1, [r7]
 1201 000a FB1D     		add	r3, r7, #7
 1202 000c 1A70     		strb	r2, [r3]
2337:Generated_Source\PSoC4/CyLib.c ****     cyisraddress oldIsr;
2338:Generated_Source\PSoC4/CyLib.c ****     cyisraddress *ramVectorTable = (cyisraddress *) CY_INT_VECT_TABLE;
 1203              		.loc 1 2338 0
 1204 000e 8023     		mov	r3, #128
 1205 0010 9B05     		lsl	r3, r3, #22
 1206 0012 FB60     		str	r3, [r7, #12]
2339:Generated_Source\PSoC4/CyLib.c **** 
2340:Generated_Source\PSoC4/CyLib.c ****     CYASSERT(number < CY_NUM_INTERRUPTS);
 1207              		.loc 1 2340 0
 1208 0014 FB1D     		add	r3, r7, #7
 1209 0016 1B78     		ldrb	r3, [r3]
 1210 0018 1F2B     		cmp	r3, #31
 1211 001a 02D9     		bls	.L76
 1212              		.loc 1 2340 0 is_stmt 0 discriminator 1
 1213 001c 0020     		mov	r0, #0
 1214 001e FFF7FEFF 		bl	CyHalt
 1215              	.L76:
2341:Generated_Source\PSoC4/CyLib.c **** 
2342:Generated_Source\PSoC4/CyLib.c ****     /* Save old Interrupt service routine. */
2343:Generated_Source\PSoC4/CyLib.c ****     oldIsr = ramVectorTable[CY_INT_IRQ_BASE + number];
 1216              		.loc 1 2343 0 is_stmt 1
 1217 0022 FB1D     		add	r3, r7, #7
 1218 0024 1B78     		ldrb	r3, [r3]
 1219 0026 1033     		add	r3, r3, #16
 1220 0028 9B00     		lsl	r3, r3, #2
 1221 002a FA68     		ldr	r2, [r7, #12]
 1222 002c D318     		add	r3, r2, r3
 1223 002e 1B68     		ldr	r3, [r3]
 1224 0030 BB60     		str	r3, [r7, #8]
2344:Generated_Source\PSoC4/CyLib.c **** 
2345:Generated_Source\PSoC4/CyLib.c ****     /* Set new Interrupt service routine. */
2346:Generated_Source\PSoC4/CyLib.c ****     ramVectorTable[CY_INT_IRQ_BASE + number] = address;
 1225              		.loc 1 2346 0
 1226 0032 FB1D     		add	r3, r7, #7
 1227 0034 1B78     		ldrb	r3, [r3]
 1228 0036 1033     		add	r3, r3, #16
 1229 0038 9B00     		lsl	r3, r3, #2
 1230 003a FA68     		ldr	r2, [r7, #12]
 1231 003c D318     		add	r3, r2, r3
 1232 003e 3A68     		ldr	r2, [r7]
 1233 0040 1A60     		str	r2, [r3]
2347:Generated_Source\PSoC4/CyLib.c **** 
2348:Generated_Source\PSoC4/CyLib.c ****     return(oldIsr);
ARM GAS  C:\Users\akita\AppData\Local\Temp\ccaIVzD4.s 			page 64


 1234              		.loc 1 2348 0
 1235 0042 BB68     		ldr	r3, [r7, #8]
2349:Generated_Source\PSoC4/CyLib.c **** }
 1236              		.loc 1 2349 0
 1237 0044 181C     		mov	r0, r3
 1238 0046 BD46     		mov	sp, r7
 1239 0048 04B0     		add	sp, sp, #16
 1240              		@ sp needed
 1241 004a 80BD     		pop	{r7, pc}
 1242              		.cfi_endproc
 1243              	.LFE22:
 1244              		.size	CyIntSetVector, .-CyIntSetVector
 1245              		.section	.text.CyIntGetVector,"ax",%progbits
 1246              		.align	2
 1247              		.global	CyIntGetVector
 1248              		.code	16
 1249              		.thumb_func
 1250              		.type	CyIntGetVector, %function
 1251              	CyIntGetVector:
 1252              	.LFB23:
2350:Generated_Source\PSoC4/CyLib.c **** 
2351:Generated_Source\PSoC4/CyLib.c **** 
2352:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2353:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntGetVector
2354:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2355:Generated_Source\PSoC4/CyLib.c **** *
2356:Generated_Source\PSoC4/CyLib.c **** *  Gets the interrupt vector of the specified interrupt number.
2357:Generated_Source\PSoC4/CyLib.c **** *
2358:Generated_Source\PSoC4/CyLib.c **** *  \param number: Valid range [0-31].  Interrupt number
2359:Generated_Source\PSoC4/CyLib.c **** *
2360:Generated_Source\PSoC4/CyLib.c **** * \return Address of the ISR in the interrupt vector table.
2361:Generated_Source\PSoC4/CyLib.c **** *
2362:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2363:Generated_Source\PSoC4/CyLib.c **** cyisraddress CyIntGetVector(uint8 number)
2364:Generated_Source\PSoC4/CyLib.c **** {
 1253              		.loc 1 2364 0
 1254              		.cfi_startproc
 1255 0000 80B5     		push	{r7, lr}
 1256              		.cfi_def_cfa_offset 8
 1257              		.cfi_offset 7, -8
 1258              		.cfi_offset 14, -4
 1259 0002 84B0     		sub	sp, sp, #16
 1260              		.cfi_def_cfa_offset 24
 1261 0004 00AF     		add	r7, sp, #0
 1262              		.cfi_def_cfa_register 7
 1263 0006 021C     		mov	r2, r0
 1264 0008 FB1D     		add	r3, r7, #7
 1265 000a 1A70     		strb	r2, [r3]
2365:Generated_Source\PSoC4/CyLib.c ****     cyisraddress *ramVectorTable = (cyisraddress *) CY_INT_VECT_TABLE;
 1266              		.loc 1 2365 0
 1267 000c 8023     		mov	r3, #128
 1268 000e 9B05     		lsl	r3, r3, #22
 1269 0010 FB60     		str	r3, [r7, #12]
2366:Generated_Source\PSoC4/CyLib.c **** 
2367:Generated_Source\PSoC4/CyLib.c ****     CYASSERT(number < CY_NUM_INTERRUPTS);
 1270              		.loc 1 2367 0
 1271 0012 FB1D     		add	r3, r7, #7
ARM GAS  C:\Users\akita\AppData\Local\Temp\ccaIVzD4.s 			page 65


 1272 0014 1B78     		ldrb	r3, [r3]
 1273 0016 1F2B     		cmp	r3, #31
 1274 0018 02D9     		bls	.L79
 1275              		.loc 1 2367 0 is_stmt 0 discriminator 1
 1276 001a 0020     		mov	r0, #0
 1277 001c FFF7FEFF 		bl	CyHalt
 1278              	.L79:
2368:Generated_Source\PSoC4/CyLib.c **** 
2369:Generated_Source\PSoC4/CyLib.c ****     return (ramVectorTable[CY_INT_IRQ_BASE + number]);
 1279              		.loc 1 2369 0 is_stmt 1
 1280 0020 FB1D     		add	r3, r7, #7
 1281 0022 1B78     		ldrb	r3, [r3]
 1282 0024 1033     		add	r3, r3, #16
 1283 0026 9B00     		lsl	r3, r3, #2
 1284 0028 FA68     		ldr	r2, [r7, #12]
 1285 002a D318     		add	r3, r2, r3
 1286 002c 1B68     		ldr	r3, [r3]
2370:Generated_Source\PSoC4/CyLib.c **** }
 1287              		.loc 1 2370 0
 1288 002e 181C     		mov	r0, r3
 1289 0030 BD46     		mov	sp, r7
 1290 0032 04B0     		add	sp, sp, #16
 1291              		@ sp needed
 1292 0034 80BD     		pop	{r7, pc}
 1293              		.cfi_endproc
 1294              	.LFE23:
 1295              		.size	CyIntGetVector, .-CyIntGetVector
 1296              		.section	.text.CyIntSetPriority,"ax",%progbits
 1297              		.align	2
 1298              		.global	CyIntSetPriority
 1299              		.code	16
 1300              		.thumb_func
 1301              		.type	CyIntSetPriority, %function
 1302              	CyIntSetPriority:
 1303              	.LFB24:
2371:Generated_Source\PSoC4/CyLib.c **** 
2372:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2373:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntSetPriority
2374:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2375:Generated_Source\PSoC4/CyLib.c **** *
2376:Generated_Source\PSoC4/CyLib.c **** *  Sets the priority of the interrupt.
2377:Generated_Source\PSoC4/CyLib.c **** *
2378:Generated_Source\PSoC4/CyLib.c **** *  \param priority: Priority of the interrupt. 0 - 3, 0 being the highest.
2379:Generated_Source\PSoC4/CyLib.c **** *  \param number: The number of the interrupt, 0 - 31.
2380:Generated_Source\PSoC4/CyLib.c **** *
2381:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2382:Generated_Source\PSoC4/CyLib.c **** void CyIntSetPriority(uint8 number, uint8 priority)
2383:Generated_Source\PSoC4/CyLib.c **** {
 1304              		.loc 1 2383 0
 1305              		.cfi_startproc
 1306 0000 90B5     		push	{r4, r7, lr}
 1307              		.cfi_def_cfa_offset 12
 1308              		.cfi_offset 4, -12
 1309              		.cfi_offset 7, -8
 1310              		.cfi_offset 14, -4
 1311 0002 87B0     		sub	sp, sp, #28
 1312              		.cfi_def_cfa_offset 40
ARM GAS  C:\Users\akita\AppData\Local\Temp\ccaIVzD4.s 			page 66


 1313 0004 00AF     		add	r7, sp, #0
 1314              		.cfi_def_cfa_register 7
 1315 0006 021C     		mov	r2, r0
 1316 0008 FB1D     		add	r3, r7, #7
 1317 000a 1A70     		strb	r2, [r3]
 1318 000c BB1D     		add	r3, r7, #6
 1319 000e 0A1C     		add	r2, r1, #0
 1320 0010 1A70     		strb	r2, [r3]
2384:Generated_Source\PSoC4/CyLib.c ****     uint8 interruptState;
2385:Generated_Source\PSoC4/CyLib.c ****     uint32 shift;
2386:Generated_Source\PSoC4/CyLib.c ****     uint32 value;
2387:Generated_Source\PSoC4/CyLib.c **** 
2388:Generated_Source\PSoC4/CyLib.c ****     CYASSERT(priority <= CY_MIN_PRIORITY);
 1321              		.loc 1 2388 0
 1322 0012 BB1D     		add	r3, r7, #6
 1323 0014 1B78     		ldrb	r3, [r3]
 1324 0016 032B     		cmp	r3, #3
 1325 0018 02D9     		bls	.L82
 1326              		.loc 1 2388 0 is_stmt 0 discriminator 1
 1327 001a 0020     		mov	r0, #0
 1328 001c FFF7FEFF 		bl	CyHalt
 1329              	.L82:
2389:Generated_Source\PSoC4/CyLib.c ****     CYASSERT(number < CY_NUM_INTERRUPTS);
 1330              		.loc 1 2389 0 is_stmt 1
 1331 0020 FB1D     		add	r3, r7, #7
 1332 0022 1B78     		ldrb	r3, [r3]
 1333 0024 1F2B     		cmp	r3, #31
 1334 0026 02D9     		bls	.L83
 1335              		.loc 1 2389 0 is_stmt 0 discriminator 1
 1336 0028 0020     		mov	r0, #0
 1337 002a FFF7FEFF 		bl	CyHalt
 1338              	.L83:
2390:Generated_Source\PSoC4/CyLib.c **** 
2391:Generated_Source\PSoC4/CyLib.c ****     shift = CY_INT_PRIORITY_SHIFT(number);
 1339              		.loc 1 2391 0 is_stmt 1
 1340 002e FB1D     		add	r3, r7, #7
 1341 0030 1B78     		ldrb	r3, [r3]
 1342 0032 0322     		mov	r2, #3
 1343 0034 1340     		and	r3, r2
 1344 0036 DB00     		lsl	r3, r3, #3
 1345 0038 0633     		add	r3, r3, #6
 1346 003a 7B61     		str	r3, [r7, #20]
2392:Generated_Source\PSoC4/CyLib.c **** 
2393:Generated_Source\PSoC4/CyLib.c ****     interruptState = CyEnterCriticalSection();
 1347              		.loc 1 2393 0
 1348 003c 1323     		mov	r3, #19
 1349 003e FC18     		add	r4, r7, r3
 1350 0040 FFF7FEFF 		bl	CyEnterCriticalSection
 1351 0044 031C     		mov	r3, r0
 1352 0046 2370     		strb	r3, [r4]
2394:Generated_Source\PSoC4/CyLib.c **** 
2395:Generated_Source\PSoC4/CyLib.c ****     value = CY_INT_PRIORITY_REG(number);
 1353              		.loc 1 2395 0
 1354 0048 FB1D     		add	r3, r7, #7
 1355 004a 1B78     		ldrb	r3, [r3]
 1356 004c 9B08     		lsr	r3, r3, #2
 1357 004e DBB2     		uxtb	r3, r3
ARM GAS  C:\Users\akita\AppData\Local\Temp\ccaIVzD4.s 			page 67


 1358 0050 9B00     		lsl	r3, r3, #2
 1359 0052 144A     		ldr	r2, .L84
 1360 0054 9446     		mov	ip, r2
 1361 0056 6344     		add	r3, r3, ip
 1362 0058 1B68     		ldr	r3, [r3]
 1363 005a FB60     		str	r3, [r7, #12]
2396:Generated_Source\PSoC4/CyLib.c ****     value &= (uint32)(~((uint32)(CY_INT_PRIORITY_MASK << shift)));
 1364              		.loc 1 2396 0
 1365 005c 7B69     		ldr	r3, [r7, #20]
 1366 005e 0322     		mov	r2, #3
 1367 0060 9A40     		lsl	r2, r2, r3
 1368 0062 131C     		mov	r3, r2
 1369 0064 DA43     		mvn	r2, r3
 1370 0066 FB68     		ldr	r3, [r7, #12]
 1371 0068 1340     		and	r3, r2
 1372 006a FB60     		str	r3, [r7, #12]
2397:Generated_Source\PSoC4/CyLib.c ****     value |= ((uint32)priority << shift);
 1373              		.loc 1 2397 0
 1374 006c BB1D     		add	r3, r7, #6
 1375 006e 1A78     		ldrb	r2, [r3]
 1376 0070 7B69     		ldr	r3, [r7, #20]
 1377 0072 9A40     		lsl	r2, r2, r3
 1378 0074 131C     		mov	r3, r2
 1379 0076 FA68     		ldr	r2, [r7, #12]
 1380 0078 1343     		orr	r3, r2
 1381 007a FB60     		str	r3, [r7, #12]
2398:Generated_Source\PSoC4/CyLib.c ****     CY_INT_PRIORITY_REG(number) = value;
 1382              		.loc 1 2398 0
 1383 007c FB1D     		add	r3, r7, #7
 1384 007e 1B78     		ldrb	r3, [r3]
 1385 0080 9B08     		lsr	r3, r3, #2
 1386 0082 DBB2     		uxtb	r3, r3
 1387 0084 9B00     		lsl	r3, r3, #2
 1388 0086 074A     		ldr	r2, .L84
 1389 0088 9446     		mov	ip, r2
 1390 008a 6344     		add	r3, r3, ip
 1391 008c FA68     		ldr	r2, [r7, #12]
 1392 008e 1A60     		str	r2, [r3]
2399:Generated_Source\PSoC4/CyLib.c **** 
2400:Generated_Source\PSoC4/CyLib.c ****     CyExitCriticalSection(interruptState);
 1393              		.loc 1 2400 0
 1394 0090 1323     		mov	r3, #19
 1395 0092 FB18     		add	r3, r7, r3
 1396 0094 1B78     		ldrb	r3, [r3]
 1397 0096 181C     		mov	r0, r3
 1398 0098 FFF7FEFF 		bl	CyExitCriticalSection
2401:Generated_Source\PSoC4/CyLib.c **** }
 1399              		.loc 1 2401 0
 1400 009c BD46     		mov	sp, r7
 1401 009e 07B0     		add	sp, sp, #28
 1402              		@ sp needed
 1403 00a0 90BD     		pop	{r4, r7, pc}
 1404              	.L85:
 1405 00a2 C046     		.align	2
 1406              	.L84:
 1407 00a4 00E400E0 		.word	-536812544
 1408              		.cfi_endproc
ARM GAS  C:\Users\akita\AppData\Local\Temp\ccaIVzD4.s 			page 68


 1409              	.LFE24:
 1410              		.size	CyIntSetPriority, .-CyIntSetPriority
 1411              		.section	.text.CyIntGetPriority,"ax",%progbits
 1412              		.align	2
 1413              		.global	CyIntGetPriority
 1414              		.code	16
 1415              		.thumb_func
 1416              		.type	CyIntGetPriority, %function
 1417              	CyIntGetPriority:
 1418              	.LFB25:
2402:Generated_Source\PSoC4/CyLib.c **** 
2403:Generated_Source\PSoC4/CyLib.c **** 
2404:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2405:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntGetPriority
2406:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2407:Generated_Source\PSoC4/CyLib.c **** *
2408:Generated_Source\PSoC4/CyLib.c **** *  Gets the priority of the interrupt.
2409:Generated_Source\PSoC4/CyLib.c **** *
2410:Generated_Source\PSoC4/CyLib.c **** *  \param number: The number of the interrupt, 0 - 31.
2411:Generated_Source\PSoC4/CyLib.c **** *
2412:Generated_Source\PSoC4/CyLib.c **** * \return
2413:Generated_Source\PSoC4/CyLib.c **** *  Priority of the interrupt. 0 - 3, 0 being the highest.
2414:Generated_Source\PSoC4/CyLib.c **** *
2415:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2416:Generated_Source\PSoC4/CyLib.c **** uint8 CyIntGetPriority(uint8 number)
2417:Generated_Source\PSoC4/CyLib.c **** {
 1419              		.loc 1 2417 0
 1420              		.cfi_startproc
 1421 0000 80B5     		push	{r7, lr}
 1422              		.cfi_def_cfa_offset 8
 1423              		.cfi_offset 7, -8
 1424              		.cfi_offset 14, -4
 1425 0002 84B0     		sub	sp, sp, #16
 1426              		.cfi_def_cfa_offset 24
 1427 0004 00AF     		add	r7, sp, #0
 1428              		.cfi_def_cfa_register 7
 1429 0006 021C     		mov	r2, r0
 1430 0008 FB1D     		add	r3, r7, #7
 1431 000a 1A70     		strb	r2, [r3]
2418:Generated_Source\PSoC4/CyLib.c ****     uint8 priority;
2419:Generated_Source\PSoC4/CyLib.c **** 
2420:Generated_Source\PSoC4/CyLib.c ****     CYASSERT(number < CY_NUM_INTERRUPTS);
 1432              		.loc 1 2420 0
 1433 000c FB1D     		add	r3, r7, #7
 1434 000e 1B78     		ldrb	r3, [r3]
 1435 0010 1F2B     		cmp	r3, #31
 1436 0012 02D9     		bls	.L87
 1437              		.loc 1 2420 0 is_stmt 0 discriminator 1
 1438 0014 0020     		mov	r0, #0
 1439 0016 FFF7FEFF 		bl	CyHalt
 1440              	.L87:
2421:Generated_Source\PSoC4/CyLib.c **** 
2422:Generated_Source\PSoC4/CyLib.c ****     priority = (uint8) (CY_INT_PRIORITY_REG(number) >> CY_INT_PRIORITY_SHIFT(number));
 1441              		.loc 1 2422 0 is_stmt 1
 1442 001a FB1D     		add	r3, r7, #7
 1443 001c 1B78     		ldrb	r3, [r3]
 1444 001e 9B08     		lsr	r3, r3, #2
ARM GAS  C:\Users\akita\AppData\Local\Temp\ccaIVzD4.s 			page 69


 1445 0020 DBB2     		uxtb	r3, r3
 1446 0022 9B00     		lsl	r3, r3, #2
 1447 0024 0C4A     		ldr	r2, .L89
 1448 0026 9446     		mov	ip, r2
 1449 0028 6344     		add	r3, r3, ip
 1450 002a 1B68     		ldr	r3, [r3]
 1451 002c FA1D     		add	r2, r7, #7
 1452 002e 1278     		ldrb	r2, [r2]
 1453 0030 0321     		mov	r1, #3
 1454 0032 0A40     		and	r2, r1
 1455 0034 D200     		lsl	r2, r2, #3
 1456 0036 0632     		add	r2, r2, #6
 1457 0038 D340     		lsr	r3, r3, r2
 1458 003a 1A1C     		mov	r2, r3
 1459 003c 0F23     		mov	r3, #15
 1460 003e FB18     		add	r3, r7, r3
 1461 0040 1A70     		strb	r2, [r3]
2423:Generated_Source\PSoC4/CyLib.c **** 
2424:Generated_Source\PSoC4/CyLib.c ****     return (priority & (uint8) CY_INT_PRIORITY_MASK);
 1462              		.loc 1 2424 0
 1463 0042 0F23     		mov	r3, #15
 1464 0044 FB18     		add	r3, r7, r3
 1465 0046 1B78     		ldrb	r3, [r3]
 1466 0048 0322     		mov	r2, #3
 1467 004a 1340     		and	r3, r2
 1468 004c DBB2     		uxtb	r3, r3
2425:Generated_Source\PSoC4/CyLib.c **** }
 1469              		.loc 1 2425 0
 1470 004e 181C     		mov	r0, r3
 1471 0050 BD46     		mov	sp, r7
 1472 0052 04B0     		add	sp, sp, #16
 1473              		@ sp needed
 1474 0054 80BD     		pop	{r7, pc}
 1475              	.L90:
 1476 0056 C046     		.align	2
 1477              	.L89:
 1478 0058 00E400E0 		.word	-536812544
 1479              		.cfi_endproc
 1480              	.LFE25:
 1481              		.size	CyIntGetPriority, .-CyIntGetPriority
 1482              		.section	.text.CyIntEnable,"ax",%progbits
 1483              		.align	2
 1484              		.global	CyIntEnable
 1485              		.code	16
 1486              		.thumb_func
 1487              		.type	CyIntEnable, %function
 1488              	CyIntEnable:
 1489              	.LFB26:
2426:Generated_Source\PSoC4/CyLib.c **** 
2427:Generated_Source\PSoC4/CyLib.c **** 
2428:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2429:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntEnable
2430:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2431:Generated_Source\PSoC4/CyLib.c **** *
2432:Generated_Source\PSoC4/CyLib.c **** *  Enables the specified interrupt number.
2433:Generated_Source\PSoC4/CyLib.c **** *
2434:Generated_Source\PSoC4/CyLib.c **** *  \param number: Valid range [0-31].  Interrupt number
ARM GAS  C:\Users\akita\AppData\Local\Temp\ccaIVzD4.s 			page 70


2435:Generated_Source\PSoC4/CyLib.c **** *
2436:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2437:Generated_Source\PSoC4/CyLib.c **** void CyIntEnable(uint8 number)
2438:Generated_Source\PSoC4/CyLib.c **** {
 1490              		.loc 1 2438 0
 1491              		.cfi_startproc
 1492 0000 80B5     		push	{r7, lr}
 1493              		.cfi_def_cfa_offset 8
 1494              		.cfi_offset 7, -8
 1495              		.cfi_offset 14, -4
 1496 0002 82B0     		sub	sp, sp, #8
 1497              		.cfi_def_cfa_offset 16
 1498 0004 00AF     		add	r7, sp, #0
 1499              		.cfi_def_cfa_register 7
 1500 0006 021C     		mov	r2, r0
 1501 0008 FB1D     		add	r3, r7, #7
 1502 000a 1A70     		strb	r2, [r3]
2439:Generated_Source\PSoC4/CyLib.c ****     CY_INT_ENABLE_REG = ((uint32) 0x01u << (CY_INT_ENABLE_RANGE_MASK & number));
 1503              		.loc 1 2439 0
 1504 000c 054B     		ldr	r3, .L92
 1505 000e FA1D     		add	r2, r7, #7
 1506 0010 1278     		ldrb	r2, [r2]
 1507 0012 1F21     		mov	r1, #31
 1508 0014 0A40     		and	r2, r1
 1509 0016 0121     		mov	r1, #1
 1510 0018 9140     		lsl	r1, r1, r2
 1511 001a 0A1C     		mov	r2, r1
 1512 001c 1A60     		str	r2, [r3]
2440:Generated_Source\PSoC4/CyLib.c **** }
 1513              		.loc 1 2440 0
 1514 001e BD46     		mov	sp, r7
 1515 0020 02B0     		add	sp, sp, #8
 1516              		@ sp needed
 1517 0022 80BD     		pop	{r7, pc}
 1518              	.L93:
 1519              		.align	2
 1520              	.L92:
 1521 0024 00E100E0 		.word	-536813312
 1522              		.cfi_endproc
 1523              	.LFE26:
 1524              		.size	CyIntEnable, .-CyIntEnable
 1525              		.section	.text.CyIntGetState,"ax",%progbits
 1526              		.align	2
 1527              		.global	CyIntGetState
 1528              		.code	16
 1529              		.thumb_func
 1530              		.type	CyIntGetState, %function
 1531              	CyIntGetState:
 1532              	.LFB27:
2441:Generated_Source\PSoC4/CyLib.c **** 
2442:Generated_Source\PSoC4/CyLib.c **** 
2443:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2444:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntGetState
2445:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2446:Generated_Source\PSoC4/CyLib.c **** *
2447:Generated_Source\PSoC4/CyLib.c **** *  Gets the enable state of the specified interrupt number.
2448:Generated_Source\PSoC4/CyLib.c **** *
ARM GAS  C:\Users\akita\AppData\Local\Temp\ccaIVzD4.s 			page 71


2449:Generated_Source\PSoC4/CyLib.c **** *  \param number: Valid range [0-31].  Interrupt number.
2450:Generated_Source\PSoC4/CyLib.c **** *
2451:Generated_Source\PSoC4/CyLib.c **** * \return
2452:Generated_Source\PSoC4/CyLib.c **** *  Enable status: 1 if enabled, 0 if disabled
2453:Generated_Source\PSoC4/CyLib.c **** *
2454:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2455:Generated_Source\PSoC4/CyLib.c **** uint8 CyIntGetState(uint8 number)
2456:Generated_Source\PSoC4/CyLib.c **** {
 1533              		.loc 1 2456 0
 1534              		.cfi_startproc
 1535 0000 80B5     		push	{r7, lr}
 1536              		.cfi_def_cfa_offset 8
 1537              		.cfi_offset 7, -8
 1538              		.cfi_offset 14, -4
 1539 0002 82B0     		sub	sp, sp, #8
 1540              		.cfi_def_cfa_offset 16
 1541 0004 00AF     		add	r7, sp, #0
 1542              		.cfi_def_cfa_register 7
 1543 0006 021C     		mov	r2, r0
 1544 0008 FB1D     		add	r3, r7, #7
 1545 000a 1A70     		strb	r2, [r3]
2457:Generated_Source\PSoC4/CyLib.c ****     /* Get state of interrupt. */
2458:Generated_Source\PSoC4/CyLib.c ****     return ((0u != (CY_INT_ENABLE_REG & ((uint32) 0x01u << (CY_INT_ENABLE_RANGE_MASK & number)))) ?
 1546              		.loc 1 2458 0
 1547 000c 074B     		ldr	r3, .L96
 1548 000e 1A68     		ldr	r2, [r3]
 1549 0010 FB1D     		add	r3, r7, #7
 1550 0012 1B78     		ldrb	r3, [r3]
 1551 0014 1F21     		mov	r1, #31
 1552 0016 0B40     		and	r3, r1
 1553 0018 DA40     		lsr	r2, r2, r3
 1554 001a 131C     		mov	r3, r2
 1555 001c DBB2     		uxtb	r3, r3
 1556 001e 0122     		mov	r2, #1
 1557 0020 1340     		and	r3, r2
 1558 0022 DBB2     		uxtb	r3, r3
2459:Generated_Source\PSoC4/CyLib.c **** }
 1559              		.loc 1 2459 0
 1560 0024 181C     		mov	r0, r3
 1561 0026 BD46     		mov	sp, r7
 1562 0028 02B0     		add	sp, sp, #8
 1563              		@ sp needed
 1564 002a 80BD     		pop	{r7, pc}
 1565              	.L97:
 1566              		.align	2
 1567              	.L96:
 1568 002c 00E100E0 		.word	-536813312
 1569              		.cfi_endproc
 1570              	.LFE27:
 1571              		.size	CyIntGetState, .-CyIntGetState
 1572              		.section	.text.CyIntDisable,"ax",%progbits
 1573              		.align	2
 1574              		.global	CyIntDisable
 1575              		.code	16
 1576              		.thumb_func
 1577              		.type	CyIntDisable, %function
 1578              	CyIntDisable:
ARM GAS  C:\Users\akita\AppData\Local\Temp\ccaIVzD4.s 			page 72


 1579              	.LFB28:
2460:Generated_Source\PSoC4/CyLib.c **** 
2461:Generated_Source\PSoC4/CyLib.c **** 
2462:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2463:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntDisable
2464:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2465:Generated_Source\PSoC4/CyLib.c **** *
2466:Generated_Source\PSoC4/CyLib.c **** *   Disables the specified interrupt number.
2467:Generated_Source\PSoC4/CyLib.c **** *
2468:Generated_Source\PSoC4/CyLib.c **** *   \param number: Valid range [0-31].  Interrupt number.
2469:Generated_Source\PSoC4/CyLib.c **** *
2470:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2471:Generated_Source\PSoC4/CyLib.c **** void CyIntDisable(uint8 number)
2472:Generated_Source\PSoC4/CyLib.c **** {
 1580              		.loc 1 2472 0
 1581              		.cfi_startproc
 1582 0000 80B5     		push	{r7, lr}
 1583              		.cfi_def_cfa_offset 8
 1584              		.cfi_offset 7, -8
 1585              		.cfi_offset 14, -4
 1586 0002 82B0     		sub	sp, sp, #8
 1587              		.cfi_def_cfa_offset 16
 1588 0004 00AF     		add	r7, sp, #0
 1589              		.cfi_def_cfa_register 7
 1590 0006 021C     		mov	r2, r0
 1591 0008 FB1D     		add	r3, r7, #7
 1592 000a 1A70     		strb	r2, [r3]
2473:Generated_Source\PSoC4/CyLib.c ****     CY_INT_CLEAR_REG = ((uint32) 0x01u << (CY_INT_ENABLE_RANGE_MASK & number));
 1593              		.loc 1 2473 0
 1594 000c 054B     		ldr	r3, .L99
 1595 000e FA1D     		add	r2, r7, #7
 1596 0010 1278     		ldrb	r2, [r2]
 1597 0012 1F21     		mov	r1, #31
 1598 0014 0A40     		and	r2, r1
 1599 0016 0121     		mov	r1, #1
 1600 0018 9140     		lsl	r1, r1, r2
 1601 001a 0A1C     		mov	r2, r1
 1602 001c 1A60     		str	r2, [r3]
2474:Generated_Source\PSoC4/CyLib.c **** }
 1603              		.loc 1 2474 0
 1604 001e BD46     		mov	sp, r7
 1605 0020 02B0     		add	sp, sp, #8
 1606              		@ sp needed
 1607 0022 80BD     		pop	{r7, pc}
 1608              	.L100:
 1609              		.align	2
 1610              	.L99:
 1611 0024 80E100E0 		.word	-536813184
 1612              		.cfi_endproc
 1613              	.LFE28:
 1614              		.size	CyIntDisable, .-CyIntDisable
 1615              		.section	.text.CyIntSetPending,"ax",%progbits
 1616              		.align	2
 1617              		.global	CyIntSetPending
 1618              		.code	16
 1619              		.thumb_func
 1620              		.type	CyIntSetPending, %function
ARM GAS  C:\Users\akita\AppData\Local\Temp\ccaIVzD4.s 			page 73


 1621              	CyIntSetPending:
 1622              	.LFB29:
2475:Generated_Source\PSoC4/CyLib.c **** 
2476:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2477:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntSetPending
2478:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2479:Generated_Source\PSoC4/CyLib.c **** *
2480:Generated_Source\PSoC4/CyLib.c **** *  Forces the specified interrupt number to be pending.
2481:Generated_Source\PSoC4/CyLib.c **** *
2482:Generated_Source\PSoC4/CyLib.c **** *  \param number: Valid range [0-31].  Interrupt number.
2483:Generated_Source\PSoC4/CyLib.c **** *
2484:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2485:Generated_Source\PSoC4/CyLib.c **** void CyIntSetPending(uint8 number)
2486:Generated_Source\PSoC4/CyLib.c **** {
 1623              		.loc 1 2486 0
 1624              		.cfi_startproc
 1625 0000 80B5     		push	{r7, lr}
 1626              		.cfi_def_cfa_offset 8
 1627              		.cfi_offset 7, -8
 1628              		.cfi_offset 14, -4
 1629 0002 82B0     		sub	sp, sp, #8
 1630              		.cfi_def_cfa_offset 16
 1631 0004 00AF     		add	r7, sp, #0
 1632              		.cfi_def_cfa_register 7
 1633 0006 021C     		mov	r2, r0
 1634 0008 FB1D     		add	r3, r7, #7
 1635 000a 1A70     		strb	r2, [r3]
2487:Generated_Source\PSoC4/CyLib.c ****     CY_INT_SET_PEND_REG = ((uint32) 0x01u << (CY_INT_ENABLE_RANGE_MASK & number));
 1636              		.loc 1 2487 0
 1637 000c 054B     		ldr	r3, .L102
 1638 000e FA1D     		add	r2, r7, #7
 1639 0010 1278     		ldrb	r2, [r2]
 1640 0012 1F21     		mov	r1, #31
 1641 0014 0A40     		and	r2, r1
 1642 0016 0121     		mov	r1, #1
 1643 0018 9140     		lsl	r1, r1, r2
 1644 001a 0A1C     		mov	r2, r1
 1645 001c 1A60     		str	r2, [r3]
2488:Generated_Source\PSoC4/CyLib.c **** }
 1646              		.loc 1 2488 0
 1647 001e BD46     		mov	sp, r7
 1648 0020 02B0     		add	sp, sp, #8
 1649              		@ sp needed
 1650 0022 80BD     		pop	{r7, pc}
 1651              	.L103:
 1652              		.align	2
 1653              	.L102:
 1654 0024 00E200E0 		.word	-536813056
 1655              		.cfi_endproc
 1656              	.LFE29:
 1657              		.size	CyIntSetPending, .-CyIntSetPending
 1658              		.section	.text.CyIntClearPending,"ax",%progbits
 1659              		.align	2
 1660              		.global	CyIntClearPending
 1661              		.code	16
 1662              		.thumb_func
 1663              		.type	CyIntClearPending, %function
ARM GAS  C:\Users\akita\AppData\Local\Temp\ccaIVzD4.s 			page 74


 1664              	CyIntClearPending:
 1665              	.LFB30:
2489:Generated_Source\PSoC4/CyLib.c **** 
2490:Generated_Source\PSoC4/CyLib.c **** 
2491:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2492:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntClearPending
2493:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2494:Generated_Source\PSoC4/CyLib.c **** *
2495:Generated_Source\PSoC4/CyLib.c **** *  Clears any pending interrupt for the specified interrupt number.
2496:Generated_Source\PSoC4/CyLib.c **** *
2497:Generated_Source\PSoC4/CyLib.c **** *  \param number: Valid range [0-31].  Interrupt number.
2498:Generated_Source\PSoC4/CyLib.c **** *
2499:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2500:Generated_Source\PSoC4/CyLib.c **** void CyIntClearPending(uint8 number)
2501:Generated_Source\PSoC4/CyLib.c **** {
 1666              		.loc 1 2501 0
 1667              		.cfi_startproc
 1668 0000 80B5     		push	{r7, lr}
 1669              		.cfi_def_cfa_offset 8
 1670              		.cfi_offset 7, -8
 1671              		.cfi_offset 14, -4
 1672 0002 82B0     		sub	sp, sp, #8
 1673              		.cfi_def_cfa_offset 16
 1674 0004 00AF     		add	r7, sp, #0
 1675              		.cfi_def_cfa_register 7
 1676 0006 021C     		mov	r2, r0
 1677 0008 FB1D     		add	r3, r7, #7
 1678 000a 1A70     		strb	r2, [r3]
2502:Generated_Source\PSoC4/CyLib.c ****     CY_INT_CLR_PEND_REG = ((uint32) 0x01u << (CY_INT_ENABLE_RANGE_MASK & number));
 1679              		.loc 1 2502 0
 1680 000c 054B     		ldr	r3, .L105
 1681 000e FA1D     		add	r2, r7, #7
 1682 0010 1278     		ldrb	r2, [r2]
 1683 0012 1F21     		mov	r1, #31
 1684 0014 0A40     		and	r2, r1
 1685 0016 0121     		mov	r1, #1
 1686 0018 9140     		lsl	r1, r1, r2
 1687 001a 0A1C     		mov	r2, r1
 1688 001c 1A60     		str	r2, [r3]
2503:Generated_Source\PSoC4/CyLib.c **** }
 1689              		.loc 1 2503 0
 1690 001e BD46     		mov	sp, r7
 1691 0020 02B0     		add	sp, sp, #8
 1692              		@ sp needed
 1693 0022 80BD     		pop	{r7, pc}
 1694              	.L106:
 1695              		.align	2
 1696              	.L105:
 1697 0024 80E200E0 		.word	-536812928
 1698              		.cfi_endproc
 1699              	.LFE30:
 1700              		.size	CyIntClearPending, .-CyIntClearPending
 1701              		.section	.text.CyHalt,"ax",%progbits
 1702              		.align	2
 1703              		.global	CyHalt
 1704              		.code	16
 1705              		.thumb_func
ARM GAS  C:\Users\akita\AppData\Local\Temp\ccaIVzD4.s 			page 75


 1706              		.type	CyHalt, %function
 1707              	CyHalt:
 1708              	.LFB31:
2504:Generated_Source\PSoC4/CyLib.c **** 
2505:Generated_Source\PSoC4/CyLib.c **** 
2506:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2507:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyHalt
2508:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2509:Generated_Source\PSoC4/CyLib.c **** *
2510:Generated_Source\PSoC4/CyLib.c **** *  Halts the CPU.
2511:Generated_Source\PSoC4/CyLib.c **** *
2512:Generated_Source\PSoC4/CyLib.c **** *  \param reason: Value to be used during debugging.
2513:Generated_Source\PSoC4/CyLib.c **** *
2514:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2515:Generated_Source\PSoC4/CyLib.c **** void CyHalt(uint8 reason)
2516:Generated_Source\PSoC4/CyLib.c **** {
 1709              		.loc 1 2516 0
 1710              		.cfi_startproc
 1711 0000 80B5     		push	{r7, lr}
 1712              		.cfi_def_cfa_offset 8
 1713              		.cfi_offset 7, -8
 1714              		.cfi_offset 14, -4
 1715 0002 82B0     		sub	sp, sp, #8
 1716              		.cfi_def_cfa_offset 16
 1717 0004 00AF     		add	r7, sp, #0
 1718              		.cfi_def_cfa_register 7
 1719 0006 021C     		mov	r2, r0
 1720 0008 FB1D     		add	r3, r7, #7
 1721 000a 1A70     		strb	r2, [r3]
2517:Generated_Source\PSoC4/CyLib.c ****     if(0u != reason)
2518:Generated_Source\PSoC4/CyLib.c ****     {
2519:Generated_Source\PSoC4/CyLib.c ****         /* To remove unreferenced local variable warning */
2520:Generated_Source\PSoC4/CyLib.c ****     }
2521:Generated_Source\PSoC4/CyLib.c **** 
2522:Generated_Source\PSoC4/CyLib.c ****     #if defined (__ARMCC_VERSION)
2523:Generated_Source\PSoC4/CyLib.c ****         __breakpoint(0x0);
2524:Generated_Source\PSoC4/CyLib.c ****     #elif defined(__GNUC__) || defined (__ICCARM__)
2525:Generated_Source\PSoC4/CyLib.c ****         __asm("    bkpt    1");
 1722              		.loc 1 2525 0
 1723              	@ 2525 "Generated_Source\PSoC4\CyLib.c" 1
 1724 000c 01BE     		    bkpt    1
 1725              	@ 0 "" 2
2526:Generated_Source\PSoC4/CyLib.c ****     #elif defined(__C51__)
2527:Generated_Source\PSoC4/CyLib.c ****         CYDEV_HALT_CPU;
2528:Generated_Source\PSoC4/CyLib.c ****     #endif  /* (__ARMCC_VERSION) */
2529:Generated_Source\PSoC4/CyLib.c **** }
 1726              		.loc 1 2529 0
 1727              		.code	16
 1728 000e BD46     		mov	sp, r7
 1729 0010 02B0     		add	sp, sp, #8
 1730              		@ sp needed
 1731 0012 80BD     		pop	{r7, pc}
 1732              		.cfi_endproc
 1733              	.LFE31:
 1734              		.size	CyHalt, .-CyHalt
 1735              		.section	.text.CySoftwareReset,"ax",%progbits
 1736              		.align	2
ARM GAS  C:\Users\akita\AppData\Local\Temp\ccaIVzD4.s 			page 76


 1737              		.global	CySoftwareReset
 1738              		.code	16
 1739              		.thumb_func
 1740              		.type	CySoftwareReset, %function
 1741              	CySoftwareReset:
 1742              	.LFB32:
2530:Generated_Source\PSoC4/CyLib.c **** 
2531:Generated_Source\PSoC4/CyLib.c **** 
2532:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2533:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySoftwareReset
2534:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2535:Generated_Source\PSoC4/CyLib.c **** *
2536:Generated_Source\PSoC4/CyLib.c **** *  Forces a software reset of the device.
2537:Generated_Source\PSoC4/CyLib.c **** *
2538:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2539:Generated_Source\PSoC4/CyLib.c **** void CySoftwareReset(void)
2540:Generated_Source\PSoC4/CyLib.c **** {
 1743              		.loc 1 2540 0
 1744              		.cfi_startproc
 1745 0000 80B5     		push	{r7, lr}
 1746              		.cfi_def_cfa_offset 8
 1747              		.cfi_offset 7, -8
 1748              		.cfi_offset 14, -4
 1749 0002 00AF     		add	r7, sp, #0
 1750              		.cfi_def_cfa_register 7
2541:Generated_Source\PSoC4/CyLib.c ****     /***************************************************************************
2542:Generated_Source\PSoC4/CyLib.c ****     * Setting the system reset request bit. The vector key value must be written
2543:Generated_Source\PSoC4/CyLib.c ****     * to the register, otherwise the register write is unpredictable.
2544:Generated_Source\PSoC4/CyLib.c ****     ***************************************************************************/
2545:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_AIRCR_REG = (CY_SYS_AIRCR_REG & (uint32)(~CY_SYS_AIRCR_VECTKEY_MASK)) |
 1751              		.loc 1 2545 0
 1752 0004 044B     		ldr	r3, .L109
 1753 0006 044A     		ldr	r2, .L109
 1754 0008 1268     		ldr	r2, [r2]
 1755 000a 1204     		lsl	r2, r2, #16
 1756 000c 120C     		lsr	r2, r2, #16
2546:Generated_Source\PSoC4/CyLib.c ****                             CY_SYS_AIRCR_VECTKEY | CY_SYS_AIRCR_SYSRESETREQ;
 1757              		.loc 1 2546 0
 1758 000e 0349     		ldr	r1, .L109+4
 1759 0010 0A43     		orr	r2, r1
2545:Generated_Source\PSoC4/CyLib.c ****                             CY_SYS_AIRCR_VECTKEY | CY_SYS_AIRCR_SYSRESETREQ;
 1760              		.loc 1 2545 0
 1761 0012 1A60     		str	r2, [r3]
2547:Generated_Source\PSoC4/CyLib.c **** }
 1762              		.loc 1 2547 0
 1763 0014 BD46     		mov	sp, r7
 1764              		@ sp needed
 1765 0016 80BD     		pop	{r7, pc}
 1766              	.L110:
 1767              		.align	2
 1768              	.L109:
 1769 0018 0CED00E0 		.word	-536810228
 1770 001c 0400FA05 		.word	100270084
 1771              		.cfi_endproc
 1772              	.LFE32:
 1773              		.size	CySoftwareReset, .-CySoftwareReset
 1774              		.section	.text.CyDelay,"ax",%progbits
ARM GAS  C:\Users\akita\AppData\Local\Temp\ccaIVzD4.s 			page 77


 1775              		.align	2
 1776              		.global	CyDelay
 1777              		.code	16
 1778              		.thumb_func
 1779              		.type	CyDelay, %function
 1780              	CyDelay:
 1781              	.LFB33:
2548:Generated_Source\PSoC4/CyLib.c **** 
2549:Generated_Source\PSoC4/CyLib.c **** 
2550:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2551:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyDelay
2552:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2553:Generated_Source\PSoC4/CyLib.c **** *
2554:Generated_Source\PSoC4/CyLib.c **** *  Blocks for milliseconds.
2555:Generated_Source\PSoC4/CyLib.c **** *
2556:Generated_Source\PSoC4/CyLib.c **** *  \param milliseconds: number of milliseconds to delay.
2557:Generated_Source\PSoC4/CyLib.c **** *
2558:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2559:Generated_Source\PSoC4/CyLib.c **** void CyDelay(uint32 milliseconds)
2560:Generated_Source\PSoC4/CyLib.c **** {
 1782              		.loc 1 2560 0
 1783              		.cfi_startproc
 1784 0000 80B5     		push	{r7, lr}
 1785              		.cfi_def_cfa_offset 8
 1786              		.cfi_offset 7, -8
 1787              		.cfi_offset 14, -4
 1788 0002 82B0     		sub	sp, sp, #8
 1789              		.cfi_def_cfa_offset 16
 1790 0004 00AF     		add	r7, sp, #0
 1791              		.cfi_def_cfa_register 7
 1792 0006 7860     		str	r0, [r7, #4]
2561:Generated_Source\PSoC4/CyLib.c ****     while (milliseconds > CY_DELAY_MS_OVERFLOW)
 1793              		.loc 1 2561 0
 1794 0008 09E0     		b	.L112
 1795              	.L113:
2562:Generated_Source\PSoC4/CyLib.c ****     {
2563:Generated_Source\PSoC4/CyLib.c ****         /* This loop prevents overflow.
2564:Generated_Source\PSoC4/CyLib.c ****          * At 100MHz, milliseconds * cydelayFreqKhz overflows at about 42 seconds
2565:Generated_Source\PSoC4/CyLib.c ****          */
2566:Generated_Source\PSoC4/CyLib.c ****         CyDelayCycles(cydelay32kMs);
 1796              		.loc 1 2566 0
 1797 000a 0C4B     		ldr	r3, .L114
 1798 000c 1B68     		ldr	r3, [r3]
 1799 000e 181C     		mov	r0, r3
 1800 0010 FFF7FEFF 		bl	CyDelayCycles
2567:Generated_Source\PSoC4/CyLib.c ****         milliseconds -= CY_DELAY_MS_OVERFLOW;
 1801              		.loc 1 2567 0
 1802 0014 7B68     		ldr	r3, [r7, #4]
 1803 0016 0A4A     		ldr	r2, .L114+4
 1804 0018 9446     		mov	ip, r2
 1805 001a 6344     		add	r3, r3, ip
 1806 001c 7B60     		str	r3, [r7, #4]
 1807              	.L112:
2561:Generated_Source\PSoC4/CyLib.c ****     while (milliseconds > CY_DELAY_MS_OVERFLOW)
 1808              		.loc 1 2561 0
 1809 001e 7A68     		ldr	r2, [r7, #4]
 1810 0020 8023     		mov	r3, #128
ARM GAS  C:\Users\akita\AppData\Local\Temp\ccaIVzD4.s 			page 78


 1811 0022 1B02     		lsl	r3, r3, #8
 1812 0024 9A42     		cmp	r2, r3
 1813 0026 F0D8     		bhi	.L113
2568:Generated_Source\PSoC4/CyLib.c ****     }
2569:Generated_Source\PSoC4/CyLib.c **** 
2570:Generated_Source\PSoC4/CyLib.c ****     CyDelayCycles(milliseconds * cydelayFreqKhz);
 1814              		.loc 1 2570 0
 1815 0028 064B     		ldr	r3, .L114+8
 1816 002a 1B68     		ldr	r3, [r3]
 1817 002c 7A68     		ldr	r2, [r7, #4]
 1818 002e 5343     		mul	r3, r2
 1819 0030 181C     		mov	r0, r3
 1820 0032 FFF7FEFF 		bl	CyDelayCycles
2571:Generated_Source\PSoC4/CyLib.c **** }
 1821              		.loc 1 2571 0
 1822 0036 BD46     		mov	sp, r7
 1823 0038 02B0     		add	sp, sp, #8
 1824              		@ sp needed
 1825 003a 80BD     		pop	{r7, pc}
 1826              	.L115:
 1827              		.align	2
 1828              	.L114:
 1829 003c 00000000 		.word	cydelay32kMs
 1830 0040 0080FFFF 		.word	-32768
 1831 0044 00000000 		.word	cydelayFreqKhz
 1832              		.cfi_endproc
 1833              	.LFE33:
 1834              		.size	CyDelay, .-CyDelay
 1835              		.section	.text.CyDelayUs,"ax",%progbits
 1836              		.align	2
 1837              		.global	CyDelayUs
 1838              		.code	16
 1839              		.thumb_func
 1840              		.type	CyDelayUs, %function
 1841              	CyDelayUs:
 1842              	.LFB34:
2572:Generated_Source\PSoC4/CyLib.c **** 
2573:Generated_Source\PSoC4/CyLib.c **** 
2574:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2575:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyDelayUs
2576:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2577:Generated_Source\PSoC4/CyLib.c **** *  Blocks for microseconds.
2578:Generated_Source\PSoC4/CyLib.c **** *
2579:Generated_Source\PSoC4/CyLib.c **** *  \param microseconds: number of microseconds to delay.
2580:Generated_Source\PSoC4/CyLib.c **** *
2581:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2582:Generated_Source\PSoC4/CyLib.c **** void CyDelayUs(uint16 microseconds)
2583:Generated_Source\PSoC4/CyLib.c **** {
 1843              		.loc 1 2583 0
 1844              		.cfi_startproc
 1845 0000 80B5     		push	{r7, lr}
 1846              		.cfi_def_cfa_offset 8
 1847              		.cfi_offset 7, -8
 1848              		.cfi_offset 14, -4
 1849 0002 82B0     		sub	sp, sp, #8
 1850              		.cfi_def_cfa_offset 16
 1851 0004 00AF     		add	r7, sp, #0
ARM GAS  C:\Users\akita\AppData\Local\Temp\ccaIVzD4.s 			page 79


 1852              		.cfi_def_cfa_register 7
 1853 0006 021C     		mov	r2, r0
 1854 0008 BB1D     		add	r3, r7, #6
 1855 000a 1A80     		strh	r2, [r3]
2584:Generated_Source\PSoC4/CyLib.c ****     CyDelayCycles((uint32)microseconds * cydelayFreqMhz);
 1856              		.loc 1 2584 0
 1857 000c BB1D     		add	r3, r7, #6
 1858 000e 1B88     		ldrh	r3, [r3]
 1859 0010 044A     		ldr	r2, .L117
 1860 0012 1278     		ldrb	r2, [r2]
 1861 0014 5343     		mul	r3, r2
 1862 0016 181C     		mov	r0, r3
 1863 0018 FFF7FEFF 		bl	CyDelayCycles
2585:Generated_Source\PSoC4/CyLib.c **** }
 1864              		.loc 1 2585 0
 1865 001c BD46     		mov	sp, r7
 1866 001e 02B0     		add	sp, sp, #8
 1867              		@ sp needed
 1868 0020 80BD     		pop	{r7, pc}
 1869              	.L118:
 1870 0022 C046     		.align	2
 1871              	.L117:
 1872 0024 00000000 		.word	cydelayFreqMhz
 1873              		.cfi_endproc
 1874              	.LFE34:
 1875              		.size	CyDelayUs, .-CyDelayUs
 1876              		.global	__aeabi_uidiv
 1877              		.section	.text.CyDelayFreq,"ax",%progbits
 1878              		.align	2
 1879              		.global	CyDelayFreq
 1880              		.code	16
 1881              		.thumb_func
 1882              		.type	CyDelayFreq, %function
 1883              	CyDelayFreq:
 1884              	.LFB35:
2586:Generated_Source\PSoC4/CyLib.c **** 
2587:Generated_Source\PSoC4/CyLib.c **** 
2588:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2589:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyDelayFreq
2590:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2591:Generated_Source\PSoC4/CyLib.c **** *  Sets clock frequency for CyDelay.
2592:Generated_Source\PSoC4/CyLib.c **** *
2593:Generated_Source\PSoC4/CyLib.c **** *  \param freq: Frequency of bus clock in Hertz.
2594:Generated_Source\PSoC4/CyLib.c **** *
2595:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2596:Generated_Source\PSoC4/CyLib.c **** void CyDelayFreq(uint32 freq)
2597:Generated_Source\PSoC4/CyLib.c **** {
 1885              		.loc 1 2597 0
 1886              		.cfi_startproc
 1887 0000 80B5     		push	{r7, lr}
 1888              		.cfi_def_cfa_offset 8
 1889              		.cfi_offset 7, -8
 1890              		.cfi_offset 14, -4
 1891 0002 82B0     		sub	sp, sp, #8
 1892              		.cfi_def_cfa_offset 16
 1893 0004 00AF     		add	r7, sp, #0
 1894              		.cfi_def_cfa_register 7
ARM GAS  C:\Users\akita\AppData\Local\Temp\ccaIVzD4.s 			page 80


 1895 0006 7860     		str	r0, [r7, #4]
2598:Generated_Source\PSoC4/CyLib.c ****     if (freq != 0u)
 1896              		.loc 1 2598 0
 1897 0008 7B68     		ldr	r3, [r7, #4]
 1898 000a 002B     		cmp	r3, #0
 1899 000c 03D0     		beq	.L120
2599:Generated_Source\PSoC4/CyLib.c ****     {
2600:Generated_Source\PSoC4/CyLib.c ****         cydelayFreqHz = freq;
 1900              		.loc 1 2600 0
 1901 000e 154B     		ldr	r3, .L122
 1902 0010 7A68     		ldr	r2, [r7, #4]
 1903 0012 1A60     		str	r2, [r3]
 1904 0014 02E0     		b	.L121
 1905              	.L120:
2601:Generated_Source\PSoC4/CyLib.c ****     }
2602:Generated_Source\PSoC4/CyLib.c ****     else
2603:Generated_Source\PSoC4/CyLib.c ****     {
2604:Generated_Source\PSoC4/CyLib.c ****         cydelayFreqHz = CYDEV_BCLK__SYSCLK__HZ;
 1906              		.loc 1 2604 0
 1907 0016 134B     		ldr	r3, .L122
 1908 0018 134A     		ldr	r2, .L122+4
 1909 001a 1A60     		str	r2, [r3]
 1910              	.L121:
2605:Generated_Source\PSoC4/CyLib.c ****     }
2606:Generated_Source\PSoC4/CyLib.c **** 
2607:Generated_Source\PSoC4/CyLib.c ****     cydelayFreqMhz = (uint8)((cydelayFreqHz + CY_DELAY_1M_MINUS_1_THRESHOLD) / CY_DELAY_1M_THRESHOL
 1911              		.loc 1 2607 0
 1912 001c 114B     		ldr	r3, .L122
 1913 001e 1B68     		ldr	r3, [r3]
 1914 0020 124A     		ldr	r2, .L122+8
 1915 0022 9446     		mov	ip, r2
 1916 0024 6344     		add	r3, r3, ip
 1917 0026 181C     		mov	r0, r3
 1918 0028 1149     		ldr	r1, .L122+12
 1919 002a FFF7FEFF 		bl	__aeabi_uidiv
 1920 002e 031C     		mov	r3, r0
 1921 0030 DAB2     		uxtb	r2, r3
 1922 0032 104B     		ldr	r3, .L122+16
 1923 0034 1A70     		strb	r2, [r3]
2608:Generated_Source\PSoC4/CyLib.c ****     cydelayFreqKhz = (cydelayFreqHz + CY_DELAY_1K_MINUS_1_THRESHOLD) / CY_DELAY_1K_THRESHOLD;
 1924              		.loc 1 2608 0
 1925 0036 0B4B     		ldr	r3, .L122
 1926 0038 1B68     		ldr	r3, [r3]
 1927 003a 0F4A     		ldr	r2, .L122+20
 1928 003c 9446     		mov	ip, r2
 1929 003e 6344     		add	r3, r3, ip
 1930 0040 181C     		mov	r0, r3
 1931 0042 FA23     		mov	r3, #250
 1932 0044 9900     		lsl	r1, r3, #2
 1933 0046 FFF7FEFF 		bl	__aeabi_uidiv
 1934 004a 031C     		mov	r3, r0
 1935 004c 1A1C     		mov	r2, r3
 1936 004e 0B4B     		ldr	r3, .L122+24
 1937 0050 1A60     		str	r2, [r3]
2609:Generated_Source\PSoC4/CyLib.c ****     cydelay32kMs   = CY_DELAY_MS_OVERFLOW * cydelayFreqKhz;
 1938              		.loc 1 2609 0
 1939 0052 0A4B     		ldr	r3, .L122+24
ARM GAS  C:\Users\akita\AppData\Local\Temp\ccaIVzD4.s 			page 81


 1940 0054 1B68     		ldr	r3, [r3]
 1941 0056 DA03     		lsl	r2, r3, #15
 1942 0058 094B     		ldr	r3, .L122+28
 1943 005a 1A60     		str	r2, [r3]
2610:Generated_Source\PSoC4/CyLib.c **** }
 1944              		.loc 1 2610 0
 1945 005c BD46     		mov	sp, r7
 1946 005e 02B0     		add	sp, sp, #8
 1947              		@ sp needed
 1948 0060 80BD     		pop	{r7, pc}
 1949              	.L123:
 1950 0062 C046     		.align	2
 1951              	.L122:
 1952 0064 00000000 		.word	cydelayFreqHz
 1953 0068 00366E01 		.word	24000000
 1954 006c 3F420F00 		.word	999999
 1955 0070 40420F00 		.word	1000000
 1956 0074 00000000 		.word	cydelayFreqMhz
 1957 0078 E7030000 		.word	999
 1958 007c 00000000 		.word	cydelayFreqKhz
 1959 0080 00000000 		.word	cydelay32kMs
 1960              		.cfi_endproc
 1961              	.LFE35:
 1962              		.size	CyDelayFreq, .-CyDelayFreq
 1963              		.section	.text.CySysTickStart,"ax",%progbits
 1964              		.align	2
 1965              		.global	CySysTickStart
 1966              		.code	16
 1967              		.thumb_func
 1968              		.type	CySysTickStart, %function
 1969              	CySysTickStart:
 1970              	.LFB36:
2611:Generated_Source\PSoC4/CyLib.c **** 
2612:Generated_Source\PSoC4/CyLib.c **** 
2613:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2614:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTick_Start
2615:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2616:Generated_Source\PSoC4/CyLib.c **** *
2617:Generated_Source\PSoC4/CyLib.c **** *  Starts the system timer (SysTick): configures SysTick to generate interrupt
2618:Generated_Source\PSoC4/CyLib.c **** *  every 1 ms and enables the interrupt.
2619:Generated_Source\PSoC4/CyLib.c **** *
2620:Generated_Source\PSoC4/CyLib.c **** *  There are components (LIN, CapSense Gesture) that relies on the default 
2621:Generated_Source\PSoC4/CyLib.c **** *  interval (1 ms). And that changing the interval will negatively impact 
2622:Generated_Source\PSoC4/CyLib.c **** *  their functionality.
2623:Generated_Source\PSoC4/CyLib.c **** *
2624:Generated_Source\PSoC4/CyLib.c **** * \sideeffect
2625:Generated_Source\PSoC4/CyLib.c **** *  Clears SysTick count flag if it was set.
2626:Generated_Source\PSoC4/CyLib.c **** *
2627:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2628:Generated_Source\PSoC4/CyLib.c **** void CySysTickStart(void)
2629:Generated_Source\PSoC4/CyLib.c **** {
 1971              		.loc 1 2629 0
 1972              		.cfi_startproc
 1973 0000 80B5     		push	{r7, lr}
 1974              		.cfi_def_cfa_offset 8
 1975              		.cfi_offset 7, -8
 1976              		.cfi_offset 14, -4
ARM GAS  C:\Users\akita\AppData\Local\Temp\ccaIVzD4.s 			page 82


 1977 0002 00AF     		add	r7, sp, #0
 1978              		.cfi_def_cfa_register 7
2630:Generated_Source\PSoC4/CyLib.c ****     if (0u == CySysTickInitVar)
 1979              		.loc 1 2630 0
 1980 0004 064B     		ldr	r3, .L126
 1981 0006 1B68     		ldr	r3, [r3]
 1982 0008 002B     		cmp	r3, #0
 1983 000a 04D1     		bne	.L125
2631:Generated_Source\PSoC4/CyLib.c ****     {
2632:Generated_Source\PSoC4/CyLib.c ****         CySysTickInit();
 1984              		.loc 1 2632 0
 1985 000c FFF7FEFF 		bl	CySysTickInit
2633:Generated_Source\PSoC4/CyLib.c ****         CySysTickInitVar = 1u;
 1986              		.loc 1 2633 0
 1987 0010 034B     		ldr	r3, .L126
 1988 0012 0122     		mov	r2, #1
 1989 0014 1A60     		str	r2, [r3]
 1990              	.L125:
2634:Generated_Source\PSoC4/CyLib.c ****     }
2635:Generated_Source\PSoC4/CyLib.c **** 
2636:Generated_Source\PSoC4/CyLib.c ****     CySysTickEnable();
 1991              		.loc 1 2636 0
 1992 0016 FFF7FEFF 		bl	CySysTickEnable
2637:Generated_Source\PSoC4/CyLib.c **** }
 1993              		.loc 1 2637 0
 1994 001a BD46     		mov	sp, r7
 1995              		@ sp needed
 1996 001c 80BD     		pop	{r7, pc}
 1997              	.L127:
 1998 001e C046     		.align	2
 1999              	.L126:
 2000 0020 00000000 		.word	CySysTickInitVar
 2001              		.cfi_endproc
 2002              	.LFE36:
 2003              		.size	CySysTickStart, .-CySysTickStart
 2004              		.section	.text.CySysTickInit,"ax",%progbits
 2005              		.align	2
 2006              		.global	CySysTickInit
 2007              		.code	16
 2008              		.thumb_func
 2009              		.type	CySysTickInit, %function
 2010              	CySysTickInit:
 2011              	.LFB37:
2638:Generated_Source\PSoC4/CyLib.c **** 
2639:Generated_Source\PSoC4/CyLib.c **** 
2640:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2641:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickInit
2642:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2643:Generated_Source\PSoC4/CyLib.c **** *
2644:Generated_Source\PSoC4/CyLib.c **** *  Initializes the callback addresses with pointers to NULL, associates the
2645:Generated_Source\PSoC4/CyLib.c **** *  SysTick system vector with the function that is responsible for calling
2646:Generated_Source\PSoC4/CyLib.c **** *  registered callback functions, configures SysTick timer to generate interrupt
2647:Generated_Source\PSoC4/CyLib.c **** *  every 1 ms.
2648:Generated_Source\PSoC4/CyLib.c **** *
2649:Generated_Source\PSoC4/CyLib.c **** *  The 1 ms interrupt interval is configured based on the frequency determined
2650:Generated_Source\PSoC4/CyLib.c **** *  by PSoC Creator at build time. If System clock frequency is changed in
2651:Generated_Source\PSoC4/CyLib.c **** *  runtime, the CyDelayFreq() with the appropriate parameter should be called.
ARM GAS  C:\Users\akita\AppData\Local\Temp\ccaIVzD4.s 			page 83


2652:Generated_Source\PSoC4/CyLib.c **** *
2653:Generated_Source\PSoC4/CyLib.c **** * \sideeffect
2654:Generated_Source\PSoC4/CyLib.c **** *  Clears SysTick count flag if it was set.
2655:Generated_Source\PSoC4/CyLib.c **** *
2656:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2657:Generated_Source\PSoC4/CyLib.c **** void CySysTickInit(void)
2658:Generated_Source\PSoC4/CyLib.c **** {
 2012              		.loc 1 2658 0
 2013              		.cfi_startproc
 2014 0000 80B5     		push	{r7, lr}
 2015              		.cfi_def_cfa_offset 8
 2016              		.cfi_offset 7, -8
 2017              		.cfi_offset 14, -4
 2018 0002 82B0     		sub	sp, sp, #8
 2019              		.cfi_def_cfa_offset 16
 2020 0004 00AF     		add	r7, sp, #0
 2021              		.cfi_def_cfa_register 7
2659:Generated_Source\PSoC4/CyLib.c ****     uint32 i;
2660:Generated_Source\PSoC4/CyLib.c **** 
2661:Generated_Source\PSoC4/CyLib.c ****     for (i = 0u; i<CY_SYS_SYST_NUM_OF_CALLBACKS; i++)
 2022              		.loc 1 2661 0
 2023 0006 0023     		mov	r3, #0
 2024 0008 7B60     		str	r3, [r7, #4]
 2025 000a 07E0     		b	.L129
 2026              	.L130:
2662:Generated_Source\PSoC4/CyLib.c ****     {
2663:Generated_Source\PSoC4/CyLib.c ****         CySysTickCallbacks[i] = (void *) 0;
 2027              		.loc 1 2663 0 discriminator 3
 2028 000c 124B     		ldr	r3, .L131
 2029 000e 7A68     		ldr	r2, [r7, #4]
 2030 0010 9200     		lsl	r2, r2, #2
 2031 0012 0021     		mov	r1, #0
 2032 0014 D150     		str	r1, [r2, r3]
2661:Generated_Source\PSoC4/CyLib.c ****     {
 2033              		.loc 1 2661 0 discriminator 3
 2034 0016 7B68     		ldr	r3, [r7, #4]
 2035 0018 0133     		add	r3, r3, #1
 2036 001a 7B60     		str	r3, [r7, #4]
 2037              	.L129:
2661:Generated_Source\PSoC4/CyLib.c ****     {
 2038              		.loc 1 2661 0 is_stmt 0 discriminator 1
 2039 001c 7B68     		ldr	r3, [r7, #4]
 2040 001e 042B     		cmp	r3, #4
 2041 0020 F4D9     		bls	.L130
2664:Generated_Source\PSoC4/CyLib.c ****     }
2665:Generated_Source\PSoC4/CyLib.c **** 
2666:Generated_Source\PSoC4/CyLib.c ****     (void) CyIntSetSysVector(CY_INT_SYSTICK_IRQN, &CySysTickServiceCallbacks);
 2042              		.loc 1 2666 0 is_stmt 1
 2043 0022 0E4B     		ldr	r3, .L131+4
 2044 0024 0F20     		mov	r0, #15
 2045 0026 191C     		mov	r1, r3
 2046 0028 FFF7FEFF 		bl	CyIntSetSysVector
2667:Generated_Source\PSoC4/CyLib.c **** 
2668:Generated_Source\PSoC4/CyLib.c ****     #if(CY_SYSTICK_LFCLK_SOURCE)
2669:Generated_Source\PSoC4/CyLib.c ****         CySysTickSetClockSource(CY_SYS_SYST_CSR_CLK_SRC_SYSCLK);
 2047              		.loc 1 2669 0
 2048 002c 0120     		mov	r0, #1
ARM GAS  C:\Users\akita\AppData\Local\Temp\ccaIVzD4.s 			page 84


 2049 002e FFF7FEFF 		bl	CySysTickSetClockSource
2670:Generated_Source\PSoC4/CyLib.c ****     #endif /* (CY_SYSTICK_LFCLK_SOURCE) */
2671:Generated_Source\PSoC4/CyLib.c **** 
2672:Generated_Source\PSoC4/CyLib.c ****     CySysTickSetReload(cydelayFreqHz/1000u);
 2050              		.loc 1 2672 0
 2051 0032 0B4B     		ldr	r3, .L131+8
 2052 0034 1B68     		ldr	r3, [r3]
 2053 0036 181C     		mov	r0, r3
 2054 0038 FA23     		mov	r3, #250
 2055 003a 9900     		lsl	r1, r3, #2
 2056 003c FFF7FEFF 		bl	__aeabi_uidiv
 2057 0040 031C     		mov	r3, r0
 2058 0042 181C     		mov	r0, r3
 2059 0044 FFF7FEFF 		bl	CySysTickSetReload
2673:Generated_Source\PSoC4/CyLib.c ****     CySysTickClear();
 2060              		.loc 1 2673 0
 2061 0048 FFF7FEFF 		bl	CySysTickClear
2674:Generated_Source\PSoC4/CyLib.c ****     CyIntEnable(CY_INT_SYSTICK_IRQN);
 2062              		.loc 1 2674 0
 2063 004c 0F20     		mov	r0, #15
 2064 004e FFF7FEFF 		bl	CyIntEnable
2675:Generated_Source\PSoC4/CyLib.c **** }
 2065              		.loc 1 2675 0
 2066 0052 BD46     		mov	sp, r7
 2067 0054 02B0     		add	sp, sp, #8
 2068              		@ sp needed
 2069 0056 80BD     		pop	{r7, pc}
 2070              	.L132:
 2071              		.align	2
 2072              	.L131:
 2073 0058 00000000 		.word	CySysTickCallbacks
 2074 005c 00000000 		.word	CySysTickServiceCallbacks
 2075 0060 00000000 		.word	cydelayFreqHz
 2076              		.cfi_endproc
 2077              	.LFE37:
 2078              		.size	CySysTickInit, .-CySysTickInit
 2079              		.section	.text.CySysTickEnable,"ax",%progbits
 2080              		.align	2
 2081              		.global	CySysTickEnable
 2082              		.code	16
 2083              		.thumb_func
 2084              		.type	CySysTickEnable, %function
 2085              	CySysTickEnable:
 2086              	.LFB38:
2676:Generated_Source\PSoC4/CyLib.c **** 
2677:Generated_Source\PSoC4/CyLib.c **** 
2678:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2679:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickEnable
2680:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2681:Generated_Source\PSoC4/CyLib.c **** *
2682:Generated_Source\PSoC4/CyLib.c **** *  Enables the SysTick timer and its interrupt.
2683:Generated_Source\PSoC4/CyLib.c **** *
2684:Generated_Source\PSoC4/CyLib.c **** * \sideeffect
2685:Generated_Source\PSoC4/CyLib.c **** *  Clears SysTick count flag if it was set
2686:Generated_Source\PSoC4/CyLib.c **** *
2687:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2688:Generated_Source\PSoC4/CyLib.c **** void CySysTickEnable(void)
ARM GAS  C:\Users\akita\AppData\Local\Temp\ccaIVzD4.s 			page 85


2689:Generated_Source\PSoC4/CyLib.c **** {
 2087              		.loc 1 2689 0
 2088              		.cfi_startproc
 2089 0000 80B5     		push	{r7, lr}
 2090              		.cfi_def_cfa_offset 8
 2091              		.cfi_offset 7, -8
 2092              		.cfi_offset 14, -4
 2093 0002 00AF     		add	r7, sp, #0
 2094              		.cfi_def_cfa_register 7
2690:Generated_Source\PSoC4/CyLib.c ****     CySysTickEnableInterrupt();
 2095              		.loc 1 2690 0
 2096 0004 FFF7FEFF 		bl	CySysTickEnableInterrupt
2691:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_SYST_CSR_REG |= CY_SYS_SYST_CSR_ENABLE;
 2097              		.loc 1 2691 0
 2098 0008 034B     		ldr	r3, .L134
 2099 000a 034A     		ldr	r2, .L134
 2100 000c 1268     		ldr	r2, [r2]
 2101 000e 0121     		mov	r1, #1
 2102 0010 0A43     		orr	r2, r1
 2103 0012 1A60     		str	r2, [r3]
2692:Generated_Source\PSoC4/CyLib.c **** }
 2104              		.loc 1 2692 0
 2105 0014 BD46     		mov	sp, r7
 2106              		@ sp needed
 2107 0016 80BD     		pop	{r7, pc}
 2108              	.L135:
 2109              		.align	2
 2110              	.L134:
 2111 0018 10E000E0 		.word	-536813552
 2112              		.cfi_endproc
 2113              	.LFE38:
 2114              		.size	CySysTickEnable, .-CySysTickEnable
 2115              		.section	.text.CySysTickStop,"ax",%progbits
 2116              		.align	2
 2117              		.global	CySysTickStop
 2118              		.code	16
 2119              		.thumb_func
 2120              		.type	CySysTickStop, %function
 2121              	CySysTickStop:
 2122              	.LFB39:
2693:Generated_Source\PSoC4/CyLib.c **** 
2694:Generated_Source\PSoC4/CyLib.c **** 
2695:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2696:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickStop
2697:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2698:Generated_Source\PSoC4/CyLib.c **** *
2699:Generated_Source\PSoC4/CyLib.c **** *  Stops the system timer (SysTick).
2700:Generated_Source\PSoC4/CyLib.c **** *
2701:Generated_Source\PSoC4/CyLib.c **** * \sideeffect
2702:Generated_Source\PSoC4/CyLib.c **** *  Clears SysTick count flag if it was set
2703:Generated_Source\PSoC4/CyLib.c **** *
2704:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2705:Generated_Source\PSoC4/CyLib.c **** void CySysTickStop(void)
2706:Generated_Source\PSoC4/CyLib.c **** {
 2123              		.loc 1 2706 0
 2124              		.cfi_startproc
 2125 0000 80B5     		push	{r7, lr}
ARM GAS  C:\Users\akita\AppData\Local\Temp\ccaIVzD4.s 			page 86


 2126              		.cfi_def_cfa_offset 8
 2127              		.cfi_offset 7, -8
 2128              		.cfi_offset 14, -4
 2129 0002 00AF     		add	r7, sp, #0
 2130              		.cfi_def_cfa_register 7
2707:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_SYST_CSR_REG &= ((uint32) ~(CY_SYS_SYST_CSR_ENABLE));
 2131              		.loc 1 2707 0
 2132 0004 034B     		ldr	r3, .L137
 2133 0006 034A     		ldr	r2, .L137
 2134 0008 1268     		ldr	r2, [r2]
 2135 000a 0121     		mov	r1, #1
 2136 000c 8A43     		bic	r2, r1
 2137 000e 1A60     		str	r2, [r3]
2708:Generated_Source\PSoC4/CyLib.c **** }
 2138              		.loc 1 2708 0
 2139 0010 BD46     		mov	sp, r7
 2140              		@ sp needed
 2141 0012 80BD     		pop	{r7, pc}
 2142              	.L138:
 2143              		.align	2
 2144              	.L137:
 2145 0014 10E000E0 		.word	-536813552
 2146              		.cfi_endproc
 2147              	.LFE39:
 2148              		.size	CySysTickStop, .-CySysTickStop
 2149              		.section	.text.CySysTickEnableInterrupt,"ax",%progbits
 2150              		.align	2
 2151              		.global	CySysTickEnableInterrupt
 2152              		.code	16
 2153              		.thumb_func
 2154              		.type	CySysTickEnableInterrupt, %function
 2155              	CySysTickEnableInterrupt:
 2156              	.LFB40:
2709:Generated_Source\PSoC4/CyLib.c **** 
2710:Generated_Source\PSoC4/CyLib.c **** 
2711:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2712:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickEnableInterrupt
2713:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2714:Generated_Source\PSoC4/CyLib.c **** *
2715:Generated_Source\PSoC4/CyLib.c **** *  Enables the SysTick interrupt.
2716:Generated_Source\PSoC4/CyLib.c **** *
2717:Generated_Source\PSoC4/CyLib.c **** * \sideeffect
2718:Generated_Source\PSoC4/CyLib.c **** *  Clears SysTick count flag if it was set
2719:Generated_Source\PSoC4/CyLib.c **** *
2720:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2721:Generated_Source\PSoC4/CyLib.c **** void CySysTickEnableInterrupt(void)
2722:Generated_Source\PSoC4/CyLib.c **** {
 2157              		.loc 1 2722 0
 2158              		.cfi_startproc
 2159 0000 80B5     		push	{r7, lr}
 2160              		.cfi_def_cfa_offset 8
 2161              		.cfi_offset 7, -8
 2162              		.cfi_offset 14, -4
 2163 0002 00AF     		add	r7, sp, #0
 2164              		.cfi_def_cfa_register 7
2723:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_SYST_CSR_REG |= CY_SYS_SYST_CSR_ENABLE_INT;
 2165              		.loc 1 2723 0
ARM GAS  C:\Users\akita\AppData\Local\Temp\ccaIVzD4.s 			page 87


 2166 0004 034B     		ldr	r3, .L140
 2167 0006 034A     		ldr	r2, .L140
 2168 0008 1268     		ldr	r2, [r2]
 2169 000a 0221     		mov	r1, #2
 2170 000c 0A43     		orr	r2, r1
 2171 000e 1A60     		str	r2, [r3]
2724:Generated_Source\PSoC4/CyLib.c **** }
 2172              		.loc 1 2724 0
 2173 0010 BD46     		mov	sp, r7
 2174              		@ sp needed
 2175 0012 80BD     		pop	{r7, pc}
 2176              	.L141:
 2177              		.align	2
 2178              	.L140:
 2179 0014 10E000E0 		.word	-536813552
 2180              		.cfi_endproc
 2181              	.LFE40:
 2182              		.size	CySysTickEnableInterrupt, .-CySysTickEnableInterrupt
 2183              		.section	.text.CySysTickDisableInterrupt,"ax",%progbits
 2184              		.align	2
 2185              		.global	CySysTickDisableInterrupt
 2186              		.code	16
 2187              		.thumb_func
 2188              		.type	CySysTickDisableInterrupt, %function
 2189              	CySysTickDisableInterrupt:
 2190              	.LFB41:
2725:Generated_Source\PSoC4/CyLib.c **** 
2726:Generated_Source\PSoC4/CyLib.c **** 
2727:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2728:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickDisableInterrupt
2729:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2730:Generated_Source\PSoC4/CyLib.c **** *
2731:Generated_Source\PSoC4/CyLib.c **** *  Disables the SysTick interrupt.
2732:Generated_Source\PSoC4/CyLib.c **** *
2733:Generated_Source\PSoC4/CyLib.c **** * \sideeffect
2734:Generated_Source\PSoC4/CyLib.c **** *  Clears SysTick count flag if it was set
2735:Generated_Source\PSoC4/CyLib.c **** *
2736:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2737:Generated_Source\PSoC4/CyLib.c **** void CySysTickDisableInterrupt(void)
2738:Generated_Source\PSoC4/CyLib.c **** {
 2191              		.loc 1 2738 0
 2192              		.cfi_startproc
 2193 0000 80B5     		push	{r7, lr}
 2194              		.cfi_def_cfa_offset 8
 2195              		.cfi_offset 7, -8
 2196              		.cfi_offset 14, -4
 2197 0002 00AF     		add	r7, sp, #0
 2198              		.cfi_def_cfa_register 7
2739:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_SYST_CSR_REG &= ((uint32) ~(CY_SYS_SYST_CSR_ENABLE_INT));
 2199              		.loc 1 2739 0
 2200 0004 034B     		ldr	r3, .L143
 2201 0006 034A     		ldr	r2, .L143
 2202 0008 1268     		ldr	r2, [r2]
 2203 000a 0221     		mov	r1, #2
 2204 000c 8A43     		bic	r2, r1
 2205 000e 1A60     		str	r2, [r3]
2740:Generated_Source\PSoC4/CyLib.c **** }
ARM GAS  C:\Users\akita\AppData\Local\Temp\ccaIVzD4.s 			page 88


 2206              		.loc 1 2740 0
 2207 0010 BD46     		mov	sp, r7
 2208              		@ sp needed
 2209 0012 80BD     		pop	{r7, pc}
 2210              	.L144:
 2211              		.align	2
 2212              	.L143:
 2213 0014 10E000E0 		.word	-536813552
 2214              		.cfi_endproc
 2215              	.LFE41:
 2216              		.size	CySysTickDisableInterrupt, .-CySysTickDisableInterrupt
 2217              		.section	.text.CySysTickSetReload,"ax",%progbits
 2218              		.align	2
 2219              		.global	CySysTickSetReload
 2220              		.code	16
 2221              		.thumb_func
 2222              		.type	CySysTickSetReload, %function
 2223              	CySysTickSetReload:
 2224              	.LFB42:
2741:Generated_Source\PSoC4/CyLib.c **** 
2742:Generated_Source\PSoC4/CyLib.c **** 
2743:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2744:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickSetReload
2745:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2746:Generated_Source\PSoC4/CyLib.c **** *
2747:Generated_Source\PSoC4/CyLib.c **** *  Sets value the counter is set to on startup and after it reaches zero. This
2748:Generated_Source\PSoC4/CyLib.c **** *  function do not change or reset current sysTick counter value, so it should
2749:Generated_Source\PSoC4/CyLib.c **** *  be cleared using CySysTickClear() API.
2750:Generated_Source\PSoC4/CyLib.c **** *
2751:Generated_Source\PSoC4/CyLib.c **** *  \param value: Valid range [0x0-0x00FFFFFF]. Counter reset value
2752:Generated_Source\PSoC4/CyLib.c **** *
2753:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2754:Generated_Source\PSoC4/CyLib.c **** void CySysTickSetReload(uint32 value)
2755:Generated_Source\PSoC4/CyLib.c **** {
 2225              		.loc 1 2755 0
 2226              		.cfi_startproc
 2227 0000 80B5     		push	{r7, lr}
 2228              		.cfi_def_cfa_offset 8
 2229              		.cfi_offset 7, -8
 2230              		.cfi_offset 14, -4
 2231 0002 82B0     		sub	sp, sp, #8
 2232              		.cfi_def_cfa_offset 16
 2233 0004 00AF     		add	r7, sp, #0
 2234              		.cfi_def_cfa_register 7
 2235 0006 7860     		str	r0, [r7, #4]
2756:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_SYST_RVR_REG = (value & CY_SYS_SYST_RVR_CNT_MASK);
 2236              		.loc 1 2756 0
 2237 0008 034B     		ldr	r3, .L146
 2238 000a 7A68     		ldr	r2, [r7, #4]
 2239 000c 1202     		lsl	r2, r2, #8
 2240 000e 120A     		lsr	r2, r2, #8
 2241 0010 1A60     		str	r2, [r3]
2757:Generated_Source\PSoC4/CyLib.c **** }
 2242              		.loc 1 2757 0
 2243 0012 BD46     		mov	sp, r7
 2244 0014 02B0     		add	sp, sp, #8
 2245              		@ sp needed
ARM GAS  C:\Users\akita\AppData\Local\Temp\ccaIVzD4.s 			page 89


 2246 0016 80BD     		pop	{r7, pc}
 2247              	.L147:
 2248              		.align	2
 2249              	.L146:
 2250 0018 14E000E0 		.word	-536813548
 2251              		.cfi_endproc
 2252              	.LFE42:
 2253              		.size	CySysTickSetReload, .-CySysTickSetReload
 2254              		.section	.text.CySysTickGetReload,"ax",%progbits
 2255              		.align	2
 2256              		.global	CySysTickGetReload
 2257              		.code	16
 2258              		.thumb_func
 2259              		.type	CySysTickGetReload, %function
 2260              	CySysTickGetReload:
 2261              	.LFB43:
2758:Generated_Source\PSoC4/CyLib.c **** 
2759:Generated_Source\PSoC4/CyLib.c **** 
2760:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2761:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickGetReload
2762:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2763:Generated_Source\PSoC4/CyLib.c **** *
2764:Generated_Source\PSoC4/CyLib.c **** *  Gets value the counter is set to on startup and after it reaches zero.
2765:Generated_Source\PSoC4/CyLib.c **** *
2766:Generated_Source\PSoC4/CyLib.c **** * \return
2767:Generated_Source\PSoC4/CyLib.c **** *  Counter reset value.
2768:Generated_Source\PSoC4/CyLib.c **** *
2769:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2770:Generated_Source\PSoC4/CyLib.c **** uint32 CySysTickGetReload(void)
2771:Generated_Source\PSoC4/CyLib.c **** {
 2262              		.loc 1 2771 0
 2263              		.cfi_startproc
 2264 0000 80B5     		push	{r7, lr}
 2265              		.cfi_def_cfa_offset 8
 2266              		.cfi_offset 7, -8
 2267              		.cfi_offset 14, -4
 2268 0002 00AF     		add	r7, sp, #0
 2269              		.cfi_def_cfa_register 7
2772:Generated_Source\PSoC4/CyLib.c ****     return(CY_SYS_SYST_RVR_REG & CY_SYS_SYST_RVR_CNT_MASK);
 2270              		.loc 1 2772 0
 2271 0004 034B     		ldr	r3, .L150
 2272 0006 1B68     		ldr	r3, [r3]
 2273 0008 1B02     		lsl	r3, r3, #8
 2274 000a 1B0A     		lsr	r3, r3, #8
2773:Generated_Source\PSoC4/CyLib.c **** }
 2275              		.loc 1 2773 0
 2276 000c 181C     		mov	r0, r3
 2277 000e BD46     		mov	sp, r7
 2278              		@ sp needed
 2279 0010 80BD     		pop	{r7, pc}
 2280              	.L151:
 2281 0012 C046     		.align	2
 2282              	.L150:
 2283 0014 14E000E0 		.word	-536813548
 2284              		.cfi_endproc
 2285              	.LFE43:
 2286              		.size	CySysTickGetReload, .-CySysTickGetReload
ARM GAS  C:\Users\akita\AppData\Local\Temp\ccaIVzD4.s 			page 90


 2287              		.section	.text.CySysTickGetValue,"ax",%progbits
 2288              		.align	2
 2289              		.global	CySysTickGetValue
 2290              		.code	16
 2291              		.thumb_func
 2292              		.type	CySysTickGetValue, %function
 2293              	CySysTickGetValue:
 2294              	.LFB44:
2774:Generated_Source\PSoC4/CyLib.c **** 
2775:Generated_Source\PSoC4/CyLib.c **** 
2776:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2777:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickGetValue
2778:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2779:Generated_Source\PSoC4/CyLib.c **** *
2780:Generated_Source\PSoC4/CyLib.c **** *  Gets current SysTick counter value.
2781:Generated_Source\PSoC4/CyLib.c **** *
2782:Generated_Source\PSoC4/CyLib.c **** * \return
2783:Generated_Source\PSoC4/CyLib.c **** *  Current SysTick counter value
2784:Generated_Source\PSoC4/CyLib.c **** *
2785:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2786:Generated_Source\PSoC4/CyLib.c **** uint32 CySysTickGetValue(void)
2787:Generated_Source\PSoC4/CyLib.c **** {
 2295              		.loc 1 2787 0
 2296              		.cfi_startproc
 2297 0000 80B5     		push	{r7, lr}
 2298              		.cfi_def_cfa_offset 8
 2299              		.cfi_offset 7, -8
 2300              		.cfi_offset 14, -4
 2301 0002 00AF     		add	r7, sp, #0
 2302              		.cfi_def_cfa_register 7
2788:Generated_Source\PSoC4/CyLib.c ****     return(CY_SYS_SYST_CVR_REG & CY_SYS_SYST_CVR_CNT_MASK);
 2303              		.loc 1 2788 0
 2304 0004 034B     		ldr	r3, .L154
 2305 0006 1B68     		ldr	r3, [r3]
 2306 0008 1B02     		lsl	r3, r3, #8
 2307 000a 1B0A     		lsr	r3, r3, #8
2789:Generated_Source\PSoC4/CyLib.c **** }
 2308              		.loc 1 2789 0
 2309 000c 181C     		mov	r0, r3
 2310 000e BD46     		mov	sp, r7
 2311              		@ sp needed
 2312 0010 80BD     		pop	{r7, pc}
 2313              	.L155:
 2314 0012 C046     		.align	2
 2315              	.L154:
 2316 0014 18E000E0 		.word	-536813544
 2317              		.cfi_endproc
 2318              	.LFE44:
 2319              		.size	CySysTickGetValue, .-CySysTickGetValue
 2320              		.section	.text.CySysTickSetClockSource,"ax",%progbits
 2321              		.align	2
 2322              		.global	CySysTickSetClockSource
 2323              		.code	16
 2324              		.thumb_func
 2325              		.type	CySysTickSetClockSource, %function
 2326              	CySysTickSetClockSource:
 2327              	.LFB45:
ARM GAS  C:\Users\akita\AppData\Local\Temp\ccaIVzD4.s 			page 91


2790:Generated_Source\PSoC4/CyLib.c **** 
2791:Generated_Source\PSoC4/CyLib.c **** 
2792:Generated_Source\PSoC4/CyLib.c **** #if(CY_SYSTICK_LFCLK_SOURCE)
2793:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
2794:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysTickSetClockSource
2795:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
2796:Generated_Source\PSoC4/CyLib.c ****     *
2797:Generated_Source\PSoC4/CyLib.c ****     *  Sets the clock source for the SysTick counter.
2798:Generated_Source\PSoC4/CyLib.c ****     *
2799:Generated_Source\PSoC4/CyLib.c ****     *  Clears SysTick count flag if it was set. If clock source is not ready this
2800:Generated_Source\PSoC4/CyLib.c ****     *  function call will have no effect. After changing clock source to the low
2801:Generated_Source\PSoC4/CyLib.c ****     *  frequency clock the counter and reload register values will remain unchanged
2802:Generated_Source\PSoC4/CyLib.c ****     *  so time to the interrupt will be significantly longer and vice versa.
2803:Generated_Source\PSoC4/CyLib.c ****     *
2804:Generated_Source\PSoC4/CyLib.c ****     *  The changing of SysTick clock source and\or its frequency will change 
2805:Generated_Source\PSoC4/CyLib.c ****     *  the interrupt interval and that CySysTickSetReload() should be 
2806:Generated_Source\PSoC4/CyLib.c ****     *  called to compensate this change.    
2807:Generated_Source\PSoC4/CyLib.c ****     *
2808:Generated_Source\PSoC4/CyLib.c ****     *  The function is not available on PSoC 4000, PSoC 4100, and PSoC 42000
2809:Generated_Source\PSoC4/CyLib.c ****     *  devices. The SysTick timer clocked by the System clock on these devices.
2810:Generated_Source\PSoC4/CyLib.c ****     *
2811:Generated_Source\PSoC4/CyLib.c ****     *  \param clockSource Clock source for SysTick counter
2812:Generated_Source\PSoC4/CyLib.c ****     *         Define                     Clock Source
2813:Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_SYST_CSR_CLK_SRC_SYSCLK     SysTick is clocked by the CPU clock.
2814:Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_SYST_CSR_CLK_SRC_LFCLK      SysTick is clocked by the low frequency
2815:Generated_Source\PSoC4/CyLib.c ****     *                                      clock. (ILO 100 KHz for PSoC 5LP, and
2816:Generated_Source\PSoC4/CyLib.c ****     *                                      LFCLK for PSoC 4).
2817:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
2818:Generated_Source\PSoC4/CyLib.c ****     void CySysTickSetClockSource(uint32 clockSource)
2819:Generated_Source\PSoC4/CyLib.c ****     {
 2328              		.loc 1 2819 0
 2329              		.cfi_startproc
 2330 0000 80B5     		push	{r7, lr}
 2331              		.cfi_def_cfa_offset 8
 2332              		.cfi_offset 7, -8
 2333              		.cfi_offset 14, -4
 2334 0002 82B0     		sub	sp, sp, #8
 2335              		.cfi_def_cfa_offset 16
 2336 0004 00AF     		add	r7, sp, #0
 2337              		.cfi_def_cfa_register 7
 2338 0006 7860     		str	r0, [r7, #4]
2820:Generated_Source\PSoC4/CyLib.c ****         if (clockSource == CY_SYS_SYST_CSR_CLK_SRC_SYSCLK)
 2339              		.loc 1 2820 0
 2340 0008 7B68     		ldr	r3, [r7, #4]
 2341 000a 012B     		cmp	r3, #1
 2342 000c 06D1     		bne	.L157
2821:Generated_Source\PSoC4/CyLib.c ****         {
2822:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_SYST_CSR_REG |= (uint32)(CY_SYS_SYST_CSR_CLK_SRC_SYSCLK << CY_SYS_SYST_CSR_CLK_S
 2343              		.loc 1 2822 0
 2344 000e 084B     		ldr	r3, .L159
 2345 0010 074A     		ldr	r2, .L159
 2346 0012 1268     		ldr	r2, [r2]
 2347 0014 0421     		mov	r1, #4
 2348 0016 0A43     		orr	r2, r1
 2349 0018 1A60     		str	r2, [r3]
 2350 001a 05E0     		b	.L156
 2351              	.L157:
ARM GAS  C:\Users\akita\AppData\Local\Temp\ccaIVzD4.s 			page 92


2823:Generated_Source\PSoC4/CyLib.c ****         }
2824:Generated_Source\PSoC4/CyLib.c ****         else
2825:Generated_Source\PSoC4/CyLib.c ****         {
2826:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_SYST_CSR_REG &= ((uint32) ~((uint32)(CY_SYS_SYST_CSR_CLK_SRC_SYSCLK << CY_SYS_SY
 2352              		.loc 1 2826 0
 2353 001c 044B     		ldr	r3, .L159
 2354 001e 044A     		ldr	r2, .L159
 2355 0020 1268     		ldr	r2, [r2]
 2356 0022 0421     		mov	r1, #4
 2357 0024 8A43     		bic	r2, r1
 2358 0026 1A60     		str	r2, [r3]
 2359              	.L156:
2827:Generated_Source\PSoC4/CyLib.c ****         }
2828:Generated_Source\PSoC4/CyLib.c ****     }
 2360              		.loc 1 2828 0
 2361 0028 BD46     		mov	sp, r7
 2362 002a 02B0     		add	sp, sp, #8
 2363              		@ sp needed
 2364 002c 80BD     		pop	{r7, pc}
 2365              	.L160:
 2366 002e C046     		.align	2
 2367              	.L159:
 2368 0030 10E000E0 		.word	-536813552
 2369              		.cfi_endproc
 2370              	.LFE45:
 2371              		.size	CySysTickSetClockSource, .-CySysTickSetClockSource
 2372              		.section	.text.CySysTickGetClockSource,"ax",%progbits
 2373              		.align	2
 2374              		.global	CySysTickGetClockSource
 2375              		.code	16
 2376              		.thumb_func
 2377              		.type	CySysTickGetClockSource, %function
 2378              	CySysTickGetClockSource:
 2379              	.LFB46:
2829:Generated_Source\PSoC4/CyLib.c **** 
2830:Generated_Source\PSoC4/CyLib.c ****     
2831:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
2832:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysTickGetClockSource
2833:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
2834:Generated_Source\PSoC4/CyLib.c ****     *
2835:Generated_Source\PSoC4/CyLib.c ****     *  Returns the current clock source of the SysTick counter.
2836:Generated_Source\PSoC4/CyLib.c ****     *
2837:Generated_Source\PSoC4/CyLib.c ****     *  \return 
2838:Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_SYST_CSR_CLK_SRC_SYSCLK     SysTick is clocked by CPU clock.
2839:Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_SYST_CSR_CLK_SRC_LFCLK      SysTick is clocked by the low frequency
2840:Generated_Source\PSoC4/CyLib.c ****     *                                      clock. (ILO 100 KHz for PSoC 5LP, and
2841:Generated_Source\PSoC4/CyLib.c ****     *                                      LFCLK for PSoC 4).
2842:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
2843:Generated_Source\PSoC4/CyLib.c ****     uint32 CySysTickGetClockSource(void)
2844:Generated_Source\PSoC4/CyLib.c ****     {
 2380              		.loc 1 2844 0
 2381              		.cfi_startproc
 2382 0000 80B5     		push	{r7, lr}
 2383              		.cfi_def_cfa_offset 8
 2384              		.cfi_offset 7, -8
 2385              		.cfi_offset 14, -4
 2386 0002 00AF     		add	r7, sp, #0
ARM GAS  C:\Users\akita\AppData\Local\Temp\ccaIVzD4.s 			page 93


 2387              		.cfi_def_cfa_register 7
2845:Generated_Source\PSoC4/CyLib.c ****         return ((CY_SYS_SYST_CSR_REG >> CY_SYS_SYST_CSR_CLK_SOURCE_SHIFT) & CY_SYS_SYST_CSR_CLK_SRC
 2388              		.loc 1 2845 0
 2389 0004 034B     		ldr	r3, .L163
 2390 0006 1B68     		ldr	r3, [r3]
 2391 0008 9B08     		lsr	r3, r3, #2
 2392 000a 0122     		mov	r2, #1
 2393 000c 1340     		and	r3, r2
2846:Generated_Source\PSoC4/CyLib.c ****     }
 2394              		.loc 1 2846 0
 2395 000e 181C     		mov	r0, r3
 2396 0010 BD46     		mov	sp, r7
 2397              		@ sp needed
 2398 0012 80BD     		pop	{r7, pc}
 2399              	.L164:
 2400              		.align	2
 2401              	.L163:
 2402 0014 10E000E0 		.word	-536813552
 2403              		.cfi_endproc
 2404              	.LFE46:
 2405              		.size	CySysTickGetClockSource, .-CySysTickGetClockSource
 2406              		.section	.text.CySysTickGetCountFlag,"ax",%progbits
 2407              		.align	2
 2408              		.global	CySysTickGetCountFlag
 2409              		.code	16
 2410              		.thumb_func
 2411              		.type	CySysTickGetCountFlag, %function
 2412              	CySysTickGetCountFlag:
 2413              	.LFB47:
2847:Generated_Source\PSoC4/CyLib.c ****     
2848:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_SYSTICK_LFCLK_SOURCE) */
2849:Generated_Source\PSoC4/CyLib.c **** 
2850:Generated_Source\PSoC4/CyLib.c **** 
2851:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2852:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickGetCountFlag
2853:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2854:Generated_Source\PSoC4/CyLib.c **** *
2855:Generated_Source\PSoC4/CyLib.c **** *  The count flag is set once SysTick counter reaches zero.
2856:Generated_Source\PSoC4/CyLib.c **** *  The flag cleared on read.
2857:Generated_Source\PSoC4/CyLib.c **** *
2858:Generated_Source\PSoC4/CyLib.c **** * \return
2859:Generated_Source\PSoC4/CyLib.c ****     *  Returns non-zero value if flag is set, otherwise zero is returned.
2860:Generated_Source\PSoC4/CyLib.c **** *
2861:Generated_Source\PSoC4/CyLib.c **** *
2862:Generated_Source\PSoC4/CyLib.c **** * \sideeffect
2863:Generated_Source\PSoC4/CyLib.c **** *  Clears SysTick count flag if it was set.
2864:Generated_Source\PSoC4/CyLib.c **** *
2865:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2866:Generated_Source\PSoC4/CyLib.c **** uint32 CySysTickGetCountFlag(void)
2867:Generated_Source\PSoC4/CyLib.c **** {
 2414              		.loc 1 2867 0
 2415              		.cfi_startproc
 2416 0000 80B5     		push	{r7, lr}
 2417              		.cfi_def_cfa_offset 8
 2418              		.cfi_offset 7, -8
 2419              		.cfi_offset 14, -4
 2420 0002 00AF     		add	r7, sp, #0
ARM GAS  C:\Users\akita\AppData\Local\Temp\ccaIVzD4.s 			page 94


 2421              		.cfi_def_cfa_register 7
2868:Generated_Source\PSoC4/CyLib.c ****     return ((CY_SYS_SYST_CSR_REG >> CY_SYS_SYST_CSR_COUNTFLAG_SHIFT) & 0x01u);
 2422              		.loc 1 2868 0
 2423 0004 034B     		ldr	r3, .L167
 2424 0006 1B68     		ldr	r3, [r3]
 2425 0008 1B0C     		lsr	r3, r3, #16
 2426 000a 0122     		mov	r2, #1
 2427 000c 1340     		and	r3, r2
2869:Generated_Source\PSoC4/CyLib.c **** }
 2428              		.loc 1 2869 0
 2429 000e 181C     		mov	r0, r3
 2430 0010 BD46     		mov	sp, r7
 2431              		@ sp needed
 2432 0012 80BD     		pop	{r7, pc}
 2433              	.L168:
 2434              		.align	2
 2435              	.L167:
 2436 0014 10E000E0 		.word	-536813552
 2437              		.cfi_endproc
 2438              	.LFE47:
 2439              		.size	CySysTickGetCountFlag, .-CySysTickGetCountFlag
 2440              		.section	.text.CySysTickClear,"ax",%progbits
 2441              		.align	2
 2442              		.global	CySysTickClear
 2443              		.code	16
 2444              		.thumb_func
 2445              		.type	CySysTickClear, %function
 2446              	CySysTickClear:
 2447              	.LFB48:
2870:Generated_Source\PSoC4/CyLib.c **** 
2871:Generated_Source\PSoC4/CyLib.c **** 
2872:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2873:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickClear
2874:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2875:Generated_Source\PSoC4/CyLib.c **** *
2876:Generated_Source\PSoC4/CyLib.c **** *  Clears the SysTick counter for well-defined startup.
2877:Generated_Source\PSoC4/CyLib.c **** *
2878:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2879:Generated_Source\PSoC4/CyLib.c **** void CySysTickClear(void)
2880:Generated_Source\PSoC4/CyLib.c **** {
 2448              		.loc 1 2880 0
 2449              		.cfi_startproc
 2450 0000 80B5     		push	{r7, lr}
 2451              		.cfi_def_cfa_offset 8
 2452              		.cfi_offset 7, -8
 2453              		.cfi_offset 14, -4
 2454 0002 00AF     		add	r7, sp, #0
 2455              		.cfi_def_cfa_register 7
2881:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_SYST_CVR_REG = 0u;
 2456              		.loc 1 2881 0
 2457 0004 024B     		ldr	r3, .L170
 2458 0006 0022     		mov	r2, #0
 2459 0008 1A60     		str	r2, [r3]
2882:Generated_Source\PSoC4/CyLib.c **** }
 2460              		.loc 1 2882 0
 2461 000a BD46     		mov	sp, r7
 2462              		@ sp needed
ARM GAS  C:\Users\akita\AppData\Local\Temp\ccaIVzD4.s 			page 95


 2463 000c 80BD     		pop	{r7, pc}
 2464              	.L171:
 2465 000e C046     		.align	2
 2466              	.L170:
 2467 0010 18E000E0 		.word	-536813544
 2468              		.cfi_endproc
 2469              	.LFE48:
 2470              		.size	CySysTickClear, .-CySysTickClear
 2471              		.section	.text.CySysTickSetCallback,"ax",%progbits
 2472              		.align	2
 2473              		.global	CySysTickSetCallback
 2474              		.code	16
 2475              		.thumb_func
 2476              		.type	CySysTickSetCallback, %function
 2477              	CySysTickSetCallback:
 2478              	.LFB49:
2883:Generated_Source\PSoC4/CyLib.c **** 
2884:Generated_Source\PSoC4/CyLib.c **** 
2885:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2886:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickSetCallback
2887:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2888:Generated_Source\PSoC4/CyLib.c **** *
2889:Generated_Source\PSoC4/CyLib.c **** *  This function allows up to five user-defined interrupt service routine
2890:Generated_Source\PSoC4/CyLib.c **** *  functions to be associated with the SysTick interrupt. These are specified
2891:Generated_Source\PSoC4/CyLib.c **** *  through the use of pointers to the function.
2892:Generated_Source\PSoC4/CyLib.c **** *
2893:Generated_Source\PSoC4/CyLib.c **** *  To set a custom callback function without the overhead of the system provided
2894:Generated_Source\PSoC4/CyLib.c **** *  one, use CyIntSetSysVector(CY_INT_SYSTICK_IRQN, cyisraddress <address>),
2895:Generated_Source\PSoC4/CyLib.c **** *  where <address> is address of the custom defined interrupt service routine.
2896:Generated_Source\PSoC4/CyLib.c **** *  Note: a custom callback function overrides the system defined callback
2897:Generated_Source\PSoC4/CyLib.c **** *  functions.
2898:Generated_Source\PSoC4/CyLib.c **** *
2899:Generated_Source\PSoC4/CyLib.c **** *  \param number: The number of the callback function addresses to be set. The valid
2900:Generated_Source\PSoC4/CyLib.c **** *          range is from 0 to 4.
2901:Generated_Source\PSoC4/CyLib.c **** *
2902:Generated_Source\PSoC4/CyLib.c **** *  void(*CallbackFunction(void): A pointer to the function that will be
2903:Generated_Source\PSoC4/CyLib.c **** *                                associated with the SysTick ISR for the
2904:Generated_Source\PSoC4/CyLib.c **** *                                specified number.
2905:Generated_Source\PSoC4/CyLib.c **** *
2906:Generated_Source\PSoC4/CyLib.c **** * \return
2907:Generated_Source\PSoC4/CyLib.c **** *  Returns the address of the previous callback function.
2908:Generated_Source\PSoC4/CyLib.c **** *  The NULL is returned if the specified address in not set.
2909:Generated_Source\PSoC4/CyLib.c **** *
2910:Generated_Source\PSoC4/CyLib.c **** * \sideeffect
2911:Generated_Source\PSoC4/CyLib.c **** *  The registered callback functions will be executed in the interrupt.
2912:Generated_Source\PSoC4/CyLib.c **** *
2913:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2914:Generated_Source\PSoC4/CyLib.c **** cySysTickCallback CySysTickSetCallback(uint32 number, cySysTickCallback function)
2915:Generated_Source\PSoC4/CyLib.c **** {
 2479              		.loc 1 2915 0
 2480              		.cfi_startproc
 2481 0000 80B5     		push	{r7, lr}
 2482              		.cfi_def_cfa_offset 8
 2483              		.cfi_offset 7, -8
 2484              		.cfi_offset 14, -4
 2485 0002 84B0     		sub	sp, sp, #16
 2486              		.cfi_def_cfa_offset 24
ARM GAS  C:\Users\akita\AppData\Local\Temp\ccaIVzD4.s 			page 96


 2487 0004 00AF     		add	r7, sp, #0
 2488              		.cfi_def_cfa_register 7
 2489 0006 7860     		str	r0, [r7, #4]
 2490 0008 3960     		str	r1, [r7]
2916:Generated_Source\PSoC4/CyLib.c ****     cySysTickCallback retVal;
2917:Generated_Source\PSoC4/CyLib.c **** 
2918:Generated_Source\PSoC4/CyLib.c ****     retVal = CySysTickCallbacks[number];
 2491              		.loc 1 2918 0
 2492 000a 074B     		ldr	r3, .L174
 2493 000c 7A68     		ldr	r2, [r7, #4]
 2494 000e 9200     		lsl	r2, r2, #2
 2495 0010 D358     		ldr	r3, [r2, r3]
 2496 0012 FB60     		str	r3, [r7, #12]
2919:Generated_Source\PSoC4/CyLib.c ****     CySysTickCallbacks[number] = function;
 2497              		.loc 1 2919 0
 2498 0014 044B     		ldr	r3, .L174
 2499 0016 7A68     		ldr	r2, [r7, #4]
 2500 0018 9200     		lsl	r2, r2, #2
 2501 001a 3968     		ldr	r1, [r7]
 2502 001c D150     		str	r1, [r2, r3]
2920:Generated_Source\PSoC4/CyLib.c ****     return (retVal);
 2503              		.loc 1 2920 0
 2504 001e FB68     		ldr	r3, [r7, #12]
2921:Generated_Source\PSoC4/CyLib.c **** }
 2505              		.loc 1 2921 0
 2506 0020 181C     		mov	r0, r3
 2507 0022 BD46     		mov	sp, r7
 2508 0024 04B0     		add	sp, sp, #16
 2509              		@ sp needed
 2510 0026 80BD     		pop	{r7, pc}
 2511              	.L175:
 2512              		.align	2
 2513              	.L174:
 2514 0028 00000000 		.word	CySysTickCallbacks
 2515              		.cfi_endproc
 2516              	.LFE49:
 2517              		.size	CySysTickSetCallback, .-CySysTickSetCallback
 2518              		.section	.text.CySysTickGetCallback,"ax",%progbits
 2519              		.align	2
 2520              		.global	CySysTickGetCallback
 2521              		.code	16
 2522              		.thumb_func
 2523              		.type	CySysTickGetCallback, %function
 2524              	CySysTickGetCallback:
 2525              	.LFB50:
2922:Generated_Source\PSoC4/CyLib.c **** 
2923:Generated_Source\PSoC4/CyLib.c **** 
2924:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2925:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickGetCallback
2926:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2927:Generated_Source\PSoC4/CyLib.c **** *
2928:Generated_Source\PSoC4/CyLib.c **** *  The function get the specified callback pointer.
2929:Generated_Source\PSoC4/CyLib.c **** *
2930:Generated_Source\PSoC4/CyLib.c **** *  \param number: The number of callback function address to get. The valid
2931:Generated_Source\PSoC4/CyLib.c **** *          range is from 0 to 4.
2932:Generated_Source\PSoC4/CyLib.c **** *
2933:Generated_Source\PSoC4/CyLib.c **** * \return
ARM GAS  C:\Users\akita\AppData\Local\Temp\ccaIVzD4.s 			page 97


2934:Generated_Source\PSoC4/CyLib.c **** *  Returns the address of the specified callback function.
2935:Generated_Source\PSoC4/CyLib.c **** *  The NULL is returned if the specified address in not initialized.
2936:Generated_Source\PSoC4/CyLib.c **** *
2937:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2938:Generated_Source\PSoC4/CyLib.c **** cySysTickCallback CySysTickGetCallback(uint32 number)
2939:Generated_Source\PSoC4/CyLib.c **** {
 2526              		.loc 1 2939 0
 2527              		.cfi_startproc
 2528 0000 80B5     		push	{r7, lr}
 2529              		.cfi_def_cfa_offset 8
 2530              		.cfi_offset 7, -8
 2531              		.cfi_offset 14, -4
 2532 0002 82B0     		sub	sp, sp, #8
 2533              		.cfi_def_cfa_offset 16
 2534 0004 00AF     		add	r7, sp, #0
 2535              		.cfi_def_cfa_register 7
 2536 0006 7860     		str	r0, [r7, #4]
2940:Generated_Source\PSoC4/CyLib.c ****     return ((cySysTickCallback) CySysTickCallbacks[number]);
 2537              		.loc 1 2940 0
 2538 0008 034B     		ldr	r3, .L178
 2539 000a 7A68     		ldr	r2, [r7, #4]
 2540 000c 9200     		lsl	r2, r2, #2
 2541 000e D358     		ldr	r3, [r2, r3]
2941:Generated_Source\PSoC4/CyLib.c **** }
 2542              		.loc 1 2941 0
 2543 0010 181C     		mov	r0, r3
 2544 0012 BD46     		mov	sp, r7
 2545 0014 02B0     		add	sp, sp, #8
 2546              		@ sp needed
 2547 0016 80BD     		pop	{r7, pc}
 2548              	.L179:
 2549              		.align	2
 2550              	.L178:
 2551 0018 00000000 		.word	CySysTickCallbacks
 2552              		.cfi_endproc
 2553              	.LFE50:
 2554              		.size	CySysTickGetCallback, .-CySysTickGetCallback
 2555              		.section	.text.CySysTickServiceCallbacks,"ax",%progbits
 2556              		.align	2
 2557              		.code	16
 2558              		.thumb_func
 2559              		.type	CySysTickServiceCallbacks, %function
 2560              	CySysTickServiceCallbacks:
 2561              	.LFB51:
2942:Generated_Source\PSoC4/CyLib.c **** 
2943:Generated_Source\PSoC4/CyLib.c **** 
2944:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2945:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickServiceCallbacks
2946:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2947:Generated_Source\PSoC4/CyLib.c **** *
2948:Generated_Source\PSoC4/CyLib.c **** *  System Tick timer interrupt routine
2949:Generated_Source\PSoC4/CyLib.c **** *
2950:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2951:Generated_Source\PSoC4/CyLib.c **** static void CySysTickServiceCallbacks(void)
2952:Generated_Source\PSoC4/CyLib.c **** {
 2562              		.loc 1 2952 0
 2563              		.cfi_startproc
ARM GAS  C:\Users\akita\AppData\Local\Temp\ccaIVzD4.s 			page 98


 2564 0000 80B5     		push	{r7, lr}
 2565              		.cfi_def_cfa_offset 8
 2566              		.cfi_offset 7, -8
 2567              		.cfi_offset 14, -4
 2568 0002 82B0     		sub	sp, sp, #8
 2569              		.cfi_def_cfa_offset 16
 2570 0004 00AF     		add	r7, sp, #0
 2571              		.cfi_def_cfa_register 7
2953:Generated_Source\PSoC4/CyLib.c ****     uint32 i;
2954:Generated_Source\PSoC4/CyLib.c **** 
2955:Generated_Source\PSoC4/CyLib.c ****     /* Verify that tick timer flag was set */
2956:Generated_Source\PSoC4/CyLib.c ****     if (1u == CySysTickGetCountFlag())
 2572              		.loc 1 2956 0
 2573 0006 FFF7FEFF 		bl	CySysTickGetCountFlag
 2574 000a 031E     		sub	r3, r0, #0
 2575 000c 012B     		cmp	r3, #1
 2576 000e 13D1     		bne	.L180
2957:Generated_Source\PSoC4/CyLib.c ****     {
2958:Generated_Source\PSoC4/CyLib.c ****         for (i=0u; i < CY_SYS_SYST_NUM_OF_CALLBACKS; i++)
 2577              		.loc 1 2958 0
 2578 0010 0023     		mov	r3, #0
 2579 0012 7B60     		str	r3, [r7, #4]
 2580 0014 0DE0     		b	.L182
 2581              	.L184:
2959:Generated_Source\PSoC4/CyLib.c ****         {
2960:Generated_Source\PSoC4/CyLib.c ****             if (CySysTickCallbacks[i] != (void *) 0)
 2582              		.loc 1 2960 0
 2583 0016 0A4B     		ldr	r3, .L185
 2584 0018 7A68     		ldr	r2, [r7, #4]
 2585 001a 9200     		lsl	r2, r2, #2
 2586 001c D358     		ldr	r3, [r2, r3]
 2587 001e 002B     		cmp	r3, #0
 2588 0020 04D0     		beq	.L183
2961:Generated_Source\PSoC4/CyLib.c ****             {
2962:Generated_Source\PSoC4/CyLib.c ****                 (void)(CySysTickCallbacks[i])();
 2589              		.loc 1 2962 0
 2590 0022 074B     		ldr	r3, .L185
 2591 0024 7A68     		ldr	r2, [r7, #4]
 2592 0026 9200     		lsl	r2, r2, #2
 2593 0028 D358     		ldr	r3, [r2, r3]
 2594 002a 9847     		blx	r3
 2595              	.L183:
2958:Generated_Source\PSoC4/CyLib.c ****         {
 2596              		.loc 1 2958 0 discriminator 2
 2597 002c 7B68     		ldr	r3, [r7, #4]
 2598 002e 0133     		add	r3, r3, #1
 2599 0030 7B60     		str	r3, [r7, #4]
 2600              	.L182:
2958:Generated_Source\PSoC4/CyLib.c ****         {
 2601              		.loc 1 2958 0 is_stmt 0 discriminator 1
 2602 0032 7B68     		ldr	r3, [r7, #4]
 2603 0034 042B     		cmp	r3, #4
 2604 0036 EED9     		bls	.L184
 2605              	.L180:
2963:Generated_Source\PSoC4/CyLib.c ****             }
2964:Generated_Source\PSoC4/CyLib.c ****         }
2965:Generated_Source\PSoC4/CyLib.c ****     }
ARM GAS  C:\Users\akita\AppData\Local\Temp\ccaIVzD4.s 			page 99


2966:Generated_Source\PSoC4/CyLib.c **** }
 2606              		.loc 1 2966 0 is_stmt 1
 2607 0038 BD46     		mov	sp, r7
 2608 003a 02B0     		add	sp, sp, #8
 2609              		@ sp needed
 2610 003c 80BD     		pop	{r7, pc}
 2611              	.L186:
 2612 003e C046     		.align	2
 2613              	.L185:
 2614 0040 00000000 		.word	CySysTickCallbacks
 2615              		.cfi_endproc
 2616              	.LFE51:
 2617              		.size	CySysTickServiceCallbacks, .-CySysTickServiceCallbacks
 2618              		.section	.text.CyGetUniqueId,"ax",%progbits
 2619              		.align	2
 2620              		.global	CyGetUniqueId
 2621              		.code	16
 2622              		.thumb_func
 2623              		.type	CyGetUniqueId, %function
 2624              	CyGetUniqueId:
 2625              	.LFB52:
2967:Generated_Source\PSoC4/CyLib.c **** 
2968:Generated_Source\PSoC4/CyLib.c **** 
2969:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2970:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyGetUniqueId
2971:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2972:Generated_Source\PSoC4/CyLib.c **** *
2973:Generated_Source\PSoC4/CyLib.c **** *  Returns the 64-bit unique ID of the device. The uniqueness of the number is
2974:Generated_Source\PSoC4/CyLib.c **** *  guaranteed for 10 years due to the die lot number having a cycle life of 10
2975:Generated_Source\PSoC4/CyLib.c **** *  years and even after 10 years, the probability of getting two identical
2976:Generated_Source\PSoC4/CyLib.c **** *  numbers is very small.
2977:Generated_Source\PSoC4/CyLib.c **** *
2978:Generated_Source\PSoC4/CyLib.c **** *  \param uniqueId: The pointer to a two element 32-bit unsigned integer array. Returns
2979:Generated_Source\PSoC4/CyLib.c **** *  the 64-bit unique ID of the device by loading them into the integer array
2980:Generated_Source\PSoC4/CyLib.c **** *  pointed to by uniqueId.
2981:Generated_Source\PSoC4/CyLib.c **** *
2982:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2983:Generated_Source\PSoC4/CyLib.c **** void CyGetUniqueId(uint32* uniqueId)
2984:Generated_Source\PSoC4/CyLib.c **** {
 2626              		.loc 1 2984 0
 2627              		.cfi_startproc
 2628 0000 80B5     		push	{r7, lr}
 2629              		.cfi_def_cfa_offset 8
 2630              		.cfi_offset 7, -8
 2631              		.cfi_offset 14, -4
 2632 0002 82B0     		sub	sp, sp, #8
 2633              		.cfi_def_cfa_offset 16
 2634 0004 00AF     		add	r7, sp, #0
 2635              		.cfi_def_cfa_register 7
 2636 0006 7860     		str	r0, [r7, #4]
2985:Generated_Source\PSoC4/CyLib.c **** #if(CY_PSOC4)
2986:Generated_Source\PSoC4/CyLib.c ****     uniqueId[0u]  =  (uint32)(* (reg8 *) CYREG_SFLASH_DIE_LOT0  );
 2637              		.loc 1 2986 0
 2638 0008 254B     		ldr	r3, .L188
 2639 000a 1B78     		ldrb	r3, [r3]
 2640 000c DBB2     		uxtb	r3, r3
 2641 000e 1A1C     		mov	r2, r3
ARM GAS  C:\Users\akita\AppData\Local\Temp\ccaIVzD4.s 			page 100


 2642 0010 7B68     		ldr	r3, [r7, #4]
 2643 0012 1A60     		str	r2, [r3]
2987:Generated_Source\PSoC4/CyLib.c ****     uniqueId[0u] |= ((uint32)(* (reg8 *) CYREG_SFLASH_DIE_LOT1  ) <<  8u);
 2644              		.loc 1 2987 0
 2645 0014 234B     		ldr	r3, .L188+4
 2646 0016 1B78     		ldrb	r3, [r3]
 2647 0018 DBB2     		uxtb	r3, r3
 2648 001a 1A02     		lsl	r2, r3, #8
 2649 001c 7B68     		ldr	r3, [r7, #4]
 2650 001e 1B68     		ldr	r3, [r3]
 2651 0020 1A43     		orr	r2, r3
 2652 0022 7B68     		ldr	r3, [r7, #4]
 2653 0024 1A60     		str	r2, [r3]
2988:Generated_Source\PSoC4/CyLib.c ****     uniqueId[0u] |= ((uint32)(* (reg8 *) CYREG_SFLASH_DIE_LOT2  ) << 16u);
 2654              		.loc 1 2988 0
 2655 0026 204B     		ldr	r3, .L188+8
 2656 0028 1B78     		ldrb	r3, [r3]
 2657 002a DBB2     		uxtb	r3, r3
 2658 002c 1A04     		lsl	r2, r3, #16
 2659 002e 7B68     		ldr	r3, [r7, #4]
 2660 0030 1B68     		ldr	r3, [r3]
 2661 0032 1A43     		orr	r2, r3
 2662 0034 7B68     		ldr	r3, [r7, #4]
 2663 0036 1A60     		str	r2, [r3]
2989:Generated_Source\PSoC4/CyLib.c ****     uniqueId[0u] |= ((uint32)(* (reg8 *) CYREG_SFLASH_DIE_WAFER ) << 24u);
 2664              		.loc 1 2989 0
 2665 0038 1C4B     		ldr	r3, .L188+12
 2666 003a 1B78     		ldrb	r3, [r3]
 2667 003c DBB2     		uxtb	r3, r3
 2668 003e 1A06     		lsl	r2, r3, #24
 2669 0040 7B68     		ldr	r3, [r7, #4]
 2670 0042 1B68     		ldr	r3, [r3]
 2671 0044 1A43     		orr	r2, r3
 2672 0046 7B68     		ldr	r3, [r7, #4]
 2673 0048 1A60     		str	r2, [r3]
2990:Generated_Source\PSoC4/CyLib.c **** 
2991:Generated_Source\PSoC4/CyLib.c ****     uniqueId[1u]  =  (uint32)(* (reg8 *) CYREG_SFLASH_DIE_X     );
 2674              		.loc 1 2991 0
 2675 004a 7B68     		ldr	r3, [r7, #4]
 2676 004c 0433     		add	r3, r3, #4
 2677 004e 184A     		ldr	r2, .L188+16
 2678 0050 1278     		ldrb	r2, [r2]
 2679 0052 D2B2     		uxtb	r2, r2
 2680 0054 1A60     		str	r2, [r3]
2992:Generated_Source\PSoC4/CyLib.c ****     uniqueId[1u] |= ((uint32)(* (reg8 *) CYREG_SFLASH_DIE_Y     ) <<  8u);
 2681              		.loc 1 2992 0
 2682 0056 174B     		ldr	r3, .L188+20
 2683 0058 1B78     		ldrb	r3, [r3]
 2684 005a DBB2     		uxtb	r3, r3
 2685 005c 1902     		lsl	r1, r3, #8
 2686 005e 7B68     		ldr	r3, [r7, #4]
 2687 0060 0433     		add	r3, r3, #4
 2688 0062 7A68     		ldr	r2, [r7, #4]
 2689 0064 0432     		add	r2, r2, #4
 2690 0066 1268     		ldr	r2, [r2]
 2691 0068 0A43     		orr	r2, r1
 2692 006a 1A60     		str	r2, [r3]
ARM GAS  C:\Users\akita\AppData\Local\Temp\ccaIVzD4.s 			page 101


2993:Generated_Source\PSoC4/CyLib.c ****     uniqueId[1u] |= ((uint32)(* (reg8 *) CYREG_SFLASH_DIE_SORT  ) << 16u);
 2693              		.loc 1 2993 0
 2694 006c 124B     		ldr	r3, .L188+24
 2695 006e 1B78     		ldrb	r3, [r3]
 2696 0070 DBB2     		uxtb	r3, r3
 2697 0072 1904     		lsl	r1, r3, #16
 2698 0074 7B68     		ldr	r3, [r7, #4]
 2699 0076 0433     		add	r3, r3, #4
 2700 0078 7A68     		ldr	r2, [r7, #4]
 2701 007a 0432     		add	r2, r2, #4
 2702 007c 1268     		ldr	r2, [r2]
 2703 007e 0A43     		orr	r2, r1
 2704 0080 1A60     		str	r2, [r3]
2994:Generated_Source\PSoC4/CyLib.c ****     uniqueId[1u] |= ((uint32)(* (reg8 *) CYREG_SFLASH_DIE_MINOR ) << 24u);
 2705              		.loc 1 2994 0
 2706 0082 0E4B     		ldr	r3, .L188+28
 2707 0084 1B78     		ldrb	r3, [r3]
 2708 0086 DBB2     		uxtb	r3, r3
 2709 0088 1906     		lsl	r1, r3, #24
 2710 008a 7B68     		ldr	r3, [r7, #4]
 2711 008c 0433     		add	r3, r3, #4
 2712 008e 7A68     		ldr	r2, [r7, #4]
 2713 0090 0432     		add	r2, r2, #4
 2714 0092 1268     		ldr	r2, [r2]
 2715 0094 0A43     		orr	r2, r1
 2716 0096 1A60     		str	r2, [r3]
2995:Generated_Source\PSoC4/CyLib.c **** #else
2996:Generated_Source\PSoC4/CyLib.c ****     uniqueId[0u]  =  (uint32) CY_GET_XTND_REG8((void CYFAR *) (CYREG_FLSHID_CUST_TABLES_LOT_LSB   )
2997:Generated_Source\PSoC4/CyLib.c ****     uniqueId[0u] |= ((uint32) CY_GET_XTND_REG8((void CYFAR *) (CYREG_FLSHID_CUST_TABLES_LOT_MSB   )
2998:Generated_Source\PSoC4/CyLib.c ****     uniqueId[0u] |= ((uint32) CY_GET_XTND_REG8((void CYFAR *) (CYREG_MLOGIC_REV_ID                )
2999:Generated_Source\PSoC4/CyLib.c ****     uniqueId[0u] |= ((uint32) CY_GET_XTND_REG8((void CYFAR *) (CYREG_FLSHID_CUST_TABLES_WAFER_NUM )
3000:Generated_Source\PSoC4/CyLib.c **** 
3001:Generated_Source\PSoC4/CyLib.c ****     uniqueId[1u]  =  (uint32) CY_GET_XTND_REG8((void CYFAR *) (CYREG_FLSHID_CUST_TABLES_X_LOC     )
3002:Generated_Source\PSoC4/CyLib.c ****     uniqueId[1u] |= ((uint32) CY_GET_XTND_REG8((void CYFAR *) (CYREG_FLSHID_CUST_TABLES_Y_LOC     )
3003:Generated_Source\PSoC4/CyLib.c ****     uniqueId[1u] |= ((uint32) CY_GET_XTND_REG8((void CYFAR *) (CYREG_FLSHID_CUST_TABLES_WRK_WK    )
3004:Generated_Source\PSoC4/CyLib.c ****     uniqueId[1u] |= ((uint32) CY_GET_XTND_REG8((void CYFAR *) (CYREG_FLSHID_CUST_TABLES_FAB_YR    )
3005:Generated_Source\PSoC4/CyLib.c **** #endif  /* (CY_PSOC4) */
3006:Generated_Source\PSoC4/CyLib.c **** }
 2717              		.loc 1 3006 0
 2718 0098 BD46     		mov	sp, r7
 2719 009a 02B0     		add	sp, sp, #8
 2720              		@ sp needed
 2721 009c 80BD     		pop	{r7, pc}
 2722              	.L189:
 2723 009e C046     		.align	2
 2724              	.L188:
 2725 00a0 78F1FF0F 		.word	268431736
 2726 00a4 79F1FF0F 		.word	268431737
 2727 00a8 7AF1FF0F 		.word	268431738
 2728 00ac 7BF1FF0F 		.word	268431739
 2729 00b0 7CF1FF0F 		.word	268431740
 2730 00b4 7DF1FF0F 		.word	268431741
 2731 00b8 7EF1FF0F 		.word	268431742
 2732 00bc 7FF1FF0F 		.word	268431743
 2733              		.cfi_endproc
 2734              	.LFE52:
 2735              		.size	CyGetUniqueId, .-CyGetUniqueId
ARM GAS  C:\Users\akita\AppData\Local\Temp\ccaIVzD4.s 			page 102


 2736              		.text
 2737              	.Letext0:
 2738              		.file 2 "Generated_Source\\PSoC4\\cytypes.h"
 2739              		.file 3 "Generated_Source\\PSoC4\\CyLib.h"
 2740              		.section	.debug_info,"",%progbits
 2741              	.Ldebug_info0:
 2742 0000 CE090000 		.4byte	0x9ce
 2743 0004 0400     		.2byte	0x4
 2744 0006 00000000 		.4byte	.Ldebug_abbrev0
 2745 000a 04       		.byte	0x4
 2746 000b 01       		.uleb128 0x1
 2747 000c A7050000 		.4byte	.LASF108
 2748 0010 01       		.byte	0x1
 2749 0011 46060000 		.4byte	.LASF109
 2750 0015 B2060000 		.4byte	.LASF110
 2751 0019 00000000 		.4byte	.Ldebug_ranges0+0
 2752 001d 00000000 		.4byte	0
 2753 0021 00000000 		.4byte	.Ldebug_line0
 2754 0025 02       		.uleb128 0x2
 2755 0026 01       		.byte	0x1
 2756 0027 06       		.byte	0x6
 2757 0028 DB000000 		.4byte	.LASF0
 2758 002c 02       		.uleb128 0x2
 2759 002d 01       		.byte	0x1
 2760 002e 08       		.byte	0x8
 2761 002f 35040000 		.4byte	.LASF1
 2762 0033 02       		.uleb128 0x2
 2763 0034 02       		.byte	0x2
 2764 0035 05       		.byte	0x5
 2765 0036 43040000 		.4byte	.LASF2
 2766 003a 02       		.uleb128 0x2
 2767 003b 02       		.byte	0x2
 2768 003c 07       		.byte	0x7
 2769 003d A8020000 		.4byte	.LASF3
 2770 0041 02       		.uleb128 0x2
 2771 0042 04       		.byte	0x4
 2772 0043 05       		.byte	0x5
 2773 0044 1A010000 		.4byte	.LASF4
 2774 0048 02       		.uleb128 0x2
 2775 0049 04       		.byte	0x4
 2776 004a 07       		.byte	0x7
 2777 004b 32020000 		.4byte	.LASF5
 2778 004f 02       		.uleb128 0x2
 2779 0050 08       		.byte	0x8
 2780 0051 05       		.byte	0x5
 2781 0052 CD000000 		.4byte	.LASF6
 2782 0056 02       		.uleb128 0x2
 2783 0057 08       		.byte	0x8
 2784 0058 07       		.byte	0x7
 2785 0059 67000000 		.4byte	.LASF7
 2786 005d 03       		.uleb128 0x3
 2787 005e 04       		.byte	0x4
 2788 005f 05       		.byte	0x5
 2789 0060 696E7400 		.ascii	"int\000"
 2790 0064 02       		.uleb128 0x2
 2791 0065 04       		.byte	0x4
 2792 0066 07       		.byte	0x7
ARM GAS  C:\Users\akita\AppData\Local\Temp\ccaIVzD4.s 			page 103


 2793 0067 16020000 		.4byte	.LASF8
 2794 006b 04       		.uleb128 0x4
 2795 006c 3A010000 		.4byte	.LASF9
 2796 0070 02       		.byte	0x2
 2797 0071 B901     		.2byte	0x1b9
 2798 0073 2C000000 		.4byte	0x2c
 2799 0077 04       		.uleb128 0x4
 2800 0078 0F000000 		.4byte	.LASF10
 2801 007c 02       		.byte	0x2
 2802 007d BA01     		.2byte	0x1ba
 2803 007f 3A000000 		.4byte	0x3a
 2804 0083 04       		.uleb128 0x4
 2805 0084 7A010000 		.4byte	.LASF11
 2806 0088 02       		.byte	0x2
 2807 0089 BB01     		.2byte	0x1bb
 2808 008b 48000000 		.4byte	0x48
 2809 008f 02       		.uleb128 0x2
 2810 0090 04       		.byte	0x4
 2811 0091 04       		.byte	0x4
 2812 0092 DC030000 		.4byte	.LASF12
 2813 0096 02       		.uleb128 0x2
 2814 0097 08       		.byte	0x8
 2815 0098 04       		.byte	0x4
 2816 0099 56010000 		.4byte	.LASF13
 2817 009d 02       		.uleb128 0x2
 2818 009e 01       		.byte	0x1
 2819 009f 08       		.byte	0x8
 2820 00a0 97040000 		.4byte	.LASF14
 2821 00a4 04       		.uleb128 0x4
 2822 00a5 9E050000 		.4byte	.LASF15
 2823 00a9 02       		.byte	0x2
 2824 00aa 5B02     		.2byte	0x25b
 2825 00ac 48000000 		.4byte	0x48
 2826 00b0 04       		.uleb128 0x4
 2827 00b1 1F040000 		.4byte	.LASF16
 2828 00b5 02       		.byte	0x2
 2829 00b6 6302     		.2byte	0x263
 2830 00b8 BC000000 		.4byte	0xbc
 2831 00bc 05       		.uleb128 0x5
 2832 00bd 6B000000 		.4byte	0x6b
 2833 00c1 04       		.uleb128 0x4
 2834 00c2 2E030000 		.4byte	.LASF17
 2835 00c6 02       		.byte	0x2
 2836 00c7 6502     		.2byte	0x265
 2837 00c9 CD000000 		.4byte	0xcd
 2838 00cd 05       		.uleb128 0x5
 2839 00ce 83000000 		.4byte	0x83
 2840 00d2 04       		.uleb128 0x4
 2841 00d3 9C040000 		.4byte	.LASF18
 2842 00d7 02       		.byte	0x2
 2843 00d8 7502     		.2byte	0x275
 2844 00da DE000000 		.4byte	0xde
 2845 00de 06       		.uleb128 0x6
 2846 00df 04       		.byte	0x4
 2847 00e0 E4000000 		.4byte	0xe4
 2848 00e4 07       		.uleb128 0x7
 2849 00e5 02       		.uleb128 0x2
ARM GAS  C:\Users\akita\AppData\Local\Temp\ccaIVzD4.s 			page 104


 2850 00e6 04       		.byte	0x4
 2851 00e7 07       		.byte	0x7
 2852 00e8 50030000 		.4byte	.LASF19
 2853 00ec 08       		.uleb128 0x8
 2854 00ed F1030000 		.4byte	.LASF20
 2855 00f1 03       		.byte	0x3
 2856 00f2 F5       		.byte	0xf5
 2857 00f3 DE000000 		.4byte	0xde
 2858 00f7 09       		.uleb128 0x9
 2859 00f8 83000000 		.4byte	0x83
 2860 00fc 07010000 		.4byte	0x107
 2861 0100 0A       		.uleb128 0xa
 2862 0101 E5000000 		.4byte	0xe5
 2863 0105 03       		.byte	0x3
 2864 0106 00       		.byte	0
 2865 0107 0B       		.uleb128 0xb
 2866 0108 35060000 		.4byte	.LASF21
 2867 010c 01       		.byte	0x1
 2868 010d 6B       		.byte	0x6b
 2869 010e 00000000 		.4byte	.LFB2
 2870 0112 1C000000 		.4byte	.LFE2-.LFB2
 2871 0116 01       		.uleb128 0x1
 2872 0117 9C       		.byte	0x9c
 2873 0118 0B       		.uleb128 0xb
 2874 0119 5F020000 		.4byte	.LASF22
 2875 011d 01       		.byte	0x1
 2876 011e 8B       		.byte	0x8b
 2877 011f 00000000 		.4byte	.LFB3
 2878 0123 18000000 		.4byte	.LFE3-.LFB3
 2879 0127 01       		.uleb128 0x1
 2880 0128 9C       		.byte	0x9c
 2881 0129 0C       		.uleb128 0xc
 2882 012a 1F000000 		.4byte	.LASF25
 2883 012e 01       		.byte	0x1
 2884 012f AD01     		.2byte	0x1ad
 2885 0131 00000000 		.4byte	.LFB4
 2886 0135 48000000 		.4byte	.LFE4-.LFB4
 2887 0139 01       		.uleb128 0x1
 2888 013a 9C       		.byte	0x9c
 2889 013b 6D010000 		.4byte	0x16d
 2890 013f 0D       		.uleb128 0xd
 2891 0140 6B040000 		.4byte	.LASF27
 2892 0144 01       		.byte	0x1
 2893 0145 AD01     		.2byte	0x1ad
 2894 0147 83000000 		.4byte	0x83
 2895 014b 02       		.uleb128 0x2
 2896 014c 91       		.byte	0x91
 2897 014d 64       		.sleb128 -28
 2898 014e 0E       		.uleb128 0xe
 2899 014f F8000000 		.4byte	.LASF23
 2900 0153 01       		.byte	0x1
 2901 0154 AF01     		.2byte	0x1af
 2902 0156 6B000000 		.4byte	0x6b
 2903 015a 02       		.uleb128 0x2
 2904 015b 91       		.byte	0x91
 2905 015c 6F       		.sleb128 -17
 2906 015d 0E       		.uleb128 0xe
ARM GAS  C:\Users\akita\AppData\Local\Temp\ccaIVzD4.s 			page 105


 2907 015e 72060000 		.4byte	.LASF24
 2908 0162 01       		.byte	0x1
 2909 0163 B001     		.2byte	0x1b0
 2910 0165 83000000 		.4byte	0x83
 2911 0169 02       		.uleb128 0x2
 2912 016a 91       		.byte	0x91
 2913 016b 68       		.sleb128 -24
 2914 016c 00       		.byte	0
 2915 016d 0F       		.uleb128 0xf
 2916 016e 19030000 		.4byte	.LASF26
 2917 0172 01       		.byte	0x1
 2918 0173 D901     		.2byte	0x1d9
 2919 0175 00000000 		.4byte	.LFB5
 2920 0179 50000000 		.4byte	.LFE5-.LFB5
 2921 017d 01       		.uleb128 0x1
 2922 017e 9C       		.byte	0x9c
 2923 017f 93010000 		.4byte	0x193
 2924 0183 0D       		.uleb128 0xd
 2925 0184 4F010000 		.4byte	.LASF28
 2926 0188 01       		.byte	0x1
 2927 0189 D901     		.2byte	0x1d9
 2928 018b 83000000 		.4byte	0x83
 2929 018f 02       		.uleb128 0x2
 2930 0190 91       		.byte	0x91
 2931 0191 74       		.sleb128 -12
 2932 0192 00       		.byte	0
 2933 0193 10       		.uleb128 0x10
 2934 0194 9C010000 		.4byte	.LASF36
 2935 0198 01       		.byte	0x1
 2936 0199 FE01     		.2byte	0x1fe
 2937 019b 83000000 		.4byte	0x83
 2938 019f 00000000 		.4byte	.LFB6
 2939 01a3 34000000 		.4byte	.LFE6-.LFB6
 2940 01a7 01       		.uleb128 0x1
 2941 01a8 9C       		.byte	0x9c
 2942 01a9 CC010000 		.4byte	0x1cc
 2943 01ad 0E       		.uleb128 0xe
 2944 01ae F8000000 		.4byte	.LASF23
 2945 01b2 01       		.byte	0x1
 2946 01b3 0002     		.2byte	0x200
 2947 01b5 6B000000 		.4byte	0x6b
 2948 01b9 02       		.uleb128 0x2
 2949 01ba 91       		.byte	0x91
 2950 01bb 6F       		.sleb128 -17
 2951 01bc 0E       		.uleb128 0xe
 2952 01bd 84030000 		.4byte	.LASF29
 2953 01c1 01       		.byte	0x1
 2954 01c2 0102     		.2byte	0x201
 2955 01c4 83000000 		.4byte	0x83
 2956 01c8 02       		.uleb128 0x2
 2957 01c9 91       		.byte	0x91
 2958 01ca 68       		.sleb128 -24
 2959 01cb 00       		.byte	0
 2960 01cc 0C       		.uleb128 0xc
 2961 01cd B9040000 		.4byte	.LASF30
 2962 01d1 01       		.byte	0x1
 2963 01d2 3502     		.2byte	0x235
ARM GAS  C:\Users\akita\AppData\Local\Temp\ccaIVzD4.s 			page 106


 2964 01d4 00000000 		.4byte	.LFB7
 2965 01d8 44000000 		.4byte	.LFE7-.LFB7
 2966 01dc 01       		.uleb128 0x1
 2967 01dd 9C       		.byte	0x9c
 2968 01de 01020000 		.4byte	0x201
 2969 01e2 0D       		.uleb128 0xd
 2970 01e3 82050000 		.4byte	.LASF31
 2971 01e7 01       		.byte	0x1
 2972 01e8 3502     		.2byte	0x235
 2973 01ea 83000000 		.4byte	0x83
 2974 01ee 02       		.uleb128 0x2
 2975 01ef 91       		.byte	0x91
 2976 01f0 64       		.sleb128 -28
 2977 01f1 0E       		.uleb128 0xe
 2978 01f2 F8000000 		.4byte	.LASF23
 2979 01f6 01       		.byte	0x1
 2980 01f7 3702     		.2byte	0x237
 2981 01f9 6B000000 		.4byte	0x6b
 2982 01fd 02       		.uleb128 0x2
 2983 01fe 91       		.byte	0x91
 2984 01ff 6F       		.sleb128 -17
 2985 0200 00       		.byte	0
 2986 0201 0C       		.uleb128 0xc
 2987 0202 F2020000 		.4byte	.LASF32
 2988 0206 01       		.byte	0x1
 2989 0207 6F02     		.2byte	0x26f
 2990 0209 00000000 		.4byte	.LFB8
 2991 020d 98000000 		.4byte	.LFE8-.LFB8
 2992 0211 01       		.uleb128 0x1
 2993 0212 9C       		.byte	0x9c
 2994 0213 54020000 		.4byte	0x254
 2995 0217 0D       		.uleb128 0xd
 2996 0218 E7000000 		.4byte	.LASF33
 2997 021c 01       		.byte	0x1
 2998 021d 6F02     		.2byte	0x26f
 2999 021f 83000000 		.4byte	0x83
 3000 0223 02       		.uleb128 0x2
 3001 0224 91       		.byte	0x91
 3002 0225 4C       		.sleb128 -52
 3003 0226 0E       		.uleb128 0xe
 3004 0227 7E000000 		.4byte	.LASF34
 3005 022b 01       		.byte	0x1
 3006 022c 7202     		.2byte	0x272
 3007 022e 64020000 		.4byte	0x264
 3008 0232 02       		.uleb128 0x2
 3009 0233 91       		.byte	0x91
 3010 0234 64       		.sleb128 -28
 3011 0235 0E       		.uleb128 0xe
 3012 0236 30010000 		.4byte	.LASF35
 3013 023a 01       		.byte	0x1
 3014 023b 7302     		.2byte	0x273
 3015 023d 69020000 		.4byte	0x269
 3016 0241 02       		.uleb128 0x2
 3017 0242 91       		.byte	0x91
 3018 0243 54       		.sleb128 -44
 3019 0244 0E       		.uleb128 0xe
 3020 0245 F8000000 		.4byte	.LASF23
ARM GAS  C:\Users\akita\AppData\Local\Temp\ccaIVzD4.s 			page 107


 3021 0249 01       		.byte	0x1
 3022 024a 8402     		.2byte	0x284
 3023 024c 6B000000 		.4byte	0x6b
 3024 0250 02       		.uleb128 0x2
 3025 0251 91       		.byte	0x91
 3026 0252 6F       		.sleb128 -17
 3027 0253 00       		.byte	0
 3028 0254 09       		.uleb128 0x9
 3029 0255 83000000 		.4byte	0x83
 3030 0259 64020000 		.4byte	0x264
 3031 025d 0A       		.uleb128 0xa
 3032 025e E5000000 		.4byte	0xe5
 3033 0262 01       		.byte	0x1
 3034 0263 00       		.byte	0
 3035 0264 05       		.uleb128 0x5
 3036 0265 54020000 		.4byte	0x254
 3037 0269 05       		.uleb128 0x5
 3038 026a F7000000 		.4byte	0xf7
 3039 026e 10       		.uleb128 0x10
 3040 026f 75040000 		.4byte	.LASF37
 3041 0273 01       		.byte	0x1
 3042 0274 0304     		.2byte	0x403
 3043 0276 A4000000 		.4byte	0xa4
 3044 027a 00000000 		.4byte	.LFB9
 3045 027e 74000000 		.4byte	.LFE9-.LFB9
 3046 0282 01       		.uleb128 0x1
 3047 0283 9C       		.byte	0x9c
 3048 0284 A7020000 		.4byte	0x2a7
 3049 0288 0D       		.uleb128 0xd
 3050 0289 78050000 		.4byte	.LASF38
 3051 028d 01       		.byte	0x1
 3052 028e 0304     		.2byte	0x403
 3053 0290 83000000 		.4byte	0x83
 3054 0294 02       		.uleb128 0x2
 3055 0295 91       		.byte	0x91
 3056 0296 6C       		.sleb128 -20
 3057 0297 0E       		.uleb128 0xe
 3058 0298 43030000 		.4byte	.LASF39
 3059 029c 01       		.byte	0x1
 3060 029d 0504     		.2byte	0x405
 3061 029f A4000000 		.4byte	0xa4
 3062 02a3 02       		.uleb128 0x2
 3063 02a4 91       		.byte	0x91
 3064 02a5 74       		.sleb128 -12
 3065 02a6 00       		.byte	0
 3066 02a7 11       		.uleb128 0x11
 3067 02a8 5A050000 		.4byte	.LASF40
 3068 02ac 01       		.byte	0x1
 3069 02ad 9104     		.2byte	0x491
 3070 02af 00000000 		.4byte	.LFB10
 3071 02b3 2C000000 		.4byte	.LFE10-.LFB10
 3072 02b7 01       		.uleb128 0x1
 3073 02b8 9C       		.byte	0x9c
 3074 02b9 12       		.uleb128 0x12
 3075 02ba 81010000 		.4byte	.LASF41
 3076 02be 01       		.byte	0x1
 3077 02bf B304     		.2byte	0x4b3
ARM GAS  C:\Users\akita\AppData\Local\Temp\ccaIVzD4.s 			page 108


 3078 02c1 83000000 		.4byte	0x83
 3079 02c5 00000000 		.4byte	.LFB11
 3080 02c9 20000000 		.4byte	.LFE11-.LFB11
 3081 02cd 01       		.uleb128 0x1
 3082 02ce 9C       		.byte	0x9c
 3083 02cf E3020000 		.4byte	0x2e3
 3084 02d3 0E       		.uleb128 0xe
 3085 02d4 A6060000 		.4byte	.LASF42
 3086 02d8 01       		.byte	0x1
 3087 02d9 B504     		.2byte	0x4b5
 3088 02db 83000000 		.4byte	0x83
 3089 02df 02       		.uleb128 0x2
 3090 02e0 91       		.byte	0x91
 3091 02e1 74       		.sleb128 -12
 3092 02e2 00       		.byte	0
 3093 02e3 0C       		.uleb128 0xc
 3094 02e4 8A050000 		.4byte	.LASF43
 3095 02e8 01       		.byte	0x1
 3096 02e9 E204     		.2byte	0x4e2
 3097 02eb 00000000 		.4byte	.LFB12
 3098 02ef 58000000 		.4byte	.LFE12-.LFB12
 3099 02f3 01       		.uleb128 0x1
 3100 02f4 9C       		.byte	0x9c
 3101 02f5 18030000 		.4byte	0x318
 3102 02f9 0D       		.uleb128 0xd
 3103 02fa 82050000 		.4byte	.LASF31
 3104 02fe 01       		.byte	0x1
 3105 02ff E204     		.2byte	0x4e2
 3106 0301 83000000 		.4byte	0x83
 3107 0305 02       		.uleb128 0x2
 3108 0306 91       		.byte	0x91
 3109 0307 64       		.sleb128 -28
 3110 0308 0E       		.uleb128 0xe
 3111 0309 F8000000 		.4byte	.LASF23
 3112 030d 01       		.byte	0x1
 3113 030e E404     		.2byte	0x4e4
 3114 0310 6B000000 		.4byte	0x6b
 3115 0314 02       		.uleb128 0x2
 3116 0315 91       		.byte	0x91
 3117 0316 6F       		.sleb128 -17
 3118 0317 00       		.byte	0
 3119 0318 0C       		.uleb128 0xc
 3120 0319 E2030000 		.4byte	.LASF44
 3121 031d 01       		.byte	0x1
 3122 031e 4608     		.2byte	0x846
 3123 0320 00000000 		.4byte	.LFB13
 3124 0324 60000000 		.4byte	.LFE13-.LFB13
 3125 0328 01       		.uleb128 0x1
 3126 0329 9C       		.byte	0x9c
 3127 032a 3E030000 		.4byte	0x33e
 3128 032e 0D       		.uleb128 0xd
 3129 032f 24040000 		.4byte	.LASF45
 3130 0333 01       		.byte	0x1
 3131 0334 4608     		.2byte	0x846
 3132 0336 83000000 		.4byte	0x83
 3133 033a 02       		.uleb128 0x2
 3134 033b 91       		.byte	0x91
ARM GAS  C:\Users\akita\AppData\Local\Temp\ccaIVzD4.s 			page 109


 3135 033c 74       		.sleb128 -12
 3136 033d 00       		.byte	0
 3137 033e 11       		.uleb128 0x11
 3138 033f 3B050000 		.4byte	.LASF46
 3139 0343 01       		.byte	0x1
 3140 0344 6408     		.2byte	0x864
 3141 0346 00000000 		.4byte	.LFB14
 3142 034a 28000000 		.4byte	.LFE14-.LFB14
 3143 034e 01       		.uleb128 0x1
 3144 034f 9C       		.byte	0x9c
 3145 0350 13       		.uleb128 0x13
 3146 0351 44020000 		.4byte	.LASF86
 3147 0355 01       		.byte	0x1
 3148 0356 7608     		.2byte	0x876
 3149 0358 83000000 		.4byte	0x83
 3150 035c 00000000 		.4byte	.LFB15
 3151 0360 18000000 		.4byte	.LFE15-.LFB15
 3152 0364 01       		.uleb128 0x1
 3153 0365 9C       		.byte	0x9c
 3154 0366 11       		.uleb128 0x11
 3155 0367 63010000 		.4byte	.LASF47
 3156 036b 01       		.byte	0x1
 3157 036c 8608     		.2byte	0x886
 3158 036e 00000000 		.4byte	.LFB16
 3159 0372 14000000 		.4byte	.LFE16-.LFB16
 3160 0376 01       		.uleb128 0x1
 3161 0377 9C       		.byte	0x9c
 3162 0378 12       		.uleb128 0x12
 3163 0379 94020000 		.4byte	.LASF48
 3164 037d 01       		.byte	0x1
 3165 037e A008     		.2byte	0x8a0
 3166 0380 83000000 		.4byte	0x83
 3167 0384 00000000 		.4byte	.LFB17
 3168 0388 30000000 		.4byte	.LFE17-.LFB17
 3169 038c 01       		.uleb128 0x1
 3170 038d 9C       		.byte	0x9c
 3171 038e B1030000 		.4byte	0x3b1
 3172 0392 0D       		.uleb128 0xd
 3173 0393 90040000 		.4byte	.LASF49
 3174 0397 01       		.byte	0x1
 3175 0398 A008     		.2byte	0x8a0
 3176 039a 83000000 		.4byte	0x83
 3177 039e 02       		.uleb128 0x2
 3178 039f 91       		.byte	0x91
 3179 03a0 6C       		.sleb128 -20
 3180 03a1 0E       		.uleb128 0xe
 3181 03a2 43030000 		.4byte	.LASF39
 3182 03a6 01       		.byte	0x1
 3183 03a7 A208     		.2byte	0x8a2
 3184 03a9 83000000 		.4byte	0x83
 3185 03ad 02       		.uleb128 0x2
 3186 03ae 91       		.byte	0x91
 3187 03af 74       		.sleb128 -12
 3188 03b0 00       		.byte	0
 3189 03b1 12       		.uleb128 0x12
 3190 03b2 59000000 		.4byte	.LASF50
 3191 03b6 01       		.byte	0x1
ARM GAS  C:\Users\akita\AppData\Local\Temp\ccaIVzD4.s 			page 110


 3192 03b7 B708     		.2byte	0x8b7
 3193 03b9 83000000 		.4byte	0x83
 3194 03bd 00000000 		.4byte	.LFB18
 3195 03c1 24000000 		.4byte	.LFE18-.LFB18
 3196 03c5 01       		.uleb128 0x1
 3197 03c6 9C       		.byte	0x9c
 3198 03c7 DB030000 		.4byte	0x3db
 3199 03cb 0E       		.uleb128 0xe
 3200 03cc 16000000 		.4byte	.LASF51
 3201 03d0 01       		.byte	0x1
 3202 03d1 B908     		.2byte	0x8b9
 3203 03d3 83000000 		.4byte	0x83
 3204 03d7 02       		.uleb128 0x2
 3205 03d8 91       		.byte	0x91
 3206 03d9 74       		.sleb128 -12
 3207 03da 00       		.byte	0
 3208 03db 0F       		.uleb128 0xf
 3209 03dc 89000000 		.4byte	.LASF52
 3210 03e0 01       		.byte	0x1
 3211 03e1 CE08     		.2byte	0x8ce
 3212 03e3 00000000 		.4byte	.LFB19
 3213 03e7 18000000 		.4byte	.LFE19-.LFB19
 3214 03eb 01       		.uleb128 0x1
 3215 03ec 9C       		.byte	0x9c
 3216 03ed 01040000 		.4byte	0x401
 3217 03f1 0D       		.uleb128 0xd
 3218 03f2 97010000 		.4byte	.LASF53
 3219 03f6 01       		.byte	0x1
 3220 03f7 CE08     		.2byte	0x8ce
 3221 03f9 83000000 		.4byte	0x83
 3222 03fd 02       		.uleb128 0x2
 3223 03fe 91       		.byte	0x91
 3224 03ff 74       		.sleb128 -12
 3225 0400 00       		.byte	0
 3226 0401 10       		.uleb128 0x10
 3227 0402 07030000 		.4byte	.LASF54
 3228 0406 01       		.byte	0x1
 3229 0407 E708     		.2byte	0x8e7
 3230 0409 D2000000 		.4byte	0xd2
 3231 040d 00000000 		.4byte	.LFB20
 3232 0411 48000000 		.4byte	.LFE20-.LFB20
 3233 0415 01       		.uleb128 0x1
 3234 0416 9C       		.byte	0x9c
 3235 0417 58040000 		.4byte	0x458
 3236 041b 0D       		.uleb128 0xd
 3237 041c E2020000 		.4byte	.LASF55
 3238 0420 01       		.byte	0x1
 3239 0421 E708     		.2byte	0x8e7
 3240 0423 6B000000 		.4byte	0x6b
 3241 0427 02       		.uleb128 0x2
 3242 0428 91       		.byte	0x91
 3243 0429 6F       		.sleb128 -17
 3244 042a 0D       		.uleb128 0xd
 3245 042b 7C030000 		.4byte	.LASF56
 3246 042f 01       		.byte	0x1
 3247 0430 E708     		.2byte	0x8e7
 3248 0432 D2000000 		.4byte	0xd2
ARM GAS  C:\Users\akita\AppData\Local\Temp\ccaIVzD4.s 			page 111


 3249 0436 02       		.uleb128 0x2
 3250 0437 91       		.byte	0x91
 3251 0438 68       		.sleb128 -24
 3252 0439 0E       		.uleb128 0xe
 3253 043a 4B000000 		.4byte	.LASF57
 3254 043e 01       		.byte	0x1
 3255 043f E908     		.2byte	0x8e9
 3256 0441 D2000000 		.4byte	0xd2
 3257 0445 02       		.uleb128 0x2
 3258 0446 91       		.byte	0x91
 3259 0447 70       		.sleb128 -16
 3260 0448 0E       		.uleb128 0xe
 3261 0449 00000000 		.4byte	.LASF58
 3262 044d 01       		.byte	0x1
 3263 044e EA08     		.2byte	0x8ea
 3264 0450 58040000 		.4byte	0x458
 3265 0454 02       		.uleb128 0x2
 3266 0455 91       		.byte	0x91
 3267 0456 74       		.sleb128 -12
 3268 0457 00       		.byte	0
 3269 0458 06       		.uleb128 0x6
 3270 0459 04       		.byte	0x4
 3271 045a D2000000 		.4byte	0xd2
 3272 045e 10       		.uleb128 0x10
 3273 045f 59040000 		.4byte	.LASF59
 3274 0463 01       		.byte	0x1
 3275 0464 0909     		.2byte	0x909
 3276 0466 D2000000 		.4byte	0xd2
 3277 046a 00000000 		.4byte	.LFB21
 3278 046e 34000000 		.4byte	.LFE21-.LFB21
 3279 0472 01       		.uleb128 0x1
 3280 0473 9C       		.byte	0x9c
 3281 0474 97040000 		.4byte	0x497
 3282 0478 0D       		.uleb128 0xd
 3283 0479 E2020000 		.4byte	.LASF55
 3284 047d 01       		.byte	0x1
 3285 047e 0909     		.2byte	0x909
 3286 0480 6B000000 		.4byte	0x6b
 3287 0484 02       		.uleb128 0x2
 3288 0485 91       		.byte	0x91
 3289 0486 6F       		.sleb128 -17
 3290 0487 0E       		.uleb128 0xe
 3291 0488 00000000 		.4byte	.LASF58
 3292 048c 01       		.byte	0x1
 3293 048d 0B09     		.2byte	0x90b
 3294 048f 58040000 		.4byte	0x458
 3295 0493 02       		.uleb128 0x2
 3296 0494 91       		.byte	0x91
 3297 0495 74       		.sleb128 -12
 3298 0496 00       		.byte	0
 3299 0497 10       		.uleb128 0x10
 3300 0498 D3020000 		.4byte	.LASF60
 3301 049c 01       		.byte	0x1
 3302 049d 1F09     		.2byte	0x91f
 3303 049f D2000000 		.4byte	0xd2
 3304 04a3 00000000 		.4byte	.LFB22
 3305 04a7 4C000000 		.4byte	.LFE22-.LFB22
ARM GAS  C:\Users\akita\AppData\Local\Temp\ccaIVzD4.s 			page 112


 3306 04ab 01       		.uleb128 0x1
 3307 04ac 9C       		.byte	0x9c
 3308 04ad EE040000 		.4byte	0x4ee
 3309 04b1 0D       		.uleb128 0xd
 3310 04b2 E2020000 		.4byte	.LASF55
 3311 04b6 01       		.byte	0x1
 3312 04b7 1F09     		.2byte	0x91f
 3313 04b9 6B000000 		.4byte	0x6b
 3314 04bd 02       		.uleb128 0x2
 3315 04be 91       		.byte	0x91
 3316 04bf 6F       		.sleb128 -17
 3317 04c0 0D       		.uleb128 0xd
 3318 04c1 7C030000 		.4byte	.LASF56
 3319 04c5 01       		.byte	0x1
 3320 04c6 1F09     		.2byte	0x91f
 3321 04c8 D2000000 		.4byte	0xd2
 3322 04cc 02       		.uleb128 0x2
 3323 04cd 91       		.byte	0x91
 3324 04ce 68       		.sleb128 -24
 3325 04cf 0E       		.uleb128 0xe
 3326 04d0 4B000000 		.4byte	.LASF57
 3327 04d4 01       		.byte	0x1
 3328 04d5 2109     		.2byte	0x921
 3329 04d7 D2000000 		.4byte	0xd2
 3330 04db 02       		.uleb128 0x2
 3331 04dc 91       		.byte	0x91
 3332 04dd 70       		.sleb128 -16
 3333 04de 0E       		.uleb128 0xe
 3334 04df 00000000 		.4byte	.LASF58
 3335 04e3 01       		.byte	0x1
 3336 04e4 2209     		.2byte	0x922
 3337 04e6 58040000 		.4byte	0x458
 3338 04ea 02       		.uleb128 0x2
 3339 04eb 91       		.byte	0x91
 3340 04ec 74       		.sleb128 -12
 3341 04ed 00       		.byte	0
 3342 04ee 10       		.uleb128 0x10
 3343 04ef 03040000 		.4byte	.LASF61
 3344 04f3 01       		.byte	0x1
 3345 04f4 3B09     		.2byte	0x93b
 3346 04f6 D2000000 		.4byte	0xd2
 3347 04fa 00000000 		.4byte	.LFB23
 3348 04fe 36000000 		.4byte	.LFE23-.LFB23
 3349 0502 01       		.uleb128 0x1
 3350 0503 9C       		.byte	0x9c
 3351 0504 27050000 		.4byte	0x527
 3352 0508 0D       		.uleb128 0xd
 3353 0509 E2020000 		.4byte	.LASF55
 3354 050d 01       		.byte	0x1
 3355 050e 3B09     		.2byte	0x93b
 3356 0510 6B000000 		.4byte	0x6b
 3357 0514 02       		.uleb128 0x2
 3358 0515 91       		.byte	0x91
 3359 0516 6F       		.sleb128 -17
 3360 0517 0E       		.uleb128 0xe
 3361 0518 00000000 		.4byte	.LASF58
 3362 051c 01       		.byte	0x1
ARM GAS  C:\Users\akita\AppData\Local\Temp\ccaIVzD4.s 			page 113


 3363 051d 3D09     		.2byte	0x93d
 3364 051f 58040000 		.4byte	0x458
 3365 0523 02       		.uleb128 0x2
 3366 0524 91       		.byte	0x91
 3367 0525 74       		.sleb128 -12
 3368 0526 00       		.byte	0
 3369 0527 0C       		.uleb128 0xc
 3370 0528 CB030000 		.4byte	.LASF62
 3371 052c 01       		.byte	0x1
 3372 052d 4E09     		.2byte	0x94e
 3373 052f 00000000 		.4byte	.LFB24
 3374 0533 A8000000 		.4byte	.LFE24-.LFB24
 3375 0537 01       		.uleb128 0x1
 3376 0538 9C       		.byte	0x9c
 3377 0539 89050000 		.4byte	0x589
 3378 053d 0D       		.uleb128 0xd
 3379 053e E2020000 		.4byte	.LASF55
 3380 0542 01       		.byte	0x1
 3381 0543 4E09     		.2byte	0x94e
 3382 0545 6B000000 		.4byte	0x6b
 3383 0549 02       		.uleb128 0x2
 3384 054a 91       		.byte	0x91
 3385 054b 5F       		.sleb128 -33
 3386 054c 0D       		.uleb128 0xd
 3387 054d E9020000 		.4byte	.LASF63
 3388 0551 01       		.byte	0x1
 3389 0552 4E09     		.2byte	0x94e
 3390 0554 6B000000 		.4byte	0x6b
 3391 0558 02       		.uleb128 0x2
 3392 0559 91       		.byte	0x91
 3393 055a 5E       		.sleb128 -34
 3394 055b 0E       		.uleb128 0xe
 3395 055c F8000000 		.4byte	.LASF23
 3396 0560 01       		.byte	0x1
 3397 0561 5009     		.2byte	0x950
 3398 0563 6B000000 		.4byte	0x6b
 3399 0567 02       		.uleb128 0x2
 3400 0568 91       		.byte	0x91
 3401 0569 6B       		.sleb128 -21
 3402 056a 0E       		.uleb128 0xe
 3403 056b 5D010000 		.4byte	.LASF64
 3404 056f 01       		.byte	0x1
 3405 0570 5109     		.2byte	0x951
 3406 0572 83000000 		.4byte	0x83
 3407 0576 02       		.uleb128 0x2
 3408 0577 91       		.byte	0x91
 3409 0578 6C       		.sleb128 -20
 3410 0579 0E       		.uleb128 0xe
 3411 057a E0010000 		.4byte	.LASF65
 3412 057e 01       		.byte	0x1
 3413 057f 5209     		.2byte	0x952
 3414 0581 83000000 		.4byte	0x83
 3415 0585 02       		.uleb128 0x2
 3416 0586 91       		.byte	0x91
 3417 0587 64       		.sleb128 -28
 3418 0588 00       		.byte	0
 3419 0589 10       		.uleb128 0x10
ARM GAS  C:\Users\akita\AppData\Local\Temp\ccaIVzD4.s 			page 114


 3420 058a B4010000 		.4byte	.LASF66
 3421 058e 01       		.byte	0x1
 3422 058f 7009     		.2byte	0x970
 3423 0591 6B000000 		.4byte	0x6b
 3424 0595 00000000 		.4byte	.LFB25
 3425 0599 5C000000 		.4byte	.LFE25-.LFB25
 3426 059d 01       		.uleb128 0x1
 3427 059e 9C       		.byte	0x9c
 3428 059f C2050000 		.4byte	0x5c2
 3429 05a3 0D       		.uleb128 0xd
 3430 05a4 E2020000 		.4byte	.LASF55
 3431 05a8 01       		.byte	0x1
 3432 05a9 7009     		.2byte	0x970
 3433 05ab 6B000000 		.4byte	0x6b
 3434 05af 02       		.uleb128 0x2
 3435 05b0 91       		.byte	0x91
 3436 05b1 6F       		.sleb128 -17
 3437 05b2 0E       		.uleb128 0xe
 3438 05b3 E9020000 		.4byte	.LASF63
 3439 05b7 01       		.byte	0x1
 3440 05b8 7209     		.2byte	0x972
 3441 05ba 6B000000 		.4byte	0x6b
 3442 05be 02       		.uleb128 0x2
 3443 05bf 91       		.byte	0x91
 3444 05c0 77       		.sleb128 -9
 3445 05c1 00       		.byte	0
 3446 05c2 0F       		.uleb128 0xf
 3447 05c3 4D040000 		.4byte	.LASF67
 3448 05c7 01       		.byte	0x1
 3449 05c8 8509     		.2byte	0x985
 3450 05ca 00000000 		.4byte	.LFB26
 3451 05ce 28000000 		.4byte	.LFE26-.LFB26
 3452 05d2 01       		.uleb128 0x1
 3453 05d3 9C       		.byte	0x9c
 3454 05d4 E8050000 		.4byte	0x5e8
 3455 05d8 0D       		.uleb128 0xd
 3456 05d9 E2020000 		.4byte	.LASF55
 3457 05dd 01       		.byte	0x1
 3458 05de 8509     		.2byte	0x985
 3459 05e0 6B000000 		.4byte	0x6b
 3460 05e4 02       		.uleb128 0x2
 3461 05e5 91       		.byte	0x91
 3462 05e6 77       		.sleb128 -9
 3463 05e7 00       		.byte	0
 3464 05e8 12       		.uleb128 0x12
 3465 05e9 BF000000 		.4byte	.LASF68
 3466 05ed 01       		.byte	0x1
 3467 05ee 9709     		.2byte	0x997
 3468 05f0 6B000000 		.4byte	0x6b
 3469 05f4 00000000 		.4byte	.LFB27
 3470 05f8 30000000 		.4byte	.LFE27-.LFB27
 3471 05fc 01       		.uleb128 0x1
 3472 05fd 9C       		.byte	0x9c
 3473 05fe 12060000 		.4byte	0x612
 3474 0602 0D       		.uleb128 0xd
 3475 0603 E2020000 		.4byte	.LASF55
 3476 0607 01       		.byte	0x1
ARM GAS  C:\Users\akita\AppData\Local\Temp\ccaIVzD4.s 			page 115


 3477 0608 9709     		.2byte	0x997
 3478 060a 6B000000 		.4byte	0x6b
 3479 060e 02       		.uleb128 0x2
 3480 060f 91       		.byte	0x91
 3481 0610 77       		.sleb128 -9
 3482 0611 00       		.byte	0
 3483 0612 0F       		.uleb128 0xf
 3484 0613 23010000 		.4byte	.LASF69
 3485 0617 01       		.byte	0x1
 3486 0618 A709     		.2byte	0x9a7
 3487 061a 00000000 		.4byte	.LFB28
 3488 061e 28000000 		.4byte	.LFE28-.LFB28
 3489 0622 01       		.uleb128 0x1
 3490 0623 9C       		.byte	0x9c
 3491 0624 38060000 		.4byte	0x638
 3492 0628 0D       		.uleb128 0xd
 3493 0629 E2020000 		.4byte	.LASF55
 3494 062d 01       		.byte	0x1
 3495 062e A709     		.2byte	0x9a7
 3496 0630 6B000000 		.4byte	0x6b
 3497 0634 02       		.uleb128 0x2
 3498 0635 91       		.byte	0x91
 3499 0636 77       		.sleb128 -9
 3500 0637 00       		.byte	0
 3501 0638 0F       		.uleb128 0xf
 3502 0639 6F020000 		.4byte	.LASF70
 3503 063d 01       		.byte	0x1
 3504 063e B509     		.2byte	0x9b5
 3505 0640 00000000 		.4byte	.LFB29
 3506 0644 28000000 		.4byte	.LFE29-.LFB29
 3507 0648 01       		.uleb128 0x1
 3508 0649 9C       		.byte	0x9c
 3509 064a 5E060000 		.4byte	0x65e
 3510 064e 0D       		.uleb128 0xd
 3511 064f E2020000 		.4byte	.LASF55
 3512 0653 01       		.byte	0x1
 3513 0654 B509     		.2byte	0x9b5
 3514 0656 6B000000 		.4byte	0x6b
 3515 065a 02       		.uleb128 0x2
 3516 065b 91       		.byte	0x91
 3517 065c 77       		.sleb128 -9
 3518 065d 00       		.byte	0
 3519 065e 0F       		.uleb128 0xf
 3520 065f 6A030000 		.4byte	.LASF71
 3521 0663 01       		.byte	0x1
 3522 0664 C409     		.2byte	0x9c4
 3523 0666 00000000 		.4byte	.LFB30
 3524 066a 28000000 		.4byte	.LFE30-.LFB30
 3525 066e 01       		.uleb128 0x1
 3526 066f 9C       		.byte	0x9c
 3527 0670 84060000 		.4byte	0x684
 3528 0674 0D       		.uleb128 0xd
 3529 0675 E2020000 		.4byte	.LASF55
 3530 0679 01       		.byte	0x1
 3531 067a C409     		.2byte	0x9c4
 3532 067c 6B000000 		.4byte	0x6b
 3533 0680 02       		.uleb128 0x2
ARM GAS  C:\Users\akita\AppData\Local\Temp\ccaIVzD4.s 			page 116


 3534 0681 91       		.byte	0x91
 3535 0682 77       		.sleb128 -9
 3536 0683 00       		.byte	0
 3537 0684 0F       		.uleb128 0xf
 3538 0685 2E040000 		.4byte	.LASF72
 3539 0689 01       		.byte	0x1
 3540 068a D309     		.2byte	0x9d3
 3541 068c 00000000 		.4byte	.LFB31
 3542 0690 14000000 		.4byte	.LFE31-.LFB31
 3543 0694 01       		.uleb128 0x1
 3544 0695 9C       		.byte	0x9c
 3545 0696 AA060000 		.4byte	0x6aa
 3546 069a 0D       		.uleb128 0xd
 3547 069b 90040000 		.4byte	.LASF49
 3548 069f 01       		.byte	0x1
 3549 06a0 D309     		.2byte	0x9d3
 3550 06a2 6B000000 		.4byte	0x6b
 3551 06a6 02       		.uleb128 0x2
 3552 06a7 91       		.byte	0x91
 3553 06a8 77       		.sleb128 -9
 3554 06a9 00       		.byte	0
 3555 06aa 11       		.uleb128 0x11
 3556 06ab 96000000 		.4byte	.LASF73
 3557 06af 01       		.byte	0x1
 3558 06b0 EB09     		.2byte	0x9eb
 3559 06b2 00000000 		.4byte	.LFB32
 3560 06b6 20000000 		.4byte	.LFE32-.LFB32
 3561 06ba 01       		.uleb128 0x1
 3562 06bb 9C       		.byte	0x9c
 3563 06bc 0C       		.uleb128 0xc
 3564 06bd 01050000 		.4byte	.LASF74
 3565 06c1 01       		.byte	0x1
 3566 06c2 FF09     		.2byte	0x9ff
 3567 06c4 00000000 		.4byte	.LFB33
 3568 06c8 48000000 		.4byte	.LFE33-.LFB33
 3569 06cc 01       		.uleb128 0x1
 3570 06cd 9C       		.byte	0x9c
 3571 06ce E2060000 		.4byte	0x6e2
 3572 06d2 0D       		.uleb128 0xd
 3573 06d3 12040000 		.4byte	.LASF75
 3574 06d7 01       		.byte	0x1
 3575 06d8 FF09     		.2byte	0x9ff
 3576 06da 83000000 		.4byte	0x83
 3577 06de 02       		.uleb128 0x2
 3578 06df 91       		.byte	0x91
 3579 06e0 74       		.sleb128 -12
 3580 06e1 00       		.byte	0
 3581 06e2 0C       		.uleb128 0xc
 3582 06e3 86040000 		.4byte	.LASF76
 3583 06e7 01       		.byte	0x1
 3584 06e8 160A     		.2byte	0xa16
 3585 06ea 00000000 		.4byte	.LFB34
 3586 06ee 28000000 		.4byte	.LFE34-.LFB34
 3587 06f2 01       		.uleb128 0x1
 3588 06f3 9C       		.byte	0x9c
 3589 06f4 08070000 		.4byte	0x708
 3590 06f8 0D       		.uleb128 0xd
ARM GAS  C:\Users\akita\AppData\Local\Temp\ccaIVzD4.s 			page 117


 3591 06f9 65060000 		.4byte	.LASF77
 3592 06fd 01       		.byte	0x1
 3593 06fe 160A     		.2byte	0xa16
 3594 0700 77000000 		.4byte	0x77
 3595 0704 02       		.uleb128 0x2
 3596 0705 91       		.byte	0x91
 3597 0706 76       		.sleb128 -10
 3598 0707 00       		.byte	0
 3599 0708 0C       		.uleb128 0xc
 3600 0709 EC000000 		.4byte	.LASF78
 3601 070d 01       		.byte	0x1
 3602 070e 240A     		.2byte	0xa24
 3603 0710 00000000 		.4byte	.LFB35
 3604 0714 84000000 		.4byte	.LFE35-.LFB35
 3605 0718 01       		.uleb128 0x1
 3606 0719 9C       		.byte	0x9c
 3607 071a 2E070000 		.4byte	0x72e
 3608 071e 0D       		.uleb128 0xd
 3609 071f E7000000 		.4byte	.LASF33
 3610 0723 01       		.byte	0x1
 3611 0724 240A     		.2byte	0xa24
 3612 0726 83000000 		.4byte	0x83
 3613 072a 02       		.uleb128 0x2
 3614 072b 91       		.byte	0x91
 3615 072c 74       		.sleb128 -12
 3616 072d 00       		.byte	0
 3617 072e 14       		.uleb128 0x14
 3618 072f 34030000 		.4byte	.LASF79
 3619 0733 01       		.byte	0x1
 3620 0734 440A     		.2byte	0xa44
 3621 0736 00000000 		.4byte	.LFB36
 3622 073a 24000000 		.4byte	.LFE36-.LFB36
 3623 073e 01       		.uleb128 0x1
 3624 073f 9C       		.byte	0x9c
 3625 0740 0C       		.uleb128 0xc
 3626 0741 D2010000 		.4byte	.LASF80
 3627 0745 01       		.byte	0x1
 3628 0746 610A     		.2byte	0xa61
 3629 0748 00000000 		.4byte	.LFB37
 3630 074c 64000000 		.4byte	.LFE37-.LFB37
 3631 0750 01       		.uleb128 0x1
 3632 0751 9C       		.byte	0x9c
 3633 0752 64070000 		.4byte	0x764
 3634 0756 15       		.uleb128 0x15
 3635 0757 6900     		.ascii	"i\000"
 3636 0759 01       		.byte	0x1
 3637 075a 630A     		.2byte	0xa63
 3638 075c 83000000 		.4byte	0x83
 3639 0760 02       		.uleb128 0x2
 3640 0761 91       		.byte	0x91
 3641 0762 74       		.sleb128 -12
 3642 0763 00       		.byte	0
 3643 0764 14       		.uleb128 0x14
 3644 0765 A9040000 		.4byte	.LASF81
 3645 0769 01       		.byte	0x1
 3646 076a 800A     		.2byte	0xa80
 3647 076c 00000000 		.4byte	.LFB38
ARM GAS  C:\Users\akita\AppData\Local\Temp\ccaIVzD4.s 			page 118


 3648 0770 1C000000 		.4byte	.LFE38-.LFB38
 3649 0774 01       		.uleb128 0x1
 3650 0775 9C       		.byte	0x9c
 3651 0776 11       		.uleb128 0x11
 3652 0777 6A050000 		.4byte	.LASF82
 3653 077b 01       		.byte	0x1
 3654 077c 910A     		.2byte	0xa91
 3655 077e 00000000 		.4byte	.LFB39
 3656 0782 18000000 		.4byte	.LFE39-.LFB39
 3657 0786 01       		.uleb128 0x1
 3658 0787 9C       		.byte	0x9c
 3659 0788 11       		.uleb128 0x11
 3660 0789 A6000000 		.4byte	.LASF83
 3661 078d 01       		.byte	0x1
 3662 078e A10A     		.2byte	0xaa1
 3663 0790 00000000 		.4byte	.LFB40
 3664 0794 18000000 		.4byte	.LFE40-.LFB40
 3665 0798 01       		.uleb128 0x1
 3666 0799 9C       		.byte	0x9c
 3667 079a 11       		.uleb128 0x11
 3668 079b 21050000 		.4byte	.LASF84
 3669 079f 01       		.byte	0x1
 3670 07a0 B10A     		.2byte	0xab1
 3671 07a2 00000000 		.4byte	.LFB41
 3672 07a6 18000000 		.4byte	.LFE41-.LFB41
 3673 07aa 01       		.uleb128 0x1
 3674 07ab 9C       		.byte	0x9c
 3675 07ac 0F       		.uleb128 0xf
 3676 07ad 79060000 		.4byte	.LASF85
 3677 07b1 01       		.byte	0x1
 3678 07b2 C20A     		.2byte	0xac2
 3679 07b4 00000000 		.4byte	.LFB42
 3680 07b8 1C000000 		.4byte	.LFE42-.LFB42
 3681 07bc 01       		.uleb128 0x1
 3682 07bd 9C       		.byte	0x9c
 3683 07be D2070000 		.4byte	0x7d2
 3684 07c2 0D       		.uleb128 0xd
 3685 07c3 E0010000 		.4byte	.LASF65
 3686 07c7 01       		.byte	0x1
 3687 07c8 C20A     		.2byte	0xac2
 3688 07ca 83000000 		.4byte	0x83
 3689 07ce 02       		.uleb128 0x2
 3690 07cf 91       		.byte	0x91
 3691 07d0 74       		.sleb128 -12
 3692 07d1 00       		.byte	0
 3693 07d2 13       		.uleb128 0x13
 3694 07d3 07010000 		.4byte	.LASF87
 3695 07d7 01       		.byte	0x1
 3696 07d8 D20A     		.2byte	0xad2
 3697 07da 83000000 		.4byte	0x83
 3698 07de 00000000 		.4byte	.LFB43
 3699 07e2 18000000 		.4byte	.LFE43-.LFB43
 3700 07e6 01       		.uleb128 0x1
 3701 07e7 9C       		.byte	0x9c
 3702 07e8 13       		.uleb128 0x13
 3703 07e9 AB030000 		.4byte	.LASF88
 3704 07ed 01       		.byte	0x1
ARM GAS  C:\Users\akita\AppData\Local\Temp\ccaIVzD4.s 			page 119


 3705 07ee E20A     		.2byte	0xae2
 3706 07f0 83000000 		.4byte	0x83
 3707 07f4 00000000 		.4byte	.LFB44
 3708 07f8 18000000 		.4byte	.LFE44-.LFB44
 3709 07fc 01       		.uleb128 0x1
 3710 07fd 9C       		.byte	0x9c
 3711 07fe 0F       		.uleb128 0xf
 3712 07ff BB020000 		.4byte	.LASF89
 3713 0803 01       		.byte	0x1
 3714 0804 020B     		.2byte	0xb02
 3715 0806 00000000 		.4byte	.LFB45
 3716 080a 34000000 		.4byte	.LFE45-.LFB45
 3717 080e 01       		.uleb128 0x1
 3718 080f 9C       		.byte	0x9c
 3719 0810 24080000 		.4byte	0x824
 3720 0814 0D       		.uleb128 0xd
 3721 0815 E6010000 		.4byte	.LASF90
 3722 0819 01       		.byte	0x1
 3723 081a 020B     		.2byte	0xb02
 3724 081c 83000000 		.4byte	0x83
 3725 0820 02       		.uleb128 0x2
 3726 0821 91       		.byte	0x91
 3727 0822 74       		.sleb128 -12
 3728 0823 00       		.byte	0
 3729 0824 13       		.uleb128 0x13
 3730 0825 09050000 		.4byte	.LASF91
 3731 0829 01       		.byte	0x1
 3732 082a 1B0B     		.2byte	0xb1b
 3733 082c 83000000 		.4byte	0x83
 3734 0830 00000000 		.4byte	.LFB46
 3735 0834 18000000 		.4byte	.LFE46-.LFB46
 3736 0838 01       		.uleb128 0x1
 3737 0839 9C       		.byte	0x9c
 3738 083a 13       		.uleb128 0x13
 3739 083b 00020000 		.4byte	.LASF92
 3740 083f 01       		.byte	0x1
 3741 0840 320B     		.2byte	0xb32
 3742 0842 83000000 		.4byte	0x83
 3743 0846 00000000 		.4byte	.LFB47
 3744 084a 18000000 		.4byte	.LFE47-.LFB47
 3745 084e 01       		.uleb128 0x1
 3746 084f 9C       		.byte	0x9c
 3747 0850 11       		.uleb128 0x11
 3748 0851 23020000 		.4byte	.LASF93
 3749 0855 01       		.byte	0x1
 3750 0856 3F0B     		.2byte	0xb3f
 3751 0858 00000000 		.4byte	.LFB48
 3752 085c 14000000 		.4byte	.LFE48-.LFB48
 3753 0860 01       		.uleb128 0x1
 3754 0861 9C       		.byte	0x9c
 3755 0862 12       		.uleb128 0x12
 3756 0863 D0040000 		.4byte	.LASF94
 3757 0867 01       		.byte	0x1
 3758 0868 620B     		.2byte	0xb62
 3759 086a EC000000 		.4byte	0xec
 3760 086e 00000000 		.4byte	.LFB49
 3761 0872 2C000000 		.4byte	.LFE49-.LFB49
ARM GAS  C:\Users\akita\AppData\Local\Temp\ccaIVzD4.s 			page 120


 3762 0876 01       		.uleb128 0x1
 3763 0877 9C       		.byte	0x9c
 3764 0878 AA080000 		.4byte	0x8aa
 3765 087c 0D       		.uleb128 0xd
 3766 087d E2020000 		.4byte	.LASF55
 3767 0881 01       		.byte	0x1
 3768 0882 620B     		.2byte	0xb62
 3769 0884 83000000 		.4byte	0x83
 3770 0888 02       		.uleb128 0x2
 3771 0889 91       		.byte	0x91
 3772 088a 6C       		.sleb128 -20
 3773 088b 0D       		.uleb128 0xd
 3774 088c 91030000 		.4byte	.LASF95
 3775 0890 01       		.byte	0x1
 3776 0891 620B     		.2byte	0xb62
 3777 0893 EC000000 		.4byte	0xec
 3778 0897 02       		.uleb128 0x2
 3779 0898 91       		.byte	0x91
 3780 0899 68       		.sleb128 -24
 3781 089a 0E       		.uleb128 0xe
 3782 089b 52000000 		.4byte	.LASF96
 3783 089f 01       		.byte	0x1
 3784 08a0 640B     		.2byte	0xb64
 3785 08a2 EC000000 		.4byte	0xec
 3786 08a6 02       		.uleb128 0x2
 3787 08a7 91       		.byte	0x91
 3788 08a8 74       		.sleb128 -12
 3789 08a9 00       		.byte	0
 3790 08aa 12       		.uleb128 0x12
 3791 08ab 7F020000 		.4byte	.LASF97
 3792 08af 01       		.byte	0x1
 3793 08b0 7A0B     		.2byte	0xb7a
 3794 08b2 EC000000 		.4byte	0xec
 3795 08b6 00000000 		.4byte	.LFB50
 3796 08ba 1C000000 		.4byte	.LFE50-.LFB50
 3797 08be 01       		.uleb128 0x1
 3798 08bf 9C       		.byte	0x9c
 3799 08c0 D4080000 		.4byte	0x8d4
 3800 08c4 0D       		.uleb128 0xd
 3801 08c5 E2020000 		.4byte	.LASF55
 3802 08c9 01       		.byte	0x1
 3803 08ca 7A0B     		.2byte	0xb7a
 3804 08cc 83000000 		.4byte	0x83
 3805 08d0 02       		.uleb128 0x2
 3806 08d1 91       		.byte	0x91
 3807 08d2 74       		.sleb128 -12
 3808 08d3 00       		.byte	0
 3809 08d4 16       		.uleb128 0x16
 3810 08d5 8C060000 		.4byte	.LASF111
 3811 08d9 01       		.byte	0x1
 3812 08da 870B     		.2byte	0xb87
 3813 08dc 00000000 		.4byte	.LFB51
 3814 08e0 44000000 		.4byte	.LFE51-.LFB51
 3815 08e4 01       		.uleb128 0x1
 3816 08e5 9C       		.byte	0x9c
 3817 08e6 F8080000 		.4byte	0x8f8
 3818 08ea 15       		.uleb128 0x15
ARM GAS  C:\Users\akita\AppData\Local\Temp\ccaIVzD4.s 			page 121


 3819 08eb 6900     		.ascii	"i\000"
 3820 08ed 01       		.byte	0x1
 3821 08ee 890B     		.2byte	0xb89
 3822 08f0 83000000 		.4byte	0x83
 3823 08f4 02       		.uleb128 0x2
 3824 08f5 91       		.byte	0x91
 3825 08f6 74       		.sleb128 -12
 3826 08f7 00       		.byte	0
 3827 08f8 0F       		.uleb128 0xf
 3828 08f9 F2010000 		.4byte	.LASF98
 3829 08fd 01       		.byte	0x1
 3830 08fe A70B     		.2byte	0xba7
 3831 0900 00000000 		.4byte	.LFB52
 3832 0904 C0000000 		.4byte	.LFE52-.LFB52
 3833 0908 01       		.uleb128 0x1
 3834 0909 9C       		.byte	0x9c
 3835 090a 1E090000 		.4byte	0x91e
 3836 090e 0D       		.uleb128 0xd
 3837 090f F8040000 		.4byte	.LASF99
 3838 0913 01       		.byte	0x1
 3839 0914 A70B     		.2byte	0xba7
 3840 0916 1E090000 		.4byte	0x91e
 3841 091a 02       		.uleb128 0x2
 3842 091b 91       		.byte	0x91
 3843 091c 74       		.sleb128 -12
 3844 091d 00       		.byte	0
 3845 091e 06       		.uleb128 0x6
 3846 091f 04       		.byte	0x4
 3847 0920 83000000 		.4byte	0x83
 3848 0924 09       		.uleb128 0x9
 3849 0925 EC000000 		.4byte	0xec
 3850 0929 34090000 		.4byte	0x934
 3851 092d 0A       		.uleb128 0xa
 3852 092e E5000000 		.4byte	0xe5
 3853 0932 04       		.byte	0x4
 3854 0933 00       		.byte	0
 3855 0934 17       		.uleb128 0x17
 3856 0935 E5040000 		.4byte	.LASF100
 3857 0939 01       		.byte	0x1
 3858 093a 22       		.byte	0x22
 3859 093b 24090000 		.4byte	0x924
 3860 093f 05       		.uleb128 0x5
 3861 0940 03       		.byte	0x3
 3862 0941 00000000 		.4byte	CySysTickCallbacks
 3863 0945 18       		.uleb128 0x18
 3864 0946 BD030000 		.4byte	.LASF101
 3865 094a 01       		.byte	0x1
 3866 094b 1B       		.byte	0x1b
 3867 094c 83000000 		.4byte	0x83
 3868 0950 05       		.uleb128 0x5
 3869 0951 03       		.byte	0x3
 3870 0952 00000000 		.4byte	cydelayFreqHz
 3871 0956 18       		.uleb128 0x18
 3872 0957 40010000 		.4byte	.LASF102
 3873 095b 01       		.byte	0x1
 3874 095c 1C       		.byte	0x1c
 3875 095d 83000000 		.4byte	0x83
ARM GAS  C:\Users\akita\AppData\Local\Temp\ccaIVzD4.s 			page 122


 3876 0961 05       		.uleb128 0x5
 3877 0962 03       		.byte	0x3
 3878 0963 00000000 		.4byte	cydelayFreqKhz
 3879 0967 18       		.uleb128 0x18
 3880 0968 4B050000 		.4byte	.LASF103
 3881 096c 01       		.byte	0x1
 3882 096d 1D       		.byte	0x1d
 3883 096e 6B000000 		.4byte	0x6b
 3884 0972 05       		.uleb128 0x5
 3885 0973 03       		.byte	0x3
 3886 0974 00000000 		.4byte	cydelayFreqMhz
 3887 0978 18       		.uleb128 0x18
 3888 0979 C5010000 		.4byte	.LASF104
 3889 097d 01       		.byte	0x1
 3890 097e 1E       		.byte	0x1e
 3891 097f 83000000 		.4byte	0x83
 3892 0983 05       		.uleb128 0x5
 3893 0984 03       		.byte	0x3
 3894 0985 00000000 		.4byte	cydelay32kMs
 3895 0989 18       		.uleb128 0x18
 3896 098a 59030000 		.4byte	.LASF105
 3897 098e 01       		.byte	0x1
 3898 098f 36       		.byte	0x36
 3899 0990 83000000 		.4byte	0x83
 3900 0994 05       		.uleb128 0x5
 3901 0995 03       		.byte	0x3
 3902 0996 00000000 		.4byte	CySysTickInitVar
 3903 099a 09       		.uleb128 0x9
 3904 099b 6B000000 		.4byte	0x6b
 3905 099f AA090000 		.4byte	0x9aa
 3906 09a3 0A       		.uleb128 0xa
 3907 09a4 E5000000 		.4byte	0xe5
 3908 09a8 2D       		.byte	0x2d
 3909 09a9 00       		.byte	0
 3910 09aa 18       		.uleb128 0x18
 3911 09ab 9A030000 		.4byte	.LASF106
 3912 09af 01       		.byte	0x1
 3913 09b0 3B       		.byte	0x3b
 3914 09b1 BB090000 		.4byte	0x9bb
 3915 09b5 05       		.uleb128 0x5
 3916 09b6 03       		.byte	0x3
 3917 09b7 00000000 		.4byte	cyImoFreqMhz2Reg
 3918 09bb 19       		.uleb128 0x19
 3919 09bc 9A090000 		.4byte	0x99a
 3920 09c0 18       		.uleb128 0x18
 3921 09c1 38000000 		.4byte	.LASF107
 3922 09c5 01       		.byte	0x1
 3923 09c6 5B       		.byte	0x5b
 3924 09c7 83000000 		.4byte	0x83
 3925 09cb 05       		.uleb128 0x5
 3926 09cc 03       		.byte	0x3
 3927 09cd 00000000 		.4byte	CySysClkPumpConfig
 3928 09d1 00       		.byte	0
 3929              		.section	.debug_abbrev,"",%progbits
 3930              	.Ldebug_abbrev0:
 3931 0000 01       		.uleb128 0x1
 3932 0001 11       		.uleb128 0x11
ARM GAS  C:\Users\akita\AppData\Local\Temp\ccaIVzD4.s 			page 123


 3933 0002 01       		.byte	0x1
 3934 0003 25       		.uleb128 0x25
 3935 0004 0E       		.uleb128 0xe
 3936 0005 13       		.uleb128 0x13
 3937 0006 0B       		.uleb128 0xb
 3938 0007 03       		.uleb128 0x3
 3939 0008 0E       		.uleb128 0xe
 3940 0009 1B       		.uleb128 0x1b
 3941 000a 0E       		.uleb128 0xe
 3942 000b 55       		.uleb128 0x55
 3943 000c 17       		.uleb128 0x17
 3944 000d 11       		.uleb128 0x11
 3945 000e 01       		.uleb128 0x1
 3946 000f 10       		.uleb128 0x10
 3947 0010 17       		.uleb128 0x17
 3948 0011 00       		.byte	0
 3949 0012 00       		.byte	0
 3950 0013 02       		.uleb128 0x2
 3951 0014 24       		.uleb128 0x24
 3952 0015 00       		.byte	0
 3953 0016 0B       		.uleb128 0xb
 3954 0017 0B       		.uleb128 0xb
 3955 0018 3E       		.uleb128 0x3e
 3956 0019 0B       		.uleb128 0xb
 3957 001a 03       		.uleb128 0x3
 3958 001b 0E       		.uleb128 0xe
 3959 001c 00       		.byte	0
 3960 001d 00       		.byte	0
 3961 001e 03       		.uleb128 0x3
 3962 001f 24       		.uleb128 0x24
 3963 0020 00       		.byte	0
 3964 0021 0B       		.uleb128 0xb
 3965 0022 0B       		.uleb128 0xb
 3966 0023 3E       		.uleb128 0x3e
 3967 0024 0B       		.uleb128 0xb
 3968 0025 03       		.uleb128 0x3
 3969 0026 08       		.uleb128 0x8
 3970 0027 00       		.byte	0
 3971 0028 00       		.byte	0
 3972 0029 04       		.uleb128 0x4
 3973 002a 16       		.uleb128 0x16
 3974 002b 00       		.byte	0
 3975 002c 03       		.uleb128 0x3
 3976 002d 0E       		.uleb128 0xe
 3977 002e 3A       		.uleb128 0x3a
 3978 002f 0B       		.uleb128 0xb
 3979 0030 3B       		.uleb128 0x3b
 3980 0031 05       		.uleb128 0x5
 3981 0032 49       		.uleb128 0x49
 3982 0033 13       		.uleb128 0x13
 3983 0034 00       		.byte	0
 3984 0035 00       		.byte	0
 3985 0036 05       		.uleb128 0x5
 3986 0037 35       		.uleb128 0x35
 3987 0038 00       		.byte	0
 3988 0039 49       		.uleb128 0x49
 3989 003a 13       		.uleb128 0x13
ARM GAS  C:\Users\akita\AppData\Local\Temp\ccaIVzD4.s 			page 124


 3990 003b 00       		.byte	0
 3991 003c 00       		.byte	0
 3992 003d 06       		.uleb128 0x6
 3993 003e 0F       		.uleb128 0xf
 3994 003f 00       		.byte	0
 3995 0040 0B       		.uleb128 0xb
 3996 0041 0B       		.uleb128 0xb
 3997 0042 49       		.uleb128 0x49
 3998 0043 13       		.uleb128 0x13
 3999 0044 00       		.byte	0
 4000 0045 00       		.byte	0
 4001 0046 07       		.uleb128 0x7
 4002 0047 15       		.uleb128 0x15
 4003 0048 00       		.byte	0
 4004 0049 27       		.uleb128 0x27
 4005 004a 19       		.uleb128 0x19
 4006 004b 00       		.byte	0
 4007 004c 00       		.byte	0
 4008 004d 08       		.uleb128 0x8
 4009 004e 16       		.uleb128 0x16
 4010 004f 00       		.byte	0
 4011 0050 03       		.uleb128 0x3
 4012 0051 0E       		.uleb128 0xe
 4013 0052 3A       		.uleb128 0x3a
 4014 0053 0B       		.uleb128 0xb
 4015 0054 3B       		.uleb128 0x3b
 4016 0055 0B       		.uleb128 0xb
 4017 0056 49       		.uleb128 0x49
 4018 0057 13       		.uleb128 0x13
 4019 0058 00       		.byte	0
 4020 0059 00       		.byte	0
 4021 005a 09       		.uleb128 0x9
 4022 005b 01       		.uleb128 0x1
 4023 005c 01       		.byte	0x1
 4024 005d 49       		.uleb128 0x49
 4025 005e 13       		.uleb128 0x13
 4026 005f 01       		.uleb128 0x1
 4027 0060 13       		.uleb128 0x13
 4028 0061 00       		.byte	0
 4029 0062 00       		.byte	0
 4030 0063 0A       		.uleb128 0xa
 4031 0064 21       		.uleb128 0x21
 4032 0065 00       		.byte	0
 4033 0066 49       		.uleb128 0x49
 4034 0067 13       		.uleb128 0x13
 4035 0068 2F       		.uleb128 0x2f
 4036 0069 0B       		.uleb128 0xb
 4037 006a 00       		.byte	0
 4038 006b 00       		.byte	0
 4039 006c 0B       		.uleb128 0xb
 4040 006d 2E       		.uleb128 0x2e
 4041 006e 00       		.byte	0
 4042 006f 3F       		.uleb128 0x3f
 4043 0070 19       		.uleb128 0x19
 4044 0071 03       		.uleb128 0x3
 4045 0072 0E       		.uleb128 0xe
 4046 0073 3A       		.uleb128 0x3a
ARM GAS  C:\Users\akita\AppData\Local\Temp\ccaIVzD4.s 			page 125


 4047 0074 0B       		.uleb128 0xb
 4048 0075 3B       		.uleb128 0x3b
 4049 0076 0B       		.uleb128 0xb
 4050 0077 27       		.uleb128 0x27
 4051 0078 19       		.uleb128 0x19
 4052 0079 11       		.uleb128 0x11
 4053 007a 01       		.uleb128 0x1
 4054 007b 12       		.uleb128 0x12
 4055 007c 06       		.uleb128 0x6
 4056 007d 40       		.uleb128 0x40
 4057 007e 18       		.uleb128 0x18
 4058 007f 9742     		.uleb128 0x2117
 4059 0081 19       		.uleb128 0x19
 4060 0082 00       		.byte	0
 4061 0083 00       		.byte	0
 4062 0084 0C       		.uleb128 0xc
 4063 0085 2E       		.uleb128 0x2e
 4064 0086 01       		.byte	0x1
 4065 0087 3F       		.uleb128 0x3f
 4066 0088 19       		.uleb128 0x19
 4067 0089 03       		.uleb128 0x3
 4068 008a 0E       		.uleb128 0xe
 4069 008b 3A       		.uleb128 0x3a
 4070 008c 0B       		.uleb128 0xb
 4071 008d 3B       		.uleb128 0x3b
 4072 008e 05       		.uleb128 0x5
 4073 008f 27       		.uleb128 0x27
 4074 0090 19       		.uleb128 0x19
 4075 0091 11       		.uleb128 0x11
 4076 0092 01       		.uleb128 0x1
 4077 0093 12       		.uleb128 0x12
 4078 0094 06       		.uleb128 0x6
 4079 0095 40       		.uleb128 0x40
 4080 0096 18       		.uleb128 0x18
 4081 0097 9642     		.uleb128 0x2116
 4082 0099 19       		.uleb128 0x19
 4083 009a 01       		.uleb128 0x1
 4084 009b 13       		.uleb128 0x13
 4085 009c 00       		.byte	0
 4086 009d 00       		.byte	0
 4087 009e 0D       		.uleb128 0xd
 4088 009f 05       		.uleb128 0x5
 4089 00a0 00       		.byte	0
 4090 00a1 03       		.uleb128 0x3
 4091 00a2 0E       		.uleb128 0xe
 4092 00a3 3A       		.uleb128 0x3a
 4093 00a4 0B       		.uleb128 0xb
 4094 00a5 3B       		.uleb128 0x3b
 4095 00a6 05       		.uleb128 0x5
 4096 00a7 49       		.uleb128 0x49
 4097 00a8 13       		.uleb128 0x13
 4098 00a9 02       		.uleb128 0x2
 4099 00aa 18       		.uleb128 0x18
 4100 00ab 00       		.byte	0
 4101 00ac 00       		.byte	0
 4102 00ad 0E       		.uleb128 0xe
 4103 00ae 34       		.uleb128 0x34
ARM GAS  C:\Users\akita\AppData\Local\Temp\ccaIVzD4.s 			page 126


 4104 00af 00       		.byte	0
 4105 00b0 03       		.uleb128 0x3
 4106 00b1 0E       		.uleb128 0xe
 4107 00b2 3A       		.uleb128 0x3a
 4108 00b3 0B       		.uleb128 0xb
 4109 00b4 3B       		.uleb128 0x3b
 4110 00b5 05       		.uleb128 0x5
 4111 00b6 49       		.uleb128 0x49
 4112 00b7 13       		.uleb128 0x13
 4113 00b8 02       		.uleb128 0x2
 4114 00b9 18       		.uleb128 0x18
 4115 00ba 00       		.byte	0
 4116 00bb 00       		.byte	0
 4117 00bc 0F       		.uleb128 0xf
 4118 00bd 2E       		.uleb128 0x2e
 4119 00be 01       		.byte	0x1
 4120 00bf 3F       		.uleb128 0x3f
 4121 00c0 19       		.uleb128 0x19
 4122 00c1 03       		.uleb128 0x3
 4123 00c2 0E       		.uleb128 0xe
 4124 00c3 3A       		.uleb128 0x3a
 4125 00c4 0B       		.uleb128 0xb
 4126 00c5 3B       		.uleb128 0x3b
 4127 00c6 05       		.uleb128 0x5
 4128 00c7 27       		.uleb128 0x27
 4129 00c8 19       		.uleb128 0x19
 4130 00c9 11       		.uleb128 0x11
 4131 00ca 01       		.uleb128 0x1
 4132 00cb 12       		.uleb128 0x12
 4133 00cc 06       		.uleb128 0x6
 4134 00cd 40       		.uleb128 0x40
 4135 00ce 18       		.uleb128 0x18
 4136 00cf 9742     		.uleb128 0x2117
 4137 00d1 19       		.uleb128 0x19
 4138 00d2 01       		.uleb128 0x1
 4139 00d3 13       		.uleb128 0x13
 4140 00d4 00       		.byte	0
 4141 00d5 00       		.byte	0
 4142 00d6 10       		.uleb128 0x10
 4143 00d7 2E       		.uleb128 0x2e
 4144 00d8 01       		.byte	0x1
 4145 00d9 3F       		.uleb128 0x3f
 4146 00da 19       		.uleb128 0x19
 4147 00db 03       		.uleb128 0x3
 4148 00dc 0E       		.uleb128 0xe
 4149 00dd 3A       		.uleb128 0x3a
 4150 00de 0B       		.uleb128 0xb
 4151 00df 3B       		.uleb128 0x3b
 4152 00e0 05       		.uleb128 0x5
 4153 00e1 27       		.uleb128 0x27
 4154 00e2 19       		.uleb128 0x19
 4155 00e3 49       		.uleb128 0x49
 4156 00e4 13       		.uleb128 0x13
 4157 00e5 11       		.uleb128 0x11
 4158 00e6 01       		.uleb128 0x1
 4159 00e7 12       		.uleb128 0x12
 4160 00e8 06       		.uleb128 0x6
ARM GAS  C:\Users\akita\AppData\Local\Temp\ccaIVzD4.s 			page 127


 4161 00e9 40       		.uleb128 0x40
 4162 00ea 18       		.uleb128 0x18
 4163 00eb 9642     		.uleb128 0x2116
 4164 00ed 19       		.uleb128 0x19
 4165 00ee 01       		.uleb128 0x1
 4166 00ef 13       		.uleb128 0x13
 4167 00f0 00       		.byte	0
 4168 00f1 00       		.byte	0
 4169 00f2 11       		.uleb128 0x11
 4170 00f3 2E       		.uleb128 0x2e
 4171 00f4 00       		.byte	0
 4172 00f5 3F       		.uleb128 0x3f
 4173 00f6 19       		.uleb128 0x19
 4174 00f7 03       		.uleb128 0x3
 4175 00f8 0E       		.uleb128 0xe
 4176 00f9 3A       		.uleb128 0x3a
 4177 00fa 0B       		.uleb128 0xb
 4178 00fb 3B       		.uleb128 0x3b
 4179 00fc 05       		.uleb128 0x5
 4180 00fd 27       		.uleb128 0x27
 4181 00fe 19       		.uleb128 0x19
 4182 00ff 11       		.uleb128 0x11
 4183 0100 01       		.uleb128 0x1
 4184 0101 12       		.uleb128 0x12
 4185 0102 06       		.uleb128 0x6
 4186 0103 40       		.uleb128 0x40
 4187 0104 18       		.uleb128 0x18
 4188 0105 9742     		.uleb128 0x2117
 4189 0107 19       		.uleb128 0x19
 4190 0108 00       		.byte	0
 4191 0109 00       		.byte	0
 4192 010a 12       		.uleb128 0x12
 4193 010b 2E       		.uleb128 0x2e
 4194 010c 01       		.byte	0x1
 4195 010d 3F       		.uleb128 0x3f
 4196 010e 19       		.uleb128 0x19
 4197 010f 03       		.uleb128 0x3
 4198 0110 0E       		.uleb128 0xe
 4199 0111 3A       		.uleb128 0x3a
 4200 0112 0B       		.uleb128 0xb
 4201 0113 3B       		.uleb128 0x3b
 4202 0114 05       		.uleb128 0x5
 4203 0115 27       		.uleb128 0x27
 4204 0116 19       		.uleb128 0x19
 4205 0117 49       		.uleb128 0x49
 4206 0118 13       		.uleb128 0x13
 4207 0119 11       		.uleb128 0x11
 4208 011a 01       		.uleb128 0x1
 4209 011b 12       		.uleb128 0x12
 4210 011c 06       		.uleb128 0x6
 4211 011d 40       		.uleb128 0x40
 4212 011e 18       		.uleb128 0x18
 4213 011f 9742     		.uleb128 0x2117
 4214 0121 19       		.uleb128 0x19
 4215 0122 01       		.uleb128 0x1
 4216 0123 13       		.uleb128 0x13
 4217 0124 00       		.byte	0
ARM GAS  C:\Users\akita\AppData\Local\Temp\ccaIVzD4.s 			page 128


 4218 0125 00       		.byte	0
 4219 0126 13       		.uleb128 0x13
 4220 0127 2E       		.uleb128 0x2e
 4221 0128 00       		.byte	0
 4222 0129 3F       		.uleb128 0x3f
 4223 012a 19       		.uleb128 0x19
 4224 012b 03       		.uleb128 0x3
 4225 012c 0E       		.uleb128 0xe
 4226 012d 3A       		.uleb128 0x3a
 4227 012e 0B       		.uleb128 0xb
 4228 012f 3B       		.uleb128 0x3b
 4229 0130 05       		.uleb128 0x5
 4230 0131 27       		.uleb128 0x27
 4231 0132 19       		.uleb128 0x19
 4232 0133 49       		.uleb128 0x49
 4233 0134 13       		.uleb128 0x13
 4234 0135 11       		.uleb128 0x11
 4235 0136 01       		.uleb128 0x1
 4236 0137 12       		.uleb128 0x12
 4237 0138 06       		.uleb128 0x6
 4238 0139 40       		.uleb128 0x40
 4239 013a 18       		.uleb128 0x18
 4240 013b 9742     		.uleb128 0x2117
 4241 013d 19       		.uleb128 0x19
 4242 013e 00       		.byte	0
 4243 013f 00       		.byte	0
 4244 0140 14       		.uleb128 0x14
 4245 0141 2E       		.uleb128 0x2e
 4246 0142 00       		.byte	0
 4247 0143 3F       		.uleb128 0x3f
 4248 0144 19       		.uleb128 0x19
 4249 0145 03       		.uleb128 0x3
 4250 0146 0E       		.uleb128 0xe
 4251 0147 3A       		.uleb128 0x3a
 4252 0148 0B       		.uleb128 0xb
 4253 0149 3B       		.uleb128 0x3b
 4254 014a 05       		.uleb128 0x5
 4255 014b 27       		.uleb128 0x27
 4256 014c 19       		.uleb128 0x19
 4257 014d 11       		.uleb128 0x11
 4258 014e 01       		.uleb128 0x1
 4259 014f 12       		.uleb128 0x12
 4260 0150 06       		.uleb128 0x6
 4261 0151 40       		.uleb128 0x40
 4262 0152 18       		.uleb128 0x18
 4263 0153 9642     		.uleb128 0x2116
 4264 0155 19       		.uleb128 0x19
 4265 0156 00       		.byte	0
 4266 0157 00       		.byte	0
 4267 0158 15       		.uleb128 0x15
 4268 0159 34       		.uleb128 0x34
 4269 015a 00       		.byte	0
 4270 015b 03       		.uleb128 0x3
 4271 015c 08       		.uleb128 0x8
 4272 015d 3A       		.uleb128 0x3a
 4273 015e 0B       		.uleb128 0xb
 4274 015f 3B       		.uleb128 0x3b
ARM GAS  C:\Users\akita\AppData\Local\Temp\ccaIVzD4.s 			page 129


 4275 0160 05       		.uleb128 0x5
 4276 0161 49       		.uleb128 0x49
 4277 0162 13       		.uleb128 0x13
 4278 0163 02       		.uleb128 0x2
 4279 0164 18       		.uleb128 0x18
 4280 0165 00       		.byte	0
 4281 0166 00       		.byte	0
 4282 0167 16       		.uleb128 0x16
 4283 0168 2E       		.uleb128 0x2e
 4284 0169 01       		.byte	0x1
 4285 016a 03       		.uleb128 0x3
 4286 016b 0E       		.uleb128 0xe
 4287 016c 3A       		.uleb128 0x3a
 4288 016d 0B       		.uleb128 0xb
 4289 016e 3B       		.uleb128 0x3b
 4290 016f 05       		.uleb128 0x5
 4291 0170 27       		.uleb128 0x27
 4292 0171 19       		.uleb128 0x19
 4293 0172 11       		.uleb128 0x11
 4294 0173 01       		.uleb128 0x1
 4295 0174 12       		.uleb128 0x12
 4296 0175 06       		.uleb128 0x6
 4297 0176 40       		.uleb128 0x40
 4298 0177 18       		.uleb128 0x18
 4299 0178 9642     		.uleb128 0x2116
 4300 017a 19       		.uleb128 0x19
 4301 017b 01       		.uleb128 0x1
 4302 017c 13       		.uleb128 0x13
 4303 017d 00       		.byte	0
 4304 017e 00       		.byte	0
 4305 017f 17       		.uleb128 0x17
 4306 0180 34       		.uleb128 0x34
 4307 0181 00       		.byte	0
 4308 0182 03       		.uleb128 0x3
 4309 0183 0E       		.uleb128 0xe
 4310 0184 3A       		.uleb128 0x3a
 4311 0185 0B       		.uleb128 0xb
 4312 0186 3B       		.uleb128 0x3b
 4313 0187 0B       		.uleb128 0xb
 4314 0188 49       		.uleb128 0x49
 4315 0189 13       		.uleb128 0x13
 4316 018a 02       		.uleb128 0x2
 4317 018b 18       		.uleb128 0x18
 4318 018c 00       		.byte	0
 4319 018d 00       		.byte	0
 4320 018e 18       		.uleb128 0x18
 4321 018f 34       		.uleb128 0x34
 4322 0190 00       		.byte	0
 4323 0191 03       		.uleb128 0x3
 4324 0192 0E       		.uleb128 0xe
 4325 0193 3A       		.uleb128 0x3a
 4326 0194 0B       		.uleb128 0xb
 4327 0195 3B       		.uleb128 0x3b
 4328 0196 0B       		.uleb128 0xb
 4329 0197 49       		.uleb128 0x49
 4330 0198 13       		.uleb128 0x13
 4331 0199 3F       		.uleb128 0x3f
ARM GAS  C:\Users\akita\AppData\Local\Temp\ccaIVzD4.s 			page 130


 4332 019a 19       		.uleb128 0x19
 4333 019b 02       		.uleb128 0x2
 4334 019c 18       		.uleb128 0x18
 4335 019d 00       		.byte	0
 4336 019e 00       		.byte	0
 4337 019f 19       		.uleb128 0x19
 4338 01a0 26       		.uleb128 0x26
 4339 01a1 00       		.byte	0
 4340 01a2 49       		.uleb128 0x49
 4341 01a3 13       		.uleb128 0x13
 4342 01a4 00       		.byte	0
 4343 01a5 00       		.byte	0
 4344 01a6 00       		.byte	0
 4345              		.section	.debug_aranges,"",%progbits
 4346 0000 AC010000 		.4byte	0x1ac
 4347 0004 0200     		.2byte	0x2
 4348 0006 00000000 		.4byte	.Ldebug_info0
 4349 000a 04       		.byte	0x4
 4350 000b 00       		.byte	0
 4351 000c 0000     		.2byte	0
 4352 000e 0000     		.2byte	0
 4353 0010 00000000 		.4byte	.LFB2
 4354 0014 1C000000 		.4byte	.LFE2-.LFB2
 4355 0018 00000000 		.4byte	.LFB3
 4356 001c 18000000 		.4byte	.LFE3-.LFB3
 4357 0020 00000000 		.4byte	.LFB4
 4358 0024 48000000 		.4byte	.LFE4-.LFB4
 4359 0028 00000000 		.4byte	.LFB5
 4360 002c 50000000 		.4byte	.LFE5-.LFB5
 4361 0030 00000000 		.4byte	.LFB6
 4362 0034 34000000 		.4byte	.LFE6-.LFB6
 4363 0038 00000000 		.4byte	.LFB7
 4364 003c 44000000 		.4byte	.LFE7-.LFB7
 4365 0040 00000000 		.4byte	.LFB8
 4366 0044 98000000 		.4byte	.LFE8-.LFB8
 4367 0048 00000000 		.4byte	.LFB9
 4368 004c 74000000 		.4byte	.LFE9-.LFB9
 4369 0050 00000000 		.4byte	.LFB10
 4370 0054 2C000000 		.4byte	.LFE10-.LFB10
 4371 0058 00000000 		.4byte	.LFB11
 4372 005c 20000000 		.4byte	.LFE11-.LFB11
 4373 0060 00000000 		.4byte	.LFB12
 4374 0064 58000000 		.4byte	.LFE12-.LFB12
 4375 0068 00000000 		.4byte	.LFB13
 4376 006c 60000000 		.4byte	.LFE13-.LFB13
 4377 0070 00000000 		.4byte	.LFB14
 4378 0074 28000000 		.4byte	.LFE14-.LFB14
 4379 0078 00000000 		.4byte	.LFB15
 4380 007c 18000000 		.4byte	.LFE15-.LFB15
 4381 0080 00000000 		.4byte	.LFB16
 4382 0084 14000000 		.4byte	.LFE16-.LFB16
 4383 0088 00000000 		.4byte	.LFB17
 4384 008c 30000000 		.4byte	.LFE17-.LFB17
 4385 0090 00000000 		.4byte	.LFB18
 4386 0094 24000000 		.4byte	.LFE18-.LFB18
 4387 0098 00000000 		.4byte	.LFB19
 4388 009c 18000000 		.4byte	.LFE19-.LFB19
ARM GAS  C:\Users\akita\AppData\Local\Temp\ccaIVzD4.s 			page 131


 4389 00a0 00000000 		.4byte	.LFB20
 4390 00a4 48000000 		.4byte	.LFE20-.LFB20
 4391 00a8 00000000 		.4byte	.LFB21
 4392 00ac 34000000 		.4byte	.LFE21-.LFB21
 4393 00b0 00000000 		.4byte	.LFB22
 4394 00b4 4C000000 		.4byte	.LFE22-.LFB22
 4395 00b8 00000000 		.4byte	.LFB23
 4396 00bc 36000000 		.4byte	.LFE23-.LFB23
 4397 00c0 00000000 		.4byte	.LFB24
 4398 00c4 A8000000 		.4byte	.LFE24-.LFB24
 4399 00c8 00000000 		.4byte	.LFB25
 4400 00cc 5C000000 		.4byte	.LFE25-.LFB25
 4401 00d0 00000000 		.4byte	.LFB26
 4402 00d4 28000000 		.4byte	.LFE26-.LFB26
 4403 00d8 00000000 		.4byte	.LFB27
 4404 00dc 30000000 		.4byte	.LFE27-.LFB27
 4405 00e0 00000000 		.4byte	.LFB28
 4406 00e4 28000000 		.4byte	.LFE28-.LFB28
 4407 00e8 00000000 		.4byte	.LFB29
 4408 00ec 28000000 		.4byte	.LFE29-.LFB29
 4409 00f0 00000000 		.4byte	.LFB30
 4410 00f4 28000000 		.4byte	.LFE30-.LFB30
 4411 00f8 00000000 		.4byte	.LFB31
 4412 00fc 14000000 		.4byte	.LFE31-.LFB31
 4413 0100 00000000 		.4byte	.LFB32
 4414 0104 20000000 		.4byte	.LFE32-.LFB32
 4415 0108 00000000 		.4byte	.LFB33
 4416 010c 48000000 		.4byte	.LFE33-.LFB33
 4417 0110 00000000 		.4byte	.LFB34
 4418 0114 28000000 		.4byte	.LFE34-.LFB34
 4419 0118 00000000 		.4byte	.LFB35
 4420 011c 84000000 		.4byte	.LFE35-.LFB35
 4421 0120 00000000 		.4byte	.LFB36
 4422 0124 24000000 		.4byte	.LFE36-.LFB36
 4423 0128 00000000 		.4byte	.LFB37
 4424 012c 64000000 		.4byte	.LFE37-.LFB37
 4425 0130 00000000 		.4byte	.LFB38
 4426 0134 1C000000 		.4byte	.LFE38-.LFB38
 4427 0138 00000000 		.4byte	.LFB39
 4428 013c 18000000 		.4byte	.LFE39-.LFB39
 4429 0140 00000000 		.4byte	.LFB40
 4430 0144 18000000 		.4byte	.LFE40-.LFB40
 4431 0148 00000000 		.4byte	.LFB41
 4432 014c 18000000 		.4byte	.LFE41-.LFB41
 4433 0150 00000000 		.4byte	.LFB42
 4434 0154 1C000000 		.4byte	.LFE42-.LFB42
 4435 0158 00000000 		.4byte	.LFB43
 4436 015c 18000000 		.4byte	.LFE43-.LFB43
 4437 0160 00000000 		.4byte	.LFB44
 4438 0164 18000000 		.4byte	.LFE44-.LFB44
 4439 0168 00000000 		.4byte	.LFB45
 4440 016c 34000000 		.4byte	.LFE45-.LFB45
 4441 0170 00000000 		.4byte	.LFB46
 4442 0174 18000000 		.4byte	.LFE46-.LFB46
 4443 0178 00000000 		.4byte	.LFB47
 4444 017c 18000000 		.4byte	.LFE47-.LFB47
 4445 0180 00000000 		.4byte	.LFB48
ARM GAS  C:\Users\akita\AppData\Local\Temp\ccaIVzD4.s 			page 132


 4446 0184 14000000 		.4byte	.LFE48-.LFB48
 4447 0188 00000000 		.4byte	.LFB49
 4448 018c 2C000000 		.4byte	.LFE49-.LFB49
 4449 0190 00000000 		.4byte	.LFB50
 4450 0194 1C000000 		.4byte	.LFE50-.LFB50
 4451 0198 00000000 		.4byte	.LFB51
 4452 019c 44000000 		.4byte	.LFE51-.LFB51
 4453 01a0 00000000 		.4byte	.LFB52
 4454 01a4 C0000000 		.4byte	.LFE52-.LFB52
 4455 01a8 00000000 		.4byte	0
 4456 01ac 00000000 		.4byte	0
 4457              		.section	.debug_ranges,"",%progbits
 4458              	.Ldebug_ranges0:
 4459 0000 00000000 		.4byte	.LFB2
 4460 0004 1C000000 		.4byte	.LFE2
 4461 0008 00000000 		.4byte	.LFB3
 4462 000c 18000000 		.4byte	.LFE3
 4463 0010 00000000 		.4byte	.LFB4
 4464 0014 48000000 		.4byte	.LFE4
 4465 0018 00000000 		.4byte	.LFB5
 4466 001c 50000000 		.4byte	.LFE5
 4467 0020 00000000 		.4byte	.LFB6
 4468 0024 34000000 		.4byte	.LFE6
 4469 0028 00000000 		.4byte	.LFB7
 4470 002c 44000000 		.4byte	.LFE7
 4471 0030 00000000 		.4byte	.LFB8
 4472 0034 98000000 		.4byte	.LFE8
 4473 0038 00000000 		.4byte	.LFB9
 4474 003c 74000000 		.4byte	.LFE9
 4475 0040 00000000 		.4byte	.LFB10
 4476 0044 2C000000 		.4byte	.LFE10
 4477 0048 00000000 		.4byte	.LFB11
 4478 004c 20000000 		.4byte	.LFE11
 4479 0050 00000000 		.4byte	.LFB12
 4480 0054 58000000 		.4byte	.LFE12
 4481 0058 00000000 		.4byte	.LFB13
 4482 005c 60000000 		.4byte	.LFE13
 4483 0060 00000000 		.4byte	.LFB14
 4484 0064 28000000 		.4byte	.LFE14
 4485 0068 00000000 		.4byte	.LFB15
 4486 006c 18000000 		.4byte	.LFE15
 4487 0070 00000000 		.4byte	.LFB16
 4488 0074 14000000 		.4byte	.LFE16
 4489 0078 00000000 		.4byte	.LFB17
 4490 007c 30000000 		.4byte	.LFE17
 4491 0080 00000000 		.4byte	.LFB18
 4492 0084 24000000 		.4byte	.LFE18
 4493 0088 00000000 		.4byte	.LFB19
 4494 008c 18000000 		.4byte	.LFE19
 4495 0090 00000000 		.4byte	.LFB20
 4496 0094 48000000 		.4byte	.LFE20
 4497 0098 00000000 		.4byte	.LFB21
 4498 009c 34000000 		.4byte	.LFE21
 4499 00a0 00000000 		.4byte	.LFB22
 4500 00a4 4C000000 		.4byte	.LFE22
 4501 00a8 00000000 		.4byte	.LFB23
 4502 00ac 36000000 		.4byte	.LFE23
ARM GAS  C:\Users\akita\AppData\Local\Temp\ccaIVzD4.s 			page 133


 4503 00b0 00000000 		.4byte	.LFB24
 4504 00b4 A8000000 		.4byte	.LFE24
 4505 00b8 00000000 		.4byte	.LFB25
 4506 00bc 5C000000 		.4byte	.LFE25
 4507 00c0 00000000 		.4byte	.LFB26
 4508 00c4 28000000 		.4byte	.LFE26
 4509 00c8 00000000 		.4byte	.LFB27
 4510 00cc 30000000 		.4byte	.LFE27
 4511 00d0 00000000 		.4byte	.LFB28
 4512 00d4 28000000 		.4byte	.LFE28
 4513 00d8 00000000 		.4byte	.LFB29
 4514 00dc 28000000 		.4byte	.LFE29
 4515 00e0 00000000 		.4byte	.LFB30
 4516 00e4 28000000 		.4byte	.LFE30
 4517 00e8 00000000 		.4byte	.LFB31
 4518 00ec 14000000 		.4byte	.LFE31
 4519 00f0 00000000 		.4byte	.LFB32
 4520 00f4 20000000 		.4byte	.LFE32
 4521 00f8 00000000 		.4byte	.LFB33
 4522 00fc 48000000 		.4byte	.LFE33
 4523 0100 00000000 		.4byte	.LFB34
 4524 0104 28000000 		.4byte	.LFE34
 4525 0108 00000000 		.4byte	.LFB35
 4526 010c 84000000 		.4byte	.LFE35
 4527 0110 00000000 		.4byte	.LFB36
 4528 0114 24000000 		.4byte	.LFE36
 4529 0118 00000000 		.4byte	.LFB37
 4530 011c 64000000 		.4byte	.LFE37
 4531 0120 00000000 		.4byte	.LFB38
 4532 0124 1C000000 		.4byte	.LFE38
 4533 0128 00000000 		.4byte	.LFB39
 4534 012c 18000000 		.4byte	.LFE39
 4535 0130 00000000 		.4byte	.LFB40
 4536 0134 18000000 		.4byte	.LFE40
 4537 0138 00000000 		.4byte	.LFB41
 4538 013c 18000000 		.4byte	.LFE41
 4539 0140 00000000 		.4byte	.LFB42
 4540 0144 1C000000 		.4byte	.LFE42
 4541 0148 00000000 		.4byte	.LFB43
 4542 014c 18000000 		.4byte	.LFE43
 4543 0150 00000000 		.4byte	.LFB44
 4544 0154 18000000 		.4byte	.LFE44
 4545 0158 00000000 		.4byte	.LFB45
 4546 015c 34000000 		.4byte	.LFE45
 4547 0160 00000000 		.4byte	.LFB46
 4548 0164 18000000 		.4byte	.LFE46
 4549 0168 00000000 		.4byte	.LFB47
 4550 016c 18000000 		.4byte	.LFE47
 4551 0170 00000000 		.4byte	.LFB48
 4552 0174 14000000 		.4byte	.LFE48
 4553 0178 00000000 		.4byte	.LFB49
 4554 017c 2C000000 		.4byte	.LFE49
 4555 0180 00000000 		.4byte	.LFB50
 4556 0184 1C000000 		.4byte	.LFE50
 4557 0188 00000000 		.4byte	.LFB51
 4558 018c 44000000 		.4byte	.LFE51
 4559 0190 00000000 		.4byte	.LFB52
ARM GAS  C:\Users\akita\AppData\Local\Temp\ccaIVzD4.s 			page 134


 4560 0194 C0000000 		.4byte	.LFE52
 4561 0198 00000000 		.4byte	0
 4562 019c 00000000 		.4byte	0
 4563              		.section	.debug_line,"",%progbits
 4564              	.Ldebug_line0:
 4565 0000 D7040000 		.section	.debug_str,"MS",%progbits,1
 4565      02004D00 
 4565      00000201 
 4565      FB0E0D00 
 4565      01010101 
 4566              	.LASF58:
 4567 0000 72616D56 		.ascii	"ramVectorTable\000"
 4567      6563746F 
 4567      72546162 
 4567      6C6500
 4568              	.LASF10:
 4569 000f 75696E74 		.ascii	"uint16\000"
 4569      313600
 4570              	.LASF51:
 4571 0016 696E7453 		.ascii	"intState\000"
 4571      74617465 
 4571      00
 4572              	.LASF25:
 4573 001f 43795379 		.ascii	"CySysClkWriteHfclkDirect\000"
 4573      73436C6B 
 4573      57726974 
 4573      65486663 
 4573      6C6B4469 
 4574              	.LASF107:
 4575 0038 43795379 		.ascii	"CySysClkPumpConfig\000"
 4575      73436C6B 
 4575      50756D70 
 4575      436F6E66 
 4575      696700
 4576              	.LASF57:
 4577 004b 6F6C6449 		.ascii	"oldIsr\000"
 4577      737200
 4578              	.LASF96:
 4579 0052 72657456 		.ascii	"retVal\000"
 4579      616C00
 4580              	.LASF50:
 4581 0059 43794469 		.ascii	"CyDisableInts\000"
 4581      7361626C 
 4581      65496E74 
 4581      7300
 4582              	.LASF7:
 4583 0067 6C6F6E67 		.ascii	"long long unsigned int\000"
 4583      206C6F6E 
 4583      6720756E 
 4583      7369676E 
 4583      65642069 
 4584              	.LASF34:
 4585 007e 70617261 		.ascii	"parameters\000"
 4585      6D657465 
 4585      727300
 4586              	.LASF52:
 4587 0089 4379456E 		.ascii	"CyEnableInts\000"
ARM GAS  C:\Users\akita\AppData\Local\Temp\ccaIVzD4.s 			page 135


 4587      61626C65 
 4587      496E7473 
 4587      00
 4588              	.LASF73:
 4589 0096 4379536F 		.ascii	"CySoftwareReset\000"
 4589      66747761 
 4589      72655265 
 4589      73657400 
 4590              	.LASF83:
 4591 00a6 43795379 		.ascii	"CySysTickEnableInterrupt\000"
 4591      73546963 
 4591      6B456E61 
 4591      626C6549 
 4591      6E746572 
 4592              	.LASF68:
 4593 00bf 4379496E 		.ascii	"CyIntGetState\000"
 4593      74476574 
 4593      53746174 
 4593      6500
 4594              	.LASF6:
 4595 00cd 6C6F6E67 		.ascii	"long long int\000"
 4595      206C6F6E 
 4595      6720696E 
 4595      7400
 4596              	.LASF0:
 4597 00db 7369676E 		.ascii	"signed char\000"
 4597      65642063 
 4597      68617200 
 4598              	.LASF33:
 4599 00e7 66726571 		.ascii	"freq\000"
 4599      00
 4600              	.LASF78:
 4601 00ec 43794465 		.ascii	"CyDelayFreq\000"
 4601      6C617946 
 4601      72657100 
 4602              	.LASF23:
 4603 00f8 696E7465 		.ascii	"interruptState\000"
 4603      72727570 
 4603      74537461 
 4603      746500
 4604              	.LASF87:
 4605 0107 43795379 		.ascii	"CySysTickGetReload\000"
 4605      73546963 
 4605      6B476574 
 4605      52656C6F 
 4605      616400
 4606              	.LASF4:
 4607 011a 6C6F6E67 		.ascii	"long int\000"
 4607      20696E74 
 4607      00
 4608              	.LASF69:
 4609 0123 4379496E 		.ascii	"CyIntDisable\000"
 4609      74446973 
 4609      61626C65 
 4609      00
 4610              	.LASF35:
 4611 0130 72656756 		.ascii	"regValues\000"
ARM GAS  C:\Users\akita\AppData\Local\Temp\ccaIVzD4.s 			page 136


 4611      616C7565 
 4611      7300
 4612              	.LASF9:
 4613 013a 75696E74 		.ascii	"uint8\000"
 4613      3800
 4614              	.LASF102:
 4615 0140 63796465 		.ascii	"cydelayFreqKhz\000"
 4615      6C617946 
 4615      7265714B 
 4615      687A00
 4616              	.LASF28:
 4617 014f 656E6162 		.ascii	"enable\000"
 4617      6C6500
 4618              	.LASF13:
 4619 0156 646F7562 		.ascii	"double\000"
 4619      6C6500
 4620              	.LASF64:
 4621 015d 73686966 		.ascii	"shift\000"
 4621      7400
 4622              	.LASF47:
 4623 0163 43795379 		.ascii	"CySysLvdClearInterrupt\000"
 4623      734C7664 
 4623      436C6561 
 4623      72496E74 
 4623      65727275 
 4624              	.LASF11:
 4625 017a 75696E74 		.ascii	"uint32\000"
 4625      333200
 4626              	.LASF41:
 4627 0181 43795379 		.ascii	"CySysClkEcoReadStatus\000"
 4627      73436C6B 
 4627      45636F52 
 4627      65616453 
 4627      74617475 
 4628              	.LASF53:
 4629 0197 6D61736B 		.ascii	"mask\000"
 4629      00
 4630              	.LASF36:
 4631 019c 43795379 		.ascii	"CySysClkGetSysclkSource\000"
 4631      73436C6B 
 4631      47657453 
 4631      7973636C 
 4631      6B536F75 
 4632              	.LASF66:
 4633 01b4 4379496E 		.ascii	"CyIntGetPriority\000"
 4633      74476574 
 4633      5072696F 
 4633      72697479 
 4633      00
 4634              	.LASF104:
 4635 01c5 63796465 		.ascii	"cydelay32kMs\000"
 4635      6C617933 
 4635      326B4D73 
 4635      00
 4636              	.LASF80:
 4637 01d2 43795379 		.ascii	"CySysTickInit\000"
 4637      73546963 
ARM GAS  C:\Users\akita\AppData\Local\Temp\ccaIVzD4.s 			page 137


 4637      6B496E69 
 4637      7400
 4638              	.LASF65:
 4639 01e0 76616C75 		.ascii	"value\000"
 4639      6500
 4640              	.LASF90:
 4641 01e6 636C6F63 		.ascii	"clockSource\000"
 4641      6B536F75 
 4641      72636500 
 4642              	.LASF98:
 4643 01f2 43794765 		.ascii	"CyGetUniqueId\000"
 4643      74556E69 
 4643      71756549 
 4643      6400
 4644              	.LASF92:
 4645 0200 43795379 		.ascii	"CySysTickGetCountFlag\000"
 4645      73546963 
 4645      6B476574 
 4645      436F756E 
 4645      74466C61 
 4646              	.LASF8:
 4647 0216 756E7369 		.ascii	"unsigned int\000"
 4647      676E6564 
 4647      20696E74 
 4647      00
 4648              	.LASF93:
 4649 0223 43795379 		.ascii	"CySysTickClear\000"
 4649      73546963 
 4649      6B436C65 
 4649      617200
 4650              	.LASF5:
 4651 0232 6C6F6E67 		.ascii	"long unsigned int\000"
 4651      20756E73 
 4651      69676E65 
 4651      6420696E 
 4651      7400
 4652              	.LASF86:
 4653 0244 43795379 		.ascii	"CySysLvdGetInterruptSource\000"
 4653      734C7664 
 4653      47657449 
 4653      6E746572 
 4653      72757074 
 4654              	.LASF22:
 4655 025f 43795379 		.ascii	"CySysClkImoStop\000"
 4655      73436C6B 
 4655      496D6F53 
 4655      746F7000 
 4656              	.LASF70:
 4657 026f 4379496E 		.ascii	"CyIntSetPending\000"
 4657      74536574 
 4657      50656E64 
 4657      696E6700 
 4658              	.LASF97:
 4659 027f 43795379 		.ascii	"CySysTickGetCallback\000"
 4659      73546963 
 4659      6B476574 
 4659      43616C6C 
ARM GAS  C:\Users\akita\AppData\Local\Temp\ccaIVzD4.s 			page 138


 4659      6261636B 
 4660              	.LASF48:
 4661 0294 43795379 		.ascii	"CySysGetResetReason\000"
 4661      73476574 
 4661      52657365 
 4661      74526561 
 4661      736F6E00 
 4662              	.LASF3:
 4663 02a8 73686F72 		.ascii	"short unsigned int\000"
 4663      7420756E 
 4663      7369676E 
 4663      65642069 
 4663      6E7400
 4664              	.LASF89:
 4665 02bb 43795379 		.ascii	"CySysTickSetClockSource\000"
 4665      73546963 
 4665      6B536574 
 4665      436C6F63 
 4665      6B536F75 
 4666              	.LASF60:
 4667 02d3 4379496E 		.ascii	"CyIntSetVector\000"
 4667      74536574 
 4667      56656374 
 4667      6F7200
 4668              	.LASF55:
 4669 02e2 6E756D62 		.ascii	"number\000"
 4669      657200
 4670              	.LASF63:
 4671 02e9 7072696F 		.ascii	"priority\000"
 4671      72697479 
 4671      00
 4672              	.LASF32:
 4673 02f2 43795379 		.ascii	"CySysClkWriteImoFreq\000"
 4673      73436C6B 
 4673      57726974 
 4673      65496D6F 
 4673      46726571 
 4674              	.LASF54:
 4675 0307 4379496E 		.ascii	"CyIntSetSysVector\000"
 4675      74536574 
 4675      53797356 
 4675      6563746F 
 4675      7200
 4676              	.LASF26:
 4677 0319 43795379 		.ascii	"CySysEnablePumpClock\000"
 4677      73456E61 
 4677      626C6550 
 4677      756D7043 
 4677      6C6F636B 
 4678              	.LASF17:
 4679 032e 72656733 		.ascii	"reg32\000"
 4679      3200
 4680              	.LASF79:
 4681 0334 43795379 		.ascii	"CySysTickStart\000"
 4681      73546963 
 4681      6B537461 
 4681      727400
ARM GAS  C:\Users\akita\AppData\Local\Temp\ccaIVzD4.s 			page 139


 4682              	.LASF39:
 4683 0343 72657475 		.ascii	"returnStatus\000"
 4683      726E5374 
 4683      61747573 
 4683      00
 4684              	.LASF19:
 4685 0350 73697A65 		.ascii	"sizetype\000"
 4685      74797065 
 4685      00
 4686              	.LASF105:
 4687 0359 43795379 		.ascii	"CySysTickInitVar\000"
 4687      73546963 
 4687      6B496E69 
 4687      74566172 
 4687      00
 4688              	.LASF71:
 4689 036a 4379496E 		.ascii	"CyIntClearPending\000"
 4689      74436C65 
 4689      61725065 
 4689      6E64696E 
 4689      6700
 4690              	.LASF56:
 4691 037c 61646472 		.ascii	"address\000"
 4691      65737300 
 4692              	.LASF29:
 4693 0384 73797363 		.ascii	"sysclkSource\000"
 4693      6C6B536F 
 4693      75726365 
 4693      00
 4694              	.LASF95:
 4695 0391 66756E63 		.ascii	"function\000"
 4695      74696F6E 
 4695      00
 4696              	.LASF106:
 4697 039a 6379496D 		.ascii	"cyImoFreqMhz2Reg\000"
 4697      6F467265 
 4697      714D687A 
 4697      32526567 
 4697      00
 4698              	.LASF88:
 4699 03ab 43795379 		.ascii	"CySysTickGetValue\000"
 4699      73546963 
 4699      6B476574 
 4699      56616C75 
 4699      6500
 4700              	.LASF101:
 4701 03bd 63796465 		.ascii	"cydelayFreqHz\000"
 4701      6C617946 
 4701      72657148 
 4701      7A00
 4702              	.LASF62:
 4703 03cb 4379496E 		.ascii	"CyIntSetPriority\000"
 4703      74536574 
 4703      5072696F 
 4703      72697479 
 4703      00
 4704              	.LASF12:
ARM GAS  C:\Users\akita\AppData\Local\Temp\ccaIVzD4.s 			page 140


 4705 03dc 666C6F61 		.ascii	"float\000"
 4705      7400
 4706              	.LASF44:
 4707 03e2 43795379 		.ascii	"CySysLvdEnable\000"
 4707      734C7664 
 4707      456E6162 
 4707      6C6500
 4708              	.LASF20:
 4709 03f1 63795379 		.ascii	"cySysTickCallback\000"
 4709      73546963 
 4709      6B43616C 
 4709      6C626163 
 4709      6B00
 4710              	.LASF61:
 4711 0403 4379496E 		.ascii	"CyIntGetVector\000"
 4711      74476574 
 4711      56656374 
 4711      6F7200
 4712              	.LASF75:
 4713 0412 6D696C6C 		.ascii	"milliseconds\000"
 4713      69736563 
 4713      6F6E6473 
 4713      00
 4714              	.LASF16:
 4715 041f 72656738 		.ascii	"reg8\000"
 4715      00
 4716              	.LASF45:
 4717 0424 74687265 		.ascii	"threshold\000"
 4717      73686F6C 
 4717      6400
 4718              	.LASF72:
 4719 042e 43794861 		.ascii	"CyHalt\000"
 4719      6C7400
 4720              	.LASF1:
 4721 0435 756E7369 		.ascii	"unsigned char\000"
 4721      676E6564 
 4721      20636861 
 4721      7200
 4722              	.LASF2:
 4723 0443 73686F72 		.ascii	"short int\000"
 4723      7420696E 
 4723      7400
 4724              	.LASF67:
 4725 044d 4379496E 		.ascii	"CyIntEnable\000"
 4725      74456E61 
 4725      626C6500 
 4726              	.LASF59:
 4727 0459 4379496E 		.ascii	"CyIntGetSysVector\000"
 4727      74476574 
 4727      53797356 
 4727      6563746F 
 4727      7200
 4728              	.LASF27:
 4729 046b 636C6B53 		.ascii	"clkSelect\000"
 4729      656C6563 
 4729      7400
 4730              	.LASF37:
ARM GAS  C:\Users\akita\AppData\Local\Temp\ccaIVzD4.s 			page 141


 4731 0475 43795379 		.ascii	"CySysClkEcoStart\000"
 4731      73436C6B 
 4731      45636F53 
 4731      74617274 
 4731      00
 4732              	.LASF76:
 4733 0486 43794465 		.ascii	"CyDelayUs\000"
 4733      6C617955 
 4733      7300
 4734              	.LASF49:
 4735 0490 72656173 		.ascii	"reason\000"
 4735      6F6E00
 4736              	.LASF14:
 4737 0497 63686172 		.ascii	"char\000"
 4737      00
 4738              	.LASF18:
 4739 049c 63796973 		.ascii	"cyisraddress\000"
 4739      72616464 
 4739      72657373 
 4739      00
 4740              	.LASF81:
 4741 04a9 43795379 		.ascii	"CySysTickEnable\000"
 4741      73546963 
 4741      6B456E61 
 4741      626C6500 
 4742              	.LASF30:
 4743 04b9 43795379 		.ascii	"CySysClkWriteSysclkDiv\000"
 4743      73436C6B 
 4743      57726974 
 4743      65537973 
 4743      636C6B44 
 4744              	.LASF94:
 4745 04d0 43795379 		.ascii	"CySysTickSetCallback\000"
 4745      73546963 
 4745      6B536574 
 4745      43616C6C 
 4745      6261636B 
 4746              	.LASF100:
 4747 04e5 43795379 		.ascii	"CySysTickCallbacks\000"
 4747      73546963 
 4747      6B43616C 
 4747      6C626163 
 4747      6B7300
 4748              	.LASF99:
 4749 04f8 756E6971 		.ascii	"uniqueId\000"
 4749      75654964 
 4749      00
 4750              	.LASF74:
 4751 0501 43794465 		.ascii	"CyDelay\000"
 4751      6C617900 
 4752              	.LASF91:
 4753 0509 43795379 		.ascii	"CySysTickGetClockSource\000"
 4753      73546963 
 4753      6B476574 
 4753      436C6F63 
 4753      6B536F75 
 4754              	.LASF84:
ARM GAS  C:\Users\akita\AppData\Local\Temp\ccaIVzD4.s 			page 142


 4755 0521 43795379 		.ascii	"CySysTickDisableInterrupt\000"
 4755      73546963 
 4755      6B446973 
 4755      61626C65 
 4755      496E7465 
 4756              	.LASF46:
 4757 053b 43795379 		.ascii	"CySysLvdDisable\000"
 4757      734C7664 
 4757      44697361 
 4757      626C6500 
 4758              	.LASF103:
 4759 054b 63796465 		.ascii	"cydelayFreqMhz\000"
 4759      6C617946 
 4759      7265714D 
 4759      687A00
 4760              	.LASF40:
 4761 055a 43795379 		.ascii	"CySysClkEcoStop\000"
 4761      73436C6B 
 4761      45636F53 
 4761      746F7000 
 4762              	.LASF82:
 4763 056a 43795379 		.ascii	"CySysTickStop\000"
 4763      73546963 
 4763      6B53746F 
 4763      7000
 4764              	.LASF38:
 4765 0578 74696D65 		.ascii	"timeoutUs\000"
 4765      6F757455 
 4765      7300
 4766              	.LASF31:
 4767 0582 64697669 		.ascii	"divider\000"
 4767      64657200 
 4768              	.LASF43:
 4769 058a 43795379 		.ascii	"CySysClkWriteEcoDiv\000"
 4769      73436C6B 
 4769      57726974 
 4769      6545636F 
 4769      44697600 
 4770              	.LASF15:
 4771 059e 63797374 		.ascii	"cystatus\000"
 4771      61747573 
 4771      00
 4772              	.LASF108:
 4773 05a7 474E5520 		.ascii	"GNU C 4.9.3 20150303 (release) [ARM/embedded-4_9-br"
 4773      4320342E 
 4773      392E3320 
 4773      32303135 
 4773      30333033 
 4774 05da 616E6368 		.ascii	"anch revision 221220] -mcpu=cortex-m0 -mthumb -g -O"
 4774      20726576 
 4774      6973696F 
 4774      6E203232 
 4774      31323230 
 4775 060d 30202D66 		.ascii	"0 -ffunction-sections -ffat-lto-objects\000"
 4775      66756E63 
 4775      74696F6E 
 4775      2D736563 
ARM GAS  C:\Users\akita\AppData\Local\Temp\ccaIVzD4.s 			page 143


 4775      74696F6E 
 4776              	.LASF21:
 4777 0635 43795379 		.ascii	"CySysClkImoStart\000"
 4777      73436C6B 
 4777      496D6F53 
 4777      74617274 
 4777      00
 4778              	.LASF109:
 4779 0646 47656E65 		.ascii	"Generated_Source\\PSoC4\\CyLib.c\000"
 4779      72617465 
 4779      645F536F 
 4779      75726365 
 4779      5C50536F 
 4780              	.LASF77:
 4781 0665 6D696372 		.ascii	"microseconds\000"
 4781      6F736563 
 4781      6F6E6473 
 4781      00
 4782              	.LASF24:
 4783 0672 746D7052 		.ascii	"tmpReg\000"
 4783      656700
 4784              	.LASF85:
 4785 0679 43795379 		.ascii	"CySysTickSetReload\000"
 4785      73546963 
 4785      6B536574 
 4785      52656C6F 
 4785      616400
 4786              	.LASF111:
 4787 068c 43795379 		.ascii	"CySysTickServiceCallbacks\000"
 4787      73546963 
 4787      6B536572 
 4787      76696365 
 4787      43616C6C 
 4788              	.LASF42:
 4789 06a6 72657475 		.ascii	"returnValue\000"
 4789      726E5661 
 4789      6C756500 
 4790              	.LASF110:
 4791 06b2 433A5C55 		.ascii	"C:\\Users\\akita\\Documents\\TPT02\\src\\TPT02r.cyd"
 4791      73657273 
 4791      5C616B69 
 4791      74615C44 
 4791      6F63756D 
 4792 06df 736E00   		.ascii	"sn\000"
 4793              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 4.9.3 20150303 (release) [ARM/embedded-4_9-br
